{
.appVersion = "1286";
copyright = "Digitized data copyright Â© 2020, Google Corporation.";
customParameters = (
{
name = description;
value = "Droid Sans is a humanist sans serif typeface designed for user interfaces and electronic communication.";
},
{
name = trademark;
value = "Droid is a trademark of Google and may be registered in certain jurisdictions.";
},
{
name = licenseURL;
value = "http://www.apache.org/licenses/LICENSE-2.0";
},
{
name = license;
value = "Licensed under the Apache License, Version 2.0";
},
{
name = vendorID;
value = GOOG;
},
{
name = panose;
value = (
2,
11,
6,
6,
3,
8,
4,
2,
2,
4
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
6,
7,
9,
29,
30,
31,
32,
33,
35,
36,
38,
45,
62,
67,
69,
80
);
},
{
name = glyphOrder;
value = (
.notdef,
.null,
CR,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
braceleft,
bar,
braceright,
asciitilde,
uni200B,
guillemotleft,
uni00AD,
guillemotright,
uni1780,
uni1781,
uni1782,
uni1783,
uni1784,
uni1785,
uni1786,
uni1787,
uni1788,
uni1789,
uni178A,
uni178B,
uni178C,
uni178D,
uni178E,
uni178F,
uni1790,
uni1791,
uni1792,
uni1793,
uni1794,
uni1795,
uni1796,
uni1797,
uni1798,
uni1799,
uni179A,
uni179B,
uni179C,
uni179D,
uni179E,
uni179F,
uni17A0,
uni17A1,
uni17A2,
uni17A3,
uni17A4,
uni17A5,
uni17A6,
uni17A7,
uni17A8,
uni17A9,
uni17AA,
uni17AB,
uni17AC,
uni17AD,
uni17AE,
uni17AF,
uni17B0,
uni17B1,
uni17B2,
uni17B3,
uni17B6,
uni17B7,
uni17B8,
uni17B9,
uni17BA,
uni17BB,
uni17BC,
uni17BD,
uni17BE,
uni17BF,
uni17C0,
uni17C1,
uni17C2,
uni17C3,
uni17C4,
uni17C5,
uni17C6,
uni17C7,
uni17C8,
uni17C9,
uni17CA,
uni17CB,
uni17CC,
uni17CD,
uni17CE,
uni17CF,
uni17D0,
uni17D1,
uni17D2,
uni17D3,
uni17D4,
uni17D5,
uni17D6,
uni17D7,
uni17D8,
uni17D9,
uni17DA,
uni17DB,
uni17E0,
uni17E1,
uni17E2,
uni17E3,
uni17E4,
uni17E5,
uni17E6,
uni17E7,
uni17E8,
uni17E9,
uni17D21780,
uni17D21781,
uni17D21782,
uni17D21783,
uni17D21784,
uni17D21785,
uni17D21786,
uni17D21787,
uni17D21788,
uni17D21789,
uni17D21789.a,
uni17D2178A,
uni17D2178B,
uni17D2178C,
uni17D2178D,
uni17D2178E,
uni17D2178F,
uni17D21790,
uni17D21791,
uni17D21792,
uni17D21793,
uni17D21794,
uni17D21795,
uni17D21796,
uni17D21797,
uni17D21798,
uni17D21799,
uni17D2179A,
uni17D2179B,
uni17D2179C,
uni17D2179F,
uni17D217A0,
uni17D217A2,
uni17BB.b,
uni17BC.b,
uni17BD.b,
uni17B7.a,
uni17B8.a,
uni17B9.a,
uni17BA.a,
uni17C6.a,
uni17CE.a,
uni17D0.a,
uni1789.a,
uni1794.a,
uni17D2179A.b,
uni17B717CD,
uni17BF.b,
uni17C0.b,
uni17B7.r,
uni17B8.r,
uni17B9.r,
uni17BA.r,
uni17C6.r,
uni17C9.r,
uni17CD.r,
uni17B717CD.r,
uni17D2178A.n,
uni17D2178B.n,
uni17D2178C.n,
uni17D217A0.n,
uni17D2178A.r,
uni17D21797.r,
uni17D21798.r,
uni17BB.n,
uni17BC.n,
uni17BD.n,
uni17BB.n2,
uni17BC.n2,
uni17BD.n2,
uni17D21798.b,
uni17D217A0.b,
uni17D21780.left,
uni17D21781.left,
uni17D21782.left,
uni17D21784.left,
uni17D21785.left,
uni17D21786.left,
uni17D21787.left,
uni17D21789.left,
uni17D21789.a.left,
uni17D2178A.left,
uni17D2178B.left,
uni17D2178C.left,
uni17D2178E.left,
uni17D2178F.left,
uni17D21790.left,
uni17D21791.left,
uni17D21792.left,
uni17D21793.left,
uni17D21795.left,
uni17D21796.left,
uni17D21797.left,
uni17D21798.left,
uni17D2179B.left,
uni17D2179C.left,
uni17D217A0.left,
uni17D217A2.left,
uni1789.left,
uni17BB.left,
uni17BC.left,
uni17BD.left,
uni17BC.ro,
uni17BD.ro,
uni17B4,
uni17B5,
uni17DC,
uni17DD,
uni17F0,
uni17F1,
uni17F2,
uni17F3,
uni17F4,
uni17F5,
uni17F6,
uni17F7,
uni17F8,
uni17F9,
uni19E0,
uni19E1,
uni19E2,
uni19E3,
uni19E4,
uni19E5,
uni19E6,
uni19E7,
uni19E8,
uni19E9,
uni19EA,
uni19EB,
uni19EC,
uni19ED,
uni19EE,
uni19EF,
uni19F0,
uni19F1,
uni19F2,
uni19F3,
uni19F4,
uni19F5,
uni19F6,
uni19F7,
uni19F8,
uni19F9,
uni19FA,
uni19FB,
uni19FC,
uni19FD,
uni19FE,
uni19FF,
uni200C,
uni200D,
uni25CC
);
}
);
date = "2010-05-17 19:56:38 +0000";
designer = "Danh Hong";
designerURL = "http://www.nextspell.com";
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
familyName = "Noto Sans Khmer UI";
featurePrefixes = (
{
code = "lookup lookup_0 {\012sub uni17B7 by uni17B7.r;\012sub uni17B8 by uni17B8.r;\012sub uni17B9 by uni17B9.r;\012sub uni17BA by uni17BA.r;\012sub uni17C6 by uni17C6.r;\012sub uni17C9 by uni17C9.r;\012sub uni17CD by uni17CD.r;\012sub uni17B717CD by uni17B717CD.r;\012} lookup_0;\012";
name = lookup_0;
},
{
code = "lookup lookup_1 {\012sub uni17BB by uni17BB.b;\012sub uni17BC by uni17BC.b;\012sub uni17BD by uni17BD.b;\012} lookup_1;\012";
name = lookup_1;
},
{
code = "lookup lookup_10 {\012sub uni17D21798 by uni17D21798.b;\012sub uni17D217A0 by uni17D217A0.b;\012sub uni17BB by uni17BB.left;\012sub uni17BC by uni17BC.left;\012sub uni17BD by uni17BD.left;\012} lookup_10;\012";
name = lookup_10;
},
{
code = "lookup lookup_11 {\012sub uni17D21780 by uni17D21780.left;\012sub uni17D21781 by uni17D21781.left;\012sub uni17D21782 by uni17D21782.left;\012sub uni17D21784 by uni17D21784.left;\012sub uni17D21785 by uni17D21785.left;\012sub uni17D21786 by uni17D21786.left;\012sub uni17D21787 by uni17D21787.left;\012sub uni17D21789 by uni17D21789.left;\012sub uni17D21789.a by uni17D21789.a.left;\012sub uni17D2178A by uni17D2178A.left;\012sub uni17D2178B by uni17D2178B.left;\012sub uni17D2178C by uni17D2178C.left;\012sub uni17D2178E by uni17D2178E.left;\012sub uni17D2178F by uni17D2178F.left;\012sub uni17D21790 by uni17D21790.left;\012sub uni17D21791 by uni17D21791.left;\012sub uni17D21792 by uni17D21792.left;\012sub uni17D21793 by uni17D21793.left;\012sub uni17D21795 by uni17D21795.left;\012sub uni17D21796 by uni17D21796.left;\012sub uni17D21797 by uni17D21797.left;\012sub uni17D21798 by uni17D21798.left;\012sub uni17D2179B by uni17D2179B.left;\012sub uni17D2179C by uni17D2179C.left;\012sub uni17D217A0 by uni17D217A0.left;\012sub uni17D217A2 by uni17D217A2.left;\012} lookup_11;\012";
name = lookup_11;
},
{
code = "lookup lookup_12 {\012sub uni17BB.b by uni17BB.left;\012sub uni17BC.b by uni17BC.left;\012sub uni17BD.b by uni17BD.left;\012} lookup_12;\012";
name = lookup_12;
},
{
code = "lookup lookup_13 {\012sub uni17BB.b by uni17BB;\012sub uni17BC.b by uni17BC;\012sub uni17BD.b by uni17BD;\012} lookup_13;\012";
name = lookup_13;
},
{
code = "lookup lookup_14 {\012sub uni17BC by uni17BC.ro;\012sub uni17BD by uni17BD.ro;\012} lookup_14;\012";
name = lookup_14;
},
{
code = "lookup lookup_15 {\012sub uni1794 by uni1794.a;\012} lookup_15;\012";
name = lookup_15;
},
{
code = "lookup lookup_16 {\012sub uni17D2179A by uni17D2179A.b;\012} lookup_16;\012";
name = lookup_16;
},
{
code = "lookup lookup_17 {\012sub uni17B7 by uni17B7.a;\012sub uni17B8 by uni17B8.a;\012sub uni17B9 by uni17B9.a;\012sub uni17BA by uni17BA.a;\012sub uni17BE by uni17B8.a;\012sub uni17C6 by uni17C6.a;\012} lookup_17;\012";
name = lookup_17;
},
{
code = "lookup lookup_18 {\012sub uni1789 by uni1789.a;\012} lookup_18;\012";
name = lookup_18;
},
{
code = "lookup lookup_19 {\012sub uni1789 by uni1789.left;\012} lookup_19;\012";
name = lookup_19;
},
{
code = "lookup lookup_2 {\012sub uni17CA by uni17BB;\012} lookup_2;\012";
name = lookup_2;
},
{
code = "lookup lookup_20 {\012sub uni17BF by uni17BF.b;\012sub uni17C0 by uni17C0.b;\012} lookup_20;\012";
name = lookup_20;
},
{
code = "lookup lookup_3 {\012sub uni17C9 by uni17BB.b;\012sub uni17CA by uni17BB.b;\012} lookup_3;\012";
name = lookup_3;
},
{
code = "lookup lookup_4 {\012sub uni17C9 by uni17BB;\012sub uni17C9.r by uni17BB;\012} lookup_4;\012";
name = lookup_4;
},
{
code = "lookup lookup_5 {\012sub uni17D2178A by uni17D2178A.n;\012sub uni17D2178B by uni17D2178B.n;\012sub uni17D2178C by uni17D2178C.n;\012sub uni17D2178F by uni17D2178A.n;\012sub uni17D217A0 by uni17D217A0.n;\012} lookup_5;\012";
name = lookup_5;
},
{
code = "lookup lookup_6 {\012sub uni17BB by uni17BB.n;\012sub uni17BC by uni17BC.n;\012sub uni17BD by uni17BD.n;\012} lookup_6;\012";
name = lookup_6;
},
{
code = "lookup lookup_7 {\012sub uni17BB.b by uni17BB.n2;\012sub uni17BC.b by uni17BC.n2;\012sub uni17BD.b by uni17BD.n2;\012} lookup_7;\012";
name = lookup_7;
},
{
code = "lookup lookup_8 {\012sub uni17D2178A by uni17D2178A.r;\012sub uni17D2178F by uni17D2178A.r;\012sub uni17D21797 by uni17D21797.r;\012sub uni17D21798 by uni17D21798.r;\012} lookup_8;\012";
name = lookup_8;
},
{
code = "lookup lookup_9 {\012sub uni17D21789 by uni17D21789.a;\012sub uni17D21789.left by uni17D21789.a.left;\012} lookup_9;\012";
name = lookup_9;
}
);
features = (
{
code = "script khmr;\012sub uni17B7 uni17CD by uni17B717CD;\012sub uni179A [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B717CD]' lookup lookup_0 ;\012sub uni179C [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B717CD]' lookup lookup_0 ;\012sub uni17D2178A.r [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B717CD]' lookup lookup_0 ;\012sub uni17D21797.r [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B717CD]' lookup lookup_0 ;\012sub uni17D21798.r [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B717CD]' lookup lookup_0 ;\012";
name = abvs;
},
{
code = "script khmr;\012sub uni17D2 uni1780 by uni17D21780;\012sub uni17D2 uni1781 by uni17D21781;\012sub uni17D2 uni1782 by uni17D21782;\012sub uni17D2 uni1784 by uni17D21784;\012sub uni17D2 uni1785 by uni17D21785;\012sub uni17D2 uni1786 by uni17D21786;\012sub uni17D2 uni1787 by uni17D21787;\012sub uni17D2 uni1789 by uni17D21789;\012sub uni17D2 uni178A by uni17D2178A;\012sub uni17D2 uni178B by uni17D2178B;\012sub uni17D2 uni178C by uni17D2178C;\012sub uni17D2 uni178E by uni17D2178E;\012sub uni17D2 uni178F by uni17D2178F;\012sub uni17D2 uni1790 by uni17D21790;\012sub uni17D2 uni1791 by uni17D21791;\012sub uni17D2 uni1792 by uni17D21792;\012sub uni17D2 uni1793 by uni17D21793;\012sub uni17D2 uni1795 by uni17D21795;\012sub uni17D2 uni1796 by uni17D21796;\012sub uni17D2 uni1797 by uni17D21797;\012sub uni17D2 uni1798 by uni17D21798;\012sub uni17D2 uni179B by uni17D2179B;\012sub uni17D2 uni179C by uni17D2179C;\012sub uni17D2 uni17A0 by uni17D217A0;\012sub uni17D2 uni17A2 by uni17D217A2;\012sub [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni17A1 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni179F uni17CA' lookup lookup_2 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub uni17A0 uni17CA' lookup lookup_2 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub uni17CA' lookup lookup_2 uni17B6 uni17C6 ;\012sub uni179F uni17CA' lookup lookup_2 uni17BE ;\012sub [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F] [uni17C9 uni17CA]' lookup lookup_3 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 [uni17B7.a uni17B8.a uni17B9.a uni17BA.a] ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17BE ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17C6 ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17D0 ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17B6 uni17C6 ;\012sub uni178E [uni17D2178A uni17D2178B uni17D2178C uni17D2178F uni17D217A0]' lookup lookup_5 ;\012sub uni178E [uni17BB uni17BC uni17BD]' lookup lookup_6 ;\012sub [uni17D2178A.n uni17D2178B.n uni17D2178C.n uni17D217A0.n] [uni17BB.b uni17BC.b uni17BD.b]' lookup lookup_7 ;\012sub uni179A [uni17D2178A uni17D2178F uni17D21797 uni17D21798]' lookup lookup_8 ;\012sub uni179C [uni17D2178A uni17D2178F uni17D21797 uni17D21798]' lookup lookup_8 ;\012sub uni1789.a [uni17D21789 uni17D21789.left]' lookup lookup_9 ;\012sub uni17D2179F [uni17D21798 uni17D217A0]' lookup lookup_10 ;\012sub uni17A1 [uni17D21798 uni17D217A0]' lookup lookup_10 ;\012sub [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2]' lookup lookup_11 uni17BB.b ;\012sub [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2]' lookup lookup_11 uni17BC.b ;\012sub [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2]' lookup lookup_11 uni17BD.b ;\012sub [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F] [uni17BB.b uni17BC.b uni17BD.b]' lookup lookup_12 ;\012sub uni17A1 [uni17BB.b uni17BC.b uni17BD.b]' lookup lookup_12 ;\012sub uni1789.left [uni17BB.b uni17BC.b uni17BD.b]' lookup lookup_13 ;\012sub uni179A [uni17BC uni17BD]' lookup lookup_14 ;\012sub uni179A uni17C9.r [uni17BC uni17BD]' lookup lookup_14 ;\012sub uni179C [uni17BC uni17BD]' lookup lookup_14 ;\012sub uni179C uni17C9.r [uni17BC uni17BD]' lookup lookup_14 ;\012";
name = blwf;
},
{
code = "script khmr;\012sub [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni17A1 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1794' lookup lookup_15 uni17B6 ;\012sub uni1794' lookup lookup_15 uni17C4 ;\012sub uni1794' lookup lookup_15 uni17C5 ;\012sub uni1794' lookup lookup_15 uni17C9 uni17B6 ;\012sub uni1794' lookup lookup_15 uni17C9 uni17C4 ;\012sub uni1794' lookup lookup_15 uni17C9 uni17C5 ;\012sub uni1794' lookup lookup_15 uni17CA uni17B6 ;\012sub uni1794' lookup lookup_15 uni17CA uni17C4 ;\012sub uni1794' lookup lookup_15 uni17CA uni17C5 ;\012sub uni1794' lookup lookup_15 [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2] uni17B6 ;\012sub uni1794' lookup lookup_15 [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2] uni17C4 ;\012sub uni1794' lookup lookup_15 [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2] uni17C5 ;\012sub uni1794' lookup lookup_15 uni17BB uni17B6 ;\012sub uni1794' lookup lookup_15 uni17BB uni17C4 ;\012sub uni1794' lookup lookup_15 uni17BB uni17C5 ;\012sub uni17D2179A' lookup lookup_16 [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2] [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2] ;\012sub uni17CA [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6]' lookup lookup_17 ;\012sub [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F] [uni17C9 uni17CA]' lookup lookup_3 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub uni1789' lookup lookup_18 [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2] ;\012sub uni1789' lookup lookup_18 [uni17D21780.left uni17D21781.left uni17D21782.left uni17D21784.left uni17D21785.left uni17D21786.left uni17D21787.left uni17D21789.left uni17D21789.a.left uni17D2178A.left uni17D2178B.left uni17D2178C.left uni17D2178E.left uni17D2178F.left uni17D21790.left uni17D21791.left uni17D21792.left uni17D21793.left uni17D21795.left uni17D21796.left uni17D21797.left uni17D21798.left uni17D2179B.left uni17D2179C.left uni17D217A0.left uni17D217A2.left] ;\012sub uni1789' lookup lookup_18 [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F] ;\012sub uni1789.a [uni17D21789 uni17D21789.left]' lookup lookup_9 ;\012sub uni17D21799 [uni17D21798 uni17D217A0]' lookup lookup_10 ;\012sub uni17D2179F [uni17D21798 uni17D217A0]' lookup lookup_10 ;\012sub uni17A1 [uni17D21798 uni17D217A0]' lookup lookup_10 ;\012sub [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2]' lookup lookup_11 uni17BB.b ;\012sub [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2]' lookup lookup_11 uni17BC.b ;\012sub [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2]' lookup lookup_11 uni17BD.b ;\012sub uni1789' lookup lookup_19 uni17BB.b ;\012sub uni1789' lookup lookup_19 uni17BC.b ;\012sub uni1789' lookup lookup_19 uni17BD.b ;\012sub [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F] [uni17BB.b uni17BC.b uni17BD.b]' lookup lookup_12 ;\012sub uni17A1 [uni17BB.b uni17BC.b uni17BD.b]' lookup lookup_12 ;\012sub uni1789.left [uni17BB.b uni17BC.b uni17BD.b]' lookup lookup_13 ;\012sub uni179A [uni17BC uni17BD]' lookup lookup_14 ;\012sub uni179A uni17C9.r [uni17BC uni17BD]' lookup lookup_14 ;\012sub uni179C [uni17BC uni17BD]' lookup lookup_14 ;\012sub uni179C uni17C9.r [uni17BC uni17BD]' lookup lookup_14 ;\012";
name = clig;
},
{
code = "script khmr;\012sub uni17D2 uni179A by uni17D2179A;\012sub uni17D2179A' lookup lookup_16 [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2] [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2] ;\012";
name = pref;
},
{
code = "script khmr;\012sub uni17D2 uni1783 by uni17D21783;\012sub uni17D2 uni1788 by uni17D21788;\012sub uni17D2 uni178D by uni17D2178D;\012sub uni17D2 uni1794 by uni17D21794;\012sub uni17D2 uni1799 by uni17D21799;\012sub uni17D2 uni179F by uni17D2179F;\012sub [uni17D21780 uni17D21781 uni17D21782 uni17D21784 uni17D21785 uni17D21786 uni17D21787 uni17D21789 uni17D21789.a uni17D2178A uni17D2178B uni17D2178C uni17D2178E uni17D2178F uni17D21790 uni17D21791 uni17D21792 uni17D21793 uni17D21795 uni17D21796 uni17D21797 uni17D21798 uni17D2179B uni17D2179C uni17D217A0 uni17D217A2] [uni17BF uni17C0]' lookup lookup_20 ;\012sub uni1789 [uni17BF uni17C0]' lookup lookup_20 ;\012sub [uni17D21783 uni17D21788 uni17D2178D uni17D21794 uni17D21799 uni17D2179F] [uni17BF uni17C0]' lookup lookup_20 ;\012";
name = pstf;
}
);
fontMaster = (
{
ascender = 1567;
capHeight = 1462;
custom = Black;
customParameters = (
{
name = typoAscender;
value = 1567;
},
{
name = typoDescender;
value = -492;
},
{
name = typoLineGap;
value = 132;
},
{
name = winAscent;
value = 1907;
},
{
name = winDescent;
value = 500;
},
{
name = hheaAscender;
value = 1907;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01235 22 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01229 6 15 7 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01235 2 22 5 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0121920 1024 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\012192 64 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01233 2 17 5 2 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
188,
188,
138,
138,
1130,
-70,
0,
-500,
-500,
1130,
-70,
0,
-500,
-500,
188,
188,
138,
138,
160,
200,
2000,
-590,
2000,
-590
);
}
);
descender = -492;
iconName = Bold;
id = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
weightValue = 900;
widthValue = 5;
xHeight = 1098;
},
{
ascender = 1567;
capHeight = 1462;
customParameters = (
{
name = typoAscender;
value = 1567;
},
{
name = typoDescender;
value = -492;
},
{
name = typoLineGap;
value = 132;
},
{
name = winAscent;
value = 1907;
},
{
name = winDescent;
value = 500;
},
{
name = hheaAscender;
value = 1907;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01235 22 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01229 6 15 7 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01235 2 22 5 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0121920 1024 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\012192 64 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01233 2 17 5 2 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
188,
188,
138,
138,
1130,
-70,
0,
-500,
-500,
1130,
-70,
0,
-500,
-500,
188,
188,
138,
138,
160,
200,
2000,
-590,
2000,
-590
);
}
);
descender = -492;
iconName = SemiBold;
id = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
weight = Bold;
weightValue = 700;
widthValue = 5;
xHeight = 1098;
},
{
ascender = 1567;
capHeight = 1462;
customParameters = (
{
name = typoAscender;
value = 1567;
},
{
name = typoDescender;
value = -492;
},
{
name = typoLineGap;
value = 132;
},
{
name = winAscent;
value = 1907;
},
{
name = winDescent;
value = 500;
},
{
name = hheaAscender;
value = 1907;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01235 22 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01229 6 15 7 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01235 2 22 5 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0121920 1024 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\012192 64 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01233 2 17 5 2 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
188,
188,
138,
138,
1130,
-70,
0,
-500,
-500,
1130,
-70,
0,
-500,
-500,
188,
188,
138,
138,
160,
200,
2000,
-590,
2000,
-590
);
}
);
descender = -492;
id = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
weightValue = 400;
widthValue = 5;
xHeight = 1098;
},
{
ascender = 1567;
capHeight = 1462;
customParameters = (
{
name = typoAscender;
value = 1567;
},
{
name = typoDescender;
value = -492;
},
{
name = typoLineGap;
value = 132;
},
{
name = winAscent;
value = 1907;
},
{
name = winDescent;
value = 500;
},
{
name = hheaAscender;
value = 1907;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01235 22 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01229 6 15 7 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01235 2 22 5 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0121920 1024 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\012192 64 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01233 2 17 5 2 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
188,
188,
138,
138,
1130,
-70,
0,
-500,
-500,
1130,
-70,
0,
-500,
-500,
188,
188,
138,
138,
160,
200,
2000,
-590,
2000,
-590
);
}
);
descender = -492;
iconName = SemiLight;
id = "DF847F4E-D23C-40FA-8597-1D02BA148938";
weight = Light;
weightValue = 300;
widthValue = 5;
xHeight = 1098;
},
{
ascender = 1567;
capHeight = 1462;
custom = Thin;
customParameters = (
{
name = typoAscender;
value = 1567;
},
{
name = typoDescender;
value = -492;
},
{
name = typoLineGap;
value = 132;
},
{
name = winAscent;
value = 1907;
},
{
name = winDescent;
value = 500;
},
{
name = hheaAscender;
value = 1907;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01235 22 2 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01229 6 15 7 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\01235 2 22 5 2 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\0121920 1024 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 4 values pushed */\012192 64 2 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 6 values pushed */\01233 2 17 5 2 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
188,
188,
138,
138,
1130,
-70,
0,
-500,
-500,
1130,
-70,
0,
-500,
-500,
188,
188,
138,
138,
160,
200,
2000,
-590,
2000,
-590
);
}
);
descender = -492;
iconName = Light;
id = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
widthValue = 5;
xHeight = 1098;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 2048;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 2048;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 2048;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 2048;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 2048;
}
);
note = .notdef;
},
{
glyphname = .null;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = .null;
},
{
glyphname = CR;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 2048;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 2048;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 2048;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 2048;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 2048;
}
);
note = CR;
},
{
glyphname = space;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 532;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 532;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 532;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 532;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 532;
}
);
note = space;
unicode = 0020;
},
{
glyphname = exclam;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"85 66 OFFCURVE",
"210 -25 OFFCURVE",
"296 -25 QCURVE SMOOTH",
"380 -25 OFFCURVE",
"503 66 OFFCURVE",
"503 166 QCURVE SMOOTH",
"503 272 OFFCURVE",
"380 358 OFFCURVE",
"296 358 QCURVE SMOOTH",
"210 358 OFFCURVE",
"85 272 OFFCURVE",
"85 166 QCURVE",
"85 166 LINE"
);
},
{
closed = 1;
nodes = (
"513 1462 LINE",
"81 1462 LINE",
"132 516 LINE",
"462 516 LINE",
"462 516 LINE"
);
}
);
width = 593;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"117 62 OFFCURVE",
"209 -27 OFFCURVE",
"293 -27 QCURVE SMOOTH",
"375 -27 OFFCURVE",
"467 64 OFFCURVE",
"467 143 QCURVE SMOOTH",
"467 225 OFFCURVE",
"376 313 OFFCURVE",
"293 313 QCURVE SMOOTH",
"207 313 OFFCURVE",
"117 227 OFFCURVE",
"117 143 QCURVE",
"117 143 LINE"
);
},
{
closed = 1;
nodes = (
"467 1462 LINE",
"121 1462 LINE",
"172 485 LINE",
"416 485 LINE",
"416 485 LINE"
);
}
);
width = 586;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"147 74 OFFCURVE",
"167 21 OFFCURVE",
"201 -13 OFFCURVE",
"247 -29 OFFCURVE",
"274 -29 QCURVE SMOOTH",
"300 -29 OFFCURVE",
"347 -13 OFFCURVE",
"381 21 OFFCURVE",
"401 74 OFFCURVE",
"401 111 QCURVE SMOOTH",
"401 149 OFFCURVE",
"381 202 OFFCURVE",
"347 235 OFFCURVE",
"300 250 OFFCURVE",
"274 250 QCURVE SMOOTH",
"247 250 OFFCURVE",
"201 235 OFFCURVE",
"167 202 OFFCURVE",
"147 149 OFFCURVE",
"147 111 QCURVE",
"147 111 LINE"
);
},
{
closed = 1;
nodes = (
"387 1462 LINE",
"164 1462 LINE",
"215 414 LINE",
"336 414 LINE",
"336 414 LINE"
);
}
);
width = 551;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"159 -23 OFFCURVE",
"249 -23 QCURVE SMOOTH",
"339 -23 OFFCURVE",
"339 78 QCURVE SMOOTH",
"339 178 OFFCURVE",
"249 178 QCURVE SMOOTH",
"159 178 OFFCURVE",
"159 78 QCURVE",
"159 78 LINE"
);
},
{
closed = 1;
nodes = (
"323 1462 LINE",
"184 1462 LINE",
"210 385 LINE",
"294 385 LINE",
"294 385 LINE"
);
}
);
width = 503;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"174 20 OFFCURVE",
"194 -16 OFFCURVE",
"225 -16 QCURVE SMOOTH",
"262 -16 OFFCURVE",
"280 20 OFFCURVE",
"280 47 QCURVE SMOOTH",
"280 72 OFFCURVE",
"262 111 OFFCURVE",
"225 111 QCURVE SMOOTH",
"194 111 OFFCURVE",
"174 72 OFFCURVE",
"174 47 QCURVE",
"174 47 LINE"
);
},
{
closed = 1;
nodes = (
"260 1462 LINE",
"201 1462 LINE",
"205 356 LINE",
"256 356 LINE",
"256 356 LINE"
);
}
);
width = 456;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = quotedbl;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"120 1462 LINE",
"161 934 LINE",
"435 934 LINE",
"476 1462 LINE",
"476 1462 LINE"
);
},
{
closed = 1;
nodes = (
"595 1462 LINE",
"636 934 LINE",
"911 934 LINE",
"951 1462 LINE",
"951 1462 LINE"
);
}
);
width = 1073;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"133 1462 LINE",
"174 934 LINE",
"371 934 LINE",
"412 1462 LINE",
"412 1462 LINE"
);
},
{
closed = 1;
nodes = (
"555 1462 LINE",
"596 934 LINE",
"793 934 LINE",
"834 1462 LINE",
"834 1462 LINE"
);
}
);
width = 967;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"133 1462 LINE",
"174 934 LINE",
"289 934 LINE",
"330 1462 LINE",
"330 1462 LINE"
);
},
{
closed = 1;
nodes = (
"494 1462 LINE",
"535 934 LINE",
"649 934 LINE",
"690 1462 LINE",
"690 1462 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */\0125 3 4 3 1 0 0 1 87 5 3 4 3 1 1 0 95 2 1 0 1 0 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 823;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"141 1462 LINE",
"166 934 LINE",
"241 934 LINE",
"266 1462 LINE",
"266 1462 LINE"
);
},
{
closed = 1;
nodes = (
"479 1462 LINE",
"503 934 LINE",
"579 934 LINE",
"604 1462 LINE",
"604 1462 LINE"
);
}
);
width = 745;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"149 1462 LINE",
"157 934 LINE",
"198 934 LINE",
"206 1462 LINE",
"206 1462 LINE"
);
},
{
closed = 1;
nodes = (
"448 1462 LINE",
"456 934 LINE",
"497 934 LINE",
"505 1462 LINE",
"505 1462 LINE"
);
}
);
width = 655;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1318 813 LINE",
"1318 1073 LINE",
"1089 1073 LINE",
"1162 1462 LINE",
"894 1462 LINE",
"822 1073 LINE",
"657 1073 LINE",
"730 1462 LINE",
"462 1462 LINE",
"390 1073 LINE",
"104 1073 LINE",
"104 813 LINE",
"341 813 LINE",
"310 645 LINE",
"36 645 LINE",
"36 391 LINE",
"261 391 LINE",
"190 0 LINE",
"456 0 LINE",
"528 391 LINE",
"695 391 LINE",
"622 0 LINE",
"890 0 LINE",
"964 391 LINE",
"1255 391 LINE",
"1255 645 LINE",
"1011 645 LINE",
"1042 813 LINE",
"1042 813 LINE"
);
},
{
closed = 1;
nodes = (
"607 813 LINE",
"773 813 LINE",
"743 645 LINE",
"577 645 LINE",
"577 645 LINE"
);
}
);
width = 1355;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1285 767 LINE",
"1285 976 LINE",
"1058 976 LINE",
"1119 1295 LINE",
"904 1295 LINE",
"843 976 LINE",
"645 976 LINE",
"705 1295 LINE",
"486 1295 LINE",
"426 976 LINE",
"151 976 LINE",
"151 767 LINE",
"389 767 LINE",
"342 535 LINE",
"79 535 LINE",
"79 329 LINE",
"303 329 LINE",
"244 0 LINE",
"459 0 LINE",
"520 329 LINE",
"714 329 LINE",
"651 0 LINE",
"871 0 LINE",
"933 329 LINE",
"1217 329 LINE",
"1217 535 LINE",
"972 535 LINE",
"1019 767 LINE",
"1019 767 LINE"
);
},
{
closed = 1;
nodes = (
"606 767 LINE",
"802 767 LINE",
"755 535 LINE",
"559 535 LINE",
"559 535 LINE"
);
}
);
width = 1363;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1272 893 LINE",
"1272 1030 LINE",
"1010 1030 LINE",
"1094 1462 LINE",
"950 1462 LINE",
"866 1030 LINE",
"573 1030 LINE",
"655 1462 LINE",
"508 1462 LINE",
"426 1030 LINE",
"127 1030 LINE",
"127 893 LINE",
"401 893 LINE",
"336 565 LINE",
"51 565 LINE",
"51 428 LINE",
"309 428 LINE",
"231 0 LINE",
"375 0 LINE",
"457 428 LINE",
"748 428 LINE",
"664 0 LINE",
"811 0 LINE",
"893 428 LINE",
"1200 428 LINE",
"1200 565 LINE",
"920 565 LINE",
"983 893 LINE",
"983 893 LINE"
);
},
{
closed = 1;
nodes = (
"547 893 LINE",
"838 893 LINE",
"774 565 LINE",
"483 565 LINE",
"483 565 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */\01211 1 9 8 9 133 4 1 2 1 2 134 12 10 2 8 15 16 13 3 7 0 8 7 103 14 6 2 0 1 1 0 87 14 6 2 0 0 1 95 5 3 2 1 0 1 79 0 0 31 30 29 28 0 27 0 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 17 17 17 17 6 31 \012CALL[ ]	/* CallFunction */";
};
width = 1323;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1267 920 LINE",
"1267 1012 LINE",
"987 1012 LINE",
"1073 1462 LINE",
"977 1462 LINE",
"891 1012 LINE",
"540 1012 LINE",
"626 1462 LINE",
"526 1462 LINE",
"440 1012 LINE",
"131 1012 LINE",
"131 920 LINE",
"424 920 LINE",
"348 541 LINE",
"53 541 LINE",
"53 446 LINE",
"332 446 LINE",
"248 0 LINE",
"344 0 LINE",
"430 446 LINE",
"780 446 LINE",
"692 0 LINE",
"790 0 LINE",
"878 446 LINE",
"1192 446 LINE",
"1192 541 LINE",
"897 541 LINE",
"971 920 LINE",
"971 920 LINE"
);
},
{
closed = 1;
nodes = (
"520 920 LINE",
"872 920 LINE",
"798 541 LINE",
"446 541 LINE",
"446 541 LINE"
);
}
);
width = 1323;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1265 946 LINE",
"1265 995 LINE",
"964 995 LINE",
"1054 1462 LINE",
"1003 1462 LINE",
"913 995 LINE",
"506 995 LINE",
"596 1462 LINE",
"544 1462 LINE",
"454 995 LINE",
"137 995 LINE",
"137 946 LINE",
"446 946 LINE",
"362 514 LINE",
"57 514 LINE",
"57 465 LINE",
"354 465 LINE",
"264 0 LINE",
"315 0 LINE",
"405 465 LINE",
"813 465 LINE",
"723 0 LINE",
"774 0 LINE",
"864 465 LINE",
"1185 465 LINE",
"1185 514 LINE",
"872 514 LINE",
"956 946 LINE",
"956 946 LINE"
);
},
{
closed = 1;
nodes = (
"497 946 LINE",
"905 946 LINE",
"821 514 LINE",
"413 514 LINE",
"413 514 LINE"
);
}
);
width = 1323;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"684 -119 LINE",
"684 49 LINE",
"917 74 OFFCURVE",
"1134 305 OFFCURVE",
"1134 471 QCURVE SMOOTH",
"1134 592 OFFCURVE",
"1028 741 OFFCURVE",
"827 838 OFFCURVE",
"684 881 QCURVE",
"684 1128 LINE",
"766 1120 OFFCURVE",
"932 1081 OFFCURVE",
"1007 1049 QCURVE",
"1095 1323 LINE",
"1011 1356 OFFCURVE",
"809 1411 OFFCURVE",
"684 1417 QCURVE",
"684 1556 LINE",
"495 1556 LINE",
"495 1415 LINE",
"295 1401 OFFCURVE",
"53 1214 OFFCURVE",
"53 1028 QCURVE SMOOTH",
"53 897 OFFCURVE",
"168 731 OFFCURVE",
"368 629 OFFCURVE",
"495 592 QCURVE",
"495 340 LINE",
"401 348 OFFCURVE",
"182 399 OFFCURVE",
"86 442 QCURVE",
"86 129 LINE",
"172 92 OFFCURVE",
"364 49 OFFCURVE",
"495 45 QCURVE",
"495 -119 LINE",
"495 -119 LINE"
);
},
{
closed = 1;
nodes = (
"434 956 OFFCURVE",
"383 1004 OFFCURVE",
"383 1042 QCURVE SMOOTH",
"383 1116 OFFCURVE",
"495 1126 QCURVE",
"495 936 LINE",
"495 936 LINE"
);
},
{
closed = 1;
nodes = (
"684 545 LINE",
"751 524 OFFCURVE",
"801 477 OFFCURVE",
"801 438 QCURVE SMOOTH",
"801 362 OFFCURVE",
"684 344 QCURVE",
"684 344 LINE"
);
}
);
width = 1181;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1092 545 OFFCURVE",
"1015 677 OFFCURVE",
"850 787 OFFCURVE",
"655 862 QCURVE",
"655 1157 LINE",
"819 1143 OFFCURVE",
"975 1079 QCURVE",
"1069 1313 LINE",
"884 1395 OFFCURVE",
"655 1405 QCURVE",
"655 1554 LINE",
"518 1554 LINE",
"518 1401 LINE",
"315 1381 OFFCURVE",
"88 1194 OFFCURVE",
"88 1049 QCURVE SMOOTH",
"88 914 OFFCURVE",
"253 731 OFFCURVE",
"451 653 QCURVE SMOOTH",
"518 627 LINE",
"518 317 LINE",
"422 323 OFFCURVE",
"177 389 OFFCURVE",
"90 432 QCURVE",
"90 168 LINE",
"274 87 OFFCURVE",
"518 82 QCURVE",
"518 -119 LINE",
"655 -119 LINE",
"655 86 LINE",
"862 105 OFFCURVE",
"1092 298 OFFCURVE",
"1092 457 QCURVE",
"1092 457 LINE"
);
},
{
closed = 1;
nodes = (
"791 347 OFFCURVE",
"655 324 QCURVE",
"655 573 LINE",
"723 542 OFFCURVE",
"791 484 OFFCURVE",
"791 442 QCURVE",
"791 442 LINE"
);
},
{
closed = 1;
nodes = (
"389 1134 OFFCURVE",
"518 1153 QCURVE",
"518 918 LINE",
"450 948 OFFCURVE",
"389 1005 OFFCURVE",
"389 1049 QCURVE",
"389 1049 LINE"
);
}
);
width = 1171;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"985 518 OFFCURVE",
"939 625 OFFCURVE",
"848 708 OFFCURVE",
"713 774 OFFCURVE",
"625 805 QCURVE",
"625 1227 LINE",
"699 1221 OFFCURVE",
"839 1180 OFFCURVE",
"895 1155 QCURVE",
"961 1300 LINE",
"894 1331 OFFCURVE",
"725 1373 OFFCURVE",
"625 1378 QCURVE",
"625 1554 LINE",
"487 1554 LINE",
"487 1374 LINE",
"408 1365 OFFCURVE",
"279 1312 OFFCURVE",
"188 1229 OFFCURVE",
"139 1118 OFFCURVE",
"139 1051 QCURVE SMOOTH",
"139 977 OFFCURVE",
"181 867 OFFCURVE",
"267 782 OFFCURVE",
"398 716 OFFCURVE",
"487 686 QCURVE",
"487 252 LINE",
"440 252 OFFCURVE",
"339 269 OFFCURVE",
"243 295 OFFCURVE",
"156 328 OFFCURVE",
"123 344 QCURVE",
"123 172 LINE",
"155 155 OFFCURVE",
"239 129 OFFCURVE",
"335 111 OFFCURVE",
"437 102 OFFCURVE",
"487 102 QCURVE",
"487 -119 LINE",
"625 -119 LINE",
"625 111 LINE",
"709 123 OFFCURVE",
"842 178 OFFCURVE",
"935 262 OFFCURVE",
"985 376 OFFCURVE",
"985 446 QCURVE",
"985 446 LINE"
);
},
{
closed = 1;
nodes = (
"809 374 OFFCURVE",
"718 276 OFFCURVE",
"625 262 QCURVE",
"625 635 LINE",
"676 617 OFFCURVE",
"746 579 OFFCURVE",
"789 534 OFFCURVE",
"809 479 OFFCURVE",
"809 446 QCURVE",
"809 446 LINE"
);
},
{
closed = 1;
nodes = (
"315 1118 OFFCURVE",
"398 1207 OFFCURVE",
"487 1223 QCURVE",
"487 854 LINE",
"438 871 OFFCURVE",
"372 909 OFFCURVE",
"332 956 OFFCURVE",
"315 1013 OFFCURVE",
"315 1049 QCURVE",
"315 1049 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"608 -119 LINE",
"608 63 LINE",
"791 78 OFFCURVE",
"1008 258 OFFCURVE",
"1008 416 QCURVE SMOOTH",
"1008 520 OFFCURVE",
"911 653 OFFCURVE",
"733 741 OFFCURVE",
"608 782 QCURVE",
"608 1307 LINE",
"682 1303 OFFCURVE",
"840 1266 OFFCURVE",
"915 1233 QCURVE",
"954 1333 LINE",
"801 1403 OFFCURVE",
"608 1409 QCURVE",
"608 1554 LINE",
"518 1554 LINE",
"518 1409 LINE",
"344 1399 OFFCURVE",
"129 1225 OFFCURVE",
"129 1069 QCURVE SMOOTH",
"129 965 OFFCURVE",
"223 827 OFFCURVE",
"397 735 OFFCURVE",
"518 696 QCURVE",
"518 164 LINE",
"410 166 OFFCURVE",
"201 211 OFFCURVE",
"131 240 QCURVE",
"131 123 LINE",
"197 96 OFFCURVE",
"397 61 OFFCURVE",
"518 59 QCURVE",
"518 -119 LINE",
"518 -119 LINE"
);
},
{
closed = 1;
nodes = (
"391 856 OFFCURVE",
"244 967 OFFCURVE",
"244 1077 QCURVE SMOOTH",
"244 1182 OFFCURVE",
"393 1296 OFFCURVE",
"518 1303 QCURVE",
"518 815 LINE",
"518 815 LINE"
);
},
{
closed = 1;
nodes = (
"608 666 LINE",
"754 618 OFFCURVE",
"893 514 OFFCURVE",
"893 410 QCURVE SMOOTH",
"893 299 OFFCURVE",
"741 180 OFFCURVE",
"608 170 QCURVE",
"608 170 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"567 -119 LINE",
"567 20 LINE",
"737 29 OFFCURVE",
"960 207 OFFCURVE",
"960 381 QCURVE SMOOTH",
"960 489 OFFCURVE",
"860 625 OFFCURVE",
"682 717 OFFCURVE",
"567 758 QCURVE",
"567 1391 LINE",
"633 1389 OFFCURVE",
"790 1358 OFFCURVE",
"876 1319 QCURVE",
"899 1366 LINE",
"815 1405 OFFCURVE",
"649 1440 OFFCURVE",
"567 1442 QCURVE",
"567 1554 LINE",
"518 1554 LINE",
"518 1442 LINE",
"407 1436 OFFCURVE",
"233 1354 OFFCURVE",
"131 1204 OFFCURVE",
"131 1098 QCURVE SMOOTH",
"131 987 OFFCURVE",
"237 852 OFFCURVE",
"414 762 OFFCURVE",
"518 723 QCURVE",
"518 72 LINE",
"405 74 OFFCURVE",
"209 111 OFFCURVE",
"137 139 QCURVE",
"137 80 LINE",
"201 57 OFFCURVE",
"389 23 OFFCURVE",
"518 20 QCURVE",
"518 -119 LINE",
"518 -119 LINE"
);
},
{
closed = 1;
nodes = (
"430 809 OFFCURVE",
"281 887 OFFCURVE",
"186 1008 OFFCURVE",
"186 1102 QCURVE SMOOTH",
"186 1196 OFFCURVE",
"274 1321 OFFCURVE",
"426 1386 OFFCURVE",
"518 1391 QCURVE",
"518 776 LINE",
"518 776 LINE"
);
},
{
closed = 1;
nodes = (
"567 702 LINE",
"672 664 OFFCURVE",
"823 582 OFFCURVE",
"905 469 OFFCURVE",
"905 383 QCURVE SMOOTH",
"905 229 OFFCURVE",
"713 80 OFFCURVE",
"567 72 QCURVE",
"567 72 LINE"
);
}
);
width = 1167;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"229 1483 OFFCURVE",
"36 1243 OFFCURVE",
"36 1026 QCURVE SMOOTH",
"36 809 OFFCURVE",
"241 565 OFFCURVE",
"409 565 QCURVE SMOOTH",
"595 565 OFFCURVE",
"790 809 OFFCURVE",
"790 1026 QCURVE SMOOTH",
"790 1243 OFFCURVE",
"581 1483 OFFCURVE",
"409 1483 QCURVE",
"409 1483 LINE"
);
},
{
closed = 1;
nodes = (
"456 1239 OFFCURVE",
"489 1122 OFFCURVE",
"489 1022 QCURVE SMOOTH",
"489 922 OFFCURVE",
"456 805 OFFCURVE",
"413 805 QCURVE SMOOTH",
"370 805 OFFCURVE",
"337 924 OFFCURVE",
"337 1022 QCURVE SMOOTH",
"337 1122 OFFCURVE",
"370 1239 OFFCURVE",
"413 1239 QCURVE",
"413 1239 LINE"
);
},
{
closed = 1;
nodes = (
"1341 901 OFFCURVE",
"1148 662 OFFCURVE",
"1148 444 QCURVE SMOOTH",
"1148 227 OFFCURVE",
"1353 -16 OFFCURVE",
"1521 -16 QCURVE SMOOTH",
"1707 -16 OFFCURVE",
"1902 227 OFFCURVE",
"1902 444 QCURVE SMOOTH",
"1902 662 OFFCURVE",
"1693 901 OFFCURVE",
"1521 901 QCURVE",
"1521 901 LINE"
);
},
{
closed = 1;
nodes = (
"1568 657 OFFCURVE",
"1601 543 OFFCURVE",
"1601 440 QCURVE SMOOTH",
"1601 340 OFFCURVE",
"1568 223 OFFCURVE",
"1525 223 QCURVE SMOOTH",
"1482 223 OFFCURVE",
"1449 342 OFFCURVE",
"1449 440 QCURVE SMOOTH",
"1449 541 OFFCURVE",
"1482 657 OFFCURVE",
"1525 657 QCURVE",
"1525 657 LINE"
);
},
{
closed = 1;
nodes = (
"1222 1462 LINE",
"411 0 LINE",
"708 0 LINE",
"1519 1462 LINE",
"1519 1462 LINE"
);
}
);
width = 1941;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"324 1006 OFFCURVE",
"374 1086 OFFCURVE",
"429 1086 QCURVE SMOOTH",
"535 1086 OFFCURVE",
"535 924 QCURVE SMOOTH",
"535 841 OFFCURVE",
"483 761 OFFCURVE",
"429 761 QCURVE SMOOTH",
"374 761 OFFCURVE",
"324 842 OFFCURVE",
"324 924 QCURVE",
"324 924 LINE"
);
},
{
closed = 1;
nodes = (
"777 1013 OFFCURVE",
"732 1151 OFFCURVE",
"644 1245 OFFCURVE",
"513 1295 OFFCURVE",
"427 1295 QCURVE SMOOTH",
"337 1295 OFFCURVE",
"207 1245 OFFCURVE",
"122 1151 OFFCURVE",
"82 1013 OFFCURVE",
"82 926 QCURVE SMOOTH",
"82 839 OFFCURVE",
"126 700 OFFCURVE",
"213 605 OFFCURVE",
"342 554 OFFCURVE",
"427 554 QCURVE SMOOTH",
"518 554 OFFCURVE",
"650 605 OFFCURVE",
"736 700 OFFCURVE",
"777 839 OFFCURVE",
"777 926 QCURVE",
"777 926 LINE"
);
},
{
closed = 1;
nodes = (
"1307 433 OFFCURVE",
"1357 513 OFFCURVE",
"1412 513 QCURVE SMOOTH",
"1518 513 OFFCURVE",
"1518 351 QCURVE SMOOTH",
"1518 268 OFFCURVE",
"1466 188 OFFCURVE",
"1412 188 QCURVE SMOOTH",
"1357 188 OFFCURVE",
"1307 269 OFFCURVE",
"1307 351 QCURVE",
"1307 351 LINE"
);
},
{
closed = 1;
nodes = (
"1760 440 OFFCURVE",
"1715 578 OFFCURVE",
"1627 672 OFFCURVE",
"1496 722 OFFCURVE",
"1410 722 QCURVE SMOOTH",
"1320 722 OFFCURVE",
"1190 672 OFFCURVE",
"1106 578 OFFCURVE",
"1066 440 OFFCURVE",
"1066 353 QCURVE SMOOTH",
"1066 266 OFFCURVE",
"1110 128 OFFCURVE",
"1197 33 OFFCURVE",
"1325 -18 OFFCURVE",
"1410 -18 QCURVE SMOOTH",
"1501 -18 OFFCURVE",
"1633 33 OFFCURVE",
"1719 128 OFFCURVE",
"1760 266 OFFCURVE",
"1760 353 QCURVE",
"1760 353 LINE"
);
},
{
closed = 1;
nodes = (
"1205 1274 LINE",
"404 0 LINE",
"633 0 LINE",
"1434 1274 LINE",
"1434 1274 LINE"
);
}
);
width = 1842;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"250 1191 OFFCURVE",
"321 1354 OFFCURVE",
"401 1354 QCURVE SMOOTH",
"557 1354 OFFCURVE",
"557 1026 QCURVE SMOOTH",
"557 696 OFFCURVE",
"401 696 QCURVE SMOOTH",
"321 696 OFFCURVE",
"250 861 OFFCURVE",
"250 1026 QCURVE",
"250 1026 LINE"
);
},
{
closed = 1;
nodes = (
"705 1134 OFFCURVE",
"666 1304 OFFCURVE",
"589 1421 OFFCURVE",
"476 1483 OFFCURVE",
"401 1483 QCURVE SMOOTH",
"323 1483 OFFCURVE",
"210 1421 OFFCURVE",
"137 1304 OFFCURVE",
"102 1134 OFFCURVE",
"102 1026 QCURVE SMOOTH",
"102 918 OFFCURVE",
"140 746 OFFCURVE",
"216 628 OFFCURVE",
"328 565 OFFCURVE",
"401 565 QCURVE SMOOTH",
"480 565 OFFCURVE",
"595 628 OFFCURVE",
"669 746 OFFCURVE",
"705 918 OFFCURVE",
"705 1026 QCURVE",
"705 1026 LINE"
);
},
{
closed = 1;
nodes = (
"1133 605 OFFCURVE",
"1204 768 OFFCURVE",
"1284 768 QCURVE SMOOTH",
"1440 768 OFFCURVE",
"1440 440 QCURVE SMOOTH",
"1440 111 OFFCURVE",
"1284 111 QCURVE SMOOTH",
"1204 111 OFFCURVE",
"1133 275 OFFCURVE",
"1133 440 QCURVE",
"1133 440 LINE"
);
},
{
closed = 1;
nodes = (
"1587 548 OFFCURVE",
"1548 718 OFFCURVE",
"1472 835 OFFCURVE",
"1359 897 OFFCURVE",
"1284 897 QCURVE SMOOTH",
"1206 897 OFFCURVE",
"1093 835 OFFCURVE",
"1020 718 OFFCURVE",
"985 548 OFFCURVE",
"985 440 QCURVE SMOOTH",
"985 332 OFFCURVE",
"1023 161 OFFCURVE",
"1098 43 OFFCURVE",
"1210 -20 OFFCURVE",
"1284 -20 QCURVE SMOOTH",
"1363 -20 OFFCURVE",
"1478 43 OFFCURVE",
"1552 161 OFFCURVE",
"1587 332 OFFCURVE",
"1587 440 QCURVE",
"1587 440 LINE"
);
},
{
closed = 1;
nodes = (
"1174 1462 LINE",
"362 0 LINE",
"520 0 LINE",
"1331 1462 LINE",
"1331 1462 LINE"
);
}
);
width = 1690;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"257 1483 OFFCURVE",
"110 1249 OFFCURVE",
"110 1026 QCURVE SMOOTH",
"110 803 OFFCURVE",
"260 565 OFFCURVE",
"399 565 QCURVE SMOOTH",
"544 565 OFFCURVE",
"694 803 OFFCURVE",
"694 1026 QCURVE SMOOTH",
"694 1245 OFFCURVE",
"546 1483 OFFCURVE",
"401 1483 QCURVE",
"401 1483 LINE"
);
},
{
closed = 1;
nodes = (
"499 1393 OFFCURVE",
"591 1206 OFFCURVE",
"591 1026 QCURVE SMOOTH",
"591 655 OFFCURVE",
"399 655 QCURVE SMOOTH",
"212 655 OFFCURVE",
"212 1026 QCURVE SMOOTH",
"212 1393 OFFCURVE",
"401 1393 QCURVE",
"401 1393 LINE"
);
},
{
closed = 1;
nodes = (
"1116 897 OFFCURVE",
"968 664 OFFCURVE",
"968 440 QCURVE SMOOTH",
"968 217 OFFCURVE",
"1116 -20 OFFCURVE",
"1257 -20 QCURVE SMOOTH",
"1400 -20 OFFCURVE",
"1552 217 OFFCURVE",
"1552 440 QCURVE SMOOTH",
"1552 659 OFFCURVE",
"1404 897 OFFCURVE",
"1259 897 QCURVE",
"1259 897 LINE"
);
},
{
closed = 1;
nodes = (
"1357 807 OFFCURVE",
"1449 621 OFFCURVE",
"1449 440 QCURVE SMOOTH",
"1449 70 OFFCURVE",
"1257 70 QCURVE SMOOTH",
"1071 70 OFFCURVE",
"1071 440 QCURVE SMOOTH",
"1071 807 OFFCURVE",
"1259 807 QCURVE",
"1259 807 LINE"
);
},
{
closed = 1;
nodes = (
"1183 1462 LINE",
"372 0 LINE",
"479 0 LINE",
"1290 1462 LINE",
"1290 1462 LINE"
);
}
);
width = 1662;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"272 1483 OFFCURVE",
"120 1253 OFFCURVE",
"120 1026 QCURVE SMOOTH",
"120 799 OFFCURVE",
"263 565 OFFCURVE",
"399 565 QCURVE SMOOTH",
"532 565 OFFCURVE",
"681 795 OFFCURVE",
"681 1026 QCURVE SMOOTH",
"681 1249 OFFCURVE",
"544 1483 OFFCURVE",
"403 1483 QCURVE",
"403 1483 LINE"
);
},
{
closed = 1;
nodes = (
"519 1432 OFFCURVE",
"626 1223 OFFCURVE",
"626 1026 QCURVE SMOOTH",
"626 827 OFFCURVE",
"511 616 OFFCURVE",
"399 616 QCURVE SMOOTH",
"290 616 OFFCURVE",
"175 823 OFFCURVE",
"175 1026 QCURVE SMOOTH",
"175 1231 OFFCURVE",
"294 1432 OFFCURVE",
"403 1432 QCURVE",
"403 1432 LINE"
);
},
{
closed = 1;
nodes = (
"1093 897 OFFCURVE",
"941 668 OFFCURVE",
"941 440 QCURVE SMOOTH",
"941 213 OFFCURVE",
"1085 -20 OFFCURVE",
"1220 -20 QCURVE SMOOTH",
"1351 -20 OFFCURVE",
"1502 209 OFFCURVE",
"1502 440 QCURVE SMOOTH",
"1502 664 OFFCURVE",
"1365 897 OFFCURVE",
"1224 897 QCURVE",
"1224 897 LINE"
);
},
{
closed = 1;
nodes = (
"1341 846 OFFCURVE",
"1447 637 OFFCURVE",
"1447 440 QCURVE SMOOTH",
"1447 242 OFFCURVE",
"1334 31 OFFCURVE",
"1220 31 QCURVE SMOOTH",
"1113 31 OFFCURVE",
"997 238 OFFCURVE",
"997 440 QCURVE SMOOTH",
"997 645 OFFCURVE",
"1117 846 OFFCURVE",
"1224 846 QCURVE",
"1224 846 LINE"
);
},
{
closed = 1;
nodes = (
"1189 1462 LINE",
"378 0 LINE",
"435 0 LINE",
"1246 1462 LINE",
"1246 1462 LINE"
);
}
);
width = 1624;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"448 1481 OFFCURVE",
"212 1284 OFFCURVE",
"212 1133 QCURVE SMOOTH",
"212 1034 OFFCURVE",
"282 877 OFFCURVE",
"343 807 QCURVE",
"212 739 OFFCURVE",
"71 537 OFFCURVE",
"71 406 QCURVE SMOOTH",
"71 287 OFFCURVE",
"194 94 OFFCURVE",
"429 -20 OFFCURVE",
"601 -20 QCURVE SMOOTH",
"724 -20 OFFCURVE",
"878 12 OFFCURVE",
"986 68 OFFCURVE",
"1042 102 QCURVE",
"1140 0 LINE",
"1646 0 LINE",
"1326 307 LINE",
"1402 397 OFFCURVE",
"1533 672 OFFCURVE",
"1566 821 QCURVE",
"1161 821 LINE",
"1130 674 OFFCURVE",
"1056 561 QCURVE",
"857 750 LINE",
"974 819 OFFCURVE",
"1122 1006 OFFCURVE",
"1122 1133 QCURVE SMOOTH",
"1122 1296 OFFCURVE",
"882 1481 OFFCURVE",
"675 1481 QCURVE",
"675 1481 LINE"
);
},
{
closed = 1;
nodes = (
"712 1225 OFFCURVE",
"769 1182 OFFCURVE",
"769 1133 QCURVE SMOOTH",
"769 1085 OFFCURVE",
"710 997 OFFCURVE",
"653 965 QCURVE",
"618 997 OFFCURVE",
"565 1075 OFFCURVE",
"565 1120 QCURVE SMOOTH",
"565 1176 OFFCURVE",
"628 1225 OFFCURVE",
"669 1225 QCURVE",
"669 1225 LINE"
);
},
{
closed = 1;
nodes = (
"804 340 LINE",
"782 322 OFFCURVE",
"696 291 OFFCURVE",
"638 291 QCURVE SMOOTH",
"565 291 OFFCURVE",
"474 371 OFFCURVE",
"474 434 QCURVE SMOOTH",
"474 479 OFFCURVE",
"513 559 OFFCURVE",
"556 592 QCURVE",
"556 592 LINE"
);
}
);
width = 1636;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1235 293 LINE",
"1315 392 OFFCURVE",
"1441 649 OFFCURVE",
"1477 784 QCURVE",
"1159 784 LINE",
"1107 600 OFFCURVE",
"1036 483 QCURVE",
"752 760 LINE",
"906 849 OFFCURVE",
"1044 1046 OFFCURVE",
"1044 1165 QCURVE SMOOTH",
"1044 1310 OFFCURVE",
"821 1483 OFFCURVE",
"635 1483 QCURVE SMOOTH",
"440 1483 OFFCURVE",
"207 1297 OFFCURVE",
"207 1145 QCURVE SMOOTH",
"207 1052 OFFCURVE",
"275 895 OFFCURVE",
"350 809 QCURVE",
"203 725 OFFCURVE",
"82 532 OFFCURVE",
"82 395 QCURVE SMOOTH",
"82 204 OFFCURVE",
"368 -20 OFFCURVE",
"612 -20 QCURVE SMOOTH",
"853 -20 OFFCURVE",
"1044 113 QCURVE",
"1159 0 LINE",
"1536 0 LINE",
"1536 0 LINE"
);
},
{
closed = 1;
nodes = (
"403 487 OFFCURVE",
"470 583 OFFCURVE",
"528 627 QCURVE",
"860 297 LINE",
"759 236 OFFCURVE",
"633 236 QCURVE SMOOTH",
"532 236 OFFCURVE",
"403 338 OFFCURVE",
"403 424 QCURVE",
"403 424 LINE"
);
},
{
closed = 1;
nodes = (
"762 1071 OFFCURVE",
"670 978 OFFCURVE",
"584 930 QCURVE",
"489 1036 OFFCURVE",
"489 1124 QCURVE SMOOTH",
"489 1183 OFFCURVE",
"566 1247 OFFCURVE",
"633 1247 QCURVE SMOOTH",
"690 1247 OFFCURVE",
"762 1186 OFFCURVE",
"762 1133 QCURVE",
"762 1133 LINE"
);
}
);
width = 1536;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"422 1246 OFFCURVE",
"522 1335 OFFCURVE",
"608 1335 QCURVE SMOOTH",
"650 1335 OFFCURVE",
"716 1310 OFFCURVE",
"763 1266 OFFCURVE",
"788 1205 OFFCURVE",
"788 1169 QCURVE SMOOTH",
"788 1128 OFFCURVE",
"760 1058 OFFCURVE",
"704 994 OFFCURVE",
"618 932 OFFCURVE",
"559 897 QCURVE",
"523 934 OFFCURVE",
"471 1001 OFFCURVE",
"438 1066 OFFCURVE",
"422 1131 OFFCURVE",
"422 1165 QCURVE",
"422 1165 LINE"
);
},
{
closed = 1;
nodes = (
"496 141 OFFCURVE",
"400 177 OFFCURVE",
"334 242 OFFCURVE",
"299 333 OFFCURVE",
"299 387 QCURVE SMOOTH",
"299 443 OFFCURVE",
"327 528 OFFCURVE",
"382 600 OFFCURVE",
"462 663 OFFCURVE",
"514 696 QCURVE",
"901 289 LINE",
"869 258 OFFCURVE",
"797 204 OFFCURVE",
"713 164 OFFCURVE",
"615 141 OFFCURVE",
"557 141 QCURVE",
"557 141 LINE"
);
},
{
closed = 1;
nodes = (
"109 285 OFFCURVE",
"170 136 OFFCURVE",
"285 33 OFFCURVE",
"452 -20 OFFCURVE",
"557 -20 QCURVE SMOOTH",
"635 -20 OFFCURVE",
"759 7 OFFCURVE",
"867 56 OFFCURVE",
"963 127 OFFCURVE",
"1012 172 QCURVE",
"1180 0 LINE",
"1405 0 LINE",
"1128 293 LINE",
"1167 334 OFFCURVE",
"1232 419 OFFCURVE",
"1285 517 OFFCURVE",
"1326 628 OFFCURVE",
"1341 694 QCURVE",
"1157 694 LINE",
"1147 647 OFFCURVE",
"1120 569 OFFCURVE",
"1086 501 OFFCURVE",
"1043 441 OFFCURVE",
"1016 412 QCURVE",
"664 784 LINE",
"724 820 OFFCURVE",
"833 899 OFFCURVE",
"917 992 OFFCURVE",
"967 1101 OFFCURVE",
"967 1165 QCURVE SMOOTH",
"967 1240 OFFCURVE",
"919 1359 OFFCURVE",
"828 1442 OFFCURVE",
"697 1485 OFFCURVE",
"614 1485 QCURVE SMOOTH",
"526 1485 OFFCURVE",
"388 1442 OFFCURVE",
"294 1359 OFFCURVE",
"244 1240 OFFCURVE",
"244 1165 QCURVE SMOOTH",
"244 1108 OFFCURVE",
"272 1009 OFFCURVE",
"317 922 OFFCURVE",
"377 845 OFFCURVE",
"408 809 QCURVE",
"337 767 OFFCURVE",
"226 681 OFFCURVE",
"149 581 OFFCURVE",
"109 459 OFFCURVE",
"109 381 QCURVE",
"109 381 LINE"
);
}
);
width = 1438;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"458 1485 OFFCURVE",
"265 1315 OFFCURVE",
"265 1171 QCURVE SMOOTH",
"265 1065 OFFCURVE",
"376 901 OFFCURVE",
"462 811 QCURVE",
"354 754 OFFCURVE",
"200 637 OFFCURVE",
"118 483 OFFCURVE",
"118 373 QCURVE SMOOTH",
"118 182 OFFCURVE",
"368 -20 OFFCURVE",
"573 -20 QCURVE SMOOTH",
"749 -20 OFFCURVE",
"986 98 OFFCURVE",
"1081 193 QCURVE",
"1273 0 LINE",
"1429 0 LINE",
"1158 270 LINE",
"1306 442 OFFCURVE",
"1367 700 QCURVE",
"1248 700 LINE",
"1224 596 OFFCURVE",
"1142 416 OFFCURVE",
"1085 348 QCURVE",
"638 791 LINE",
"780 866 OFFCURVE",
"958 1044 OFFCURVE",
"958 1180 QCURVE SMOOTH",
"958 1323 OFFCURVE",
"773 1485 OFFCURVE",
"622 1485 QCURVE",
"622 1485 LINE"
);
},
{
closed = 1;
nodes = (
"720 1384 OFFCURVE",
"843 1274 OFFCURVE",
"843 1180 QCURVE SMOOTH",
"843 1075 OFFCURVE",
"700 932 OFFCURVE",
"560 862 QCURVE",
"474 950 OFFCURVE",
"380 1090 OFFCURVE",
"380 1174 QCURVE SMOOTH",
"380 1272 OFFCURVE",
"511 1384 OFFCURVE",
"618 1384 QCURVE",
"618 1384 LINE"
);
},
{
closed = 1;
nodes = (
"1007 266 LINE",
"927 186 OFFCURVE",
"724 84 OFFCURVE",
"575 84 QCURVE SMOOTH",
"423 84 OFFCURVE",
"239 240 OFFCURVE",
"239 377 QCURVE SMOOTH",
"239 467 OFFCURVE",
"308 590 OFFCURVE",
"442 686 OFFCURVE",
"536 735 QCURVE",
"536 735 LINE"
);
}
);
width = 1468;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"471 1485 OFFCURVE",
"285 1319 OFFCURVE",
"285 1180 QCURVE SMOOTH",
"285 1110 OFFCURVE",
"334 995 OFFCURVE",
"432 881 OFFCURVE",
"504 809 QCURVE",
"385 752 OFFCURVE",
"217 635 OFFCURVE",
"129 481 OFFCURVE",
"129 367 QCURVE SMOOTH",
"129 180 OFFCURVE",
"379 -20 OFFCURVE",
"575 -20 QCURVE SMOOTH",
"758 -20 OFFCURVE",
"995 113 OFFCURVE",
"1092 215 QCURVE",
"1294 0 LINE",
"1366 0 LINE",
"1124 250 LINE",
"1194 340 OFFCURVE",
"1300 545 OFFCURVE",
"1329 672 QCURVE",
"1274 672 LINE",
"1249 557 OFFCURVE",
"1151 362 OFFCURVE",
"1090 289 QCURVE",
"592 795 LINE",
"752 872 OFFCURVE",
"942 1049 OFFCURVE",
"942 1190 QCURVE SMOOTH",
"942 1327 OFFCURVE",
"762 1485 OFFCURVE",
"623 1485 QCURVE",
"623 1485 LINE"
);
},
{
closed = 1;
nodes = (
"741 1434 OFFCURVE",
"887 1303 OFFCURVE",
"887 1190 QCURVE SMOOTH",
"887 1065 OFFCURVE",
"707 899 OFFCURVE",
"551 831 QCURVE",
"451 934 OFFCURVE",
"340 1085 OFFCURVE",
"340 1180 QCURVE SMOOTH",
"340 1296 OFFCURVE",
"491 1434 OFFCURVE",
"623 1434 QCURVE",
"623 1434 LINE"
);
},
{
closed = 1;
nodes = (
"1057 250 LINE",
"963 147 OFFCURVE",
"745 31 OFFCURVE",
"575 31 QCURVE SMOOTH",
"401 31 OFFCURVE",
"184 205 OFFCURVE",
"184 367 QCURVE SMOOTH",
"184 471 OFFCURVE",
"266 612 OFFCURVE",
"426 717 OFFCURVE",
"541 772 QCURVE",
"541 772 LINE"
);
}
);
width = 1437;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"120 1462 LINE",
"161 934 LINE",
"435 934 LINE",
"476 1462 LINE",
"476 1462 LINE"
);
}
);
width = 598;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"223 1493 LINE",
"264 965 LINE",
"461 965 LINE",
"502 1493 LINE",
"502 1493 LINE"
);
}
);
width = 696;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"133 1462 LINE",
"174 934 LINE",
"289 934 LINE",
"330 1462 LINE",
"330 1462 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */\0122 1 1 0 0 1 87 2 1 1 1 0 95 0 0 1 0 79 0 0 0 3 0 3 17 3 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 463;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"141 1462 LINE",
"166 934 LINE",
"241 934 LINE",
"266 1462 LINE",
"266 1462 LINE"
);
}
);
width = 405;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"149 1462 LINE",
"157 934 LINE",
"198 934 LINE",
"206 1462 LINE",
"206 1462 LINE"
);
}
);
width = 352;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"73 418 OFFCURVE",
"126 92 OFFCURVE",
"251 -205 OFFCURVE",
"354 -324 QCURVE",
"677 -324 LINE",
"585 -199 OFFCURVE",
"470 102 OFFCURVE",
"417 426 OFFCURVE",
"417 584 QCURVE SMOOTH",
"417 827 OFFCURVE",
"540 1311 OFFCURVE",
"679 1503 QCURVE",
"354 1503 LINE",
"251 1380 OFFCURVE",
"126 1077 OFFCURVE",
"73 750 OFFCURVE",
"73 582 QCURVE",
"73 582 LINE"
);
}
);
width = 735;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"135 532 OFFCURVE",
"171 257 OFFCURVE",
"245 0 OFFCURVE",
"358 -235 OFFCURVE",
"436 -338 QCURVE",
"684 -338 LINE",
"615 -231 OFFCURVE",
"509 12 OFFCURVE",
"437 270 OFFCURVE",
"401 540 OFFCURVE",
"401 676 QCURVE SMOOTH",
"401 954 OFFCURVE",
"545 1482 OFFCURVE",
"686 1703 QCURVE",
"436 1703 LINE",
"358 1597 OFFCURVE",
"245 1356 OFFCURVE",
"171 1094 OFFCURVE",
"135 816 OFFCURVE",
"135 673 QCURVE",
"135 673 LINE"
);
}
);
width = 791;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"82 437 OFFCURVE",
"118 197 OFFCURVE",
"192 -28 OFFCURVE",
"305 -234 OFFCURVE",
"383 -324 QCURVE",
"553 -324 LINE",
"484 -230 OFFCURVE",
"378 -18 OFFCURVE",
"307 208 OFFCURVE",
"270 444 OFFCURVE",
"270 563 QCURVE SMOOTH",
"270 807 OFFCURVE",
"415 1269 OFFCURVE",
"555 1462 QCURVE",
"383 1462 LINE",
"305 1369 OFFCURVE",
"192 1158 OFFCURVE",
"118 929 OFFCURVE",
"82 686 OFFCURVE",
"82 561 QCURVE",
"82 561 LINE"
);
}
);
width = 616;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"83 303 OFFCURVE",
"235 -147 OFFCURVE",
"382 -324 QCURVE",
"499 -324 LINE",
"351 -135 OFFCURVE",
"202 315 OFFCURVE",
"202 563 QCURVE SMOOTH",
"202 813 OFFCURVE",
"351 1274 OFFCURVE",
"501 1462 QCURVE",
"382 1462 LINE",
"235 1286 OFFCURVE",
"83 823 OFFCURVE",
"83 561 QCURVE",
"83 561 LINE"
);
}
);
width = 569;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"86 293 OFFCURVE",
"244 -152 OFFCURVE",
"383 -324 QCURVE",
"451 -324 LINE",
"295 -141 OFFCURVE",
"141 307 OFFCURVE",
"141 563 QCURVE SMOOTH",
"141 821 OFFCURVE",
"293 1282 OFFCURVE",
"451 1462 QCURVE",
"383 1462 LINE",
"244 1296 OFFCURVE",
"86 834 OFFCURVE",
"86 561 QCURVE",
"86 561 LINE"
);
}
);
width = 522;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"661 750 OFFCURVE",
"608 1077 OFFCURVE",
"483 1380 OFFCURVE",
"381 1503 QCURVE",
"55 1503 LINE",
"192 1311 OFFCURVE",
"317 827 OFFCURVE",
"317 584 QCURVE SMOOTH",
"317 426 OFFCURVE",
"264 102 OFFCURVE",
"147 -199 OFFCURVE",
"57 -324 QCURVE",
"381 -324 LINE",
"483 -205 OFFCURVE",
"608 92 OFFCURVE",
"661 418 OFFCURVE",
"661 582 QCURVE",
"661 582 LINE"
);
}
);
width = 735;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"656 833 OFFCURVE",
"620 1108 OFFCURVE",
"546 1365 OFFCURVE",
"433 1600 OFFCURVE",
"355 1703 QCURVE",
"107 1703 LINE",
"176 1596 OFFCURVE",
"282 1353 OFFCURVE",
"354 1095 OFFCURVE",
"390 825 OFFCURVE",
"390 689 QCURVE SMOOTH",
"390 411 OFFCURVE",
"246 -117 OFFCURVE",
"105 -338 QCURVE",
"355 -338 LINE",
"433 -232 OFFCURVE",
"546 9 OFFCURVE",
"620 271 OFFCURVE",
"656 549 OFFCURVE",
"656 692 QCURVE",
"656 692 LINE"
);
}
);
width = 791;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"535 686 OFFCURVE",
"499 929 OFFCURVE",
"424 1158 OFFCURVE",
"311 1369 OFFCURVE",
"233 1462 QCURVE",
"61 1462 LINE",
"202 1269 OFFCURVE",
"346 807 OFFCURVE",
"346 563 QCURVE SMOOTH",
"346 444 OFFCURVE",
"310 208 OFFCURVE",
"238 -18 OFFCURVE",
"132 -230 OFFCURVE",
"63 -324 QCURVE",
"233 -324 LINE",
"311 -234 OFFCURVE",
"424 -28 OFFCURVE",
"499 197 OFFCURVE",
"535 437 OFFCURVE",
"535 561 QCURVE",
"535 561 LINE"
);
}
);
width = 616;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"485 829 OFFCURVE",
"333 1284 OFFCURVE",
"186 1462 QCURVE",
"67 1462 LINE",
"217 1274 OFFCURVE",
"366 819 OFFCURVE",
"366 569 QCURVE SMOOTH",
"366 319 OFFCURVE",
"219 -135 OFFCURVE",
"69 -324 QCURVE",
"186 -324 LINE",
"333 -152 OFFCURVE",
"485 309 OFFCURVE",
"485 569 QCURVE",
"485 569 LINE"
);
}
);
width = 569;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"438 846 OFFCURVE",
"280 1290 OFFCURVE",
"141 1462 QCURVE",
"73 1462 LINE",
"229 1280 OFFCURVE",
"382 831 OFFCURVE",
"382 575 QCURVE SMOOTH",
"382 317 OFFCURVE",
"231 -143 OFFCURVE",
"73 -324 QCURVE",
"141 -324 LINE",
"280 -158 OFFCURVE",
"438 305 OFFCURVE",
"438 578 QCURVE",
"438 578 LINE"
);
}
);
width = 522;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"399 1556 LINE",
"438 1204 LINE",
"90 1305 LINE",
"45 1014 LINE",
"358 989 LINE",
"151 711 LINE",
"424 575 LINE",
"547 856 LINE",
"690 573 LINE",
"950 711 LINE",
"743 989 LINE",
"1057 1010 LINE",
"1020 1305 LINE",
"663 1204 LINE",
"702 1556 LINE",
"702 1556 LINE"
);
}
);
width = 1099;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"499 1525 LINE",
"540 1157 LINE",
"175 1261 LINE",
"136 1011 LINE",
"474 985 LINE",
"253 688 LINE",
"489 569 LINE",
"626 880 LINE",
"782 567 LINE",
"1009 688 LINE",
"786 985 LINE",
"1126 1009 LINE",
"1093 1261 LINE",
"720 1157 LINE",
"761 1525 LINE",
"761 1525 LINE"
);
}
);
width = 1243;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"459 1556 LINE",
"502 1163 LINE",
"111 1274 LINE",
"82 1081 LINE",
"457 1053 LINE",
"215 727 LINE",
"399 631 LINE",
"557 989 LINE",
"733 631 LINE",
"911 727 LINE",
"666 1053 LINE",
"1044 1081 LINE",
"1018 1274 LINE",
"621 1163 LINE",
"664 1556 LINE",
"664 1556 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */\01213 12 11 10 9 8 7 6 5 4 3 2 1 13 0 73 1 1 0 0 118 0 0 0 14 0 14 2 6 22 \012CALL[ ]	/* CallFunction */";
};
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"495 1554 LINE",
"522 1147 LINE",
"129 1274 LINE",
"106 1151 LINE",
"495 1077 LINE",
"245 750 LINE",
"360 684 LINE",
"557 1036 LINE",
"763 684 LINE",
"876 750 LINE",
"626 1077 LINE",
"1015 1151 LINE",
"991 1274 LINE",
"598 1147 LINE",
"622 1554 LINE",
"622 1554 LINE"
);
}
);
width = 1128;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"529 1552 LINE",
"542 1130 LINE",
"144 1272 LINE",
"126 1217 LINE",
"532 1100 LINE",
"276 766 LINE",
"323 733 LINE",
"558 1079 LINE",
"796 731 LINE",
"843 766 LINE",
"587 1100 LINE",
"988 1217 LINE",
"972 1272 LINE",
"575 1130 LINE",
"587 1552 LINE",
"587 1552 LINE"
);
}
);
width = 1128;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"733 1223 LINE",
"465 1223 LINE",
"465 856 LINE",
"92 856 LINE",
"92 588 LINE",
"465 588 LINE",
"465 227 LINE",
"733 227 LINE",
"733 588 LINE",
"1106 588 LINE",
"1106 856 LINE",
"733 856 LINE",
"733 856 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"475 188 LINE",
"694 188 LINE",
"694 552 LINE",
"1060 552 LINE",
"1060 771 LINE",
"694 771 LINE",
"694 1140 LINE",
"475 1140 LINE",
"475 771 LINE",
"108 771 LINE",
"108 552 LINE",
"475 552 LINE",
"475 552 LINE"
);
}
);
width = 1168;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"489 262 LINE",
"639 262 LINE",
"639 647 LINE",
"1026 647 LINE",
"1026 797 LINE",
"639 797 LINE",
"639 1186 LINE",
"489 1186 LINE",
"489 797 LINE",
"102 797 LINE",
"102 647 LINE",
"489 647 LINE",
"489 647 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */\0120 2 1 2 133 0 5 0 5 134 3 1 1 0 0 1 87 3 1 1 1 0 95 4 1 0 1 0 79 17 17 17 17 17 16 6 6 28 \012CALL[ ]	/* CallFunction */";
};
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"632 1206 LINE",
"534 1206 LINE",
"534 770 LINE",
"106 770 LINE",
"106 674 LINE",
"534 674 LINE",
"534 240 LINE",
"632 240 LINE",
"632 674 LINE",
"1060 674 LINE",
"1060 770 LINE",
"632 770 LINE",
"632 770 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"608 1194 LINE",
"558 1194 LINE",
"558 748 LINE",
"112 748 LINE",
"112 698 LINE",
"558 698 LINE",
"558 252 LINE",
"608 252 LINE",
"608 698 LINE",
"1054 698 LINE",
"1054 748 LINE",
"608 748 LINE",
"608 748 LINE"
);
}
);
width = 1167;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"155 299 LINE",
"147 217 OFFCURVE",
"114 16 OFFCURVE",
"77 -193 OFFCURVE",
"57 -285 QCURVE",
"336 -285 LINE",
"368 -209 OFFCURVE",
"436 -2 OFFCURVE",
"493 203 OFFCURVE",
"512 276 QCURVE",
"497 299 LINE",
"497 299 LINE"
);
}
);
width = 632;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"163 288 LINE",
"156 232 OFFCURVE",
"134 99 OFFCURVE",
"107 -39 OFFCURVE",
"78 -179 OFFCURVE",
"63 -244 QCURVE",
"283 -244 LINE",
"308 -185 OFFCURVE",
"359 -54 OFFCURVE",
"406 77 OFFCURVE",
"445 206 OFFCURVE",
"459 264 QCURVE",
"444 288 LINE",
"444 288 LINE"
);
}
);
width = 594;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"164 238 LINE",
"156 185 OFFCURVE",
"134 60 OFFCURVE",
"107 -71 OFFCURVE",
"78 -203 OFFCURVE",
"63 -264 QCURVE",
"201 -264 LINE",
"226 -208 OFFCURVE",
"277 -85 OFFCURVE",
"324 39 OFFCURVE",
"363 161 OFFCURVE",
"377 215 QCURVE",
"362 238 LINE",
"362 238 LINE"
);
}
);
width = 512;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"187 238 LINE",
"157 8 OFFCURVE",
"81 -264 QCURVE",
"169 -264 LINE",
"216 -156 OFFCURVE",
"298 102 OFFCURVE",
"323 213 QCURVE",
"314 238 LINE",
"314 238 LINE"
);
}
);
width = 462;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"192 238 LINE",
"175 121 OFFCURVE",
"122 -115 OFFCURVE",
"77 -264 QCURVE",
"122 -264 LINE",
"165 -158 OFFCURVE",
"233 98 OFFCURVE",
"255 213 QCURVE",
"249 238 LINE",
"249 238 LINE"
);
}
);
width = 374;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"608 393 LINE",
"608 705 LINE",
"43 705 LINE",
"43 393 LINE",
"43 393 LINE"
);
}
);
width = 651;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"643 484 LINE",
"643 734 LINE",
"106 734 LINE",
"106 484 LINE",
"106 484 LINE"
);
}
);
width = 749;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"578 465 LINE",
"578 633 LINE",
"82 633 LINE",
"82 465 LINE",
"82 465 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */\0120 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 3 0 3 17 3 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"577 500 LINE",
"577 606 LINE",
"81 606 LINE",
"81 500 LINE",
"81 500 LINE"
);
}
);
width = 659;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"577 530 LINE",
"577 582 LINE",
"81 582 LINE",
"81 530 LINE",
"81 530 LINE"
);
}
);
width = 659;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = period;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"86 66 OFFCURVE",
"211 -25 OFFCURVE",
"299 -25 QCURVE SMOOTH",
"381 -25 OFFCURVE",
"504 66 OFFCURVE",
"504 166 QCURVE SMOOTH",
"504 272 OFFCURVE",
"381 358 OFFCURVE",
"299 358 QCURVE SMOOTH",
"211 358 OFFCURVE",
"86 272 OFFCURVE",
"86 166 QCURVE",
"86 166 LINE"
);
}
);
width = 591;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"117 98 OFFCURVE",
"144 34 OFFCURVE",
"192 -8 OFFCURVE",
"256 -27 OFFCURVE",
"293 -27 QCURVE SMOOTH",
"328 -27 OFFCURVE",
"391 -8 OFFCURVE",
"439 34 OFFCURVE",
"467 98 OFFCURVE",
"467 143 QCURVE SMOOTH",
"467 190 OFFCURVE",
"439 255 OFFCURVE",
"391 295 OFFCURVE",
"328 313 OFFCURVE",
"293 313 QCURVE SMOOTH",
"256 313 OFFCURVE",
"192 295 OFFCURVE",
"144 255 OFFCURVE",
"117 190 OFFCURVE",
"117 143 QCURVE",
"117 143 LINE"
);
}
);
width = 584;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"147 74 OFFCURVE",
"167 21 OFFCURVE",
"201 -13 OFFCURVE",
"247 -29 OFFCURVE",
"274 -29 QCURVE SMOOTH",
"300 -29 OFFCURVE",
"347 -13 OFFCURVE",
"381 21 OFFCURVE",
"401 74 OFFCURVE",
"401 111 QCURVE SMOOTH",
"401 149 OFFCURVE",
"381 202 OFFCURVE",
"347 235 OFFCURVE",
"300 250 OFFCURVE",
"274 250 QCURVE SMOOTH",
"247 250 OFFCURVE",
"201 235 OFFCURVE",
"167 202 OFFCURVE",
"147 149 OFFCURVE",
"147 111 QCURVE",
"147 111 LINE"
);
}
);
width = 549;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"159 -23 OFFCURVE",
"249 -23 QCURVE SMOOTH",
"339 -23 OFFCURVE",
"339 78 QCURVE SMOOTH",
"339 178 OFFCURVE",
"249 178 QCURVE SMOOTH",
"159 178 OFFCURVE",
"159 78 QCURVE",
"159 78 LINE"
);
}
);
width = 499;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"174 20 OFFCURVE",
"194 -16 OFFCURVE",
"225 -16 QCURVE SMOOTH",
"262 -16 OFFCURVE",
"280 20 OFFCURVE",
"280 47 QCURVE SMOOTH",
"280 72 OFFCURVE",
"262 111 OFFCURVE",
"225 111 QCURVE SMOOTH",
"194 111 OFFCURVE",
"174 72 OFFCURVE",
"174 47 QCURVE",
"174 47 LINE"
);
}
);
width = 450;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"555 1483 LINE",
"10 -20 LINE",
"356 -20 LINE",
"901 1483 LINE",
"901 1483 LINE"
);
}
);
width = 905;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"632 1705 LINE",
"72 -339 LINE",
"334 -339 LINE",
"894 1705 LINE",
"894 1705 LINE"
);
}
);
width = 966;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"565 1462 LINE",
"20 0 LINE",
"199 0 LINE",
"743 1462 LINE",
"743 1462 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */\0122 1 1 0 1 133 0 0 0 118 0 0 0 3 0 3 17 3 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 764;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"569 1462 LINE",
"24 0 LINE",
"139 0 LINE",
"688 1462 LINE",
"688 1462 LINE"
);
}
);
width = 710;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"575 1462 LINE",
"26 0 LINE",
"83 0 LINE",
"632 1462 LINE",
"632 1462 LINE"
);
}
);
width = 659;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1128 1085 OFFCURVE",
"872 1483 OFFCURVE",
"599 1483 QCURVE SMOOTH",
"405 1483 OFFCURVE",
"171 1303 OFFCURVE",
"71 967 OFFCURVE",
"71 729 QCURVE SMOOTH",
"71 377 OFFCURVE",
"325 -20 OFFCURVE",
"599 -20 QCURVE SMOOTH",
"794 -20 OFFCURVE",
"1027 160 OFFCURVE",
"1128 496 OFFCURVE",
"1128 729 QCURVE",
"1128 729 LINE"
);
},
{
closed = 1;
nodes = (
"464 946 OFFCURVE",
"515 1167 OFFCURVE",
"599 1167 QCURVE SMOOTH",
"681 1167 OFFCURVE",
"735 946 OFFCURVE",
"735 729 QCURVE SMOOTH",
"735 512 OFFCURVE",
"681 295 OFFCURVE",
"599 295 QCURVE SMOOTH",
"515 295 OFFCURVE",
"464 514 OFFCURVE",
"464 729 QCURVE",
"464 729 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1065 909 OFFCURVE",
"1003 1189 OFFCURVE",
"877 1383 OFFCURVE",
"689 1485 OFFCURVE",
"563 1485 QCURVE SMOOTH",
"428 1485 OFFCURVE",
"238 1382 OFFCURVE",
"118 1188 OFFCURVE",
"63 908 OFFCURVE",
"63 731 QCURVE SMOOTH",
"63 554 OFFCURVE",
"124 276 OFFCURVE",
"248 82 OFFCURVE",
"436 -20 OFFCURVE",
"563 -20 QCURVE SMOOTH",
"698 -20 OFFCURVE",
"889 82 OFFCURVE",
"1010 276 OFFCURVE",
"1065 554 OFFCURVE",
"1065 731 QCURVE",
"1065 731 LINE"
);
},
{
closed = 1;
nodes = (
"371 856 OFFCURVE",
"391 1045 OFFCURVE",
"437 1171 OFFCURVE",
"510 1235 OFFCURVE",
"563 1235 QCURVE SMOOTH",
"667 1235 OFFCURVE",
"758 982 OFFCURVE",
"758 731 QCURVE SMOOTH",
"758 479 OFFCURVE",
"667 229 OFFCURVE",
"563 229 QCURVE SMOOTH",
"457 229 OFFCURVE",
"371 481 OFFCURVE",
"371 731 QCURVE",
"371 731 LINE"
);
}
);
width = 1128;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1032 911 OFFCURVE",
"974 1191 OFFCURVE",
"858 1384 OFFCURVE",
"682 1485 OFFCURVE",
"563 1485 QCURVE SMOOTH",
"437 1485 OFFCURVE",
"260 1383 OFFCURVE",
"149 1190 OFFCURVE",
"98 910 OFFCURVE",
"98 733 QCURVE SMOOTH",
"98 556 OFFCURVE",
"155 276 OFFCURVE",
"270 82 OFFCURVE",
"445 -20 OFFCURVE",
"563 -20 QCURVE SMOOTH",
"690 -20 OFFCURVE",
"868 82 OFFCURVE",
"981 276 OFFCURVE",
"1032 556 OFFCURVE",
"1032 733 QCURVE",
"1032 733 LINE"
);
},
{
closed = 1;
nodes = (
"283 883 OFFCURVE",
"313 1107 OFFCURVE",
"379 1255 OFFCURVE",
"486 1329 OFFCURVE",
"563 1329 QCURVE SMOOTH",
"640 1329 OFFCURVE",
"748 1255 OFFCURVE",
"817 1107 OFFCURVE",
"848 883 OFFCURVE",
"848 733 QCURVE SMOOTH",
"848 582 OFFCURVE",
"817 357 OFFCURVE",
"748 209 OFFCURVE",
"640 135 OFFCURVE",
"563 135 QCURVE SMOOTH",
"486 135 OFFCURVE",
"379 210 OFFCURVE",
"313 359 OFFCURVE",
"283 583 OFFCURVE",
"283 733 QCURVE",
"283 733 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1054 963 OFFCURVE",
"960 1300 OFFCURVE",
"753 1485 OFFCURVE",
"585 1485 QCURVE SMOOTH",
"413 1485 OFFCURVE",
"206 1296 OFFCURVE",
"114 958 OFFCURVE",
"114 735 QCURVE SMOOTH",
"114 365 OFFCURVE",
"352 -20 OFFCURVE",
"583 -20 QCURVE SMOOTH",
"827 -20 OFFCURVE",
"1054 369 OFFCURVE",
"1054 735 QCURVE",
"1054 735 LINE"
);
},
{
closed = 1;
nodes = (
"231 936 OFFCURVE",
"296 1227 OFFCURVE",
"452 1382 OFFCURVE",
"585 1382 QCURVE SMOOTH",
"718 1382 OFFCURVE",
"872 1229 OFFCURVE",
"935 938 OFFCURVE",
"935 735 QCURVE SMOOTH",
"935 406 OFFCURVE",
"769 82 OFFCURVE",
"583 82 QCURVE SMOOTH",
"401 82 OFFCURVE",
"231 406 OFFCURVE",
"231 735 QCURVE",
"231 735 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1037 956 OFFCURVE",
"955 1294 OFFCURVE",
"759 1485 OFFCURVE",
"585 1485 QCURVE SMOOTH",
"417 1485 OFFCURVE",
"214 1288 OFFCURVE",
"126 950 OFFCURVE",
"126 737 QCURVE SMOOTH",
"126 352 OFFCURVE",
"366 -20 OFFCURVE",
"583 -20 QCURVE SMOOTH",
"1037 -20 OFFCURVE",
"1037 737 QCURVE",
"1037 737 LINE"
);
},
{
closed = 1;
nodes = (
"181 938 OFFCURVE",
"255 1253 OFFCURVE",
"431 1434 OFFCURVE",
"585 1434 QCURVE SMOOTH",
"742 1434 OFFCURVE",
"914 1260 OFFCURVE",
"982 946 OFFCURVE",
"982 737 QCURVE SMOOTH",
"982 379 OFFCURVE",
"794 31 OFFCURVE",
"583 31 QCURVE SMOOTH",
"384 31 OFFCURVE",
"181 377 OFFCURVE",
"181 737 QCURVE",
"181 737 LINE"
);
}
);
width = 1167;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"941 1462 LINE",
"585 1462 LINE",
"83 1053 LINE",
"288 801 LINE",
"454 938 LINE SMOOTH",
"474 956 OFFCURVE",
"519 1001 OFFCURVE",
"546 1032 QCURVE",
"544 979 OFFCURVE",
"540 850 OFFCURVE",
"540 796 QCURVE SMOOTH",
"540 0 LINE",
"941 0 LINE",
"941 0 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"817 1462 LINE",
"563 1462 LINE",
"92 1087 LINE",
"242 901 LINE",
"410 1036 LINE SMOOTH",
"425 1048 OFFCURVE",
"457 1078 OFFCURVE",
"487 1107 OFFCURVE",
"511 1131 OFFCURVE",
"516 1137 QCURVE",
"515 1104 OFFCURVE",
"512 1024 OFFCURVE",
"509 945 OFFCURVE",
"508 872 OFFCURVE",
"508 846 QCURVE SMOOTH",
"508 0 LINE",
"817 0 LINE",
"817 0 LINE"
);
}
);
width = 1128;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"711 1462 LINE",
"561 1462 LINE",
"178 1163 LINE",
"274 1040 LINE",
"422 1161 LINE SMOOTH",
"443 1179 OFFCURVE",
"473 1206 OFFCURVE",
"500 1230 OFFCURVE",
"526 1256 OFFCURVE",
"543 1274 QCURVE",
"542 1240 OFFCURVE",
"539 1151 OFFCURVE",
"536 1054 OFFCURVE",
"535 956 OFFCURVE",
"535 913 QCURVE SMOOTH",
"535 0 LINE",
"711 0 LINE",
"711 0 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"692 1462 LINE",
"593 1462 LINE",
"196 1163 LINE",
"257 1081 LINE",
"462 1237 LINE SMOOTH",
"503 1270 OFFCURVE",
"552 1311 OFFCURVE",
"581 1339 QCURVE",
"577 1288 OFFCURVE",
"577 1232 QCURVE SMOOTH",
"577 0 LINE",
"692 0 LINE",
"692 0 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"654 1462 LINE",
"607 1462 LINE",
"208 1171 LINE",
"241 1128 LINE",
"493 1315 LINE SMOOTH",
"532 1343 OFFCURVE",
"579 1380 OFFCURVE",
"603 1403 QCURVE",
"601 1362 OFFCURVE",
"601 1302 QCURVE SMOOTH",
"601 0 LINE",
"654 0 LINE",
"654 0 LINE"
);
}
);
width = 1167;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1122 326 LINE",
"569 326 LINE",
"569 336 LINE",
"676 432 LINE SMOOTH",
"815 557 OFFCURVE",
"1001 758 OFFCURVE",
"1094 956 OFFCURVE",
"1094 1083 QCURVE SMOOTH",
"1094 1198 OFFCURVE",
"973 1378 OFFCURVE",
"754 1483 OFFCURVE",
"606 1483 QCURVE SMOOTH",
"461 1483 OFFCURVE",
"258 1415 OFFCURVE",
"111 1307 OFFCURVE",
"45 1249 QCURVE",
"262 995 LINE",
"352 1073 OFFCURVE",
"491 1151 OFFCURVE",
"561 1151 QCURVE SMOOTH",
"618 1151 OFFCURVE",
"702 1094 OFFCURVE",
"702 1028 QCURVE SMOOTH",
"702 975 OFFCURVE",
"651 877 OFFCURVE",
"528 737 OFFCURVE",
"418 621 QCURVE SMOOTH",
"61 260 LINE",
"61 0 LINE",
"1122 0 LINE",
"1122 0 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1063 260 LINE",
"467 260 LINE",
"467 274 LINE",
"643 451 LINE SMOOTH",
"721 528 OFFCURVE",
"858 677 OFFCURVE",
"962 828 OFFCURVE",
"1022 985 OFFCURVE",
"1022 1071 QCURVE SMOOTH",
"1022 1166 OFFCURVE",
"959 1318 OFFCURVE",
"841 1425 OFFCURVE",
"674 1483 OFFCURVE",
"569 1483 QCURVE SMOOTH",
"481 1483 OFFCURVE",
"339 1448 OFFCURVE",
"221 1390 OFFCURVE",
"123 1315 OFFCURVE",
"78 1274 QCURVE",
"246 1075 LINE",
"326 1147 OFFCURVE",
"472 1225 OFFCURVE",
"551 1225 QCURVE SMOOTH",
"626 1225 OFFCURVE",
"715 1143 OFFCURVE",
"715 1069 QCURVE SMOOTH",
"715 1002 OFFCURVE",
"673 886 OFFCURVE",
"597 774 OFFCURVE",
"491 656 OFFCURVE",
"426 586 QCURVE SMOOTH",
"82 215 LINE",
"82 0 LINE",
"1063 0 LINE",
"1063 0 LINE"
);
}
);
width = 1128;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1008 166 LINE",
"319 166 LINE",
"319 174 LINE",
"600 473 LINE SMOOTH",
"675 554 OFFCURVE",
"804 704 OFFCURVE",
"897 853 OFFCURVE",
"950 1007 OFFCURVE",
"950 1092 QCURVE SMOOTH",
"950 1183 OFFCURVE",
"891 1328 OFFCURVE",
"783 1429 OFFCURVE",
"628 1483 OFFCURVE",
"532 1483 QCURVE SMOOTH",
"467 1483 OFFCURVE",
"349 1456 OFFCURVE",
"243 1410 OFFCURVE",
"151 1347 OFFCURVE",
"111 1311 QCURVE",
"213 1192 LINE",
"282 1252 OFFCURVE",
"435 1329 OFFCURVE",
"530 1329 QCURVE SMOOTH",
"583 1329 OFFCURVE",
"669 1297 OFFCURVE",
"732 1234 OFFCURVE",
"766 1144 OFFCURVE",
"766 1085 QCURVE SMOOTH",
"766 1009 OFFCURVE",
"722 880 OFFCURVE",
"639 752 OFFCURVE",
"521 618 OFFCURVE",
"446 537 QCURVE SMOOTH",
"96 156 LINE",
"96 0 LINE",
"1008 0 LINE",
"1008 0 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1036 106 LINE",
"260 106 LINE",
"260 113 LINE",
"626 487 LINE SMOOTH",
"733 594 OFFCURVE",
"886 782 OFFCURVE",
"970 979 OFFCURVE",
"970 1098 QCURVE SMOOTH",
"970 1274 OFFCURVE",
"745 1483 OFFCURVE",
"556 1483 QCURVE SMOOTH",
"442 1483 OFFCURVE",
"229 1401 OFFCURVE",
"139 1327 QCURVE",
"202 1245 LINE",
"286 1311 OFFCURVE",
"458 1380 OFFCURVE",
"556 1380 QCURVE SMOOTH",
"692 1380 OFFCURVE",
"851 1231 OFFCURVE",
"851 1094 QCURVE SMOOTH",
"851 987 OFFCURVE",
"778 815 OFFCURVE",
"634 643 OFFCURVE",
"530 535 QCURVE SMOOTH",
"110 98 LINE",
"110 0 LINE",
"1036 0 LINE",
"1036 0 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1005 51 LINE",
"194 51 LINE",
"194 53 LINE",
"620 504 LINE SMOOTH",
"720 608 OFFCURVE",
"861 788 OFFCURVE",
"937 981 OFFCURVE",
"937 1104 QCURVE SMOOTH",
"937 1217 OFFCURVE",
"839 1386 OFFCURVE",
"665 1483 OFFCURVE",
"548 1483 QCURVE SMOOTH",
"460 1483 OFFCURVE",
"257 1417 OFFCURVE",
"163 1341 QCURVE",
"194 1300 LINE",
"276 1366 OFFCURVE",
"460 1432 OFFCURVE",
"548 1432 QCURVE SMOOTH",
"704 1432 OFFCURVE",
"882 1257 OFFCURVE",
"882 1104 QCURVE SMOOTH",
"882 991 OFFCURVE",
"812 811 OFFCURVE",
"679 637 OFFCURVE",
"579 532 QCURVE SMOOTH",
"120 47 LINE",
"120 0 LINE",
"1005 0 LINE",
"1005 0 LINE"
);
}
);
width = 1167;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1073 1303 OFFCURVE",
"812 1483 OFFCURVE",
"587 1483 QCURVE SMOOTH",
"397 1483 OFFCURVE",
"161 1397 OFFCURVE",
"71 1335 QCURVE",
"235 1071 LINE",
"257 1085 OFFCURVE",
"343 1128 OFFCURVE",
"458 1165 OFFCURVE",
"526 1165 QCURVE SMOOTH",
"599 1165 OFFCURVE",
"690 1110 OFFCURVE",
"690 1051 QCURVE SMOOTH",
"690 983 OFFCURVE",
"556 897 OFFCURVE",
"388 897 QCURVE SMOOTH",
"296 897 LINE",
"296 600 LINE",
"386 600 LINE SMOOTH",
"511 600 OFFCURVE",
"647 561 OFFCURVE",
"698 492 OFFCURVE",
"698 442 QCURVE SMOOTH",
"698 373 OFFCURVE",
"593 291 OFFCURVE",
"448 291 QCURVE SMOOTH",
"364 291 OFFCURVE",
"163 338 OFFCURVE",
"69 387 QCURVE",
"69 59 LINE",
"163 23 OFFCURVE",
"364 -20 OFFCURVE",
"505 -20 QCURVE SMOOTH",
"716 -20 OFFCURVE",
"987 98 OFFCURVE",
"1116 299 OFFCURVE",
"1116 418 QCURVE SMOOTH",
"1116 573 OFFCURVE",
"925 741 OFFCURVE",
"749 764 QCURVE",
"749 770 LINE",
"835 795 OFFCURVE",
"982 891 OFFCURVE",
"1073 1040 OFFCURVE",
"1073 1145 QCURVE",
"1073 1145 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1006 1218 OFFCURVE",
"937 1347 OFFCURVE",
"811 1436 OFFCURVE",
"634 1483 OFFCURVE",
"526 1483 QCURVE SMOOTH",
"450 1483 OFFCURVE",
"316 1461 OFFCURVE",
"200 1422 OFFCURVE",
"101 1370 OFFCURVE",
"59 1339 QCURVE",
"215 1133 LINE",
"239 1150 OFFCURVE",
"298 1185 OFFCURVE",
"369 1214 OFFCURVE",
"452 1233 OFFCURVE",
"500 1233 QCURVE SMOOTH",
"605 1233 OFFCURVE",
"702 1145 OFFCURVE",
"702 1067 QCURVE SMOOTH",
"702 1024 OFFCURVE",
"672 948 OFFCURVE",
"599 891 OFFCURVE",
"477 858 OFFCURVE",
"385 858 QCURVE SMOOTH",
"283 858 LINE",
"283 641 LINE",
"387 641 LINE SMOOTH",
"485 641 OFFCURVE",
"619 613 OFFCURVE",
"702 562 OFFCURVE",
"739 489 OFFCURVE",
"739 444 QCURVE SMOOTH",
"739 396 OFFCURVE",
"710 315 OFFCURVE",
"642 257 OFFCURVE",
"528 225 OFFCURVE",
"442 225 QCURVE SMOOTH",
"399 225 OFFCURVE",
"302 237 OFFCURVE",
"202 262 OFFCURVE",
"102 298 OFFCURVE",
"57 322 QCURVE",
"57 59 LINE",
"147 19 OFFCURVE",
"355 -20 OFFCURVE",
"473 -20 QCURVE SMOOTH",
"620 -20 OFFCURVE",
"837 47 OFFCURVE",
"980 167 OFFCURVE",
"1049 330 OFFCURVE",
"1049 426 QCURVE SMOOTH",
"1049 571 OFFCURVE",
"867 742 OFFCURVE",
"690 764 QCURVE",
"690 770 LINE",
"757 786 OFFCURVE",
"872 847 OFFCURVE",
"957 938 OFFCURVE",
"1006 1059 OFFCURVE",
"1006 1135 QCURVE",
"1006 1135 LINE"
);
}
);
width = 1128;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"961 1199 OFFCURVE",
"905 1332 OFFCURVE",
"795 1429 OFFCURVE",
"632 1483 OFFCURVE",
"524 1483 QCURVE SMOOTH",
"454 1483 OFFCURVE",
"329 1459 OFFCURVE",
"219 1418 OFFCURVE",
"126 1364 OFFCURVE",
"88 1333 QCURVE",
"180 1208 LINE",
"254 1262 OFFCURVE",
"417 1329 OFFCURVE",
"524 1329 QCURVE SMOOTH",
"580 1329 OFFCURVE",
"672 1299 OFFCURVE",
"738 1242 OFFCURVE",
"774 1160 OFFCURVE",
"774 1108 QCURVE SMOOTH",
"774 1047 OFFCURVE",
"730 945 OFFCURVE",
"645 871 OFFCURVE",
"519 831 OFFCURVE",
"438 831 QCURVE SMOOTH",
"305 831 LINE",
"305 680 LINE",
"438 680 LINE SMOOTH",
"527 680 OFFCURVE",
"668 650 OFFCURVE",
"766 587 OFFCURVE",
"819 490 OFFCURVE",
"819 422 QCURVE SMOOTH",
"819 355 OFFCURVE",
"778 247 OFFCURVE",
"691 173 OFFCURVE",
"557 133 OFFCURVE",
"465 133 QCURVE SMOOTH",
"372 133 OFFCURVE",
"169 183 OFFCURVE",
"82 229 QCURVE",
"82 59 LINE",
"167 14 OFFCURVE",
"360 -20 OFFCURVE",
"469 -20 QCURVE SMOOTH",
"607 -20 OFFCURVE",
"809 44 OFFCURVE",
"941 160 OFFCURVE",
"1006 320 OFFCURVE",
"1006 416 QCURVE SMOOTH",
"1006 561 OFFCURVE",
"822 742 OFFCURVE",
"645 764 QCURVE",
"645 770 LINE",
"716 782 OFFCURVE",
"832 839 OFFCURVE",
"915 927 OFFCURVE",
"961 1047 OFFCURVE",
"961 1120 QCURVE",
"961 1120 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"987 1288 OFFCURVE",
"762 1483 OFFCURVE",
"557 1483 QCURVE SMOOTH",
"416 1483 OFFCURVE",
"190 1397 OFFCURVE",
"106 1331 QCURVE",
"166 1249 LINE",
"256 1311 OFFCURVE",
"442 1380 OFFCURVE",
"559 1380 QCURVE SMOOTH",
"698 1380 OFFCURVE",
"866 1247 OFFCURVE",
"866 1118 QCURVE SMOOTH",
"866 967 OFFCURVE",
"645 809 OFFCURVE",
"475 809 QCURVE SMOOTH",
"317 809 LINE",
"317 707 LINE",
"473 707 LINE SMOOTH",
"672 707 OFFCURVE",
"909 569 OFFCURVE",
"909 410 QCURVE SMOOTH",
"909 258 OFFCURVE",
"708 80 OFFCURVE",
"500 80 QCURVE SMOOTH",
"395 80 OFFCURVE",
"178 133 OFFCURVE",
"94 174 QCURVE",
"94 61 LINE",
"178 20 OFFCURVE",
"381 -20 OFFCURVE",
"500 -20 QCURVE SMOOTH",
"766 -20 OFFCURVE",
"1032 217 OFFCURVE",
"1032 406 QCURVE SMOOTH",
"1032 559 OFFCURVE",
"852 741 OFFCURVE",
"680 762 QCURVE",
"680 770 LINE",
"815 795 OFFCURVE",
"987 979 OFFCURVE",
"987 1124 QCURVE",
"987 1124 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"962 1298 OFFCURVE",
"739 1483 OFFCURVE",
"559 1483 QCURVE SMOOTH",
"424 1483 OFFCURVE",
"202 1401 OFFCURVE",
"112 1331 QCURVE",
"141 1288 LINE",
"241 1360 OFFCURVE",
"444 1432 OFFCURVE",
"559 1432 QCURVE SMOOTH",
"717 1432 OFFCURVE",
"907 1282 OFFCURVE",
"907 1128 QCURVE SMOOTH",
"907 1010 OFFCURVE",
"788 858 OFFCURVE",
"598 786 OFFCURVE",
"489 786 QCURVE SMOOTH",
"319 786 LINE",
"319 735 LINE",
"489 735 LINE SMOOTH",
"626 735 OFFCURVE",
"833 668 OFFCURVE",
"952 520 OFFCURVE",
"952 397 QCURVE SMOOTH",
"952 229 OFFCURVE",
"727 31 OFFCURVE",
"506 31 QCURVE SMOOTH",
"393 31 OFFCURVE",
"172 84 OFFCURVE",
"96 123 QCURVE",
"96 66 LINE",
"174 29 OFFCURVE",
"385 -20 OFFCURVE",
"506 -20 QCURVE SMOOTH",
"751 -20 OFFCURVE",
"1007 215 OFFCURVE",
"1007 397 QCURVE SMOOTH",
"1007 561 OFFCURVE",
"821 741 OFFCURVE",
"651 764 QCURVE",
"651 768 LINE",
"784 791 OFFCURVE",
"962 983 OFFCURVE",
"962 1128 QCURVE",
"962 1128 LINE"
);
}
);
width = 1167;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"376 578 LINE",
"538 819 LINE SMOOTH",
"564 860 OFFCURVE",
"595 918 OFFCURVE",
"616 963 QCURVE",
"626 963 LINE",
"626 961 OFFCURVE",
"622 879 OFFCURVE",
"618 778 OFFCURVE",
"618 748 QCURVE SMOOTH",
"618 578 LINE",
"618 578 LINE"
);
},
{
closed = 1;
nodes = (
"1169 578 LINE",
"1007 578 LINE",
"1007 1462 LINE",
"642 1462 LINE",
"34 573 LINE",
"34 283 LINE",
"618 283 LINE",
"618 0 LINE",
"1007 0 LINE",
"1007 283 LINE",
"1169 283 LINE",
"1169 283 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"276 543 LINE",
"520 913 LINE SMOOTH",
"549 960 OFFCURVE",
"594 1054 OFFCURVE",
"612 1096 QCURVE",
"621 1096 LINE",
"620 1086 OFFCURVE",
"617 1041 OFFCURVE",
"614 981 OFFCURVE",
"611 915 OFFCURVE",
"609 853 OFFCURVE",
"608 804 OFFCURVE",
"608 791 QCURVE SMOOTH",
"608 543 LINE",
"608 543 LINE"
);
},
{
closed = 1;
nodes = (
"1085 543 LINE",
"909 543 LINE",
"909 1462 LINE",
"625 1462 LINE",
"4 518 LINE",
"4 303 LINE",
"608 303 LINE",
"608 0 LINE",
"909 0 LINE",
"909 303 LINE",
"1085 303 LINE",
"1085 303 LINE"
);
}
);
width = 1128;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"201 494 LINE",
"612 1102 LINE SMOOTH",
"623 1118 OFFCURVE",
"649 1164 OFFCURVE",
"674 1213 OFFCURVE",
"695 1262 OFFCURVE",
"702 1282 QCURVE",
"711 1282 LINE",
"710 1248 OFFCURVE",
"705 1146 OFFCURVE",
"701 1029 OFFCURVE",
"698 906 OFFCURVE",
"698 850 QCURVE SMOOTH",
"698 494 LINE",
"698 494 LINE"
);
},
{
closed = 1;
nodes = (
"1087 494 LINE",
"874 494 LINE",
"874 1470 LINE",
"686 1470 LINE",
"23 487 LINE",
"23 328 LINE",
"698 328 LINE",
"698 0 LINE",
"874 0 LINE",
"874 328 LINE",
"1087 328 LINE",
"1087 328 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"170 471 LINE",
"672 1165 LINE SMOOTH",
"704 1212 OFFCURVE",
"754 1294 OFFCURVE",
"782 1341 QCURVE",
"786 1341 LINE",
"784 1270 OFFCURVE",
"782 1133 OFFCURVE",
"782 1014 QCURVE SMOOTH",
"782 471 LINE",
"782 471 LINE"
);
},
{
closed = 1;
nodes = (
"1139 471 LINE",
"895 471 LINE",
"895 1470 LINE",
"774 1470 LINE",
"47 459 LINE",
"47 365 LINE",
"782 365 LINE",
"782 0 LINE",
"895 0 LINE",
"895 365 LINE",
"1139 365 LINE",
"1139 365 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"123 449 LINE",
"686 1212 LINE SMOOTH",
"733 1276 OFFCURVE",
"782 1350 OFFCURVE",
"817 1405 QCURVE",
"821 1405 LINE",
"819 1352 OFFCURVE",
"819 1311 QCURVE SMOOTH",
"819 449 LINE",
"819 449 LINE"
);
},
{
closed = 1;
nodes = (
"1147 449 LINE",
"872 449 LINE",
"872 1470 LINE",
"815 1470 LINE",
"51 434 LINE",
"51 397 LINE",
"819 397 LINE",
"819 0 LINE",
"872 0 LINE",
"872 397 LINE",
"1147 397 LINE",
"1147 397 LINE"
);
}
);
width = 1167;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"592 958 OFFCURVE",
"524 946 OFFCURVE",
"491 940 QCURVE",
"510 1133 LINE",
"1007 1133 LINE",
"1007 1462 LINE",
"174 1462 LINE",
"119 690 LINE",
"264 618 LINE",
"303 631 OFFCURVE",
"409 653 OFFCURVE",
"465 653 QCURVE SMOOTH",
"586 653 OFFCURVE",
"706 557 OFFCURVE",
"706 475 QCURVE SMOOTH",
"706 385 OFFCURVE",
"588 291 OFFCURVE",
"479 291 QCURVE SMOOTH",
"389 291 OFFCURVE",
"172 348 OFFCURVE",
"94 383 QCURVE",
"94 59 LINE",
"258 -20 OFFCURVE",
"512 -20 QCURVE SMOOTH",
"811 -20 OFFCURVE",
"1106 242 OFFCURVE",
"1106 487 QCURVE SMOOTH",
"1106 639 OFFCURVE",
"987 848 OFFCURVE",
"786 958 OFFCURVE",
"663 958 QCURVE",
"663 958 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"531 934 OFFCURVE",
"446 920 OFFCURVE",
"414 913 QCURVE",
"438 1200 LINE",
"942 1200 LINE",
"942 1462 LINE",
"170 1462 LINE",
"115 717 LINE",
"238 651 LINE",
"257 657 OFFCURVE",
"309 668 OFFCURVE",
"366 678 OFFCURVE",
"425 684 OFFCURVE",
"451 684 QCURVE SMOOTH",
"594 684 OFFCURVE",
"731 571 OFFCURVE",
"731 463 QCURVE SMOOTH",
"731 342 OFFCURVE",
"591 231 OFFCURVE",
"457 231 QCURVE SMOOTH",
"412 231 OFFCURVE",
"312 246 OFFCURVE",
"213 271 OFFCURVE",
"121 306 OFFCURVE",
"86 326 QCURVE",
"86 59 LINE",
"122 39 OFFCURVE",
"211 9 OFFCURVE",
"310 -10 OFFCURVE",
"418 -20 OFFCURVE",
"473 -20 QCURVE SMOOTH",
"611 -20 OFFCURVE",
"824 50 OFFCURVE",
"968 181 OFFCURVE",
"1042 370 OFFCURVE",
"1042 489 QCURVE SMOOTH",
"1042 597 OFFCURVE",
"974 764 OFFCURVE",
"854 876 OFFCURVE",
"692 934 OFFCURVE",
"598 934 QCURVE",
"598 934 LINE"
);
}
);
width = 1128;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"473 897 OFFCURVE",
"368 883 OFFCURVE",
"336 877 QCURVE",
"375 1296 LINE",
"907 1296 LINE",
"907 1462 LINE",
"217 1462 LINE",
"162 774 LINE",
"252 717 LINE",
"273 721 OFFCURVE",
"330 730 OFFCURVE",
"393 738 OFFCURVE",
"456 743 OFFCURVE",
"483 743 QCURVE SMOOTH",
"651 743 OFFCURVE",
"827 592 OFFCURVE",
"827 449 QCURVE SMOOTH",
"827 368 OFFCURVE",
"781 250 OFFCURVE",
"695 172 OFFCURVE",
"571 135 OFFCURVE",
"492 135 QCURVE SMOOTH",
"450 135 OFFCURVE",
"351 148 OFFCURVE",
"253 172 OFFCURVE",
"164 208 OFFCURVE",
"131 231 QCURVE",
"131 59 LINE",
"164 39 OFFCURVE",
"246 9 OFFCURVE",
"337 -10 OFFCURVE",
"436 -20 OFFCURVE",
"487 -20 QCURVE SMOOTH",
"615 -20 OFFCURVE",
"812 47 OFFCURVE",
"946 173 OFFCURVE",
"1014 355 OFFCURVE",
"1014 469 QCURVE SMOOTH",
"1014 574 OFFCURVE",
"942 734 OFFCURVE",
"815 842 OFFCURVE",
"644 897 OFFCURVE",
"545 897 QCURVE",
"545 897 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"473 885 OFFCURVE",
"342 860 OFFCURVE",
"299 852 QCURVE",
"340 1356 LINE",
"950 1356 LINE",
"950 1462 LINE",
"241 1462 LINE",
"182 788 LINE",
"245 745 LINE",
"307 762 OFFCURVE",
"454 782 OFFCURVE",
"532 782 QCURVE SMOOTH",
"731 782 OFFCURVE",
"925 606 OFFCURVE",
"925 446 QCURVE SMOOTH",
"925 268 OFFCURVE",
"700 82 OFFCURVE",
"514 82 QCURVE SMOOTH",
"409 82 OFFCURVE",
"211 135 OFFCURVE",
"139 178 QCURVE",
"139 61 LINE",
"207 25 OFFCURVE",
"397 -20 OFFCURVE",
"512 -20 QCURVE SMOOTH",
"757 -20 OFFCURVE",
"1044 233 OFFCURVE",
"1044 455 QCURVE SMOOTH",
"1044 659 OFFCURVE",
"784 885 OFFCURVE",
"561 885 QCURVE",
"561 885 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"456 872 OFFCURVE",
"309 844 OFFCURVE",
"257 831 QCURVE",
"309 1411 LINE",
"946 1411 LINE",
"946 1462 LINE",
"262 1462 LINE",
"200 805 LINE",
"239 774 LINE",
"315 795 OFFCURVE",
"466 821 OFFCURVE",
"561 821 QCURVE SMOOTH",
"765 821 OFFCURVE",
"978 618 OFFCURVE",
"978 444 QCURVE SMOOTH",
"978 250 OFFCURVE",
"726 31 OFFCURVE",
"518 31 QCURVE SMOOTH",
"405 31 OFFCURVE",
"221 86 OFFCURVE",
"151 127 QCURVE",
"151 66 LINE",
"217 29 OFFCURVE",
"401 -20 OFFCURVE",
"518 -20 QCURVE SMOOTH",
"671 -20 OFFCURVE",
"905 92 OFFCURVE",
"1034 299 OFFCURVE",
"1034 444 QCURVE SMOOTH",
"1034 651 OFFCURVE",
"780 872 OFFCURVE",
"561 872 QCURVE",
"561 872 LINE"
);
}
);
width = 1167;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"69 399 OFFCURVE",
"214 117 OFFCURVE",
"462 -20 OFFCURVE",
"620 -20 QCURVE SMOOTH",
"860 -20 OFFCURVE",
"1136 254 OFFCURVE",
"1136 500 QCURVE SMOOTH",
"1136 727 OFFCURVE",
"919 975 OFFCURVE",
"726 975 QCURVE SMOOTH",
"610 975 OFFCURVE",
"477 877 OFFCURVE",
"438 805 QCURVE",
"425 805 LINE",
"431 922 OFFCURVE",
"507 1087 OFFCURVE",
"679 1176 OFFCURVE",
"827 1176 QCURVE SMOOTH",
"900 1176 OFFCURVE",
"1003 1165 OFFCURVE",
"1044 1157 QCURVE",
"1044 1466 LINE",
"1003 1473 OFFCURVE",
"878 1483 OFFCURVE",
"835 1483 QCURVE SMOOTH",
"640 1483 OFFCURVE",
"372 1384 OFFCURVE",
"200 1214 OFFCURVE",
"106 993 OFFCURVE",
"69 743 OFFCURVE",
"69 618 QCURVE",
"69 618 LINE"
);
},
{
closed = 1;
nodes = (
"561 293 OFFCURVE",
"493 358 OFFCURVE",
"462 459 OFFCURVE",
"462 512 QCURVE SMOOTH",
"462 569 OFFCURVE",
"542 670 OFFCURVE",
"616 670 QCURVE SMOOTH",
"687 670 OFFCURVE",
"753 573 OFFCURVE",
"753 492 QCURVE SMOOTH",
"753 389 OFFCURVE",
"675 293 OFFCURVE",
"612 293 QCURVE",
"612 293 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"76 456 OFFCURVE",
"155 215 OFFCURVE",
"294 57 OFFCURVE",
"482 -20 OFFCURVE",
"590 -20 QCURVE SMOOTH",
"700 -20 OFFCURVE",
"876 49 OFFCURVE",
"1000 180 OFFCURVE",
"1067 368 OFFCURVE",
"1067 487 QCURVE SMOOTH",
"1067 598 OFFCURVE",
"1011 770 OFFCURVE",
"906 888 OFFCURVE",
"754 950 OFFCURVE",
"659 950 QCURVE SMOOTH",
"600 950 OFFCURVE",
"505 924 OFFCURVE",
"429 879 OFFCURVE",
"372 816 OFFCURVE",
"352 780 QCURVE",
"340 780 LINE",
"345 882 OFFCURVE",
"388 1050 OFFCURVE",
"490 1170 OFFCURVE",
"664 1237 OFFCURVE",
"799 1237 QCURVE SMOOTH",
"842 1237 OFFCURVE",
"927 1226 OFFCURVE",
"965 1217 QCURVE",
"965 1464 LINE",
"946 1468 OFFCURVE",
"898 1474 OFFCURVE",
"847 1477 OFFCURVE",
"797 1479 OFFCURVE",
"776 1479 QCURVE SMOOTH",
"631 1479 OFFCURVE",
"414 1410 OFFCURVE",
"259 1289 OFFCURVE",
"158 1125 OFFCURVE",
"99 934 OFFCURVE",
"76 726 OFFCURVE",
"76 621 QCURVE",
"76 621 LINE"
);
},
{
closed = 1;
nodes = (
"534 227 OFFCURVE",
"459 277 OFFCURVE",
"408 358 OFFCURVE",
"383 459 OFFCURVE",
"383 510 QCURVE SMOOTH",
"383 547 OFFCURVE",
"412 619 OFFCURVE",
"466 677 OFFCURVE",
"542 713 OFFCURVE",
"588 713 QCURVE SMOOTH",
"679 713 OFFCURVE",
"768 590 OFFCURVE",
"768 483 QCURVE SMOOTH",
"768 417 OFFCURVE",
"741 321 OFFCURVE",
"692 258 OFFCURVE",
"625 227 OFFCURVE",
"584 227 QCURVE",
"584 227 LINE"
);
}
);
width = 1128;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"113 460 OFFCURVE",
"187 218 OFFCURVE",
"315 58 OFFCURVE",
"490 -20 OFFCURVE",
"590 -20 QCURVE SMOOTH",
"692 -20 OFFCURVE",
"856 48 OFFCURVE",
"972 175 OFFCURVE",
"1034 357 OFFCURVE",
"1034 471 QCURVE SMOOTH",
"1034 577 OFFCURVE",
"975 742 OFFCURVE",
"867 856 OFFCURVE",
"713 915 OFFCURVE",
"618 915 QCURVE SMOOTH",
"559 915 OFFCURVE",
"464 889 OFFCURVE",
"388 844 OFFCURVE",
"331 781 OFFCURVE",
"311 745 QCURVE",
"299 745 LINE",
"302 825 OFFCURVE",
"322 973 OFFCURVE",
"364 1104 OFFCURVE",
"431 1212 OFFCURVE",
"531 1290 OFFCURVE",
"668 1333 OFFCURVE",
"758 1333 QCURVE SMOOTH",
"801 1333 OFFCURVE",
"889 1321 OFFCURVE",
"924 1309 QCURVE",
"924 1464 LINE",
"907 1469 OFFCURVE",
"864 1476 OFFCURVE",
"817 1481 OFFCURVE",
"771 1483 OFFCURVE",
"752 1483 QCURVE SMOOTH",
"619 1483 OFFCURVE",
"421 1414 OFFCURVE",
"279 1293 OFFCURVE",
"187 1129 OFFCURVE",
"134 938 OFFCURVE",
"113 730 OFFCURVE",
"113 625 QCURVE",
"113 625 LINE"
);
},
{
closed = 1;
nodes = (
"515 133 OFFCURVE",
"405 200 OFFCURVE",
"332 306 OFFCURVE",
"295 439 OFFCURVE",
"295 506 QCURVE SMOOTH",
"295 554 OFFCURVE",
"338 650 OFFCURVE",
"416 725 OFFCURVE",
"527 772 OFFCURVE",
"594 772 QCURVE SMOOTH",
"660 772 OFFCURVE",
"759 730 OFFCURVE",
"825 652 OFFCURVE",
"858 541 OFFCURVE",
"858 471 QCURVE SMOOTH",
"858 384 OFFCURVE",
"819 257 OFFCURVE",
"747 174 OFFCURVE",
"648 133 OFFCURVE",
"588 133 QCURVE",
"588 133 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"126 434 OFFCURVE",
"239 145 OFFCURVE",
"454 -20 OFFCURVE",
"609 -20 QCURVE SMOOTH",
"822 -20 OFFCURVE",
"1062 246 OFFCURVE",
"1062 467 QCURVE SMOOTH",
"1062 672 OFFCURVE",
"833 907 OFFCURVE",
"636 907 QCURVE SMOOTH",
"480 907 OFFCURVE",
"292 780 OFFCURVE",
"249 700 QCURVE",
"241 700 LINE",
"249 1028 OFFCURVE",
"505 1384 OFFCURVE",
"769 1384 QCURVE SMOOTH",
"822 1384 OFFCURVE",
"921 1372 OFFCURVE",
"957 1358 QCURVE",
"957 1462 LINE",
"878 1485 OFFCURVE",
"765 1485 QCURVE SMOOTH",
"540 1485 OFFCURVE",
"259 1272 OFFCURVE",
"126 885 OFFCURVE",
"126 623 QCURVE",
"126 623 LINE"
);
},
{
closed = 1;
nodes = (
"507 80 OFFCURVE",
"370 168 OFFCURVE",
"286 303 OFFCURVE",
"249 453 OFFCURVE",
"249 516 QCURVE SMOOTH",
"249 584 OFFCURVE",
"339 721 OFFCURVE",
"505 811 OFFCURVE",
"618 811 QCURVE SMOOTH",
"781 811 OFFCURVE",
"945 627 OFFCURVE",
"945 467 QCURVE SMOOTH",
"945 279 OFFCURVE",
"765 80 OFFCURVE",
"609 80 QCURVE",
"609 80 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"139 504 OFFCURVE",
"190 274 OFFCURVE",
"301 90 OFFCURVE",
"483 -20 OFFCURVE",
"612 -20 QCURVE SMOOTH",
"751 -20 OFFCURVE",
"948 102 OFFCURVE",
"1050 319 OFFCURVE",
"1050 461 QCURVE SMOOTH",
"1050 659 OFFCURVE",
"825 899 OFFCURVE",
"622 899 QCURVE SMOOTH",
"506 899 OFFCURVE",
"332 827 OFFCURVE",
"221 717 OFFCURVE",
"194 659 QCURVE",
"190 659 LINE",
"196 938 OFFCURVE",
"342 1278 OFFCURVE",
"590 1436 OFFCURVE",
"751 1436 QCURVE SMOOTH",
"813 1436 OFFCURVE",
"915 1419 OFFCURVE",
"952 1405 QCURVE",
"952 1460 LINE",
"911 1473 OFFCURVE",
"813 1487 OFFCURVE",
"751 1487 QCURVE SMOOTH",
"577 1487 OFFCURVE",
"299 1315 OFFCURVE",
"139 934 OFFCURVE",
"139 621 QCURVE",
"139 621 LINE"
);
},
{
closed = 1;
nodes = (
"487 31 OFFCURVE",
"327 137 OFFCURVE",
"239 299 OFFCURVE",
"205 467 OFFCURVE",
"205 528 QCURVE SMOOTH",
"205 598 OFFCURVE",
"305 745 OFFCURVE",
"493 848 OFFCURVE",
"622 848 QCURVE SMOOTH",
"811 848 OFFCURVE",
"995 641 OFFCURVE",
"995 461 QCURVE SMOOTH",
"995 262 OFFCURVE",
"798 31 OFFCURVE",
"612 31 QCURVE",
"612 31 LINE"
);
}
);
width = 1167;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"618 0 LINE",
"1132 1229 LINE",
"1132 1462 LINE",
"77 1462 LINE",
"77 1135 LINE",
"710 1135 LINE",
"208 0 LINE",
"208 0 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"530 0 LINE",
"1063 1266 LINE",
"1063 1460 LINE",
"55 1460 LINE",
"55 1200 LINE",
"727 1200 LINE",
"207 0 LINE",
"207 0 LINE"
);
}
);
width = 1128;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"475 0 LINE",
"1030 1317 LINE",
"1030 1462 LINE",
"90 1462 LINE",
"90 1296 LINE",
"844 1296 LINE",
"281 0 LINE",
"281 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */\0125 1 0 1 1 76 3 1 2 0 2 134 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 0 0 0 6 0 6 17 17 4 6 24 \012CALL[ ]	/* CallFunction */";
};
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"454 0 LINE",
"1056 1376 LINE",
"1056 1462 LINE",
"104 1462 LINE",
"104 1356 LINE",
"929 1356 LINE",
"327 0 LINE",
"327 0 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"433 0 LINE",
"1044 1427 LINE",
"1044 1462 LINE",
"118 1462 LINE",
"118 1411 LINE",
"982 1411 LINE",
"374 0 LINE",
"374 0 LINE"
);
}
);
width = 1167;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"458 1483 OFFCURVE",
"237 1403 OFFCURVE",
"110 1245 OFFCURVE",
"110 1128 QCURVE SMOOTH",
"110 1001 OFFCURVE",
"241 825 OFFCURVE",
"333 764 QCURVE",
"219 705 OFFCURVE",
"67 537 OFFCURVE",
"67 385 QCURVE SMOOTH",
"67 205 OFFCURVE",
"321 -20 OFFCURVE",
"599 -20 QCURVE SMOOTH",
"784 -20 OFFCURVE",
"1019 86 OFFCURVE",
"1134 270 OFFCURVE",
"1134 389 QCURVE SMOOTH",
"1134 485 OFFCURVE",
"1044 627 OFFCURVE",
"909 731 OFFCURVE",
"839 770 QCURVE",
"950 823 OFFCURVE",
"1091 995 OFFCURVE",
"1091 1126 QCURVE SMOOTH",
"1091 1307 OFFCURVE",
"821 1483 OFFCURVE",
"604 1483 QCURVE",
"604 1483 LINE"
);
},
{
closed = 1;
nodes = (
"649 1198 OFFCURVE",
"720 1141 OFFCURVE",
"720 1092 QCURVE SMOOTH",
"720 1032 OFFCURVE",
"640 965 OFFCURVE",
"597 940 QCURVE",
"548 967 OFFCURVE",
"481 1044 OFFCURVE",
"481 1092 QCURVE SMOOTH",
"481 1141 OFFCURVE",
"552 1198 OFFCURVE",
"602 1198 QCURVE",
"602 1198 LINE"
);
},
{
closed = 1;
nodes = (
"429 467 OFFCURVE",
"528 561 OFFCURVE",
"595 596 QCURVE",
"622 580 LINE SMOOTH",
"647 565 OFFCURVE",
"718 512 OFFCURVE",
"772 438 OFFCURVE",
"772 393 QCURVE SMOOTH",
"772 334 OFFCURVE",
"685 264 OFFCURVE",
"595 264 QCURVE SMOOTH",
"518 264 OFFCURVE",
"429 340 OFFCURVE",
"429 401 QCURVE",
"429 401 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"476 1481 OFFCURVE",
"314 1437 OFFCURVE",
"190 1348 OFFCURVE",
"117 1217 OFFCURVE",
"117 1130 QCURVE SMOOTH",
"117 1065 OFFCURVE",
"154 957 OFFCURVE",
"217 868 OFFCURVE",
"303 795 OFFCURVE",
"352 764 QCURVE",
"294 736 OFFCURVE",
"192 662 OFFCURVE",
"116 566 OFFCURVE",
"72 446 OFFCURVE",
"72 371 QCURVE SMOOTH",
"72 280 OFFCURVE",
"137 134 OFFCURVE",
"263 34 OFFCURVE",
"447 -20 OFFCURVE",
"565 -20 QCURVE SMOOTH",
"674 -20 OFFCURVE",
"855 36 OFFCURVE",
"985 140 OFFCURVE",
"1057 288 OFFCURVE",
"1057 379 QCURVE SMOOTH",
"1057 452 OFFCURVE",
"1005 570 OFFCURVE",
"919 665 OFFCURVE",
"808 741 OFFCURVE",
"750 772 QCURVE",
"806 800 OFFCURVE",
"902 868 OFFCURVE",
"972 955 OFFCURVE",
"1012 1062 OFFCURVE",
"1012 1128 QCURVE SMOOTH",
"1012 1217 OFFCURVE",
"940 1349 OFFCURVE",
"818 1437 OFFCURVE",
"656 1481 OFFCURVE",
"565 1481 QCURVE",
"565 1481 LINE"
);
},
{
closed = 1;
nodes = (
"358 431 OFFCURVE",
"386 503 OFFCURVE",
"437 564 OFFCURVE",
"509 615 OFFCURVE",
"553 637 QCURVE",
"575 623 LINE SMOOTH",
"610 601 OFFCURVE",
"680 553 OFFCURVE",
"735 496 OFFCURVE",
"770 429 OFFCURVE",
"770 387 QCURVE SMOOTH",
"770 306 OFFCURVE",
"666 207 OFFCURVE",
"561 207 QCURVE SMOOTH",
"511 207 OFFCURVE",
"435 234 OFFCURVE",
"384 282 OFFCURVE",
"358 349 OFFCURVE",
"358 389 QCURVE",
"358 389 LINE"
);
},
{
closed = 1;
nodes = (
"597 1255 OFFCURVE",
"655 1235 OFFCURVE",
"697 1197 OFFCURVE",
"721 1141 OFFCURVE",
"721 1106 QCURVE SMOOTH",
"721 1066 OFFCURVE",
"695 1004 OFFCURVE",
"652 955 OFFCURVE",
"596 917 OFFCURVE",
"565 901 QCURVE",
"533 919 OFFCURVE",
"476 956 OFFCURVE",
"433 1003 OFFCURVE",
"408 1064 OFFCURVE",
"408 1106 QCURVE SMOOTH",
"408 1141 OFFCURVE",
"432 1197 OFFCURVE",
"473 1235 OFFCURVE",
"530 1255 OFFCURVE",
"563 1255 QCURVE",
"563 1255 LINE"
);
}
);
width = 1128;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"484 1485 OFFCURVE",
"335 1441 OFFCURVE",
"221 1353 OFFCURVE",
"154 1222 OFFCURVE",
"154 1135 QCURVE SMOOTH",
"154 1069 OFFCURVE",
"191 960 OFFCURVE",
"254 870 OFFCURVE",
"340 797 OFFCURVE",
"389 766 QCURVE",
"331 738 OFFCURVE",
"227 664 OFFCURVE",
"151 568 OFFCURVE",
"106 448 OFFCURVE",
"106 373 QCURVE SMOOTH",
"106 281 OFFCURVE",
"167 135 OFFCURVE",
"284 34 OFFCURVE",
"455 -20 OFFCURVE",
"565 -20 QCURVE SMOOTH",
"667 -20 OFFCURVE",
"836 36 OFFCURVE",
"957 140 OFFCURVE",
"1024 289 OFFCURVE",
"1024 381 QCURVE SMOOTH",
"1024 454 OFFCURVE",
"971 572 OFFCURVE",
"884 667 OFFCURVE",
"773 743 OFFCURVE",
"715 774 QCURVE",
"771 802 OFFCURVE",
"867 871 OFFCURVE",
"937 958 OFFCURVE",
"977 1066 OFFCURVE",
"977 1133 QCURVE SMOOTH",
"977 1221 OFFCURVE",
"911 1353 OFFCURVE",
"798 1441 OFFCURVE",
"649 1485 OFFCURVE",
"565 1485 QCURVE",
"565 1485 LINE"
);
},
{
closed = 1;
nodes = (
"285 481 OFFCURVE",
"413 636 OFFCURVE",
"539 696 QCURVE",
"569 682 LINE SMOOTH",
"632 651 OFFCURVE",
"734 587 OFFCURVE",
"807 515 OFFCURVE",
"846 431 OFFCURVE",
"846 379 QCURVE SMOOTH",
"846 323 OFFCURVE",
"810 231 OFFCURVE",
"738 166 OFFCURVE",
"631 131 OFFCURVE",
"561 131 QCURVE SMOOTH",
"489 131 OFFCURVE",
"385 166 OFFCURVE",
"317 229 OFFCURVE",
"285 318 OFFCURVE",
"285 371 QCURVE",
"285 371 LINE"
);
},
{
closed = 1;
nodes = (
"673 1333 OFFCURVE",
"799 1227 OFFCURVE",
"799 1126 QCURVE SMOOTH",
"799 1072 OFFCURVE",
"763 988 OFFCURVE",
"700 922 OFFCURVE",
"615 870 OFFCURVE",
"567 848 QCURVE",
"516 872 OFFCURVE",
"429 923 OFFCURVE",
"367 987 OFFCURVE",
"332 1069 OFFCURVE",
"332 1126 QCURVE SMOOTH",
"332 1227 OFFCURVE",
"457 1333 OFFCURVE",
"563 1333 QCURVE",
"563 1333 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"460 1483 OFFCURVE",
"272 1401 OFFCURVE",
"163 1245 OFFCURVE",
"163 1139 QCURVE SMOOTH",
"163 1044 OFFCURVE",
"243 907 OFFCURVE",
"376 811 OFFCURVE",
"458 772 QCURVE",
"360 733 OFFCURVE",
"204 625 OFFCURVE",
"114 471 OFFCURVE",
"114 365 QCURVE SMOOTH",
"114 188 OFFCURVE",
"366 -20 OFFCURVE",
"581 -20 QCURVE SMOOTH",
"716 -20 OFFCURVE",
"927 74 OFFCURVE",
"1048 250 OFFCURVE",
"1048 375 QCURVE SMOOTH",
"1048 528 OFFCURVE",
"851 713 OFFCURVE",
"692 778 QCURVE",
"827 838 OFFCURVE",
"1001 1008 OFFCURVE",
"1001 1141 QCURVE SMOOTH",
"1001 1305 OFFCURVE",
"769 1483 OFFCURVE",
"581 1483 QCURVE",
"581 1483 LINE"
);
},
{
closed = 1;
nodes = (
"720 1384 OFFCURVE",
"884 1257 OFFCURVE",
"884 1139 QCURVE SMOOTH",
"884 1022 OFFCURVE",
"726 883 OFFCURVE",
"589 825 QCURVE",
"452 877 OFFCURVE",
"278 1014 OFFCURVE",
"278 1135 QCURVE SMOOTH",
"278 1253 OFFCURVE",
"450 1384 OFFCURVE",
"581 1384 QCURVE",
"581 1384 LINE"
);
},
{
closed = 1;
nodes = (
"231 504 OFFCURVE",
"413 666 OFFCURVE",
"565 721 QCURVE",
"610 705 LINE SMOOTH",
"763 649 OFFCURVE",
"933 492 OFFCURVE",
"933 373 QCURVE SMOOTH",
"933 233 OFFCURVE",
"741 76 OFFCURVE",
"577 76 QCURVE SMOOTH",
"413 76 OFFCURVE",
"231 236 OFFCURVE",
"231 365 QCURVE",
"231 365 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"463 1483 OFFCURVE",
"281 1399 OFFCURVE",
"178 1247 OFFCURVE",
"178 1145 QCURVE SMOOTH",
"178 1044 OFFCURVE",
"270 907 OFFCURVE",
"422 815 OFFCURVE",
"514 780 QCURVE",
"340 721 OFFCURVE",
"131 526 OFFCURVE",
"131 358 QCURVE SMOOTH",
"131 246 OFFCURVE",
"244 76 OFFCURVE",
"442 -20 OFFCURVE",
"571 -20 QCURVE SMOOTH",
"700 -20 OFFCURVE",
"907 72 OFFCURVE",
"1030 246 OFFCURVE",
"1030 371 QCURVE SMOOTH",
"1030 528 OFFCURVE",
"823 721 OFFCURVE",
"643 782 QCURVE",
"799 844 OFFCURVE",
"981 1014 OFFCURVE",
"981 1149 QCURVE SMOOTH",
"981 1307 OFFCURVE",
"764 1483 OFFCURVE",
"580 1483 QCURVE",
"580 1483 LINE"
);
},
{
closed = 1;
nodes = (
"741 1432 OFFCURVE",
"926 1290 OFFCURVE",
"926 1149 QCURVE SMOOTH",
"926 1028 OFFCURVE",
"754 877 OFFCURVE",
"586 807 QCURVE",
"426 862 OFFCURVE",
"233 1014 OFFCURVE",
"233 1145 QCURVE SMOOTH",
"233 1282 OFFCURVE",
"430 1432 OFFCURVE",
"580 1432 QCURVE",
"580 1432 LINE"
);
},
{
closed = 1;
nodes = (
"186 467 OFFCURVE",
"291 618 OFFCURVE",
"467 717 OFFCURVE",
"575 754 QCURVE",
"633 733 LINE SMOOTH",
"801 674 OFFCURVE",
"975 504 OFFCURVE",
"975 371 QCURVE SMOOTH",
"975 203 OFFCURVE",
"745 31 OFFCURVE",
"571 31 QCURVE SMOOTH",
"399 31 OFFCURVE",
"186 207 OFFCURVE",
"186 358 QCURVE",
"186 358 LINE"
);
}
);
width = 1167;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1130 1053 OFFCURVE",
"983 1343 OFFCURVE",
"733 1483 OFFCURVE",
"581 1483 QCURVE SMOOTH",
"339 1483 OFFCURVE",
"63 1208 OFFCURVE",
"63 965 QCURVE SMOOTH",
"63 735 OFFCURVE",
"282 487 OFFCURVE",
"466 487 QCURVE SMOOTH",
"591 487 OFFCURVE",
"720 584 OFFCURVE",
"761 657 QCURVE",
"774 657 LINE",
"768 549 OFFCURVE",
"694 381 OFFCURVE",
"512 287 OFFCURVE",
"348 287 QCURVE SMOOTH",
"290 287 OFFCURVE",
"204 295 OFFCURVE",
"161 303 QCURVE",
"161 -10 LINE",
"202 -16 OFFCURVE",
"321 -20 OFFCURVE",
"366 -20 QCURVE SMOOTH",
"638 -20 OFFCURVE",
"974 182 OFFCURVE",
"1130 561 OFFCURVE",
"1130 821 QCURVE",
"1130 821 LINE"
);
},
{
closed = 1;
nodes = (
"643 1167 OFFCURVE",
"706 1102 OFFCURVE",
"737 1004 OFFCURVE",
"737 950 QCURVE SMOOTH",
"737 893 OFFCURVE",
"653 791 OFFCURVE",
"587 791 QCURVE SMOOTH",
"516 791 OFFCURVE",
"446 887 OFFCURVE",
"446 969 QCURVE SMOOTH",
"446 1073 OFFCURVE",
"522 1167 OFFCURVE",
"591 1167 QCURVE",
"591 1167 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1055 1002 OFFCURVE",
"975 1244 OFFCURVE",
"837 1402 OFFCURVE",
"649 1479 OFFCURVE",
"541 1479 QCURVE SMOOTH",
"431 1479 OFFCURVE",
"254 1409 OFFCURVE",
"130 1278 OFFCURVE",
"63 1090 OFFCURVE",
"63 971 QCURVE SMOOTH",
"63 860 OFFCURVE",
"119 688 OFFCURVE",
"224 570 OFFCURVE",
"376 508 OFFCURVE",
"471 508 QCURVE SMOOTH",
"530 508 OFFCURVE",
"626 534 OFFCURVE",
"702 580 OFFCURVE",
"758 642 OFFCURVE",
"778 678 QCURVE",
"791 678 LINE",
"786 577 OFFCURVE",
"743 409 OFFCURVE",
"641 288 OFFCURVE",
"467 221 OFFCURVE",
"332 221 QCURVE SMOOTH",
"288 221 OFFCURVE",
"203 232 OFFCURVE",
"166 242 QCURVE",
"166 -6 LINE",
"184 -10 OFFCURVE",
"232 -15 OFFCURVE",
"283 -18 OFFCURVE",
"333 -20 OFFCURVE",
"354 -20 QCURVE SMOOTH",
"500 -20 OFFCURVE",
"717 49 OFFCURVE",
"872 169 OFFCURVE",
"973 334 OFFCURVE",
"1032 524 OFFCURVE",
"1055 733 OFFCURVE",
"1055 838 QCURVE",
"1055 838 LINE"
);
},
{
closed = 1;
nodes = (
"597 1231 OFFCURVE",
"672 1181 OFFCURVE",
"723 1100 OFFCURVE",
"748 999 OFFCURVE",
"748 948 QCURVE SMOOTH",
"748 911 OFFCURVE",
"719 839 OFFCURVE",
"665 781 OFFCURVE",
"589 745 OFFCURVE",
"543 745 QCURVE SMOOTH",
"452 745 OFFCURVE",
"362 869 OFFCURVE",
"362 975 QCURVE SMOOTH",
"362 1041 OFFCURVE",
"389 1138 OFFCURVE",
"438 1201 OFFCURVE",
"506 1231 OFFCURVE",
"547 1231 QCURVE",
"547 1231 LINE"
);
}
);
width = 1128;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1028 1002 OFFCURVE",
"954 1245 OFFCURVE",
"826 1405 OFFCURVE",
"652 1483 OFFCURVE",
"551 1483 QCURVE SMOOTH",
"449 1483 OFFCURVE",
"284 1415 OFFCURVE",
"169 1288 OFFCURVE",
"106 1105 OFFCURVE",
"106 991 QCURVE SMOOTH",
"106 885 OFFCURVE",
"165 720 OFFCURVE",
"273 606 OFFCURVE",
"427 547 OFFCURVE",
"522 547 QCURVE SMOOTH",
"581 547 OFFCURVE",
"677 573 OFFCURVE",
"753 619 OFFCURVE",
"809 681 OFFCURVE",
"829 717 QCURVE",
"842 717 LINE",
"837 598 OFFCURVE",
"794 384 OFFCURVE",
"692 223 OFFCURVE",
"518 129 OFFCURVE",
"383 129 QCURVE SMOOTH",
"340 129 OFFCURVE",
"252 141 OFFCURVE",
"217 154 QCURVE",
"217 -2 LINE",
"234 -7 OFFCURVE",
"278 -13 OFFCURVE",
"324 -18 OFFCURVE",
"370 -20 OFFCURVE",
"389 -20 QCURVE SMOOTH",
"522 -20 OFFCURVE",
"720 49 OFFCURVE",
"862 169 OFFCURVE",
"954 334 OFFCURVE",
"1007 524 OFFCURVE",
"1028 733 OFFCURVE",
"1028 838 QCURVE",
"1028 838 LINE"
);
},
{
closed = 1;
nodes = (
"626 1329 OFFCURVE",
"736 1263 OFFCURVE",
"809 1156 OFFCURVE",
"846 1023 OFFCURVE",
"846 956 QCURVE SMOOTH",
"846 908 OFFCURVE",
"803 812 OFFCURVE",
"725 737 OFFCURVE",
"615 690 OFFCURVE",
"547 690 QCURVE SMOOTH",
"481 690 OFFCURVE",
"382 732 OFFCURVE",
"316 810 OFFCURVE",
"283 921 OFFCURVE",
"283 991 QCURVE SMOOTH",
"283 1078 OFFCURVE",
"322 1205 OFFCURVE",
"394 1289 OFFCURVE",
"493 1329 OFFCURVE",
"553 1329 QCURVE",
"553 1329 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1044 1030 OFFCURVE",
"933 1319 OFFCURVE",
"718 1483 OFFCURVE",
"561 1483 QCURVE SMOOTH",
"419 1483 OFFCURVE",
"217 1362 OFFCURVE",
"106 1143 OFFCURVE",
"106 997 QCURVE SMOOTH",
"106 791 OFFCURVE",
"333 555 OFFCURVE",
"528 555 QCURVE SMOOTH",
"684 555 OFFCURVE",
"876 682 OFFCURVE",
"919 762 QCURVE",
"927 762 LINE",
"917 434 OFFCURVE",
"663 76 OFFCURVE",
"401 76 QCURVE SMOOTH",
"282 76 OFFCURVE",
"200 106 QCURVE",
"200 2 LINE",
"237 -10 OFFCURVE",
"352 -23 OFFCURVE",
"401 -23 QCURVE SMOOTH",
"626 -23 OFFCURVE",
"911 190 OFFCURVE",
"1044 580 OFFCURVE",
"1044 842 QCURVE",
"1044 842 LINE"
);
},
{
closed = 1;
nodes = (
"663 1380 OFFCURVE",
"800 1294 OFFCURVE",
"884 1159 OFFCURVE",
"921 1010 OFFCURVE",
"921 946 QCURVE SMOOTH",
"921 879 OFFCURVE",
"831 741 OFFCURVE",
"663 651 OFFCURVE",
"550 651 QCURVE SMOOTH",
"387 651 OFFCURVE",
"223 836 OFFCURVE",
"223 999 QCURVE SMOOTH",
"223 1184 OFFCURVE",
"405 1380 OFFCURVE",
"561 1380 QCURVE",
"561 1380 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1023 965 OFFCURVE",
"974 1192 OFFCURVE",
"864 1374 OFFCURVE",
"683 1483 OFFCURVE",
"550 1483 QCURVE SMOOTH",
"411 1483 OFFCURVE",
"214 1362 OFFCURVE",
"112 1147 OFFCURVE",
"112 1006 QCURVE SMOOTH",
"112 805 OFFCURVE",
"333 563 OFFCURVE",
"536 563 QCURVE SMOOTH",
"655 563 OFFCURVE",
"829 637 OFFCURVE",
"941 750 OFFCURVE",
"968 807 QCURVE",
"972 807 LINE",
"966 530 OFFCURVE",
"819 186 OFFCURVE",
"571 27 OFFCURVE",
"411 27 QCURVE SMOOTH",
"348 27 OFFCURVE",
"227 45 OFFCURVE",
"190 59 QCURVE",
"190 2 LINE",
"231 -10 OFFCURVE",
"352 -25 OFFCURVE",
"411 -25 QCURVE SMOOTH",
"585 -25 OFFCURVE",
"864 150 OFFCURVE",
"1023 532 OFFCURVE",
"1023 846 QCURVE",
"1023 846 LINE"
);
},
{
closed = 1;
nodes = (
"675 1432 OFFCURVE",
"835 1325 OFFCURVE",
"923 1165 OFFCURVE",
"958 997 OFFCURVE",
"958 938 QCURVE SMOOTH",
"958 868 OFFCURVE",
"855 719 OFFCURVE",
"669 614 OFFCURVE",
"540 614 QCURVE SMOOTH",
"352 614 OFFCURVE",
"167 823 OFFCURVE",
"167 1006 QCURVE SMOOTH",
"167 1204 OFFCURVE",
"364 1432 OFFCURVE",
"550 1432 QCURVE",
"550 1432 LINE"
);
}
);
width = 1167;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"86 854 OFFCURVE",
"211 764 OFFCURVE",
"299 764 QCURVE SMOOTH",
"381 764 OFFCURVE",
"504 854 OFFCURVE",
"504 956 QCURVE SMOOTH",
"504 1061 OFFCURVE",
"381 1147 OFFCURVE",
"299 1147 QCURVE SMOOTH",
"211 1147 OFFCURVE",
"86 1061 OFFCURVE",
"86 956 QCURVE",
"86 956 LINE"
);
},
{
closed = 1;
nodes = (
"86 66 OFFCURVE",
"211 -25 OFFCURVE",
"299 -25 QCURVE SMOOTH",
"381 -25 OFFCURVE",
"504 66 OFFCURVE",
"504 166 QCURVE SMOOTH",
"504 272 OFFCURVE",
"381 358 OFFCURVE",
"299 358 QCURVE SMOOTH",
"211 358 OFFCURVE",
"86 272 OFFCURVE",
"86 166 QCURVE",
"86 166 LINE"
);
}
);
width = 591;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"156 98 OFFCURVE",
"183 34 OFFCURVE",
"231 -8 OFFCURVE",
"295 -27 OFFCURVE",
"332 -27 QCURVE SMOOTH",
"367 -27 OFFCURVE",
"430 -8 OFFCURVE",
"478 34 OFFCURVE",
"506 98 OFFCURVE",
"506 143 QCURVE SMOOTH",
"506 190 OFFCURVE",
"478 255 OFFCURVE",
"430 295 OFFCURVE",
"367 313 OFFCURVE",
"332 313 QCURVE SMOOTH",
"295 313 OFFCURVE",
"231 295 OFFCURVE",
"183 255 OFFCURVE",
"156 190 OFFCURVE",
"156 143 QCURVE",
"156 143 LINE"
);
},
{
closed = 1;
nodes = (
"156 924 OFFCURVE",
"183 859 OFFCURVE",
"231 818 OFFCURVE",
"295 799 OFFCURVE",
"332 799 QCURVE SMOOTH",
"367 799 OFFCURVE",
"430 818 OFFCURVE",
"478 859 OFFCURVE",
"506 924 OFFCURVE",
"506 969 QCURVE SMOOTH",
"506 1016 OFFCURVE",
"478 1081 OFFCURVE",
"430 1121 OFFCURVE",
"367 1139 OFFCURVE",
"332 1139 QCURVE SMOOTH",
"295 1139 OFFCURVE",
"231 1121 OFFCURVE",
"183 1081 OFFCURVE",
"156 1016 OFFCURVE",
"156 969 QCURVE",
"156 969 LINE"
);
}
);
width = 663;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"147 74 OFFCURVE",
"167 21 OFFCURVE",
"201 -13 OFFCURVE",
"247 -29 OFFCURVE",
"274 -29 QCURVE SMOOTH",
"300 -29 OFFCURVE",
"347 -13 OFFCURVE",
"381 21 OFFCURVE",
"401 74 OFFCURVE",
"401 111 QCURVE SMOOTH",
"401 149 OFFCURVE",
"381 202 OFFCURVE",
"347 235 OFFCURVE",
"300 250 OFFCURVE",
"274 250 QCURVE SMOOTH",
"247 250 OFFCURVE",
"201 235 OFFCURVE",
"167 202 OFFCURVE",
"147 149 OFFCURVE",
"147 111 QCURVE",
"147 111 LINE"
);
},
{
closed = 1;
nodes = (
"147 950 OFFCURVE",
"167 898 OFFCURVE",
"201 864 OFFCURVE",
"247 848 OFFCURVE",
"274 848 QCURVE SMOOTH",
"300 848 OFFCURVE",
"347 864 OFFCURVE",
"381 898 OFFCURVE",
"401 950 OFFCURVE",
"401 987 QCURVE SMOOTH",
"401 1026 OFFCURVE",
"381 1079 OFFCURVE",
"347 1112 OFFCURVE",
"300 1126 OFFCURVE",
"274 1126 QCURVE SMOOTH",
"247 1126 OFFCURVE",
"201 1112 OFFCURVE",
"167 1079 OFFCURVE",
"147 1026 OFFCURVE",
"147 987 QCURVE",
"147 987 LINE"
);
}
);
width = 549;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"159 905 OFFCURVE",
"249 905 QCURVE SMOOTH",
"339 905 OFFCURVE",
"339 1008 QCURVE SMOOTH",
"339 1108 OFFCURVE",
"249 1108 QCURVE SMOOTH",
"159 1108 OFFCURVE",
"159 1008 QCURVE",
"159 1008 LINE"
);
},
{
closed = 1;
nodes = (
"159 -23 OFFCURVE",
"249 -23 QCURVE SMOOTH",
"339 -23 OFFCURVE",
"339 78 QCURVE SMOOTH",
"339 178 OFFCURVE",
"249 178 QCURVE SMOOTH",
"159 178 OFFCURVE",
"159 78 QCURVE",
"159 78 LINE"
);
}
);
width = 499;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"174 999 OFFCURVE",
"194 963 OFFCURVE",
"225 963 QCURVE SMOOTH",
"262 963 OFFCURVE",
"280 999 OFFCURVE",
"280 1026 QCURVE SMOOTH",
"280 1051 OFFCURVE",
"262 1090 OFFCURVE",
"225 1090 QCURVE SMOOTH",
"194 1090 OFFCURVE",
"174 1051 OFFCURVE",
"174 1026 QCURVE",
"174 1026 LINE"
);
},
{
closed = 1;
nodes = (
"174 20 OFFCURVE",
"194 -16 OFFCURVE",
"225 -16 QCURVE SMOOTH",
"262 -16 OFFCURVE",
"280 20 OFFCURVE",
"280 47 QCURVE SMOOTH",
"280 72 OFFCURVE",
"262 111 OFFCURVE",
"225 111 QCURVE SMOOTH",
"194 111 OFFCURVE",
"174 72 OFFCURVE",
"174 47 QCURVE",
"174 47 LINE"
);
}
);
width = 450;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"92 854 OFFCURVE",
"215 764 OFFCURVE",
"303 764 QCURVE SMOOTH",
"385 764 OFFCURVE",
"510 854 OFFCURVE",
"510 956 QCURVE SMOOTH",
"510 1061 OFFCURVE",
"385 1147 OFFCURVE",
"303 1147 QCURVE SMOOTH",
"215 1147 OFFCURVE",
"92 1061 OFFCURVE",
"92 956 QCURVE",
"92 956 LINE"
);
},
{
closed = 1;
nodes = (
"155 299 LINE",
"147 217 OFFCURVE",
"114 16 OFFCURVE",
"77 -193 OFFCURVE",
"57 -285 QCURVE",
"336 -285 LINE",
"368 -209 OFFCURVE",
"436 -2 OFFCURVE",
"493 203 OFFCURVE",
"512 276 QCURVE",
"497 299 LINE",
"497 299 LINE"
);
}
);
width = 608;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"203 288 LINE",
"195 232 OFFCURVE",
"173 99 OFFCURVE",
"146 -39 OFFCURVE",
"117 -179 OFFCURVE",
"102 -244 QCURVE",
"322 -244 LINE",
"347 -185 OFFCURVE",
"398 -54 OFFCURVE",
"445 77 OFFCURVE",
"484 206 OFFCURVE",
"498 264 QCURVE",
"483 288 LINE",
"483 288 LINE"
);
},
{
closed = 1;
nodes = (
"156 924 OFFCURVE",
"183 859 OFFCURVE",
"231 818 OFFCURVE",
"295 799 OFFCURVE",
"332 799 QCURVE SMOOTH",
"367 799 OFFCURVE",
"430 818 OFFCURVE",
"478 859 OFFCURVE",
"506 924 OFFCURVE",
"506 969 QCURVE SMOOTH",
"506 1016 OFFCURVE",
"478 1081 OFFCURVE",
"430 1121 OFFCURVE",
"367 1139 OFFCURVE",
"332 1139 QCURVE SMOOTH",
"295 1139 OFFCURVE",
"231 1121 OFFCURVE",
"183 1081 OFFCURVE",
"156 1016 OFFCURVE",
"156 969 QCURVE",
"156 969 LINE"
);
}
);
width = 663;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"164 238 LINE",
"156 185 OFFCURVE",
"134 60 OFFCURVE",
"107 -71 OFFCURVE",
"78 -203 OFFCURVE",
"63 -264 QCURVE",
"201 -264 LINE",
"226 -208 OFFCURVE",
"277 -85 OFFCURVE",
"324 39 OFFCURVE",
"363 161 OFFCURVE",
"377 215 QCURVE",
"362 238 LINE",
"362 238 LINE"
);
},
{
closed = 1;
nodes = (
"147 950 OFFCURVE",
"167 898 OFFCURVE",
"201 864 OFFCURVE",
"247 848 OFFCURVE",
"274 848 QCURVE SMOOTH",
"300 848 OFFCURVE",
"347 864 OFFCURVE",
"381 898 OFFCURVE",
"401 950 OFFCURVE",
"401 987 QCURVE SMOOTH",
"401 1026 OFFCURVE",
"381 1079 OFFCURVE",
"347 1112 OFFCURVE",
"300 1126 OFFCURVE",
"274 1126 QCURVE SMOOTH",
"247 1126 OFFCURVE",
"201 1112 OFFCURVE",
"167 1079 OFFCURVE",
"147 1026 OFFCURVE",
"147 987 QCURVE",
"147 987 LINE"
);
}
);
width = 549;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"159 905 OFFCURVE",
"245 905 QCURVE SMOOTH",
"339 905 OFFCURVE",
"339 1008 QCURVE SMOOTH",
"339 1108 OFFCURVE",
"245 1108 QCURVE SMOOTH",
"159 1108 OFFCURVE",
"159 1008 QCURVE",
"159 1008 LINE"
);
},
{
closed = 1;
nodes = (
"180 238 LINE",
"163 125 OFFCURVE",
"106 -131 OFFCURVE",
"69 -264 QCURVE",
"159 -264 LINE",
"204 -156 OFFCURVE",
"290 102 OFFCURVE",
"315 213 QCURVE",
"305 238 LINE",
"305 238 LINE"
);
}
);
width = 499;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"173 999 OFFCURVE",
"194 963 OFFCURVE",
"224 963 QCURVE SMOOTH",
"261 963 OFFCURVE",
"280 999 OFFCURVE",
"280 1026 QCURVE SMOOTH",
"280 1051 OFFCURVE",
"261 1090 OFFCURVE",
"224 1090 QCURVE SMOOTH",
"194 1090 OFFCURVE",
"173 1051 OFFCURVE",
"173 1026 QCURVE",
"173 1026 LINE"
);
},
{
closed = 1;
nodes = (
"192 238 LINE",
"175 121 OFFCURVE",
"122 -115 OFFCURVE",
"77 -264 QCURVE",
"122 -264 LINE",
"165 -158 OFFCURVE",
"233 98 OFFCURVE",
"255 213 QCURVE",
"249 238 LINE",
"249 238 LINE"
);
}
);
width = 450;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1104 473 LINE",
"483 725 LINE",
"1104 1008 LINE",
"1104 1305 LINE",
"92 799 LINE",
"92 627 LINE",
"1104 178 LINE",
"1104 178 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1060 382 LINE",
"417 663 LINE",
"1060 980 LINE",
"1060 1220 LINE",
"108 724 LINE",
"108 581 LINE",
"1060 143 LINE",
"1060 143 LINE"
);
}
);
width = 1168;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1026 399 LINE",
"291 721 LINE",
"1026 1085 LINE",
"1026 1245 LINE",
"102 764 LINE",
"102 662 LINE",
"1026 238 LINE",
"1026 238 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 0 1 50 \012CALL[ ]	/* CallFunction */";
};
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1060 367 LINE",
"239 731 LINE",
"1060 1116 LINE",
"1060 1223 LINE",
"108 762 LINE",
"108 692 LINE",
"1060 260 LINE",
"1060 260 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1052 336 LINE",
"186 741 LINE",
"1052 1147 LINE",
"1052 1200 LINE",
"114 760 LINE",
"114 723 LINE",
"1052 283 LINE",
"1052 283 LINE"
);
}
);
width = 1167;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1108 815 LINE",
"1108 1083 LINE",
"92 1083 LINE",
"92 815 LINE",
"92 815 LINE"
);
},
{
closed = 1;
nodes = (
"1108 358 LINE",
"1108 629 LINE",
"92 629 LINE",
"92 358 LINE",
"92 358 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1060 747 LINE",
"1060 964 LINE",
"108 964 LINE",
"108 747 LINE",
"108 747 LINE"
);
},
{
closed = 1;
nodes = (
"1060 358 LINE",
"1060 577 LINE",
"108 577 LINE",
"108 358 LINE",
"108 358 LINE"
);
}
);
width = 1168;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1026 852 LINE",
"1026 1001 LINE",
"102 1001 LINE",
"102 852 LINE",
"102 852 LINE"
);
},
{
closed = 1;
nodes = (
"1026 442 LINE",
"1026 592 LINE",
"102 592 LINE",
"102 442 LINE",
"102 442 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */\0120 0 4 1 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 5 1 3 2 3 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1052 881 LINE",
"1052 977 LINE",
"114 977 LINE",
"114 881 LINE",
"114 881 LINE"
);
},
{
closed = 1;
nodes = (
"1052 467 LINE",
"1052 565 LINE",
"114 565 LINE",
"114 467 LINE",
"114 467 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1054 907 LINE",
"1054 956 LINE",
"112 956 LINE",
"112 907 LINE",
"112 907 LINE"
);
},
{
closed = 1;
nodes = (
"1054 489 LINE",
"1054 539 LINE",
"112 539 LINE",
"112 489 LINE",
"112 489 LINE"
);
}
);
width = 1167;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"92 178 LINE",
"1104 627 LINE",
"1104 799 LINE",
"92 1305 LINE",
"92 1008 LINE",
"713 725 LINE",
"92 473 LINE",
"92 473 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"108 143 LINE",
"1060 581 LINE",
"1060 724 LINE",
"108 1220 LINE",
"108 980 LINE",
"751 663 LINE",
"108 382 LINE",
"108 382 LINE"
);
}
);
width = 1168;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"102 238 LINE",
"1026 662 LINE",
"1026 764 LINE",
"102 1245 LINE",
"102 1085 LINE",
"838 721 LINE",
"102 399 LINE",
"102 399 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0126 3 1 50 \012CALL[ ]	/* CallFunction */";
};
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"108 260 LINE",
"1060 692 LINE",
"1060 762 LINE",
"108 1223 LINE",
"108 1116 LINE",
"927 729 LINE",
"108 367 LINE",
"108 367 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"114 283 LINE",
"1052 723 LINE",
"1052 760 LINE",
"114 1200 LINE",
"114 1147 LINE",
"980 741 LINE",
"114 336 LINE",
"114 336 LINE"
);
}
);
width = 1167;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"602 516 LINE",
"602 567 LINE SMOOTH",
"602 614 OFFCURVE",
"670 684 OFFCURVE",
"760 741 QCURVE SMOOTH",
"887 823 OFFCURVE",
"997 999 OFFCURVE",
"997 1118 QCURVE SMOOTH",
"997 1282 OFFCURVE",
"748 1483 OFFCURVE",
"520 1483 QCURVE SMOOTH",
"369 1483 OFFCURVE",
"113 1405 OFFCURVE",
"0 1341 QCURVE",
"139 1069 LINE",
"342 1176 OFFCURVE",
"492 1176 QCURVE SMOOTH",
"553 1176 OFFCURVE",
"629 1126 OFFCURVE",
"629 1085 QCURVE SMOOTH",
"629 1057 OFFCURVE",
"610 1006 OFFCURVE",
"545 942 OFFCURVE",
"477 899 QCURVE SMOOTH",
"369 831 OFFCURVE",
"295 694 OFFCURVE",
"295 602 QCURVE SMOOTH",
"295 516 LINE",
"295 516 LINE"
);
},
{
closed = 1;
nodes = (
"252 66 OFFCURVE",
"375 -25 OFFCURVE",
"463 -25 QCURVE SMOOTH",
"547 -25 OFFCURVE",
"670 66 OFFCURVE",
"670 166 QCURVE SMOOTH",
"670 272 OFFCURVE",
"547 358 OFFCURVE",
"463 358 QCURVE SMOOTH",
"375 358 OFFCURVE",
"252 272 OFFCURVE",
"252 166 QCURVE",
"252 166 LINE"
);
}
);
width = 1034;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"630 485 LINE",
"630 545 LINE SMOOTH",
"630 577 OFFCURVE",
"641 624 OFFCURVE",
"671 668 OFFCURVE",
"724 717 OFFCURVE",
"766 750 QCURVE SMOOTH",
"821 794 OFFCURVE",
"904 873 OFFCURVE",
"959 958 OFFCURVE",
"987 1057 OFFCURVE",
"987 1120 QCURVE SMOOTH",
"987 1206 OFFCURVE",
"926 1340 OFFCURVE",
"812 1434 OFFCURVE",
"648 1483 OFFCURVE",
"546 1483 QCURVE SMOOTH",
"492 1483 OFFCURVE",
"380 1463 OFFCURVE",
"271 1428 OFFCURVE",
"170 1383 OFFCURVE",
"127 1358 QCURVE",
"229 1137 LINE",
"314 1179 OFFCURVE",
"473 1237 OFFCURVE",
"542 1237 QCURVE SMOOTH",
"621 1237 OFFCURVE",
"698 1163 OFFCURVE",
"698 1106 QCURVE SMOOTH",
"698 1069 OFFCURVE",
"682 1013 OFFCURVE",
"646 962 OFFCURVE",
"588 910 OFFCURVE",
"546 877 QCURVE SMOOTH",
"498 839 OFFCURVE",
"430 768 OFFCURVE",
"387 693 OFFCURVE",
"366 610 OFFCURVE",
"366 559 QCURVE SMOOTH",
"366 485 LINE",
"366 485 LINE"
);
},
{
closed = 1;
nodes = (
"333 98 OFFCURVE",
"360 34 OFFCURVE",
"408 -8 OFFCURVE",
"473 -27 OFFCURVE",
"510 -27 QCURVE SMOOTH",
"545 -27 OFFCURVE",
"608 -8 OFFCURVE",
"656 34 OFFCURVE",
"684 98 OFFCURVE",
"684 143 QCURVE SMOOTH",
"684 190 OFFCURVE",
"656 255 OFFCURVE",
"608 295 OFFCURVE",
"545 313 OFFCURVE",
"510 313 QCURVE SMOOTH",
"473 313 OFFCURVE",
"408 295 OFFCURVE",
"360 255 OFFCURVE",
"333 190 OFFCURVE",
"333 143 QCURVE",
"333 143 LINE"
);
}
);
width = 1114;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"420 414 LINE",
"420 432 LINE SMOOTH",
"420 476 OFFCURVE",
"434 542 OFFCURVE",
"472 605 OFFCURVE",
"538 672 OFFCURVE",
"590 717 QCURVE SMOOTH",
"644 764 OFFCURVE",
"724 848 OFFCURVE",
"778 938 OFFCURVE",
"805 1043 OFFCURVE",
"805 1110 QCURVE SMOOTH",
"805 1197 OFFCURVE",
"749 1336 OFFCURVE",
"645 1432 OFFCURVE",
"496 1483 OFFCURVE",
"403 1483 QCURVE SMOOTH",
"306 1483 OFFCURVE",
"118 1424 OFFCURVE",
"37 1382 QCURVE",
"100 1237 LINE",
"170 1271 OFFCURVE",
"320 1323 OFFCURVE",
"403 1323 QCURVE SMOOTH",
"459 1323 OFFCURVE",
"544 1292 OFFCURVE",
"601 1235 OFFCURVE",
"631 1156 OFFCURVE",
"631 1108 QCURVE SMOOTH",
"631 1055 OFFCURVE",
"610 976 OFFCURVE",
"567 907 OFFCURVE",
"499 840 OFFCURVE",
"451 799 QCURVE SMOOTH",
"401 757 OFFCURVE",
"335 680 OFFCURVE",
"296 600 OFFCURVE",
"281 508 OFFCURVE",
"281 451 QCURVE SMOOTH",
"281 414 LINE",
"281 414 LINE"
);
},
{
closed = 1;
nodes = (
"233 74 OFFCURVE",
"253 21 OFFCURVE",
"287 -13 OFFCURVE",
"333 -29 OFFCURVE",
"360 -29 QCURVE SMOOTH",
"386 -29 OFFCURVE",
"433 -13 OFFCURVE",
"467 21 OFFCURVE",
"487 74 OFFCURVE",
"487 111 QCURVE SMOOTH",
"487 149 OFFCURVE",
"467 202 OFFCURVE",
"433 235 OFFCURVE",
"386 250 OFFCURVE",
"360 250 QCURVE SMOOTH",
"333 250 OFFCURVE",
"287 235 OFFCURVE",
"253 202 OFFCURVE",
"233 149 OFFCURVE",
"233 111 QCURVE",
"233 111 LINE"
);
}
);
width = 872;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"389 385 LINE",
"389 414 LINE SMOOTH",
"389 489 OFFCURVE",
"416 594 OFFCURVE",
"483 678 OFFCURVE",
"545 725 QCURVE SMOOTH",
"622 784 OFFCURVE",
"737 895 OFFCURVE",
"801 1032 OFFCURVE",
"801 1130 QCURVE SMOOTH",
"801 1298 OFFCURVE",
"590 1483 OFFCURVE",
"405 1483 QCURVE SMOOTH",
"303 1483 OFFCURVE",
"137 1438 OFFCURVE",
"51 1399 QCURVE",
"94 1300 LINE",
"164 1335 OFFCURVE",
"311 1378 OFFCURVE",
"401 1378 QCURVE SMOOTH",
"532 1378 OFFCURVE",
"688 1253 OFFCURVE",
"688 1126 QCURVE SMOOTH",
"688 1049 OFFCURVE",
"639 942 OFFCURVE",
"540 846 OFFCURVE",
"463 786 QCURVE SMOOTH",
"395 733 OFFCURVE",
"319 635 OFFCURVE",
"291 512 OFFCURVE",
"291 424 QCURVE SMOOTH",
"291 385 LINE",
"291 385 LINE"
);
},
{
closed = 1;
nodes = (
"256 -23 OFFCURVE",
"344 -23 QCURVE SMOOTH",
"434 -23 OFFCURVE",
"434 78 QCURVE SMOOTH",
"434 178 OFFCURVE",
"344 178 QCURVE SMOOTH",
"256 178 OFFCURVE",
"256 78 QCURVE",
"256 78 LINE"
);
}
);
width = 868;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"345 356 LINE",
"345 381 LINE SMOOTH",
"345 520 OFFCURVE",
"415 662 OFFCURVE",
"495 717 QCURVE SMOOTH",
"577 774 OFFCURVE",
"698 887 OFFCURVE",
"765 1032 OFFCURVE",
"765 1135 QCURVE SMOOTH",
"765 1311 OFFCURVE",
"556 1483 OFFCURVE",
"384 1483 QCURVE SMOOTH",
"302 1483 OFFCURVE",
"167 1452 OFFCURVE",
"77 1415 QCURVE",
"97 1362 LINE",
"171 1399 OFFCURVE",
"308 1432 OFFCURVE",
"384 1432 QCURVE SMOOTH",
"528 1432 OFFCURVE",
"710 1288 OFFCURVE",
"710 1135 QCURVE SMOOTH",
"710 1040 OFFCURVE",
"650 913 OFFCURVE",
"542 811 OFFCURVE",
"468 760 QCURVE SMOOTH",
"396 709 OFFCURVE",
"323 612 OFFCURVE",
"294 483 OFFCURVE",
"294 381 QCURVE SMOOTH",
"294 356 LINE",
"294 356 LINE"
);
},
{
closed = 1;
nodes = (
"272 20 OFFCURVE",
"292 -16 OFFCURVE",
"323 -16 QCURVE SMOOTH",
"360 -16 OFFCURVE",
"378 20 OFFCURVE",
"378 47 QCURVE SMOOTH",
"378 72 OFFCURVE",
"360 111 OFFCURVE",
"323 111 QCURVE SMOOTH",
"292 111 OFFCURVE",
"272 72 OFFCURVE",
"272 47 QCURVE",
"272 47 LINE"
);
}
);
width = 845;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1754 979 OFFCURVE",
"1558 1305 OFFCURVE",
"1203 1481 OFFCURVE",
"968 1481 QCURVE SMOOTH",
"765 1481 OFFCURVE",
"437 1348 OFFCURVE",
"206 1112 OFFCURVE",
"81 795 OFFCURVE",
"81 610 QCURVE SMOOTH",
"81 373 OFFCURVE",
"278 31 OFFCURVE",
"650 -154 OFFCURVE",
"912 -154 QCURVE SMOOTH",
"1050 -154 OFFCURVE",
"1306 -104 OFFCURVE",
"1412 -59 QCURVE",
"1412 170 LINE",
"1289 125 OFFCURVE",
"1011 74 OFFCURVE",
"898 74 QCURVE SMOOTH",
"626 74 OFFCURVE",
"353 365 OFFCURVE",
"353 606 QCURVE SMOOTH",
"353 795 OFFCURVE",
"493 1090 OFFCURVE",
"769 1257 OFFCURVE",
"972 1257 QCURVE SMOOTH",
"1230 1257 OFFCURVE",
"1490 987 OFFCURVE",
"1490 758 QCURVE SMOOTH",
"1490 676 OFFCURVE",
"1461 535 OFFCURVE",
"1410 451 OFFCURVE",
"1373 451 QCURVE SMOOTH",
"1351 451 OFFCURVE",
"1324 489 OFFCURVE",
"1324 537 QCURVE SMOOTH",
"1324 565 OFFCURVE",
"1326 621 OFFCURVE",
"1326 631 QCURVE SMOOTH",
"1347 1053 LINE",
"1281 1075 OFFCURVE",
"1091 1114 OFFCURVE",
"990 1114 QCURVE SMOOTH",
"822 1114 OFFCURVE",
"595 989 OFFCURVE",
"478 774 OFFCURVE",
"478 639 QCURVE SMOOTH",
"478 457 OFFCURVE",
"667 233 OFFCURVE",
"857 233 QCURVE SMOOTH",
"941 233 OFFCURVE",
"1072 301 OFFCURVE",
"1117 352 QCURVE",
"1132 352 LINE",
"1171 295 OFFCURVE",
"1302 233 OFFCURVE",
"1375 233 QCURVE SMOOTH",
"1467 233 OFFCURVE",
"1609 324 OFFCURVE",
"1705 473 OFFCURVE",
"1754 659 OFFCURVE",
"1754 756 QCURVE",
"1754 756 LINE"
);
},
{
closed = 1;
nodes = (
"759 743 OFFCURVE",
"872 895 OFFCURVE",
"994 895 QCURVE SMOOTH",
"1013 895 OFFCURVE",
"1042 893 OFFCURVE",
"1062 889 QCURVE",
"1052 733 LINE SMOOTH",
"1044 582 OFFCURVE",
"974 451 OFFCURVE",
"892 451 QCURVE SMOOTH",
"833 451 OFFCURVE",
"759 541 OFFCURVE",
"759 641 QCURVE",
"759 641 LINE"
);
}
);
width = 1837;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1735 950 OFFCURVE",
"1547 1282 OFFCURVE",
"1201 1462 OFFCURVE",
"981 1462 QCURVE SMOOTH",
"723 1462 OFFCURVE",
"321 1235 OFFCURVE",
"102 831 OFFCURVE",
"102 584 QCURVE SMOOTH",
"102 228 OFFCURVE",
"527 -172 OFFCURVE",
"907 -172 QCURVE SMOOTH",
"1170 -172 OFFCURVE",
"1382 -82 QCURVE",
"1382 111 LINE",
"1267 68 OFFCURVE",
"1011 18 OFFCURVE",
"899 18 QCURVE SMOOTH",
"619 18 OFFCURVE",
"324 313 OFFCURVE",
"324 590 QCURVE SMOOTH",
"324 794 OFFCURVE",
"482 1106 OFFCURVE",
"782 1274 OFFCURVE",
"983 1274 QCURVE SMOOTH",
"1140 1274 OFFCURVE",
"1383 1143 OFFCURVE",
"1516 896 OFFCURVE",
"1516 735 QCURVE SMOOTH",
"1516 584 OFFCURVE",
"1440 397 OFFCURVE",
"1376 397 QCURVE SMOOTH",
"1300 397 OFFCURVE",
"1300 537 QCURVE",
"1323 1026 LINE",
"1256 1050 OFFCURVE",
"1044 1081 OFFCURVE",
"963 1081 QCURVE SMOOTH",
"744 1081 OFFCURVE",
"479 821 OFFCURVE",
"479 612 QCURVE SMOOTH",
"479 428 OFFCURVE",
"683 215 OFFCURVE",
"860 215 QCURVE SMOOTH",
"946 215 OFFCURVE",
"1086 284 OFFCURVE",
"1135 344 QCURVE",
"1151 344 LINE",
"1175 286 OFFCURVE",
"1290 215 OFFCURVE",
"1364 215 QCURVE SMOOTH",
"1475 215 OFFCURVE",
"1643 349 OFFCURVE",
"1735 589 OFFCURVE",
"1735 733 QCURVE",
"1735 733 LINE"
);
},
{
closed = 1;
nodes = (
"711 743 OFFCURVE",
"850 899 OFFCURVE",
"975 899 QCURVE SMOOTH",
"1044 899 OFFCURVE",
"1090 889 QCURVE",
"1077 668 LINE SMOOTH",
"1067 524 OFFCURVE",
"972 397 OFFCURVE",
"883 397 QCURVE SMOOTH",
"711 397 OFFCURVE",
"711 608 QCURVE",
"711 608 LINE"
);
}
);
width = 1837;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1665 901 OFFCURVE",
"1559 1172 OFFCURVE",
"1368 1361 OFFCURVE",
"1106 1462 OFFCURVE",
"950 1462 QCURVE SMOOTH",
"757 1462 OFFCURVE",
"446 1326 OFFCURVE",
"227 1088 OFFCURVE",
"109 763 OFFCURVE",
"109 575 QCURVE SMOOTH",
"109 396 OFFCURVE",
"211 115 OFFCURVE",
"406 -80 OFFCURVE",
"687 -182 OFFCURVE",
"866 -182 QCURVE SMOOTH",
"996 -182 OFFCURVE",
"1212 -138 OFFCURVE",
"1298 -100 QCURVE",
"1298 41 LINE",
"1255 24 OFFCURVE",
"1155 -7 OFFCURVE",
"1044 -31 OFFCURVE",
"925 -45 OFFCURVE",
"864 -45 QCURVE SMOOTH",
"717 -45 OFFCURVE",
"490 37 OFFCURVE",
"337 197 OFFCURVE",
"258 431 OFFCURVE",
"258 582 QCURVE SMOOTH",
"258 744 OFFCURVE",
"348 1017 OFFCURVE",
"523 1216 OFFCURVE",
"781 1327 OFFCURVE",
"950 1327 QCURVE SMOOTH",
"1073 1327 OFFCURVE",
"1282 1248 OFFCURVE",
"1434 1096 OFFCURVE",
"1520 875 OFFCURVE",
"1520 733 QCURVE SMOOTH",
"1520 655 OFFCURVE",
"1496 515 OFFCURVE",
"1449 411 OFFCURVE",
"1379 350 OFFCURVE",
"1333 350 QCURVE SMOOTH",
"1310 350 OFFCURVE",
"1267 365 OFFCURVE",
"1233 405 OFFCURVE",
"1212 473 OFFCURVE",
"1212 526 QCURVE SMOOTH",
"1212 545 LINE SMOOTH",
"1212 553 OFFCURVE",
"1213 580 OFFCURVE",
"1214 602 QCURVE SMOOTH",
"1237 1018 LINE",
"1214 1026 OFFCURVE",
"1145 1043 OFFCURVE",
"1063 1057 OFFCURVE",
"973 1065 OFFCURVE",
"928 1065 QCURVE SMOOTH",
"830 1065 OFFCURVE",
"672 997 OFFCURVE",
"561 875 OFFCURVE",
"502 707 OFFCURVE",
"502 606 QCURVE SMOOTH",
"502 520 OFFCURVE",
"545 378 OFFCURVE",
"627 277 OFFCURVE",
"746 221 OFFCURVE",
"823 221 QCURVE SMOOTH",
"876 221 OFFCURVE",
"965 249 OFFCURVE",
"1036 298 OFFCURVE",
"1090 364 OFFCURVE",
"1108 401 QCURVE",
"1112 401 LINE",
"1118 366 OFFCURVE",
"1151 301 OFFCURVE",
"1203 251 OFFCURVE",
"1276 221 OFFCURVE",
"1321 221 QCURVE SMOOTH",
"1379 221 OFFCURVE",
"1476 262 OFFCURVE",
"1552 334 OFFCURVE",
"1609 431 OFFCURVE",
"1646 544 OFFCURVE",
"1665 669 OFFCURVE",
"1665 731 QCURVE",
"1665 731 LINE"
);
},
{
closed = 1;
nodes = (
"662 664 OFFCURVE",
"690 784 OFFCURVE",
"753 878 OFFCURVE",
"854 936 OFFCURVE",
"928 936 QCURVE SMOOTH",
"970 936 OFFCURVE",
"1047 923 OFFCURVE",
"1075 915 QCURVE",
"1061 662 LINE SMOOTH",
"1057 593 OFFCURVE",
"1031 478 OFFCURVE",
"981 395 OFFCURVE",
"903 350 OFFCURVE",
"848 350 QCURVE SMOOTH",
"763 350 OFFCURVE",
"662 469 OFFCURVE",
"662 602 QCURVE",
"662 602 LINE"
);
}
);
width = 1774;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1707 950 OFFCURVE",
"1523 1278 OFFCURVE",
"1191 1454 OFFCURVE",
"970 1454 QCURVE SMOOTH",
"710 1454 OFFCURVE",
"325 1237 OFFCURVE",
"112 844 OFFCURVE",
"112 578 QCURVE SMOOTH",
"112 338 OFFCURVE",
"294 -8 OFFCURVE",
"632 -193 OFFCURVE",
"868 -193 QCURVE SMOOTH",
"991 -193 OFFCURVE",
"1204 -150 OFFCURVE",
"1294 -113 QCURVE",
"1294 -14 LINE",
"1202 -53 OFFCURVE",
"982 -100 OFFCURVE",
"868 -100 QCURVE SMOOTH",
"554 -100 OFFCURVE",
"212 258 OFFCURVE",
"212 582 QCURVE SMOOTH",
"212 819 OFFCURVE",
"397 1169 OFFCURVE",
"737 1360 OFFCURVE",
"970 1360 QCURVE SMOOTH",
"1167 1360 OFFCURVE",
"1451 1206 OFFCURVE",
"1607 922 OFFCURVE",
"1607 725 QCURVE SMOOTH",
"1607 606 OFFCURVE",
"1556 420 OFFCURVE",
"1453 311 OFFCURVE",
"1376 311 QCURVE SMOOTH",
"1304 311 OFFCURVE",
"1228 406 OFFCURVE",
"1228 516 QCURVE SMOOTH",
"1228 545 OFFCURVE",
"1230 612 OFFCURVE",
"1232 649 QCURVE SMOOTH",
"1249 1006 LINE",
"1195 1026 OFFCURVE",
"1044 1051 OFFCURVE",
"962 1051 QCURVE SMOOTH",
"831 1051 OFFCURVE",
"636 932 OFFCURVE",
"528 725 OFFCURVE",
"528 594 QCURVE SMOOTH",
"528 418 OFFCURVE",
"694 221 OFFCURVE",
"847 221 QCURVE SMOOTH",
"1062 221 OFFCURVE",
"1150 418 QCURVE",
"1154 418 LINE",
"1163 330 OFFCURVE",
"1275 221 OFFCURVE",
"1369 221 QCURVE SMOOTH",
"1482 221 OFFCURVE",
"1634 362 OFFCURVE",
"1707 592 OFFCURVE",
"1707 725 QCURVE",
"1707 725 LINE"
);
},
{
closed = 1;
nodes = (
"634 694 OFFCURVE",
"710 862 OFFCURVE",
"855 961 OFFCURVE",
"962 961 QCURVE SMOOTH",
"1015 961 OFFCURVE",
"1107 946 OFFCURVE",
"1142 934 QCURVE",
"1130 653 LINE SMOOTH",
"1122 487 OFFCURVE",
"989 311 OFFCURVE",
"860 311 QCURVE SMOOTH",
"751 311 OFFCURVE",
"634 451 OFFCURVE",
"634 590 QCURVE",
"634 590 LINE"
);
}
);
width = 1818;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1691 942 OFFCURVE",
"1513 1268 OFFCURVE",
"1183 1446 OFFCURVE",
"956 1446 QCURVE SMOOTH",
"704 1446 OFFCURVE",
"321 1245 OFFCURVE",
"106 860 OFFCURVE",
"106 582 QCURVE SMOOTH",
"106 340 OFFCURVE",
"286 -12 OFFCURVE",
"618 -205 OFFCURVE",
"847 -205 QCURVE SMOOTH",
"964 -205 OFFCURVE",
"1171 -164 OFFCURVE",
"1261 -127 QCURVE",
"1261 -70 LINE",
"1163 -111 OFFCURVE",
"950 -154 OFFCURVE",
"847 -154 QCURVE SMOOTH",
"632 -154 OFFCURVE",
"325 25 OFFCURVE",
"161 354 OFFCURVE",
"161 582 QCURVE SMOOTH",
"161 844 OFFCURVE",
"364 1206 OFFCURVE",
"724 1395 OFFCURVE",
"956 1395 QCURVE SMOOTH",
"1177 1395 OFFCURVE",
"1480 1225 OFFCURVE",
"1636 922 OFFCURVE",
"1636 719 QCURVE SMOOTH",
"1636 588 OFFCURVE",
"1581 385 OFFCURVE",
"1462 270 OFFCURVE",
"1372 270 QCURVE SMOOTH",
"1277 270 OFFCURVE",
"1202 393 OFFCURVE",
"1202 504 QCURVE SMOOTH",
"1202 557 OFFCURVE",
"1208 662 OFFCURVE",
"1210 698 QCURVE SMOOTH",
"1224 995 LINE",
"1167 1016 OFFCURVE",
"1036 1036 OFFCURVE",
"962 1036 QCURVE SMOOTH",
"833 1036 OFFCURVE",
"638 918 OFFCURVE",
"528 713 OFFCURVE",
"528 582 QCURVE SMOOTH",
"528 406 OFFCURVE",
"692 219 OFFCURVE",
"841 219 QCURVE SMOOTH",
"940 219 OFFCURVE",
"1112 319 OFFCURVE",
"1159 434 QCURVE",
"1163 330 OFFCURVE",
"1280 219 OFFCURVE",
"1372 219 QCURVE SMOOTH",
"1480 219 OFFCURVE",
"1622 352 OFFCURVE",
"1691 578 OFFCURVE",
"1691 719 QCURVE",
"1691 719 LINE"
);
},
{
closed = 1;
nodes = (
"583 768 OFFCURVE",
"794 985 OFFCURVE",
"962 985 QCURVE SMOOTH",
"1081 985 OFFCURVE",
"1171 954 QCURVE",
"1155 647 LINE SMOOTH",
"1144 453 OFFCURVE",
"985 270 OFFCURVE",
"841 270 QCURVE SMOOTH",
"710 270 OFFCURVE",
"583 434 OFFCURVE",
"583 582 QCURVE",
"583 582 LINE"
);
}
);
width = 1798;
}
);
note = at;
unicode = 0040;
},
{
glyphname = braceleft;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"821 -66 LINE",
"782 -66 OFFCURVE",
"692 -53 OFFCURVE",
"630 -8 OFFCURVE",
"630 41 QCURVE SMOOTH",
"630 317 LINE SMOOTH",
"630 434 OFFCURVE",
"507 545 OFFCURVE",
"391 563 QCURVE",
"391 575 LINE",
"503 590 OFFCURVE",
"630 702 OFFCURVE",
"630 827 QCURVE SMOOTH",
"630 1098 LINE SMOOTH",
"630 1149 OFFCURVE",
"692 1192 OFFCURVE",
"780 1204 OFFCURVE",
"821 1204 QCURVE",
"821 1483 LINE",
"608 1483 OFFCURVE",
"387 1409 OFFCURVE",
"307 1260 OFFCURVE",
"307 1143 QCURVE SMOOTH",
"307 889 LINE SMOOTH",
"307 827 OFFCURVE",
"237 752 OFFCURVE",
"124 719 OFFCURVE",
"61 719 QCURVE",
"61 418 LINE",
"122 418 OFFCURVE",
"235 385 OFFCURVE",
"307 309 OFFCURVE",
"307 248 QCURVE SMOOTH",
"307 0 LINE SMOOTH",
"307 -119 OFFCURVE",
"389 -272 OFFCURVE",
"610 -344 OFFCURVE",
"821 -344 QCURVE",
"821 -344 LINE"
);
}
);
width = 886;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"203 562 OFFCURVE",
"334 466 OFFCURVE",
"334 353 QCURVE SMOOTH",
"334 -14 LINE SMOOTH",
"334 -100 OFFCURVE",
"372 -224 OFFCURVE",
"471 -302 OFFCURVE",
"641 -339 OFFCURVE",
"772 -339 QCURVE",
"772 -113 LINE",
"732 -112 OFFCURVE",
"667 -97 OFFCURVE",
"622 -60 OFFCURVE",
"598 4 OFFCURVE",
"598 55 QCURVE SMOOTH",
"598 422 LINE SMOOTH",
"598 527 OFFCURVE",
"540 590 QCURVE SMOOTH",
"479 656 OFFCURVE",
"364 676 QCURVE",
"364 688 LINE",
"592 730 OFFCURVE",
"598 953 QCURVE SMOOTH",
"598 1310 LINE SMOOTH",
"598 1361 OFFCURVE",
"622 1425 OFFCURVE",
"667 1462 OFFCURVE",
"732 1477 OFFCURVE",
"772 1478 QCURVE",
"772 1703 LINE",
"641 1703 OFFCURVE",
"471 1666 OFFCURVE",
"372 1588 OFFCURVE",
"334 1465 OFFCURVE",
"334 1379 QCURVE SMOOTH",
"334 996 LINE SMOOTH",
"334 948 OFFCURVE",
"320 913 QCURVE SMOOTH",
"303 873 OFFCURVE",
"237 823 OFFCURVE",
"140 801 OFFCURVE",
"78 801 QCURVE",
"78 562 LINE",
"78 562 LINE"
);
}
);
width = 872;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"500 315 LINE SMOOTH",
"500 421 OFFCURVE",
"381 543 OFFCURVE",
"266 563 QCURVE",
"266 575 LINE",
"381 595 OFFCURVE",
"500 718 OFFCURVE",
"500 823 QCURVE SMOOTH",
"500 1155 LINE SMOOTH",
"500 1203 OFFCURVE",
"524 1264 OFFCURVE",
"569 1299 OFFCURVE",
"634 1312 OFFCURVE",
"674 1313 QCURVE",
"674 1462 LINE",
"597 1461 OFFCURVE",
"466 1428 OFFCURVE",
"371 1357 OFFCURVE",
"317 1247 OFFCURVE",
"317 1169 QCURVE SMOOTH",
"317 836 LINE SMOOTH",
"317 733 OFFCURVE",
"186 647 OFFCURVE",
"61 647 QCURVE",
"61 492 LINE",
"186 492 OFFCURVE",
"317 406 OFFCURVE",
"317 303 QCURVE SMOOTH",
"317 -31 LINE SMOOTH",
"317 -109 OFFCURVE",
"371 -219 OFFCURVE",
"466 -290 OFFCURVE",
"597 -323 OFFCURVE",
"674 -324 QCURVE",
"674 -174 LINE",
"634 -173 OFFCURVE",
"569 -160 OFFCURVE",
"524 -125 OFFCURVE",
"500 -64 OFFCURVE",
"500 -16 QCURVE",
"500 -16 LINE"
);
}
);
width = 725;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"663 -225 LINE",
"536 -223 OFFCURVE",
"409 -123 OFFCURVE",
"409 -14 QCURVE SMOOTH",
"409 313 LINE SMOOTH",
"409 418 OFFCURVE",
"319 547 OFFCURVE",
"217 565 QCURVE",
"217 573 LINE",
"319 592 OFFCURVE",
"409 723 OFFCURVE",
"409 827 QCURVE SMOOTH",
"409 1147 LINE SMOOTH",
"409 1262 OFFCURVE",
"536 1360 OFFCURVE",
"663 1364 QCURVE",
"663 1462 LINE",
"489 1462 OFFCURVE",
"293 1311 OFFCURVE",
"293 1163 QCURVE SMOOTH",
"293 836 LINE SMOOTH",
"293 719 OFFCURVE",
"176 621 OFFCURVE",
"55 618 QCURVE",
"55 520 LINE",
"176 520 OFFCURVE",
"293 420 OFFCURVE",
"293 303 QCURVE SMOOTH",
"293 -23 LINE SMOOTH",
"293 -172 OFFCURVE",
"485 -324 OFFCURVE",
"663 -324 QCURVE",
"663 -324 LINE"
);
}
);
width = 733;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"614 -272 LINE",
"469 -272 OFFCURVE",
"334 -160 OFFCURVE",
"334 -41 QCURVE SMOOTH",
"334 311 LINE SMOOTH",
"334 416 OFFCURVE",
"262 551 OFFCURVE",
"172 567 QCURVE",
"172 571 LINE",
"262 588 OFFCURVE",
"334 723 OFFCURVE",
"334 827 QCURVE SMOOTH",
"334 1174 LINE SMOOTH",
"334 1298 OFFCURVE",
"469 1411 OFFCURVE",
"614 1411 QCURVE",
"614 1462 LINE",
"446 1462 OFFCURVE",
"278 1319 OFFCURVE",
"278 1186 QCURVE SMOOTH",
"278 836 LINE SMOOTH",
"278 705 OFFCURVE",
"176 594 OFFCURVE",
"53 594 QCURVE",
"53 545 LINE",
"176 545 OFFCURVE",
"278 430 OFFCURVE",
"278 303 QCURVE SMOOTH",
"278 -47 LINE SMOOTH",
"278 -180 OFFCURVE",
"446 -324 OFFCURVE",
"614 -324 QCURVE",
"614 -324 LINE"
);
}
);
width = 690;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = bar;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"387 -446 LINE",
"655 -446 LINE",
"655 1556 LINE",
"387 1556 LINE",
"387 1556 LINE"
);
}
);
width = 1042;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"443 -339 LINE",
"662 -339 LINE",
"662 1703 LINE",
"443 1703 LINE",
"443 1703 LINE"
);
}
);
width = 1105;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"489 -492 LINE",
"639 -492 LINE",
"639 1556 LINE",
"489 1556 LINE",
"489 1556 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */\0120 0 1 0 133 0 1 1 118 17 16 2 6 24 \012CALL[ ]	/* CallFunction */";
};
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"503 -504 LINE",
"603 -504 LINE",
"603 1561 LINE",
"503 1561 LINE",
"503 1561 LINE"
);
}
);
width = 1112;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"518 -514 LINE",
"569 -514 LINE",
"569 1563 LINE",
"518 1563 LINE",
"518 1563 LINE"
);
}
);
width = 1095;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = braceright;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"274 -344 OFFCURVE",
"497 -272 OFFCURVE",
"579 -119 OFFCURVE",
"579 0 QCURVE SMOOTH",
"579 248 LINE SMOOTH",
"579 309 OFFCURVE",
"651 385 OFFCURVE",
"763 418 OFFCURVE",
"825 418 QCURVE",
"825 719 LINE",
"761 719 OFFCURVE",
"649 752 OFFCURVE",
"579 827 OFFCURVE",
"579 889 QCURVE SMOOTH",
"579 1143 LINE SMOOTH",
"579 1260 OFFCURVE",
"499 1409 OFFCURVE",
"278 1483 OFFCURVE",
"65 1483 QCURVE",
"65 1204 LINE",
"106 1204 OFFCURVE",
"194 1192 OFFCURVE",
"255 1149 OFFCURVE",
"255 1098 QCURVE SMOOTH",
"255 827 LINE SMOOTH",
"255 702 OFFCURVE",
"380 590 OFFCURVE",
"495 575 QCURVE",
"495 563 LINE",
"378 545 OFFCURVE",
"255 434 OFFCURVE",
"255 317 QCURVE SMOOTH",
"255 41 LINE SMOOTH",
"255 -8 OFFCURVE",
"194 -53 OFFCURVE",
"106 -66 OFFCURVE",
"65 -66 QCURVE",
"65 -344 LINE",
"65 -344 LINE"
);
}
);
width = 886;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"794 802 LINE",
"669 802 OFFCURVE",
"538 898 OFFCURVE",
"538 1011 QCURVE SMOOTH",
"538 1378 LINE SMOOTH",
"538 1464 OFFCURVE",
"500 1588 OFFCURVE",
"401 1666 OFFCURVE",
"231 1703 OFFCURVE",
"100 1703 QCURVE",
"100 1477 LINE",
"140 1476 OFFCURVE",
"205 1461 OFFCURVE",
"250 1424 OFFCURVE",
"274 1360 OFFCURVE",
"274 1309 QCURVE SMOOTH",
"274 942 LINE SMOOTH",
"274 837 OFFCURVE",
"332 774 QCURVE SMOOTH",
"393 708 OFFCURVE",
"508 688 QCURVE",
"508 676 LINE",
"280 634 OFFCURVE",
"274 411 QCURVE SMOOTH",
"274 54 LINE SMOOTH",
"274 3 OFFCURVE",
"250 -61 OFFCURVE",
"205 -98 OFFCURVE",
"140 -113 OFFCURVE",
"100 -114 QCURVE",
"100 -339 LINE",
"231 -339 OFFCURVE",
"401 -302 OFFCURVE",
"500 -224 OFFCURVE",
"538 -101 OFFCURVE",
"538 -15 QCURVE SMOOTH",
"538 368 LINE SMOOTH",
"538 416 OFFCURVE",
"553 452 QCURVE SMOOTH",
"569 491 OFFCURVE",
"635 541 OFFCURVE",
"732 563 OFFCURVE",
"794 563 QCURVE",
"794 563 LINE"
);
}
);
width = 872;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"225 -16 LINE SMOOTH",
"225 -64 OFFCURVE",
"201 -125 OFFCURVE",
"156 -160 OFFCURVE",
"91 -173 OFFCURVE",
"51 -174 QCURVE",
"51 -324 LINE",
"128 -323 OFFCURVE",
"259 -290 OFFCURVE",
"354 -219 OFFCURVE",
"408 -109 OFFCURVE",
"408 -31 QCURVE SMOOTH",
"408 303 LINE SMOOTH",
"408 406 OFFCURVE",
"539 492 OFFCURVE",
"664 492 QCURVE",
"664 647 LINE",
"602 647 OFFCURVE",
"506 667 OFFCURVE",
"441 712 OFFCURVE",
"408 784 OFFCURVE",
"408 836 QCURVE SMOOTH",
"408 1169 LINE SMOOTH",
"408 1247 OFFCURVE",
"354 1357 OFFCURVE",
"259 1428 OFFCURVE",
"128 1461 OFFCURVE",
"51 1462 QCURVE",
"51 1313 LINE",
"91 1312 OFFCURVE",
"156 1299 OFFCURVE",
"201 1264 OFFCURVE",
"225 1203 OFFCURVE",
"225 1155 QCURVE SMOOTH",
"225 823 LINE SMOOTH",
"225 718 OFFCURVE",
"344 595 OFFCURVE",
"459 575 QCURVE",
"459 563 LINE",
"344 543 OFFCURVE",
"225 421 OFFCURVE",
"225 315 QCURVE",
"225 315 LINE"
);
}
);
width = 725;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"243 -324 OFFCURVE",
"440 -172 OFFCURVE",
"440 -25 QCURVE SMOOTH",
"440 303 LINE SMOOTH",
"440 420 OFFCURVE",
"556 520 OFFCURVE",
"677 520 QCURVE",
"677 618 LINE",
"556 618 OFFCURVE",
"440 719 OFFCURVE",
"440 836 QCURVE SMOOTH",
"440 1161 LINE SMOOTH",
"440 1311 OFFCURVE",
"247 1462 OFFCURVE",
"69 1462 QCURVE",
"69 1364 LINE",
"196 1362 OFFCURVE",
"323 1262 OFFCURVE",
"323 1149 QCURVE SMOOTH",
"323 827 LINE SMOOTH",
"323 723 OFFCURVE",
"413 592 OFFCURVE",
"515 573 QCURVE",
"515 565 LINE",
"413 547 OFFCURVE",
"323 416 OFFCURVE",
"323 311 QCURVE SMOOTH",
"323 -12 LINE SMOOTH",
"323 -123 OFFCURVE",
"196 -221 OFFCURVE",
"69 -225 QCURVE",
"69 -324 LINE",
"69 -324 LINE"
);
}
);
width = 733;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"241 -324 OFFCURVE",
"409 -180 OFFCURVE",
"409 -47 QCURVE SMOOTH",
"409 303 LINE SMOOTH",
"409 430 OFFCURVE",
"511 545 OFFCURVE",
"634 545 QCURVE",
"634 594 LINE",
"511 594 OFFCURVE",
"409 705 OFFCURVE",
"409 836 QCURVE SMOOTH",
"409 1186 LINE SMOOTH",
"409 1319 OFFCURVE",
"241 1462 OFFCURVE",
"73 1462 QCURVE",
"73 1411 LINE",
"218 1411 OFFCURVE",
"354 1298 OFFCURVE",
"354 1174 QCURVE SMOOTH",
"354 827 LINE SMOOTH",
"354 723 OFFCURVE",
"425 588 OFFCURVE",
"515 571 QCURVE",
"515 567 LINE",
"425 551 OFFCURVE",
"354 416 OFFCURVE",
"354 311 QCURVE SMOOTH",
"354 -41 LINE SMOOTH",
"354 -160 OFFCURVE",
"218 -272 OFFCURVE",
"73 -272 QCURVE",
"73 -324 LINE",
"73 -324 LINE"
);
}
);
width = 690;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"661 553 OFFCURVE",
"782 528 OFFCURVE",
"842 528 QCURVE SMOOTH",
"1001 528 OFFCURVE",
"1106 637 QCURVE",
"1106 918 LINE",
"1053 866 OFFCURVE",
"932 797 OFFCURVE",
"874 797 QCURVE SMOOTH",
"827 797 OFFCURVE",
"713 819 OFFCURVE",
"637 852 QCURVE SMOOTH",
"536 893 OFFCURVE",
"416 915 OFFCURVE",
"356 915 QCURVE SMOOTH",
"274 915 OFFCURVE",
"143 860 OFFCURVE",
"92 807 QCURVE",
"92 526 LINE",
"143 578 OFFCURVE",
"266 647 OFFCURVE",
"325 647 QCURVE SMOOTH",
"373 647 OFFCURVE",
"485 625 OFFCURVE",
"561 592 QCURVE",
"561 592 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"596 536 OFFCURVE",
"666 511 OFFCURVE",
"723 498 OFFCURVE",
"774 493 OFFCURVE",
"804 493 QCURVE SMOOTH",
"959 493 OFFCURVE",
"1060 602 QCURVE",
"1060 833 LINE",
"1035 808 OFFCURVE",
"978 763 OFFCURVE",
"918 731 OFFCURVE",
"856 712 OFFCURVE",
"827 712 QCURVE SMOOTH",
"805 712 OFFCURVE",
"763 717 OFFCURVE",
"715 730 OFFCURVE",
"658 751 OFFCURVE",
"620 767 QCURVE SMOOTH",
"572 787 OFFCURVE",
"502 812 OFFCURVE",
"445 826 OFFCURVE",
"394 831 OFFCURVE",
"364 831 QCURVE SMOOTH",
"286 831 OFFCURVE",
"159 776 OFFCURVE",
"108 722 QCURVE",
"108 491 LINE",
"134 516 OFFCURVE",
"191 560 OFFCURVE",
"251 593 OFFCURVE",
"313 612 OFFCURVE",
"342 612 QCURVE SMOOTH",
"365 612 OFFCURVE",
"407 607 OFFCURVE",
"454 594 OFFCURVE",
"511 572 OFFCURVE",
"548 556 QCURVE",
"548 556 LINE"
);
}
);
width = 1168;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"577 631 OFFCURVE",
"644 606 OFFCURVE",
"699 593 OFFCURVE",
"749 588 OFFCURVE",
"778 588 QCURVE SMOOTH",
"927 588 OFFCURVE",
"1026 696 QCURVE",
"1026 858 LINE",
"1002 833 OFFCURVE",
"946 789 OFFCURVE",
"887 756 OFFCURVE",
"827 737 OFFCURVE",
"799 737 QCURVE SMOOTH",
"777 737 OFFCURVE",
"737 742 OFFCURVE",
"690 755 OFFCURVE",
"635 777 OFFCURVE",
"598 793 QCURVE SMOOTH",
"551 813 OFFCURVE",
"484 838 OFFCURVE",
"429 851 OFFCURVE",
"379 856 OFFCURVE",
"350 856 QCURVE SMOOTH",
"202 856 OFFCURVE",
"102 748 QCURVE",
"102 586 LINE",
"127 611 OFFCURVE",
"183 655 OFFCURVE",
"242 688 OFFCURVE",
"302 707 OFFCURVE",
"330 707 QCURVE SMOOTH",
"352 707 OFFCURVE",
"393 702 OFFCURVE",
"438 689 OFFCURVE",
"493 667 OFFCURVE",
"530 651 QCURVE",
"530 651 LINE"
);
}
);
width = 1128;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"643 643 OFFCURVE",
"753 610 OFFCURVE",
"819 610 QCURVE SMOOTH",
"892 610 OFFCURVE",
"1015 668 OFFCURVE",
"1060 717 QCURVE",
"1060 823 LINE",
"1005 766 OFFCURVE",
"882 709 OFFCURVE",
"825 709 QCURVE SMOOTH",
"772 709 OFFCURVE",
"675 739 OFFCURVE",
"610 768 QCURVE SMOOTH",
"534 803 OFFCURVE",
"421 836 OFFCURVE",
"352 836 QCURVE SMOOTH",
"282 836 OFFCURVE",
"155 780 OFFCURVE",
"108 731 QCURVE",
"108 618 LINE",
"221 737 OFFCURVE",
"344 737 QCURVE SMOOTH",
"401 737 OFFCURVE",
"499 707 OFFCURVE",
"565 676 QCURVE",
"565 676 LINE"
);
}
);
width = 1169;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"638 670 OFFCURVE",
"745 633 OFFCURVE",
"819 633 QCURVE SMOOTH",
"892 633 OFFCURVE",
"1013 692 OFFCURVE",
"1052 733 QCURVE",
"1052 793 LINE",
"991 729 OFFCURVE",
"874 682 OFFCURVE",
"819 682 QCURVE SMOOTH",
"755 682 OFFCURVE",
"659 717 OFFCURVE",
"603 745 QCURVE SMOOTH",
"544 774 OFFCURVE",
"440 813 OFFCURVE",
"354 813 QCURVE SMOOTH",
"286 813 OFFCURVE",
"159 760 OFFCURVE",
"114 715 QCURVE",
"114 651 LINE",
"171 713 OFFCURVE",
"294 764 OFFCURVE",
"354 764 QCURVE SMOOTH",
"425 764 OFFCURVE",
"522 729 OFFCURVE",
"577 700 QCURVE",
"577 700 LINE"
);
}
);
width = 1167;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = uni200B;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni200B;
unicode = 200B;
},
{
glyphname = guillemotleft;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"73 561 LINE",
"462 80 LINE",
"743 227 LINE",
"470 575 LINE",
"743 922 LINE",
"462 1071 LINE",
"73 588 LINE",
"73 588 LINE"
);
},
{
closed = 1;
nodes = (
"648 561 LINE",
"1036 80 LINE",
"1318 227 LINE",
"1044 575 LINE",
"1318 922 LINE",
"1036 1071 LINE",
"648 588 LINE",
"648 588 LINE"
);
}
);
width = 1394;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"82 547 LINE",
"453 94 LINE",
"672 213 LINE",
"393 561 LINE",
"672 909 LINE",
"453 1028 LINE",
"82 573 LINE",
"82 573 LINE"
);
},
{
closed = 1;
nodes = (
"588 547 LINE",
"958 94 LINE",
"1178 213 LINE",
"899 561 LINE",
"1178 909 LINE",
"958 1028 LINE",
"588 573 LINE",
"588 573 LINE"
);
}
);
width = 1260;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"82 526 LINE",
"391 115 LINE",
"508 193 LINE",
"270 541 LINE",
"508 889 LINE",
"391 967 LINE",
"82 553 LINE",
"82 553 LINE"
);
},
{
closed = 1;
nodes = (
"489 526 LINE",
"799 115 LINE",
"915 193 LINE",
"678 541 LINE",
"915 889 LINE",
"799 967 LINE",
"489 553 LINE",
"489 553 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */\01212 8 5 1 2 50 \012CALL[ ]	/* CallFunction */";
};
width = 997;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"67 541 LINE",
"395 147 LINE",
"475 197 LINE",
"192 557 LINE",
"475 918 LINE",
"395 967 LINE",
"67 569 LINE",
"67 569 LINE"
);
},
{
closed = 1;
nodes = (
"442 541 LINE",
"774 147 LINE",
"851 197 LINE",
"569 557 LINE",
"851 918 LINE",
"774 967 LINE",
"442 569 LINE",
"442 569 LINE"
);
}
);
width = 919;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"53 557 LINE",
"364 178 LINE",
"397 201 LINE",
"116 571 LINE",
"397 942 LINE",
"364 967 LINE",
"53 584 LINE",
"53 584 LINE"
);
},
{
closed = 1;
nodes = (
"399 557 LINE",
"710 178 LINE",
"743 201 LINE",
"463 571 LINE",
"743 942 LINE",
"710 967 LINE",
"399 584 LINE",
"399 584 LINE"
);
}
);
width = 796;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = uni00AD;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"608 393 LINE",
"608 705 LINE",
"43 705 LINE",
"43 393 LINE",
"43 393 LINE"
);
}
);
width = 651;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"598 424 LINE",
"598 674 LINE",
"61 674 LINE",
"61 424 LINE",
"61 424 LINE"
);
}
);
width = 659;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"578 465 LINE",
"578 633 LINE",
"82 633 LINE",
"82 465 LINE",
"82 465 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */\0120 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 3 0 3 17 3 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 659;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"577 500 LINE",
"577 606 LINE",
"81 606 LINE",
"81 500 LINE",
"81 500 LINE"
);
}
);
width = 659;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"577 530 LINE",
"577 582 LINE",
"81 582 LINE",
"81 530 LINE",
"81 530 LINE"
);
}
);
width = 659;
}
);
note = uni00AD;
unicode = 00AD;
},
{
glyphname = guillemotright;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"745 588 LINE",
"358 1071 LINE",
"75 922 LINE",
"347 575 LINE",
"75 227 LINE",
"358 80 LINE",
"745 561 LINE",
"745 561 LINE"
);
},
{
closed = 1;
nodes = (
"1320 588 LINE",
"933 1071 LINE",
"648 922 LINE",
"923 575 LINE",
"648 227 LINE",
"933 80 LINE",
"1320 561 LINE",
"1320 561 LINE"
);
}
);
width = 1394;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"672 573 LINE",
"301 1028 LINE",
"82 909 LINE",
"360 561 LINE",
"82 213 LINE",
"301 94 LINE",
"672 547 LINE",
"672 547 LINE"
);
},
{
closed = 1;
nodes = (
"1178 573 LINE",
"807 1028 LINE",
"588 909 LINE",
"866 561 LINE",
"588 213 LINE",
"807 94 LINE",
"1178 547 LINE",
"1178 547 LINE"
);
}
);
width = 1260;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"510 553 LINE",
"201 967 LINE",
"84 889 LINE",
"322 541 LINE",
"84 193 LINE",
"201 115 LINE",
"510 526 LINE",
"510 526 LINE"
);
},
{
closed = 1;
nodes = (
"918 553 LINE",
"608 967 LINE",
"492 889 LINE",
"729 541 LINE",
"492 193 LINE",
"608 115 LINE",
"918 526 LINE",
"918 526 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */\01212 8 5 1 2 50 \012CALL[ ]	/* CallFunction */";
};
width = 997;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"475 569 LINE",
"145 967 LINE",
"65 918 LINE",
"350 557 LINE",
"65 197 LINE",
"145 147 LINE",
"475 545 LINE",
"475 545 LINE"
);
},
{
closed = 1;
nodes = (
"851 569 LINE",
"522 967 LINE",
"442 918 LINE",
"724 557 LINE",
"442 197 LINE",
"522 147 LINE",
"851 545 LINE",
"851 545 LINE"
);
}
);
width = 919;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"397 588 LINE",
"86 967 LINE",
"53 944 LINE",
"334 573 LINE",
"53 203 LINE",
"86 178 LINE",
"397 561 LINE",
"397 561 LINE"
);
},
{
closed = 1;
nodes = (
"743 588 LINE",
"432 967 LINE",
"399 944 LINE",
"680 573 LINE",
"399 203 LINE",
"432 178 LINE",
"743 561 LINE",
"743 561 LINE"
);
}
);
width = 796;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = uni1780;
lastChange = "2020-02-04 09:00:17 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1190 932 LINE",
"1190 1160 LINE",
"110 1160 LINE",
"110 932 LINE"
);
},
{
closed = 1;
nodes = (
"110 0 LINE",
"478 0 LINE",
"478 487 LINE SMOOTH",
"478 557 OFFCURVE",
"535 592 OFFCURVE",
"650 592 CURVE SMOOTH",
"765 592 OFFCURVE",
"822 557 OFFCURVE",
"822 487 CURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 487 LINE SMOOTH",
"1190 702 OFFCURVE",
"1010 810 OFFCURVE",
"650 810 CURVE SMOOTH",
"290 810 OFFCURVE",
"110 702 OFFCURVE",
"110 487 CURVE SMOOTH"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 1130 LINE",
"140 932 LINE",
"1160 932 LINE",
"1160 1130 LINE"
);
},
{
closed = 1;
nodes = (
"140 0 LINE",
"448 0 LINE",
"448 487 LINE SMOOTH",
"448 577 OFFCURVE",
"515 622 OFFCURVE",
"650 622 CURVE SMOOTH",
"785 622 OFFCURVE",
"852 577 OFFCURVE",
"852 487 CURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 487 LINE SMOOTH",
"1160 702 OFFCURVE",
"990 810 OFFCURVE",
"650 810 CURVE SMOOTH",
"310 810 OFFCURVE",
"140 702 OFFCURVE",
"140 487 CURVE SMOOTH"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 1130 LINE",
"200 1130 LINE",
"200 992 LINE",
"1100 992 LINE"
);
},
{
closed = 1;
nodes = (
"200 0 LINE",
"388 0 LINE",
"388 517 LINE SMOOTH",
"388 640 OFFCURVE",
"475 702 OFFCURVE",
"650 702 CURVE SMOOTH",
"825 702 OFFCURVE",
"912 640 OFFCURVE",
"912 517 CURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 517 LINE SMOOTH",
"1100 732 OFFCURVE",
"950 840 OFFCURVE",
"650 840 CURVE SMOOTH",
"350 840 OFFCURVE",
"200 732 OFFCURVE",
"200 517 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */\0120 2 0 4 3 2 4 105 0 0 0 1 95 0 1 1 17 77 5 1 3 3 19 3 78 18 34 18 33 17 16 6 7 28 \012CALL[ ]	/* CallFunction */";
};
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 1130 LINE",
"230 1032 LINE",
"1070 1032 LINE",
"1070 1130 LINE"
);
},
{
closed = 1;
nodes = (
"230 0 LINE",
"348 0 LINE",
"348 517 LINE SMOOTH",
"348 667 OFFCURVE",
"449 742 OFFCURVE",
"650 742 CURVE SMOOTH",
"851 742 OFFCURVE",
"952 667 OFFCURVE",
"952 517 CURVE SMOOTH",
"952 0 LINE",
"1070 0 LINE",
"1070 517 LINE SMOOTH",
"1070 732 OFFCURVE",
"930 840 OFFCURVE",
"650 840 CURVE SMOOTH",
"370 840 OFFCURVE",
"230 732 OFFCURVE",
"230 517 CURVE SMOOTH"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 1130 LINE",
"260 1072 LINE",
"1040 1072 LINE",
"1040 1130 LINE"
);
},
{
closed = 1;
nodes = (
"260 0 LINE",
"318 0 LINE",
"318 517 LINE SMOOTH",
"318 694 OFFCURVE",
"429 782 OFFCURVE",
"650 782 CURVE SMOOTH",
"871 782 OFFCURVE",
"982 694 OFFCURVE",
"982 517 CURVE SMOOTH",
"982 0 LINE",
"1040 0 LINE",
"1040 517 LINE SMOOTH",
"1040 732 OFFCURVE",
"910 840 OFFCURVE",
"650 840 CURVE SMOOTH",
"390 840 OFFCURVE",
"260 732 OFFCURVE",
"260 517 CURVE SMOOTH"
);
}
);
width = 1300;
}
);
note = uni1780;
unicode = 1780;
},
{
glyphname = uni1781;
lastChange = "2020-02-04 09:00:33 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 726 OFFCURVE",
"233 672 OFFCURVE",
"478 672 CURVE SMOOTH",
"564 672 LINE",
"564 835 LINE",
"478 835 LINE",
"478 916 OFFCURVE",
"535 957 OFFCURVE",
"650 957 CURVE SMOOTH",
"765 957 OFFCURVE",
"822 916 OFFCURVE",
"822 835 CURVE SMOOTH",
"822 662 OFFCURVE",
"732 589 OFFCURVE",
"540 589 CURVE SMOOTH",
"259 589 OFFCURVE",
"110 492 OFFCURVE",
"110 325 CURVE SMOOTH",
"110 108 OFFCURVE",
"290 0 OFFCURVE",
"650 0 CURVE SMOOTH",
"1011 0 OFFCURVE",
"1190 116 OFFCURVE",
"1190 356 CURVE",
"822 356 LINE",
"822 288 OFFCURVE",
"797 253 OFFCURVE",
"748 239 CURVE SMOOTH",
"723 232 OFFCURVE",
"691 228 OFFCURVE",
"650 228 CURVE SMOOTH",
"567 228 OFFCURVE",
"521 236 OFFCURVE",
"497 264 CURVE SMOOTH",
"484 278 OFFCURVE",
"478 298 OFFCURVE",
"478 325 CURVE SMOOTH",
"478 369 OFFCURVE",
"501 406 OFFCURVE",
"540 406 CURVE SMOOTH",
"979 406 OFFCURVE",
"1190 539 OFFCURVE",
"1190 835 CURVE SMOOTH",
"1190 1052 OFFCURVE",
"1010 1160 OFFCURVE",
"650 1160 CURVE SMOOTH",
"290 1160 OFFCURVE",
"110 1052 OFFCURVE",
"110 835 CURVE SMOOTH"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 708 OFFCURVE",
"243 655 OFFCURVE",
"448 655 CURVE SMOOTH",
"534 655 LINE",
"534 813 LINE",
"448 813 LINE",
"448 892 OFFCURVE",
"515 932 OFFCURVE",
"650 932 CURVE SMOOTH",
"785 932 OFFCURVE",
"852 892 OFFCURVE",
"852 813 CURVE SMOOTH",
"852 644 OFFCURVE",
"743 574 OFFCURVE",
"510 574 CURVE SMOOTH",
"261 574 OFFCURVE",
"140 493 OFFCURVE",
"140 317 CURVE SMOOTH",
"140 106 OFFCURVE",
"310 0 OFFCURVE",
"650 0 CURVE SMOOTH",
"990 0 OFFCURVE",
"1160 112 OFFCURVE",
"1160 337 CURVE",
"852 337 LINE",
"852 244 OFFCURVE",
"785 198 OFFCURVE",
"650 198 CURVE SMOOTH",
"515 198 OFFCURVE",
"448 238 OFFCURVE",
"448 317 CURVE SMOOTH",
"448 366 OFFCURVE",
"470 396 OFFCURVE",
"510 396 CURVE SMOOTH",
"949 396 OFFCURVE",
"1160 525 OFFCURVE",
"1160 813 CURVE SMOOTH",
"1160 1024 OFFCURVE",
"990 1130 OFFCURVE",
"650 1130 CURVE SMOOTH",
"310 1130 OFFCURVE",
"140 1024 OFFCURVE",
"140 813 CURVE SMOOTH"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 721 OFFCURVE",
"263 675 OFFCURVE",
"388 675 CURVE SMOOTH",
"500 675 LINE",
"500 813 LINE",
"388 813 LINE",
"388 932 OFFCURVE",
"475 992 OFFCURVE",
"650 992 CURVE SMOOTH",
"825 992 OFFCURVE",
"912 932 OFFCURVE",
"912 813 CURVE SMOOTH",
"912 630 OFFCURVE",
"765 554 OFFCURVE",
"450 554 CURVE SMOOTH",
"286 554 OFFCURVE",
"200 465 OFFCURVE",
"200 317 CURVE SMOOTH",
"200 106 OFFCURVE",
"350 0 OFFCURVE",
"650 0 CURVE SMOOTH",
"950 0 OFFCURVE",
"1100 106 OFFCURVE",
"1100 317 CURVE",
"912 317 LINE",
"912 198 OFFCURVE",
"825 138 OFFCURVE",
"650 138 CURVE SMOOTH",
"475 138 OFFCURVE",
"388 198 OFFCURVE",
"388 317 CURVE SMOOTH",
"388 373 OFFCURVE",
"411 416 OFFCURVE",
"450 416 CURVE SMOOTH",
"889 416 OFFCURVE",
"1100 538 OFFCURVE",
"1100 813 CURVE SMOOTH",
"1100 1024 OFFCURVE",
"950 1130 OFFCURVE",
"650 1130 CURVE SMOOTH",
"350 1130 OFFCURVE",
"200 1024 OFFCURVE",
"200 813 CURVE SMOOTH"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 721 OFFCURVE",
"295 675 OFFCURVE",
"424 675 CURVE SMOOTH",
"500 675 LINE",
"500 773 LINE",
"424 773 LINE SMOOTH",
"373 773 OFFCURVE",
"348 786 OFFCURVE",
"348 813 CURVE SMOOTH",
"348 959 OFFCURVE",
"449 1032 OFFCURVE",
"650 1032 CURVE SMOOTH",
"851 1032 OFFCURVE",
"952 959 OFFCURVE",
"952 813 CURVE SMOOTH",
"952 614 OFFCURVE",
"785 514 OFFCURVE",
"450 514 CURVE SMOOTH",
"303 514 OFFCURVE",
"230 448 OFFCURVE",
"230 317 CURVE SMOOTH",
"230 106 OFFCURVE",
"370 0 OFFCURVE",
"650 0 CURVE SMOOTH",
"930 0 OFFCURVE",
"1070 106 OFFCURVE",
"1070 317 CURVE",
"952 317 LINE",
"952 171 OFFCURVE",
"851 98 OFFCURVE",
"650 98 CURVE SMOOTH",
"449 98 OFFCURVE",
"348 171 OFFCURVE",
"348 317 CURVE SMOOTH",
"348 383 OFFCURVE",
"382 416 OFFCURVE",
"450 416 CURVE SMOOTH",
"863 416 OFFCURVE",
"1070 548 OFFCURVE",
"1070 813 CURVE SMOOTH",
"1070 1024 OFFCURVE",
"930 1130 OFFCURVE",
"650 1130 CURVE SMOOTH",
"370 1130 OFFCURVE",
"230 1024 OFFCURVE",
"230 813 CURVE SMOOTH"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 721 OFFCURVE",
"315 675 OFFCURVE",
"424 675 CURVE SMOOTH",
"500 675 LINE",
"500 733 LINE",
"424 733 LINE SMOOTH",
"353 733 OFFCURVE",
"318 760 OFFCURVE",
"318 813 CURVE SMOOTH",
"318 986 OFFCURVE",
"429 1072 OFFCURVE",
"650 1072 CURVE SMOOTH",
"871 1072 OFFCURVE",
"982 986 OFFCURVE",
"982 813 CURVE SMOOTH",
"982 600 OFFCURVE",
"805 494 OFFCURVE",
"450 494 CURVE SMOOTH",
"323 494 OFFCURVE",
"260 435 OFFCURVE",
"260 317 CURVE SMOOTH",
"260 106 OFFCURVE",
"390 0 OFFCURVE",
"650 0 CURVE SMOOTH",
"910 0 OFFCURVE",
"1040 106 OFFCURVE",
"1040 317 CURVE",
"982 317 LINE",
"982 144 OFFCURVE",
"871 58 OFFCURVE",
"650 58 CURVE SMOOTH",
"429 58 OFFCURVE",
"318 144 OFFCURVE",
"318 317 CURVE SMOOTH",
"318 396 OFFCURVE",
"362 436 OFFCURVE",
"450 436 CURVE SMOOTH",
"843 436 OFFCURVE",
"1040 562 OFFCURVE",
"1040 813 CURVE SMOOTH",
"1040 1024 OFFCURVE",
"910 1130 OFFCURVE",
"650 1130 CURVE SMOOTH",
"390 1130 OFFCURVE",
"260 1024 OFFCURVE",
"260 813 CURVE SMOOTH"
);
}
);
width = 1300;
}
);
note = uni1781;
unicode = 1781;
},
{
glyphname = uni1782;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1190 1160 LINE",
"110 1160 LINE",
"110 932 LINE",
"1190 932 LINE",
"1190 932 LINE"
);
},
{
closed = 1;
nodes = (
"110 810 OFFCURVE",
"110 487 QCURVE SMOOTH",
"110 0 LINE",
"478 0 LINE",
"478 80 LINE",
"491 99 OFFCURVE",
"493 102 QCURVE SMOOTH",
"526 150 OFFCURVE",
"562 188 OFFCURVE",
"590 200 QCURVE SMOOTH",
"619 212 OFFCURVE",
"666 212 QCURVE SMOOTH",
"700 212 LINE",
"700 400 LINE",
"662 400 LINE SMOOTH",
"533 400 OFFCURVE",
"478 321 QCURVE",
"478 487 LINE SMOOTH",
"478 592 OFFCURVE",
"650 592 QCURVE SMOOTH",
"822 592 OFFCURVE",
"822 487 QCURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 487 LINE SMOOTH",
"1190 810 OFFCURVE",
"650 810 QCURVE",
"650 810 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 1130 LINE",
"140 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"1160 1130 LINE"
);
},
{
closed = 1;
nodes = (
"448 487 LINE SMOOTH",
"448 652 OFFCURVE",
"650 652 QCURVE SMOOTH",
"852 652 OFFCURVE",
"852 487 QCURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 487 LINE SMOOTH",
"1160 810 OFFCURVE",
"650 810 QCURVE SMOOTH",
"140 810 OFFCURVE",
"140 487 QCURVE SMOOTH",
"140 0 LINE",
"448 0 LINE",
"448 86 LINE",
"470 146 OFFCURVE",
"558 212 OFFCURVE",
"636 212 QCURVE SMOOTH",
"700 212 LINE",
"700 400 LINE",
"636 400 LINE SMOOTH",
"517 400 OFFCURVE",
"448 320 QCURVE",
"448 320 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 517 LINE SMOOTH",
"388 702 OFFCURVE",
"650 702 QCURVE SMOOTH",
"912 702 OFFCURVE",
"912 517 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 517 LINE SMOOTH",
"1100 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"200 840 OFFCURVE",
"200 517 QCURVE SMOOTH",
"200 0 LINE",
"388 0 LINE",
"388 86 LINE",
"403 147 OFFCURVE",
"448 222 OFFCURVE",
"529 262 OFFCURVE",
"596 262 QCURVE SMOOTH",
"700 262 LINE",
"700 400 LINE",
"596 400 LINE SMOOTH",
"457 400 OFFCURVE",
"388 320 QCURVE",
"388 320 LINE"
);
},
{
closed = 1;
nodes = (
"200 1130 LINE",
"200 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"1100 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 1130 LINE",
"230 1032 LINE",
"1070 1032 LINE",
"1070 1130 LINE",
"1070 1130 LINE"
);
},
{
closed = 1;
nodes = (
"348 517 LINE SMOOTH",
"348 742 OFFCURVE",
"650 742 QCURVE SMOOTH",
"952 742 OFFCURVE",
"952 517 QCURVE SMOOTH",
"952 0 LINE",
"1070 0 LINE",
"1070 517 LINE SMOOTH",
"1070 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"230 840 OFFCURVE",
"230 517 QCURVE SMOOTH",
"230 0 LINE",
"348 0 LINE",
"348 36 LINE",
"371 132 OFFCURVE",
"491 262 OFFCURVE",
"586 262 QCURVE SMOOTH",
"660 262 LINE",
"660 360 LINE",
"586 360 LINE SMOOTH",
"447 360 OFFCURVE",
"348 230 QCURVE",
"348 230 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 1130 LINE",
"260 1072 LINE",
"1040 1072 LINE",
"1040 1130 LINE",
"1040 1130 LINE"
);
},
{
closed = 1;
nodes = (
"318 517 LINE SMOOTH",
"318 782 OFFCURVE",
"650 782 QCURVE SMOOTH",
"982 782 OFFCURVE",
"982 517 QCURVE SMOOTH",
"982 0 LINE",
"1040 0 LINE",
"1040 517 LINE SMOOTH",
"1040 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"260 840 OFFCURVE",
"260 517 QCURVE SMOOTH",
"260 0 LINE",
"318 0 LINE",
"318 66 LINE",
"333 116 OFFCURVE",
"404 216 OFFCURVE",
"512 282 OFFCURVE",
"576 282 QCURVE SMOOTH",
"650 282 LINE",
"650 340 LINE",
"576 340 LINE SMOOTH",
"417 340 OFFCURVE",
"318 170 QCURVE",
"318 170 LINE"
);
}
);
width = 1300;
}
);
note = uni1782;
unicode = 1782;
},
{
glyphname = uni1783;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"682 827 LINE",
"772 704 LINE",
"772 323 LINE SMOOTH",
"772 228 OFFCURVE",
"625 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 323 QCURVE SMOOTH",
"478 495 LINE",
"580 677 OFFCURVE",
"580 890 QCURVE SMOOTH",
"580 1160 LINE",
"110 1160 LINE",
"110 932 LINE",
"262 932 LINE",
"262 890 LINE SMOOTH",
"262 698 OFFCURVE",
"110 543 QCURVE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"625 0 QCURVE SMOOTH",
"850 0 OFFCURVE",
"956 91 QCURVE",
"1062 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1802 0 OFFCURVE",
"1802 323 QCURVE SMOOTH",
"1802 704 LINE SMOOTH",
"1802 772 OFFCURVE",
"1702 826 QCURVE SMOOTH",
"1602 880 LINE",
"1602 932 LINE",
"1802 932 LINE",
"1802 1160 LINE",
"1512 1160 LINE SMOOTH",
"1284 1160 OFFCURVE",
"1284 932 QCURVE SMOOTH",
"1284 827 LINE",
"1434 704 LINE",
"1434 323 LINE SMOOTH",
"1434 228 OFFCURVE",
"1287 228 QCURVE SMOOTH",
"1140 228 OFFCURVE",
"1140 323 QCURVE SMOOTH",
"1140 704 LINE SMOOTH",
"1140 772 OFFCURVE",
"1065 826 QCURVE SMOOTH",
"990 880 LINE",
"990 932 LINE",
"1160 932 LINE",
"1160 1160 LINE",
"900 1160 LINE SMOOTH",
"682 1160 OFFCURVE",
"682 962 QCURVE",
"682 962 LINE"
);
}
);
width = 1912;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"692 827 LINE",
"802 704 LINE",
"802 323 LINE SMOOTH",
"802 198 OFFCURVE",
"625 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE SMOOTH",
"448 495 LINE",
"560 677 OFFCURVE",
"560 890 QCURVE SMOOTH",
"560 1130 LINE",
"140 1130 LINE",
"140 932 LINE",
"292 932 LINE",
"292 890 LINE SMOOTH",
"292 697 OFFCURVE",
"140 543 QCURVE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"625 0 QCURVE SMOOTH",
"850 0 OFFCURVE",
"956 91 QCURVE",
"1062 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1772 0 OFFCURVE",
"1772 323 QCURVE SMOOTH",
"1772 704 LINE SMOOTH",
"1772 772 OFFCURVE",
"1672 826 QCURVE SMOOTH",
"1572 880 LINE",
"1572 932 LINE",
"1772 932 LINE",
"1772 1130 LINE",
"1512 1130 LINE SMOOTH",
"1304 1130 OFFCURVE",
"1304 932 QCURVE SMOOTH",
"1304 827 LINE",
"1464 704 LINE",
"1464 323 LINE SMOOTH",
"1464 198 OFFCURVE",
"1287 198 QCURVE SMOOTH",
"1110 198 OFFCURVE",
"1110 323 QCURVE SMOOTH",
"1110 704 LINE SMOOTH",
"1110 772 OFFCURVE",
"1035 826 QCURVE SMOOTH",
"960 880 LINE",
"960 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"900 1130 LINE SMOOTH",
"692 1130 OFFCURVE",
"692 962 QCURVE",
"692 962 LINE"
);
}
);
width = 1912;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 962 LINE",
"352 962 LINE",
"352 890 LINE SMOOTH",
"352 697 OFFCURVE",
"200 543 QCURVE",
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"625 0 QCURVE SMOOTH",
"850 0 OFFCURVE",
"956 91 QCURVE",
"1062 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1712 0 OFFCURVE",
"1712 323 QCURVE SMOOTH",
"1712 734 LINE SMOOTH",
"1712 793 OFFCURVE",
"1607 851 QCURVE SMOOTH",
"1502 910 LINE",
"1502 992 LINE",
"1712 992 LINE",
"1712 1130 LINE",
"1512 1130 LINE SMOOTH",
"1334 1130 OFFCURVE",
"1334 992 QCURVE SMOOTH",
"1334 857 LINE",
"1524 734 LINE",
"1524 323 LINE SMOOTH",
"1524 138 OFFCURVE",
"1287 138 QCURVE SMOOTH",
"1050 138 OFFCURVE",
"1050 323 QCURVE SMOOTH",
"1050 734 LINE SMOOTH",
"1050 792 OFFCURVE",
"970 851 QCURVE SMOOTH",
"890 910 LINE",
"890 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"900 1130 LINE SMOOTH",
"722 1130 OFFCURVE",
"722 992 QCURVE SMOOTH",
"722 857 LINE",
"862 734 LINE",
"862 323 LINE SMOOTH",
"862 138 OFFCURVE",
"625 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 495 LINE",
"520 678 OFFCURVE",
"520 890 QCURVE SMOOTH",
"520 1130 LINE",
"200 1130 LINE",
"200 1130 LINE"
);
}
);
width = 1912;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1052 0 OFFCURVE",
"1292 0 QCURVE SMOOTH",
"1682 0 OFFCURVE",
"1682 323 QCURVE SMOOTH",
"1682 714 LINE SMOOTH",
"1682 802 OFFCURVE",
"1582 856 QCURVE SMOOTH",
"1482 910 LINE",
"1482 992 LINE SMOOTH",
"1482 1032 OFFCURVE",
"1532 1032 QCURVE SMOOTH",
"1682 1032 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 857 LINE",
"1517 772 LINE SMOOTH",
"1564 743 OFFCURVE",
"1564 714 QCURVE SMOOTH",
"1564 323 LINE SMOOTH",
"1564 98 OFFCURVE",
"1292 98 QCURVE SMOOTH",
"1020 98 OFFCURVE",
"1020 323 QCURVE SMOOTH",
"1020 714 LINE SMOOTH",
"1020 802 OFFCURVE",
"945 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1110 1032 LINE",
"1110 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"867 772 LINE SMOOTH",
"902 743 OFFCURVE",
"902 714 QCURVE SMOOTH",
"902 323 LINE SMOOTH",
"902 98 OFFCURVE",
"625 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 615 LINE",
"480 798 OFFCURVE",
"480 910 QCURVE SMOOTH",
"480 1130 LINE",
"230 1130 LINE",
"230 1032 LINE",
"382 1032 LINE",
"382 910 LINE SMOOTH",
"382 817 OFFCURVE",
"230 663 QCURVE",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"625 0 QCURVE SMOOTH",
"867 0 OFFCURVE",
"961 121 QCURVE",
"961 121 LINE"
);
}
);
width = 1912;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"960 714 LINE SMOOTH",
"960 785 OFFCURVE",
"880 842 QCURVE SMOOTH",
"800 899 LINE",
"800 992 LINE SMOOTH",
"800 1072 OFFCURVE",
"890 1072 QCURVE SMOOTH",
"1050 1072 LINE",
"1050 1130 LINE",
"890 1130 LINE SMOOTH",
"742 1130 OFFCURVE",
"742 992 QCURVE SMOOTH",
"742 869 LINE",
"842 797 LINE SMOOTH",
"902 753 OFFCURVE",
"902 714 QCURVE SMOOTH",
"902 323 LINE SMOOTH",
"902 58 OFFCURVE",
"610 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE SMOOTH",
"318 615 LINE",
"450 798 OFFCURVE",
"450 910 QCURVE SMOOTH",
"450 1130 LINE",
"220 1130 LINE",
"220 1072 LINE",
"392 1072 LINE",
"392 910 LINE SMOOTH",
"392 806 OFFCURVE",
"260 633 QCURVE",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"610 0 QCURVE SMOOTH",
"860 0 OFFCURVE",
"931 165 QCURVE",
"1005 0 OFFCURVE",
"1262 0 QCURVE SMOOTH",
"1622 0 OFFCURVE",
"1622 323 QCURVE SMOOTH",
"1622 714 LINE SMOOTH",
"1622 769 OFFCURVE",
"1512 837 QCURVE SMOOTH",
"1402 903 LINE",
"1402 992 LINE SMOOTH",
"1402 1072 OFFCURVE",
"1502 1072 QCURVE SMOOTH",
"1652 1072 LINE",
"1652 1130 LINE",
"1502 1130 LINE SMOOTH",
"1344 1130 OFFCURVE",
"1344 992 QCURVE SMOOTH",
"1344 869 LINE",
"1482 786 LINE SMOOTH",
"1564 737 OFFCURVE",
"1564 714 QCURVE SMOOTH",
"1564 323 LINE SMOOTH",
"1564 58 OFFCURVE",
"1262 58 QCURVE SMOOTH",
"960 58 OFFCURVE",
"960 323 QCURVE",
"960 323 LINE"
);
}
);
width = 1912;
}
);
note = uni1783;
unicode = 1783;
},
{
glyphname = uni1784;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"478 294 LINE",
"478 610 LINE",
"50 610 LINE",
"50 466 LINE",
"110 466 LINE",
"110 0 LINE",
"509 0 LINE",
"651 160 LINE",
"792 0 LINE",
"1190 0 LINE",
"1190 630 LINE",
"1057 791 LINE",
"1140 859 OFFCURVE",
"1140 958 QCURVE SMOOTH",
"1140 1160 OFFCURVE",
"861 1160 QCURVE SMOOTH",
"619 1160 OFFCURVE",
"619 983 QCURVE SMOOTH",
"619 954 OFFCURVE",
"655 894 QCURVE",
"650 893 OFFCURVE",
"620 893 QCURVE SMOOTH",
"478 893 OFFCURVE",
"478 992 QCURVE SMOOTH",
"478 1340 LINE",
"110 1340 LINE",
"110 992 LINE SMOOTH",
"110 675 OFFCURVE",
"620 675 QCURVE SMOOTH",
"672 675 OFFCURVE",
"766 685 QCURVE",
"822 560 LINE",
"822 295 LINE",
"651 455 LINE",
"651 455 LINE"
);
},
{
closed = 1;
nodes = (
"902 953 OFFCURVE",
"864 918 QCURVE",
"819 962 OFFCURVE",
"819 982 QCURVE SMOOTH",
"819 1012 OFFCURVE",
"861 1012 QCURVE SMOOTH",
"902 1012 OFFCURVE",
"902 978 QCURVE",
"902 978 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 466 LINE",
"140 0 LINE",
"479 0 LINE",
"651 160 LINE",
"822 0 LINE",
"1160 0 LINE",
"1160 630 LINE",
"1027 791 LINE",
"1110 859 OFFCURVE",
"1110 958 QCURVE SMOOTH",
"1110 1130 OFFCURVE",
"861 1130 QCURVE SMOOTH",
"660 1130 OFFCURVE",
"628 1028 QCURVE SMOOTH",
"619 1000 OFFCURVE",
"619 963 QCURVE SMOOTH",
"619 914 OFFCURVE",
"655 864 QCURVE",
"644 863 OFFCURVE",
"620 863 QCURVE SMOOTH",
"448 863 OFFCURVE",
"448 992 QCURVE SMOOTH",
"448 1340 LINE",
"140 1340 LINE",
"140 992 LINE SMOOTH",
"140 675 OFFCURVE",
"620 675 QCURVE SMOOTH",
"692 675 OFFCURVE",
"796 685 QCURVE",
"852 560 LINE",
"852 265 LINE",
"651 425 LINE",
"448 264 LINE",
"448 610 LINE",
"50 610 LINE",
"50 466 LINE",
"50 466 LINE"
);
},
{
closed = 1;
nodes = (
"912 933 OFFCURVE",
"864 898 QCURVE",
"809 941 OFFCURVE",
"809 962 QCURVE SMOOTH",
"809 992 OFFCURVE",
"861 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 958 QCURVE",
"912 958 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"674 863 OFFCURVE",
"650 863 QCURVE SMOOTH",
"388 863 OFFCURVE",
"388 992 QCURVE SMOOTH",
"388 1340 LINE",
"200 1340 LINE",
"200 992 LINE SMOOTH",
"200 725 OFFCURVE",
"650 725 QCURVE SMOOTH",
"720 725 OFFCURVE",
"796 735 QCURVE",
"912 610 LINE",
"912 167 LINE",
"651 405 LINE",
"388 166 LINE",
"388 660 LINE",
"100 660 LINE",
"100 516 LINE",
"200 516 LINE",
"200 0 LINE",
"419 0 LINE",
"651 210 LINE",
"882 0 LINE",
"1100 0 LINE",
"1100 660 LINE",
"977 791 LINE",
"1050 858 OFFCURVE",
"1050 968 QCURVE SMOOTH",
"1050 1130 OFFCURVE",
"861 1130 QCURVE SMOOTH",
"690 1130 OFFCURVE",
"658 1028 QCURVE SMOOTH",
"649 1000 OFFCURVE",
"649 973 QCURVE SMOOTH",
"649 914 OFFCURVE",
"685 864 QCURVE",
"685 864 LINE"
);
},
{
closed = 1;
nodes = (
"809 941 OFFCURVE",
"809 972 QCURVE SMOOTH",
"809 1012 OFFCURVE",
"861 1012 QCURVE SMOOTH",
"912 1012 OFFCURVE",
"912 968 QCURVE SMOOTH",
"912 933 OFFCURVE",
"864 898 QCURVE",
"864 898 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 0 LINE",
"348 0 LINE",
"650 277 LINE",
"952 0 LINE",
"1070 0 LINE",
"1070 647 LINE",
"917 814 LINE",
"1009 857 OFFCURVE",
"1020 968 QCURVE",
"1020 1130 OFFCURVE",
"850 1130 QCURVE SMOOTH",
"679 1130 OFFCURVE",
"679 973 QCURVE SMOOTH",
"679 928 OFFCURVE",
"752 849 QCURVE",
"697 823 OFFCURVE",
"620 823 QCURVE SMOOTH",
"348 823 OFFCURVE",
"348 992 QCURVE SMOOTH",
"348 1340 LINE",
"230 1340 LINE",
"230 992 LINE SMOOTH",
"230 725 OFFCURVE",
"620 725 QCURVE SMOOTH",
"716 725 OFFCURVE",
"821 772 QCURVE",
"952 630 LINE",
"952 134 LINE",
"650 411 LINE",
"348 134 LINE",
"348 660 LINE",
"130 660 LINE",
"130 556 LINE",
"230 556 LINE",
"230 556 LINE"
);
},
{
closed = 1;
nodes = (
"922 932 OFFCURVE",
"846 892 QCURVE",
"789 951 OFFCURVE",
"789 972 QCURVE SMOOTH",
"789 1042 OFFCURVE",
"856 1042 QCURVE SMOOTH",
"922 1042 OFFCURVE",
"922 968 QCURVE",
"922 968 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"140 596 LINE",
"260 596 LINE",
"260 0 LINE",
"318 0 LINE",
"650 280 LINE",
"982 0 LINE",
"1040 0 LINE",
"1040 654 LINE",
"882 823 LINE",
"1010 892 OFFCURVE",
"1010 988 QCURVE SMOOTH",
"1010 1130 OFFCURVE",
"861 1130 QCURVE SMOOTH",
"711 1130 OFFCURVE",
"711 993 QCURVE SMOOTH",
"711 918 OFFCURVE",
"787 839 QCURVE",
"718 803 OFFCURVE",
"590 803 QCURVE SMOOTH",
"318 803 OFFCURVE",
"318 992 QCURVE SMOOTH",
"318 1340 LINE",
"260 1340 LINE",
"260 992 LINE SMOOTH",
"260 745 OFFCURVE",
"590 745 QCURVE SMOOTH",
"732 745 OFFCURVE",
"829 794 QCURVE",
"982 630 LINE",
"982 76 LINE",
"650 353 LINE",
"318 76 LINE",
"318 660 LINE",
"140 660 LINE",
"140 660 LINE"
);
},
{
closed = 1;
nodes = (
"952 927 OFFCURVE",
"841 868 QCURVE",
"769 942 OFFCURVE",
"769 992 QCURVE SMOOTH",
"769 1072 OFFCURVE",
"861 1072 QCURVE SMOOTH",
"952 1072 OFFCURVE",
"952 988 QCURVE",
"952 988 LINE"
);
}
);
width = 1300;
}
);
note = uni1784;
unicode = 1784;
},
{
glyphname = uni1785;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1190 820 LINE",
"700 820 LINE",
"700 582 LINE",
"822 582 LINE",
"822 323 LINE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 323 QCURVE SMOOTH",
"478 714 LINE SMOOTH",
"478 763 OFFCURVE",
"348 890 QCURVE",
"348 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"258 1160 LINE SMOOTH",
"40 1160 OFFCURVE",
"40 972 QCURVE SMOOTH",
"40 847 LINE",
"110 714 LINE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 323 QCURVE",
"1190 323 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"852 323 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE SMOOTH",
"448 714 LINE SMOOTH",
"448 762 OFFCURVE",
"318 890 QCURVE",
"318 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"258 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 972 QCURVE SMOOTH",
"60 847 LINE",
"140 714 LINE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 820 LINE",
"700 820 LINE",
"700 612 LINE",
"852 612 LINE",
"852 612 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 323 LINE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 734 LINE SMOOTH",
"388 782 OFFCURVE",
"258 910 QCURVE",
"258 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"200 734 LINE",
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 840 LINE",
"700 840 LINE",
"700 672 LINE",
"912 672 LINE",
"912 672 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 323 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 714 LINE SMOOTH",
"348 782 OFFCURVE",
"273 846 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"198 775 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 840 LINE",
"700 840 LINE",
"700 732 LINE",
"952 732 LINE",
"952 732 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"700 782 LINE",
"982 782 LINE",
"982 323 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE SMOOTH",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"1040 1072 LINE",
"1040 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 323 QCURVE SMOOTH",
"1040 840 LINE",
"700 840 LINE",
"700 840 LINE"
);
}
);
width = 1300;
}
);
note = uni1785;
unicode = 1785;
},
{
glyphname = uni1786;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"40 847 LINE",
"110 714 LINE",
"110 430 LINE",
"40 430 LINE",
"40 172 LINE",
"110 172 LINE",
"110 0 LINE",
"478 0 LINE",
"478 179 LINE",
"630 0 OFFCURVE",
"770 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 323 QCURVE SMOOTH",
"1190 820 LINE",
"700 820 LINE",
"700 582 LINE",
"822 582 LINE",
"822 323 LINE SMOOTH",
"822 228 OFFCURVE",
"770 228 QCURVE SMOOTH",
"708 228 OFFCURVE",
"548 430 QCURVE",
"478 430 LINE",
"478 714 LINE SMOOTH",
"478 763 OFFCURVE",
"348 890 QCURVE",
"348 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"258 1160 LINE SMOOTH",
"40 1160 OFFCURVE",
"40 972 QCURVE",
"40 972 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"60 847 LINE",
"140 714 LINE",
"140 400 LINE",
"60 400 LINE",
"60 172 LINE",
"140 172 LINE",
"140 0 LINE",
"448 0 LINE",
"448 179 LINE",
"600 0 OFFCURVE",
"770 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 820 LINE",
"700 820 LINE",
"700 612 LINE",
"852 612 LINE",
"852 323 LINE SMOOTH",
"852 198 OFFCURVE",
"770 198 QCURVE SMOOTH",
"678 198 OFFCURVE",
"518 400 QCURVE",
"448 400 LINE",
"448 714 LINE SMOOTH",
"448 763 OFFCURVE",
"318 890 QCURVE",
"318 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"258 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 972 QCURVE",
"60 972 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 400 LINE",
"388 734 LINE SMOOTH",
"388 783 OFFCURVE",
"258 910 QCURVE",
"258 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"200 734 LINE",
"200 400 LINE",
"100 400 LINE",
"100 232 LINE",
"200 232 LINE",
"200 0 LINE",
"388 0 LINE",
"388 239 LINE",
"600 0 OFFCURVE",
"770 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 840 LINE",
"700 840 LINE",
"700 672 LINE",
"912 672 LINE",
"912 323 LINE SMOOTH",
"912 138 OFFCURVE",
"770 138 QCURVE SMOOTH",
"678 138 OFFCURVE",
"488 400 QCURVE",
"488 400 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"700 732 LINE",
"952 732 LINE",
"952 323 LINE SMOOTH",
"952 98 OFFCURVE",
"790 98 QCURVE SMOOTH",
"678 98 OFFCURVE",
"468 380 QCURVE",
"348 380 LINE",
"348 714 LINE SMOOTH",
"348 782 OFFCURVE",
"273 846 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"198 775 LINE SMOOTH",
"230 743 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 380 LINE",
"100 380 LINE",
"100 282 LINE",
"230 282 LINE",
"230 0 LINE",
"348 0 LINE",
"348 289 LINE",
"418 289 LINE",
"629 0 OFFCURVE",
"790 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 840 LINE",
"700 840 LINE",
"700 840 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 380 LINE",
"100 380 LINE",
"100 322 LINE",
"260 322 LINE",
"260 0 LINE",
"318 0 LINE",
"318 329 LINE",
"428 329 LINE",
"640 0 OFFCURVE",
"810 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 323 QCURVE SMOOTH",
"1040 840 LINE",
"700 840 LINE",
"700 782 LINE",
"982 782 LINE",
"982 323 LINE SMOOTH",
"982 58 OFFCURVE",
"810 58 QCURVE SMOOTH",
"668 58 OFFCURVE",
"458 380 QCURVE",
"318 380 LINE",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"1040 1072 LINE",
"1040 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE",
"260 714 LINE"
);
}
);
width = 1300;
}
);
note = uni1786;
unicode = 1786;
},
{
glyphname = uni1787;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"509 0 LINE",
"651 160 LINE",
"792 0 LINE",
"1190 0 LINE",
"1190 780 LINE",
"822 780 LINE",
"822 295 LINE",
"651 455 LINE",
"478 294 LINE",
"478 714 LINE SMOOTH",
"478 763 OFFCURVE",
"348 890 QCURVE",
"348 932 LINE",
"385 932 LINE SMOOTH",
"415 932 OFFCURVE",
"543 902 QCURVE SMOOTH",
"651 872 OFFCURVE",
"750 872 QCURVE SMOOTH",
"1190 872 OFFCURVE",
"1190 1205 QCURVE SMOOTH",
"1190 1280 LINE",
"822 1280 LINE",
"822 1205 LINE SMOOTH",
"822 1100 OFFCURVE",
"740 1100 QCURVE SMOOTH",
"580 1100 OFFCURVE",
"501 1130 QCURVE",
"402 1160 OFFCURVE",
"355 1160 QCURVE SMOOTH",
"258 1160 LINE SMOOTH",
"40 1160 OFFCURVE",
"40 972 QCURVE SMOOTH",
"40 847 LINE",
"110 714 LINE",
"110 0 LINE",
"110 0 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1160 780 LINE",
"852 780 LINE",
"852 265 LINE",
"651 425 LINE",
"448 264 LINE",
"448 714 LINE SMOOTH",
"448 763 OFFCURVE",
"318 890 QCURVE",
"318 932 LINE",
"355 932 LINE SMOOTH",
"386 932 OFFCURVE",
"513 902 QCURVE SMOOTH",
"641 872 OFFCURVE",
"770 872 QCURVE SMOOTH",
"1160 872 OFFCURVE",
"1160 1175 QCURVE SMOOTH",
"1160 1280 LINE",
"852 1280 LINE",
"852 1175 LINE SMOOTH",
"852 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"501 1100 QCURVE SMOOTH",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"258 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 972 QCURVE SMOOTH",
"60 847 LINE",
"140 714 LINE",
"140 0 LINE",
"479 0 LINE",
"651 160 LINE",
"822 0 LINE",
"1160 0 LINE",
"1160 0 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"651 405 LINE",
"388 166 LINE",
"388 734 LINE SMOOTH",
"388 783 OFFCURVE",
"258 910 QCURVE",
"258 992 LINE",
"355 992 LINE SMOOTH",
"386 992 OFFCURVE",
"513 962 QCURVE SMOOTH",
"641 932 OFFCURVE",
"770 932 QCURVE SMOOTH",
"1100 932 OFFCURVE",
"1100 1175 QCURVE SMOOTH",
"1100 1280 LINE",
"912 1280 LINE",
"912 1175 LINE SMOOTH",
"912 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"501 1100 QCURVE SMOOTH",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"200 734 LINE",
"200 0 LINE",
"419 0 LINE",
"651 210 LINE",
"882 0 LINE",
"1100 0 LINE",
"1100 800 LINE",
"912 800 LINE",
"912 167 LINE",
"912 167 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1070 840 LINE",
"952 840 LINE",
"952 134 LINE",
"650 411 LINE",
"348 134 LINE",
"348 714 LINE SMOOTH",
"348 782 OFFCURVE",
"273 846 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"355 1032 LINE SMOOTH",
"386 1032 OFFCURVE",
"513 1002 QCURVE SMOOTH",
"641 972 OFFCURVE",
"770 972 QCURVE SMOOTH",
"1070 972 OFFCURVE",
"1070 1175 QCURVE SMOOTH",
"1070 1280 LINE",
"952 1280 LINE",
"952 1175 LINE SMOOTH",
"952 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"501 1100 QCURVE SMOOTH",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"198 775 LINE SMOOTH",
"230 743 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 0 LINE",
"348 0 LINE",
"650 277 LINE",
"952 0 LINE",
"1070 0 LINE",
"1070 0 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 0 LINE",
"318 0 LINE",
"650 280 LINE",
"982 0 LINE",
"1040 0 LINE",
"1040 840 LINE",
"982 840 LINE",
"982 76 LINE",
"650 353 LINE",
"318 76 LINE",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"355 1072 LINE SMOOTH",
"387 1072 OFFCURVE",
"513 1032 QCURVE SMOOTH",
"639 992 OFFCURVE",
"770 992 QCURVE SMOOTH",
"1040 992 OFFCURVE",
"1040 1175 QCURVE SMOOTH",
"1040 1280 LINE",
"982 1280 LINE",
"982 1175 LINE SMOOTH",
"982 1050 OFFCURVE",
"760 1050 QCURVE SMOOTH",
"599 1050 OFFCURVE",
"501 1090 QCURVE SMOOTH",
"403 1130 OFFCURVE",
"355 1130 QCURVE",
"355 1130 LINE"
);
}
);
width = 1300;
}
);
note = uni1787;
unicode = 1787;
},
{
glyphname = uni1788;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1946 827 LINE",
"2096 704 LINE",
"2096 323 LINE SMOOTH",
"2096 228 OFFCURVE",
"1949 228 QCURVE SMOOTH",
"1802 228 OFFCURVE",
"1802 323 QCURVE SMOOTH",
"1802 704 LINE SMOOTH",
"1802 772 OFFCURVE",
"1702 826 QCURVE SMOOTH",
"1602 880 LINE",
"1602 932 LINE",
"1802 932 LINE",
"1802 1160 LINE",
"1512 1160 LINE SMOOTH",
"1284 1160 OFFCURVE",
"1284 932 QCURVE SMOOTH",
"1284 827 LINE",
"1434 704 LINE",
"1434 323 LINE SMOOTH",
"1434 228 OFFCURVE",
"1287 228 QCURVE SMOOTH",
"1140 228 OFFCURVE",
"1140 323 QCURVE SMOOTH",
"1140 807 LINE SMOOTH",
"1140 1160 OFFCURVE",
"625 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 807 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"478 228 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 807 LINE SMOOTH",
"478 932 OFFCURVE",
"625 932 QCURVE SMOOTH",
"772 932 OFFCURVE",
"772 807 QCURVE SMOOTH",
"772 323 LINE SMOOTH",
"772 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1512 0 OFFCURVE",
"1618 91 QCURVE",
"1724 0 OFFCURVE",
"1949 0 QCURVE SMOOTH",
"2464 0 OFFCURVE",
"2464 323 QCURVE SMOOTH",
"2464 704 LINE SMOOTH",
"2464 772 OFFCURVE",
"2364 826 QCURVE SMOOTH",
"2264 880 LINE",
"2264 932 LINE",
"2464 932 LINE",
"2464 1160 LINE",
"2174 1160 LINE SMOOTH",
"1946 1160 OFFCURVE",
"1946 932 QCURVE",
"1946 932 LINE"
);
}
);
width = 2574;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1966 827 LINE",
"2126 704 LINE",
"2126 323 LINE SMOOTH",
"2126 198 OFFCURVE",
"1949 198 QCURVE SMOOTH",
"1772 198 OFFCURVE",
"1772 323 QCURVE SMOOTH",
"1772 704 LINE SMOOTH",
"1772 772 OFFCURVE",
"1672 826 QCURVE SMOOTH",
"1572 880 LINE",
"1572 932 LINE",
"1772 932 LINE",
"1772 1130 LINE",
"1512 1130 LINE SMOOTH",
"1304 1130 OFFCURVE",
"1304 932 QCURVE SMOOTH",
"1304 827 LINE",
"1464 704 LINE",
"1464 323 LINE SMOOTH",
"1464 198 OFFCURVE",
"1287 198 QCURVE SMOOTH",
"1110 198 OFFCURVE",
"1110 323 QCURVE SMOOTH",
"1110 807 LINE SMOOTH",
"1110 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 807 LINE SMOOTH",
"448 932 OFFCURVE",
"625 932 QCURVE SMOOTH",
"802 932 OFFCURVE",
"802 807 QCURVE SMOOTH",
"802 323 LINE SMOOTH",
"802 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1512 0 OFFCURVE",
"1618 91 QCURVE",
"1724 0 OFFCURVE",
"1949 0 QCURVE SMOOTH",
"2434 0 OFFCURVE",
"2434 323 QCURVE SMOOTH",
"2434 704 LINE SMOOTH",
"2434 772 OFFCURVE",
"2334 826 QCURVE SMOOTH",
"2234 880 LINE",
"2234 932 LINE",
"2434 932 LINE",
"2434 1130 LINE",
"2174 1130 LINE SMOOTH",
"1966 1130 OFFCURVE",
"1966 932 QCURVE",
"1966 932 LINE"
);
}
);
width = 2574;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1996 857 LINE",
"2186 734 LINE",
"2186 323 LINE SMOOTH",
"2186 138 OFFCURVE",
"1949 138 QCURVE SMOOTH",
"1712 138 OFFCURVE",
"1712 323 QCURVE SMOOTH",
"1712 734 LINE SMOOTH",
"1712 793 OFFCURVE",
"1612 851 QCURVE SMOOTH",
"1512 910 LINE",
"1512 992 LINE",
"1712 992 LINE",
"1712 1130 LINE",
"1512 1130 LINE SMOOTH",
"1334 1130 OFFCURVE",
"1334 992 QCURVE SMOOTH",
"1334 857 LINE",
"1524 734 LINE",
"1524 323 LINE SMOOTH",
"1524 138 OFFCURVE",
"1287 138 QCURVE SMOOTH",
"1050 138 OFFCURVE",
"1050 323 QCURVE SMOOTH",
"1050 807 LINE SMOOTH",
"1050 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 807 QCURVE SMOOTH",
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 807 LINE SMOOTH",
"388 992 OFFCURVE",
"625 992 QCURVE SMOOTH",
"862 992 OFFCURVE",
"862 807 QCURVE SMOOTH",
"862 323 LINE SMOOTH",
"862 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1512 0 OFFCURVE",
"1618 91 QCURVE",
"1724 0 OFFCURVE",
"1949 0 QCURVE SMOOTH",
"2374 0 OFFCURVE",
"2374 323 QCURVE SMOOTH",
"2374 734 LINE SMOOTH",
"2374 793 OFFCURVE",
"2274 851 QCURVE SMOOTH",
"2174 910 LINE",
"2174 992 LINE",
"2374 992 LINE",
"2374 1130 LINE",
"2174 1130 LINE SMOOTH",
"1996 1130 OFFCURVE",
"1996 992 QCURVE",
"1996 992 LINE"
);
}
);
width = 2574;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1564 323 LINE SMOOTH",
"1564 98 OFFCURVE",
"1292 98 QCURVE SMOOTH",
"1020 98 OFFCURVE",
"1020 323 QCURVE SMOOTH",
"1020 807 LINE SMOOTH",
"1020 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 807 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 807 LINE SMOOTH",
"348 1032 OFFCURVE",
"625 1032 QCURVE SMOOTH",
"902 1032 OFFCURVE",
"902 807 QCURVE SMOOTH",
"902 323 LINE SMOOTH",
"902 0 OFFCURVE",
"1292 0 QCURVE SMOOTH",
"1530 0 OFFCURVE",
"1623 121 QCURVE",
"1716 0 OFFCURVE",
"1954 0 QCURVE SMOOTH",
"2344 0 OFFCURVE",
"2344 323 QCURVE SMOOTH",
"2344 714 LINE SMOOTH",
"2344 802 OFFCURVE",
"2244 856 QCURVE SMOOTH",
"2144 910 LINE",
"2144 992 LINE SMOOTH",
"2144 1032 OFFCURVE",
"2194 1032 QCURVE SMOOTH",
"2344 1032 LINE",
"2344 1130 LINE",
"2194 1130 LINE SMOOTH",
"2036 1130 OFFCURVE",
"2036 992 QCURVE SMOOTH",
"2036 857 LINE",
"2179 772 LINE SMOOTH",
"2226 743 OFFCURVE",
"2226 714 QCURVE SMOOTH",
"2226 323 LINE SMOOTH",
"2226 98 OFFCURVE",
"1954 98 QCURVE SMOOTH",
"1682 98 OFFCURVE",
"1682 323 QCURVE SMOOTH",
"1682 714 LINE SMOOTH",
"1682 802 OFFCURVE",
"1582 856 QCURVE SMOOTH",
"1482 910 LINE",
"1482 992 LINE SMOOTH",
"1482 1032 OFFCURVE",
"1532 1032 QCURVE SMOOTH",
"1682 1032 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 857 LINE",
"1517 772 LINE SMOOTH",
"1564 743 OFFCURVE",
"1564 714 QCURVE",
"1564 714 LINE"
);
}
);
width = 2574;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1594 323 LINE SMOOTH",
"1594 58 OFFCURVE",
"1292 58 QCURVE SMOOTH",
"990 58 OFFCURVE",
"990 323 QCURVE SMOOTH",
"990 807 LINE SMOOTH",
"990 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 807 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 807 LINE SMOOTH",
"318 1072 OFFCURVE",
"625 1072 QCURVE SMOOTH",
"932 1072 OFFCURVE",
"932 807 QCURVE SMOOTH",
"932 323 LINE SMOOTH",
"932 0 OFFCURVE",
"1292 0 QCURVE SMOOTH",
"1550 0 OFFCURVE",
"1623 166 QCURVE",
"1696 0 OFFCURVE",
"1954 0 QCURVE SMOOTH",
"2314 0 OFFCURVE",
"2314 323 QCURVE SMOOTH",
"2314 714 LINE SMOOTH",
"2314 769 OFFCURVE",
"2204 837 QCURVE SMOOTH",
"2094 903 LINE",
"2094 992 LINE SMOOTH",
"2094 1072 OFFCURVE",
"2194 1072 QCURVE SMOOTH",
"2344 1072 LINE",
"2344 1130 LINE",
"2194 1130 LINE SMOOTH",
"2036 1130 OFFCURVE",
"2036 992 QCURVE SMOOTH",
"2036 869 LINE",
"2174 786 LINE SMOOTH",
"2256 737 OFFCURVE",
"2256 714 QCURVE SMOOTH",
"2256 323 LINE SMOOTH",
"2256 58 OFFCURVE",
"1954 58 QCURVE SMOOTH",
"1652 58 OFFCURVE",
"1652 323 QCURVE SMOOTH",
"1652 714 LINE SMOOTH",
"1652 769 OFFCURVE",
"1542 837 QCURVE SMOOTH",
"1432 903 LINE",
"1432 992 LINE SMOOTH",
"1432 1072 OFFCURVE",
"1532 1072 QCURVE SMOOTH",
"1682 1072 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 869 LINE",
"1512 786 LINE SMOOTH",
"1594 737 OFFCURVE",
"1594 714 QCURVE",
"1594 714 LINE"
);
}
);
width = 2574;
}
);
note = uni1788;
unicode = 1788;
},
{
glyphname = uni1789;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1035 1160 OFFCURVE",
"877 1160 QCURVE SMOOTH",
"762 1160 OFFCURVE",
"650 1036 QCURVE",
"539 1160 OFFCURVE",
"425 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 833 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"478 228 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 833 LINE SMOOTH",
"478 900 OFFCURVE",
"494 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"807 900 QCURVE SMOOTH",
"822 900 OFFCURVE",
"822 833 QCURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 807 LINE SMOOTH",
"1190 932 OFFCURVE",
"1382 932 QCURVE SMOOTH",
"1484 932 OFFCURVE",
"1484 807 QCURVE SMOOTH",
"1484 0 LINE",
"1852 0 LINE",
"1852 807 LINE SMOOTH",
"1852 1160 OFFCURVE",
"1412 1160 QCURVE SMOOTH",
"1250 1160 OFFCURVE",
"1104 1068 QCURVE",
"1104 1068 LINE"
);
},
{
closed = 1;
nodes = (
"1412 -50 LINE",
"1412 -230 LINE",
"1440 -230 LINE SMOOTH",
"1484 -230 OFFCURVE",
"1484 -275 QCURVE SMOOTH",
"1484 -300 OFFCURVE",
"1434 -300 QCURVE SMOOTH",
"1293 -300 OFFCURVE",
"1126 -195 QCURVE SMOOTH",
"960 -90 OFFCURVE",
"612 -90 QCURVE SMOOTH",
"110 -90 LINE",
"110 -330 LINE",
"612 -330 LINE SMOOTH",
"877 -330 OFFCURVE",
"1037 -415 QCURVE SMOOTH",
"1197 -500 OFFCURVE",
"1434 -500 QCURVE SMOOTH",
"1852 -500 OFFCURVE",
"1852 -275 QCURVE SMOOTH",
"1852 -50 OFFCURVE",
"1440 -50 QCURVE",
"1440 -50 LINE"
);
}
);
width = 1962;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1035 1130 OFFCURVE",
"877 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"425 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 833 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 833 LINE SMOOTH",
"448 900 OFFCURVE",
"481 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"820 900 QCURVE SMOOTH",
"852 900 OFFCURVE",
"852 833 QCURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 807 LINE SMOOTH",
"1160 932 OFFCURVE",
"1382 932 QCURVE SMOOTH",
"1514 932 OFFCURVE",
"1514 807 QCURVE SMOOTH",
"1514 0 LINE",
"1822 0 LINE",
"1822 807 LINE SMOOTH",
"1822 1130 OFFCURVE",
"1382 1130 QCURVE SMOOTH",
"1219 1130 OFFCURVE",
"1104 1038 QCURVE",
"1104 1038 LINE"
);
},
{
closed = 1;
nodes = (
"1412 -50 LINE",
"1412 -230 LINE",
"1440 -230 LINE SMOOTH",
"1514 -230 OFFCURVE",
"1514 -275 QCURVE SMOOTH",
"1514 -320 OFFCURVE",
"1434 -320 QCURVE SMOOTH",
"1292 -320 OFFCURVE",
"1126 -220 QCURVE SMOOTH",
"960 -120 OFFCURVE",
"612 -120 QCURVE SMOOTH",
"140 -120 LINE",
"140 -300 LINE",
"612 -300 LINE SMOOTH",
"877 -300 OFFCURVE",
"1037 -400 QCURVE SMOOTH",
"1197 -500 OFFCURVE",
"1434 -500 QCURVE SMOOTH",
"1822 -500 OFFCURVE",
"1822 -275 QCURVE SMOOTH",
"1822 -50 OFFCURVE",
"1440 -50 QCURVE",
"1440 -50 LINE"
);
}
);
width = 1962;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 853 LINE SMOOTH",
"388 980 OFFCURVE",
"461 980 QCURVE SMOOTH",
"510 980 OFFCURVE",
"591 886 QCURVE SMOOTH",
"618 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"682 855 OFFCURVE",
"709 886 QCURVE SMOOTH",
"791 980 OFFCURVE",
"840 980 QCURVE SMOOTH",
"912 980 OFFCURVE",
"912 853 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 807 LINE SMOOTH",
"1100 992 OFFCURVE",
"1362 992 QCURVE SMOOTH",
"1574 992 OFFCURVE",
"1574 807 QCURVE SMOOTH",
"1574 0 LINE",
"1762 0 LINE",
"1762 807 LINE SMOOTH",
"1762 1130 OFFCURVE",
"1362 1130 QCURVE SMOOTH",
"1170 1130 OFFCURVE",
"1060 1032 QCURVE",
"1001 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 853 QCURVE",
"200 853 LINE"
);
},
{
closed = 1;
nodes = (
"1412 -100 LINE",
"1412 -220 LINE",
"1500 -220 LINE SMOOTH",
"1574 -220 OFFCURVE",
"1574 -280 QCURVE SMOOTH",
"1574 -380 OFFCURVE",
"1434 -380 QCURVE SMOOTH",
"1292 -380 OFFCURVE",
"1126 -280 QCURVE SMOOTH",
"960 -180 OFFCURVE",
"612 -180 QCURVE SMOOTH",
"200 -180 LINE",
"200 -300 LINE",
"612 -300 LINE SMOOTH",
"877 -300 OFFCURVE",
"1037 -400 QCURVE SMOOTH",
"1197 -500 OFFCURVE",
"1434 -500 QCURVE SMOOTH",
"1762 -500 OFFCURVE",
"1762 -280 QCURVE SMOOTH",
"1762 -100 OFFCURVE",
"1500 -100 QCURVE",
"1500 -100 LINE"
);
}
);
width = 1962;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 0 LINE",
"1070 0 LINE",
"1070 807 LINE SMOOTH",
"1070 1032 OFFCURVE",
"1342 1032 QCURVE SMOOTH",
"1614 1032 OFFCURVE",
"1614 807 QCURVE SMOOTH",
"1614 0 LINE",
"1732 0 LINE",
"1732 807 LINE SMOOTH",
"1732 1130 OFFCURVE",
"1342 1130 QCURVE SMOOTH",
"1131 1130 OFFCURVE",
"1034 1035 QCURVE",
"981 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"763 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 853 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 853 LINE SMOOTH",
"348 1020 OFFCURVE",
"445 1020 QCURVE SMOOTH",
"500 1020 OFFCURVE",
"596 896 QCURVE SMOOTH",
"628 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"672 855 OFFCURVE",
"704 896 QCURVE SMOOTH",
"801 1020 OFFCURVE",
"857 1020 QCURVE SMOOTH",
"952 1020 OFFCURVE",
"952 853 QCURVE",
"952 853 LINE"
);
},
{
closed = 1;
nodes = (
"1412 -100 LINE",
"1412 -190 LINE",
"1500 -190 LINE SMOOTH",
"1614 -190 OFFCURVE",
"1614 -280 QCURVE SMOOTH",
"1614 -410 OFFCURVE",
"1434 -410 QCURVE SMOOTH",
"1262 -410 OFFCURVE",
"1081 -295 QCURVE SMOOTH",
"900 -180 OFFCURVE",
"612 -180 QCURVE SMOOTH",
"200 -180 LINE",
"200 -270 LINE",
"612 -270 LINE SMOOTH",
"877 -270 OFFCURVE",
"1037 -385 QCURVE SMOOTH",
"1197 -500 OFFCURVE",
"1434 -500 QCURVE SMOOTH",
"1732 -500 OFFCURVE",
"1732 -280 QCURVE SMOOTH",
"1732 -100 OFFCURVE",
"1500 -100 QCURVE",
"1500 -100 LINE"
);
}
);
width = 1962;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"982 0 LINE",
"1040 0 LINE",
"1040 807 LINE SMOOTH",
"1040 1072 OFFCURVE",
"1342 1072 QCURVE SMOOTH",
"1644 1072 OFFCURVE",
"1644 807 QCURVE SMOOTH",
"1644 0 LINE",
"1702 0 LINE",
"1702 807 LINE SMOOTH",
"1702 1130 OFFCURVE",
"1342 1130 QCURVE SMOOTH",
"1106 1130 OFFCURVE",
"1024 991 QCURVE",
"987 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"763 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 853 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 853 LINE SMOOTH",
"318 1072 OFFCURVE",
"445 1072 QCURVE SMOOTH",
"500 1072 OFFCURVE",
"596 954 QCURVE SMOOTH",
"628 915 OFFCURVE",
"650 915 QCURVE SMOOTH",
"673 915 OFFCURVE",
"704 954 QCURVE SMOOTH",
"801 1072 OFFCURVE",
"857 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 853 QCURVE",
"982 853 LINE"
);
},
{
closed = 1;
nodes = (
"1412 -70 LINE",
"1412 -128 LINE",
"1500 -128 LINE SMOOTH",
"1644 -128 OFFCURVE",
"1644 -250 QCURVE SMOOTH",
"1644 -392 OFFCURVE",
"1434 -392 QCURVE SMOOTH",
"1224 -392 OFFCURVE",
"1046 -261 QCURVE SMOOTH",
"868 -130 OFFCURVE",
"612 -130 QCURVE SMOOTH",
"260 -130 LINE",
"260 -188 LINE",
"612 -188 LINE SMOOTH",
"876 -188 OFFCURVE",
"1037 -319 QCURVE SMOOTH",
"1198 -450 OFFCURVE",
"1434 -450 QCURVE SMOOTH",
"1702 -450 OFFCURVE",
"1702 -250 QCURVE SMOOTH",
"1702 -70 OFFCURVE",
"1500 -70 QCURVE",
"1500 -70 LINE"
);
}
);
width = 1962;
}
);
note = uni1789;
unicode = 1789;
},
{
glyphname = uni178A;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1190 1340 LINE",
"822 1340 LINE",
"822 982 LINE SMOOTH",
"822 883 OFFCURVE",
"650 883 QCURVE SMOOTH",
"478 883 OFFCURVE",
"478 932 QCURVE",
"530 932 LINE",
"530 1160 LINE",
"388 1160 LINE SMOOTH",
"110 1160 OFFCURVE",
"110 932 QCURVE SMOOTH",
"110 665 OFFCURVE",
"650 665 QCURVE SMOOTH",
"1190 665 OFFCURVE",
"1190 982 QCURVE",
"1190 982 LINE"
);
},
{
closed = 1;
nodes = (
"478 600 LINE",
"110 600 LINE",
"110 0 LINE",
"509 0 LINE",
"651 160 LINE",
"792 0 LINE",
"1190 0 LINE",
"1190 600 LINE",
"822 600 LINE",
"822 295 LINE",
"651 455 LINE",
"478 294 LINE",
"478 294 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"852 982 LINE SMOOTH",
"852 883 OFFCURVE",
"650 883 QCURVE SMOOTH",
"448 883 OFFCURVE",
"448 932 QCURVE",
"500 932 LINE",
"500 1130 LINE",
"388 1130 LINE SMOOTH",
"140 1130 OFFCURVE",
"140 932 QCURVE SMOOTH",
"140 685 OFFCURVE",
"650 685 QCURVE SMOOTH",
"1160 685 OFFCURVE",
"1160 982 QCURVE SMOOTH",
"1160 1340 LINE",
"852 1340 LINE",
"852 1340 LINE"
);
},
{
closed = 1;
nodes = (
"140 0 LINE",
"479 0 LINE",
"651 160 LINE",
"822 0 LINE",
"1160 0 LINE",
"1160 620 LINE",
"852 620 LINE",
"852 265 LINE",
"651 425 LINE",
"448 264 LINE",
"448 620 LINE",
"140 620 LINE",
"140 620 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 992 LINE SMOOTH",
"912 863 OFFCURVE",
"650 863 QCURVE SMOOTH",
"388 863 OFFCURVE",
"388 992 QCURVE",
"500 992 LINE",
"500 1130 LINE",
"388 1130 LINE SMOOTH",
"200 1130 OFFCURVE",
"200 992 QCURVE SMOOTH",
"200 725 OFFCURVE",
"650 725 QCURVE SMOOTH",
"1100 725 OFFCURVE",
"1100 992 QCURVE SMOOTH",
"1100 1340 LINE",
"912 1340 LINE",
"912 1340 LINE"
);
},
{
closed = 1;
nodes = (
"912 660 LINE",
"912 167 LINE",
"651 405 LINE",
"388 166 LINE",
"388 660 LINE",
"200 660 LINE",
"200 0 LINE",
"419 0 LINE",
"651 210 LINE",
"882 0 LINE",
"1100 0 LINE",
"1100 660 LINE",
"1100 660 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 992 LINE SMOOTH",
"952 843 OFFCURVE",
"650 843 QCURVE SMOOTH",
"348 843 OFFCURVE",
"348 992 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"398 1032 QCURVE SMOOTH",
"500 1032 LINE",
"500 1130 LINE",
"398 1130 LINE SMOOTH",
"230 1130 OFFCURVE",
"230 992 QCURVE SMOOTH",
"230 745 OFFCURVE",
"650 745 QCURVE SMOOTH",
"1070 745 OFFCURVE",
"1070 992 QCURVE SMOOTH",
"1070 1340 LINE",
"952 1340 LINE",
"952 1340 LINE"
);
},
{
closed = 1;
nodes = (
"230 0 LINE",
"348 0 LINE",
"650 277 LINE",
"952 0 LINE",
"1070 0 LINE",
"1070 680 LINE",
"952 680 LINE",
"952 134 LINE",
"650 411 LINE",
"348 134 LINE",
"348 680 LINE",
"230 680 LINE",
"230 680 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1040 1340 LINE",
"982 1340 LINE",
"982 992 LINE SMOOTH",
"982 803 OFFCURVE",
"650 803 QCURVE SMOOTH",
"318 803 OFFCURVE",
"318 992 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"418 1072 QCURVE SMOOTH",
"500 1072 LINE",
"500 1130 LINE",
"418 1130 LINE SMOOTH",
"260 1130 OFFCURVE",
"260 992 QCURVE SMOOTH",
"260 745 OFFCURVE",
"650 745 QCURVE SMOOTH",
"1040 745 OFFCURVE",
"1040 992 QCURVE",
"1040 992 LINE"
);
},
{
closed = 1;
nodes = (
"982 680 LINE",
"982 76 LINE",
"650 353 LINE",
"318 76 LINE",
"318 680 LINE",
"260 680 LINE",
"260 0 LINE",
"318 0 LINE",
"650 280 LINE",
"982 0 LINE",
"1040 0 LINE",
"1040 680 LINE",
"1040 680 LINE"
);
}
);
width = 1300;
}
);
note = uni178A;
unicode = 178A;
},
{
glyphname = uni178B;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"478 495 LINE",
"570 677 OFFCURVE",
"570 890 QCURVE SMOOTH",
"570 1130 LINE",
"110 1130 LINE",
"110 932 LINE",
"262 932 LINE",
"262 890 LINE SMOOTH",
"262 698 OFFCURVE",
"110 543 QCURVE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 323 QCURVE SMOOTH",
"1190 681 LINE SMOOTH",
"1190 743 OFFCURVE",
"1069 816 QCURVE SMOOTH",
"948 890 LINE",
"948 932 LINE",
"1190 932 LINE",
"1190 1340 LINE",
"822 1340 LINE",
"822 1130 LINE",
"808 1130 LINE SMOOTH",
"660 1130 OFFCURVE",
"660 972 QCURVE SMOOTH",
"660 837 LINE",
"822 674 LINE",
"822 323 LINE SMOOTH",
"822 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"478 198 OFFCURVE",
"478 323 QCURVE",
"478 323 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 495 LINE",
"560 678 OFFCURVE",
"560 890 QCURVE SMOOTH",
"560 1130 LINE",
"140 1130 LINE",
"140 932 LINE",
"292 932 LINE",
"292 890 LINE SMOOTH",
"292 696 OFFCURVE",
"140 543 QCURVE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 681 LINE SMOOTH",
"1160 742 OFFCURVE",
"1039 816 QCURVE SMOOTH",
"918 890 LINE",
"918 932 LINE",
"1160 932 LINE",
"1160 1340 LINE",
"852 1340 LINE",
"852 1130 LINE",
"808 1130 LINE SMOOTH",
"680 1130 OFFCURVE",
"680 972 QCURVE SMOOTH",
"680 837 LINE",
"852 674 LINE",
"852 323 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE",
"448 323 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 495 LINE",
"520 678 OFFCURVE",
"520 890 QCURVE SMOOTH",
"520 1130 LINE",
"200 1130 LINE",
"200 962 LINE",
"352 962 LINE",
"352 890 LINE SMOOTH",
"352 696 OFFCURVE",
"200 543 QCURVE",
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 701 LINE SMOOTH",
"1100 762 OFFCURVE",
"979 836 QCURVE SMOOTH",
"858 910 LINE",
"858 992 LINE",
"1100 992 LINE",
"1100 1340 LINE",
"912 1340 LINE",
"912 1130 LINE",
"868 1130 LINE SMOOTH",
"680 1130 OFFCURVE",
"680 992 QCURVE SMOOTH",
"680 857 LINE",
"912 694 LINE",
"912 323 LINE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE",
"388 323 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 615 LINE",
"480 798 OFFCURVE",
"480 910 QCURVE SMOOTH",
"480 1130 LINE",
"230 1130 LINE",
"230 1032 LINE",
"382 1032 LINE",
"382 910 LINE SMOOTH",
"382 816 OFFCURVE",
"230 663 QCURVE",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 714 LINE SMOOTH",
"1070 802 OFFCURVE",
"970 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1340 LINE",
"952 1340 LINE",
"952 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"905 772 LINE SMOOTH",
"952 744 OFFCURVE",
"952 714 QCURVE SMOOTH",
"952 323 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE",
"348 323 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 615 LINE",
"450 798 OFFCURVE",
"450 910 QCURVE SMOOTH",
"450 1130 LINE",
"220 1130 LINE",
"220 1072 LINE",
"402 1072 LINE",
"402 910 LINE SMOOTH",
"402 815 OFFCURVE",
"260 633 QCURVE",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 323 QCURVE SMOOTH",
"1040 714 LINE SMOOTH",
"1040 768 OFFCURVE",
"930 830 QCURVE SMOOTH",
"780 914 LINE",
"780 992 LINE SMOOTH",
"780 1072 OFFCURVE",
"860 1072 QCURVE SMOOTH",
"888 1072 OFFCURVE",
"953 1052 QCURVE SMOOTH",
"1016 1032 OFFCURVE",
"1045 1032 QCURVE SMOOTH",
"1155 1032 OFFCURVE",
"1155 1155 QCURVE SMOOTH",
"1155 1280 LINE",
"1097 1280 LINE",
"1097 1155 LINE SMOOTH",
"1097 1090 OFFCURVE",
"1045 1090 QCURVE SMOOTH",
"1007 1090 OFFCURVE",
"956 1110 QCURVE SMOOTH",
"905 1130 OFFCURVE",
"860 1130 QCURVE SMOOTH",
"722 1130 OFFCURVE",
"722 992 QCURVE SMOOTH",
"722 880 LINE",
"900 782 LINE SMOOTH",
"982 737 OFFCURVE",
"982 714 QCURVE SMOOTH",
"982 323 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE",
"318 323 LINE"
);
}
);
width = 1300;
}
);
note = uni178B;
unicode = 178B;
},
{
glyphname = uni178C;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"822 -50 LINE",
"1190 -50 LINE",
"1190 400 LINE",
"822 400 LINE",
"822 317 LINE",
"742 228 OFFCURVE",
"530 228 QCURVE SMOOTH",
"448 228 OFFCURVE",
"448 287 QCURVE SMOOTH",
"448 386 OFFCURVE",
"500 386 QCURVE SMOOTH",
"1190 386 OFFCURVE",
"1190 853 QCURVE SMOOTH",
"1190 1160 OFFCURVE",
"877 1160 QCURVE SMOOTH",
"762 1160 OFFCURVE",
"650 1036 QCURVE",
"539 1160 OFFCURVE",
"425 1160 QCURVE SMOOTH",
"111 1160 OFFCURVE",
"110 853 QCURVE SMOOTH",
"110 645 OFFCURVE",
"424 645 QCURVE SMOOTH",
"540 645 LINE",
"540 823 LINE",
"504 823 LINE SMOOTH",
"478 823 OFFCURVE",
"478 853 QCURVE SMOOTH",
"478 920 OFFCURVE",
"494 920 QCURVE SMOOTH",
"510 920 OFFCURVE",
"591 826 QCURVE SMOOTH",
"618 795 OFFCURVE",
"650 795 QCURVE SMOOTH",
"682 795 OFFCURVE",
"709 826 QCURVE SMOOTH",
"791 920 OFFCURVE",
"807 920 QCURVE SMOOTH",
"822 920 OFFCURVE",
"822 853 QCURVE SMOOTH",
"822 584 OFFCURVE",
"500 584 QCURVE SMOOTH",
"110 584 OFFCURVE",
"110 287 QCURVE SMOOTH",
"110 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"708 0 OFFCURVE",
"822 115 QCURVE",
"822 115 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"852 -50 LINE",
"1160 -50 LINE",
"1160 400 LINE",
"852 400 LINE",
"852 317 LINE",
"772 198 OFFCURVE",
"530 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 287 QCURVE SMOOTH",
"448 386 OFFCURVE",
"500 386 QCURVE SMOOTH",
"1160 386 OFFCURVE",
"1160 853 QCURVE SMOOTH",
"1160 1130 OFFCURVE",
"877 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"425 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 853 QCURVE SMOOTH",
"140 645 OFFCURVE",
"424 645 QCURVE SMOOTH",
"540 645 LINE",
"540 823 LINE",
"484 823 LINE SMOOTH",
"448 823 OFFCURVE",
"448 853 QCURVE SMOOTH",
"448 920 OFFCURVE",
"481 920 QCURVE SMOOTH",
"510 920 OFFCURVE",
"591 826 QCURVE SMOOTH",
"618 795 OFFCURVE",
"650 795 QCURVE SMOOTH",
"682 795 OFFCURVE",
"709 826 QCURVE SMOOTH",
"791 920 OFFCURVE",
"820 920 QCURVE SMOOTH",
"852 920 OFFCURVE",
"852 853 QCURVE SMOOTH",
"852 564 OFFCURVE",
"500 564 QCURVE SMOOTH",
"140 564 OFFCURVE",
"140 287 QCURVE SMOOTH",
"140 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"738 0 OFFCURVE",
"852 115 QCURVE",
"852 115 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 -50 LINE",
"1100 -50 LINE",
"1100 400 LINE",
"912 400 LINE",
"912 317 LINE",
"802 138 OFFCURVE",
"530 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 287 QCURVE SMOOTH",
"388 396 OFFCURVE",
"450 396 QCURVE SMOOTH",
"1100 396 OFFCURVE",
"1100 853 QCURVE SMOOTH",
"1100 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 853 QCURVE SMOOTH",
"200 645 OFFCURVE",
"444 645 QCURVE SMOOTH",
"500 645 LINE",
"500 783 LINE",
"444 783 LINE SMOOTH",
"388 783 OFFCURVE",
"388 853 QCURVE SMOOTH",
"388 980 OFFCURVE",
"461 980 QCURVE SMOOTH",
"510 980 OFFCURVE",
"591 886 QCURVE SMOOTH",
"618 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"682 855 OFFCURVE",
"709 886 QCURVE SMOOTH",
"791 980 OFFCURVE",
"840 980 QCURVE SMOOTH",
"912 980 OFFCURVE",
"912 853 QCURVE SMOOTH",
"912 534 OFFCURVE",
"450 534 QCURVE SMOOTH",
"200 534 OFFCURVE",
"200 287 QCURVE SMOOTH",
"200 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"768 0 OFFCURVE",
"912 115 QCURVE",
"912 115 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1070 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 853 QCURVE SMOOTH",
"230 655 OFFCURVE",
"444 655 QCURVE SMOOTH",
"500 655 LINE",
"500 753 LINE",
"444 753 LINE SMOOTH",
"348 753 OFFCURVE",
"348 853 QCURVE SMOOTH",
"348 1020 OFFCURVE",
"445 1020 QCURVE SMOOTH",
"500 1020 OFFCURVE",
"596 896 QCURVE SMOOTH",
"628 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"672 855 OFFCURVE",
"704 896 QCURVE SMOOTH",
"801 1020 OFFCURVE",
"857 1020 QCURVE SMOOTH",
"952 1020 OFFCURVE",
"952 853 QCURVE SMOOTH",
"952 524 OFFCURVE",
"450 524 QCURVE SMOOTH",
"230 524 OFFCURVE",
"230 287 QCURVE SMOOTH",
"230 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"808 0 OFFCURVE",
"952 165 QCURVE",
"952 -50 LINE",
"1070 -50 LINE",
"1070 400 LINE",
"952 400 LINE",
"952 317 LINE",
"842 98 OFFCURVE",
"530 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 287 QCURVE SMOOTH",
"348 426 OFFCURVE",
"450 426 QCURVE SMOOTH",
"1070 426 OFFCURVE",
"1070 853 QCURVE",
"1070 853 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1040 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"763 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 853 QCURVE SMOOTH",
"260 655 OFFCURVE",
"444 655 QCURVE SMOOTH",
"500 655 LINE",
"500 713 LINE",
"444 713 LINE SMOOTH",
"318 713 OFFCURVE",
"318 853 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"445 1072 QCURVE SMOOTH",
"501 1072 OFFCURVE",
"596 950 QCURVE SMOOTH",
"628 909 OFFCURVE",
"650 909 QCURVE SMOOTH",
"672 909 OFFCURVE",
"704 950 QCURVE SMOOTH",
"799 1072 OFFCURVE",
"857 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 853 QCURVE SMOOTH",
"982 504 OFFCURVE",
"450 504 QCURVE SMOOTH",
"260 504 OFFCURVE",
"260 287 QCURVE SMOOTH",
"260 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"808 0 OFFCURVE",
"982 215 QCURVE",
"982 -50 LINE",
"1040 -50 LINE",
"1040 400 LINE",
"982 400 LINE",
"982 287 LINE",
"802 58 OFFCURVE",
"530 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 287 QCURVE SMOOTH",
"318 446 OFFCURVE",
"450 446 QCURVE SMOOTH",
"1040 446 OFFCURVE",
"1040 853 QCURVE",
"1040 853 LINE"
);
}
);
width = 1300;
}
);
note = uni178C;
unicode = 178C;
},
{
glyphname = uni178D;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1802 704 LINE SMOOTH",
"1802 772 OFFCURVE",
"1702 826 QCURVE SMOOTH",
"1602 880 LINE",
"1602 932 LINE",
"1802 932 LINE",
"1802 1160 LINE",
"1512 1160 LINE SMOOTH",
"1284 1160 OFFCURVE",
"1284 932 QCURVE SMOOTH",
"1284 827 LINE",
"1434 704 LINE",
"1434 323 LINE SMOOTH",
"1434 228 OFFCURVE",
"1402 228 QCURVE SMOOTH",
"1369 228 OFFCURVE",
"1260 400 QCURVE",
"1190 400 LINE",
"1190 833 LINE SMOOTH",
"1190 1160 OFFCURVE",
"877 1160 QCURVE SMOOTH",
"762 1160 OFFCURVE",
"650 1036 QCURVE",
"539 1160 OFFCURVE",
"425 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 833 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 833 LINE SMOOTH",
"478 900 OFFCURVE",
"494 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"807 900 QCURVE SMOOTH",
"822 900 OFFCURVE",
"822 833 QCURVE SMOOTH",
"822 400 LINE",
"752 400 LINE",
"752 142 LINE",
"822 142 LINE",
"822 0 LINE",
"1190 0 LINE",
"1190 149 LINE",
"1292 0 OFFCURVE",
"1422 0 QCURVE SMOOTH",
"1802 0 OFFCURVE",
"1802 323 QCURVE",
"1802 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1772 704 LINE SMOOTH",
"1772 772 OFFCURVE",
"1672 826 QCURVE SMOOTH",
"1572 880 LINE",
"1572 932 LINE",
"1772 932 LINE",
"1772 1130 LINE",
"1512 1130 LINE SMOOTH",
"1304 1130 OFFCURVE",
"1304 932 QCURVE SMOOTH",
"1304 827 LINE",
"1464 704 LINE",
"1464 323 LINE SMOOTH",
"1464 198 OFFCURVE",
"1422 198 QCURVE SMOOTH",
"1340 198 OFFCURVE",
"1230 400 QCURVE",
"1160 400 LINE",
"1160 833 LINE SMOOTH",
"1160 1130 OFFCURVE",
"877 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"425 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 833 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 833 LINE SMOOTH",
"448 900 OFFCURVE",
"481 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"820 900 QCURVE SMOOTH",
"852 900 OFFCURVE",
"852 833 QCURVE SMOOTH",
"852 400 LINE",
"752 400 LINE",
"752 172 LINE",
"852 172 LINE",
"852 0 LINE",
"1160 0 LINE",
"1160 179 LINE",
"1262 0 OFFCURVE",
"1422 0 QCURVE SMOOTH",
"1772 0 OFFCURVE",
"1772 323 QCURVE",
"1772 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 853 LINE SMOOTH",
"388 980 OFFCURVE",
"461 980 QCURVE SMOOTH",
"510 980 OFFCURVE",
"591 886 QCURVE SMOOTH",
"618 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"682 855 OFFCURVE",
"709 886 QCURVE SMOOTH",
"791 980 OFFCURVE",
"840 980 QCURVE SMOOTH",
"912 980 OFFCURVE",
"912 853 QCURVE SMOOTH",
"912 400 LINE",
"812 400 LINE",
"812 232 LINE",
"912 232 LINE",
"912 0 LINE",
"1100 0 LINE",
"1100 239 LINE",
"1262 0 OFFCURVE",
"1422 0 QCURVE SMOOTH",
"1712 0 OFFCURVE",
"1712 323 QCURVE SMOOTH",
"1712 741 LINE SMOOTH",
"1712 802 OFFCURVE",
"1617 856 QCURVE SMOOTH",
"1522 910 LINE",
"1522 957 LINE SMOOTH",
"1522 992 OFFCURVE",
"1554 992 QCURVE SMOOTH",
"1712 992 LINE",
"1712 1130 LINE",
"1504 1130 LINE SMOOTH",
"1334 1130 OFFCURVE",
"1334 957 QCURVE SMOOTH",
"1334 857 LINE",
"1524 714 LINE",
"1524 323 LINE SMOOTH",
"1524 138 OFFCURVE",
"1422 138 QCURVE SMOOTH",
"1340 138 OFFCURVE",
"1200 400 QCURVE",
"1100 400 LINE",
"1100 853 LINE SMOOTH",
"1100 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 853 QCURVE",
"200 853 LINE"
);
}
);
width = 1912;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1682 714 LINE SMOOTH",
"1682 802 OFFCURVE",
"1582 856 QCURVE SMOOTH",
"1482 910 LINE",
"1482 992 LINE SMOOTH",
"1482 1032 OFFCURVE",
"1532 1032 QCURVE SMOOTH",
"1682 1032 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 857 LINE",
"1517 772 LINE SMOOTH",
"1564 744 OFFCURVE",
"1564 714 QCURVE SMOOTH",
"1564 323 LINE SMOOTH",
"1564 98 OFFCURVE",
"1432 98 QCURVE SMOOTH",
"1350 98 OFFCURVE",
"1190 380 QCURVE",
"1070 380 LINE",
"1070 853 LINE SMOOTH",
"1070 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 853 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 853 LINE SMOOTH",
"348 1020 OFFCURVE",
"445 1020 QCURVE SMOOTH",
"500 1020 OFFCURVE",
"596 896 QCURVE SMOOTH",
"628 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"672 855 OFFCURVE",
"704 896 QCURVE SMOOTH",
"801 1020 OFFCURVE",
"857 1020 QCURVE SMOOTH",
"952 1020 OFFCURVE",
"952 853 QCURVE SMOOTH",
"952 380 LINE",
"812 380 LINE",
"812 282 LINE",
"952 282 LINE",
"952 0 LINE",
"1070 0 LINE",
"1070 282 LINE",
"1130 282 LINE",
"1292 0 OFFCURVE",
"1432 0 QCURVE SMOOTH",
"1682 0 OFFCURVE",
"1682 323 QCURVE",
"1682 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"982 380 LINE",
"822 380 LINE",
"822 322 LINE",
"982 322 LINE",
"982 0 LINE",
"1040 0 LINE",
"1040 329 LINE",
"1060 329 LINE",
"1272 0 OFFCURVE",
"1422 0 QCURVE SMOOTH",
"1622 0 OFFCURVE",
"1622 323 QCURVE SMOOTH",
"1622 714 LINE SMOOTH",
"1622 769 OFFCURVE",
"1512 837 QCURVE SMOOTH",
"1402 903 LINE",
"1402 992 LINE SMOOTH",
"1402 1072 OFFCURVE",
"1502 1072 QCURVE SMOOTH",
"1652 1072 LINE",
"1652 1130 LINE",
"1502 1130 LINE SMOOTH",
"1344 1130 OFFCURVE",
"1344 992 QCURVE SMOOTH",
"1344 869 LINE",
"1482 786 LINE SMOOTH",
"1564 737 OFFCURVE",
"1564 714 QCURVE SMOOTH",
"1564 323 LINE SMOOTH",
"1564 58 OFFCURVE",
"1422 58 QCURVE SMOOTH",
"1300 58 OFFCURVE",
"1090 380 QCURVE",
"1040 380 LINE",
"1040 853 LINE SMOOTH",
"1040 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"763 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 853 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 853 LINE SMOOTH",
"318 1072 OFFCURVE",
"445 1072 QCURVE SMOOTH",
"500 1072 OFFCURVE",
"596 954 QCURVE SMOOTH",
"628 915 OFFCURVE",
"650 915 QCURVE SMOOTH",
"673 915 OFFCURVE",
"704 954 QCURVE SMOOTH",
"801 1072 OFFCURVE",
"857 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 853 QCURVE",
"982 853 LINE"
);
}
);
width = 1912;
}
);
note = uni178D;
unicode = 178D;
},
{
glyphname = uni178E;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1434 305 LINE",
"1288 445 LINE",
"1140 304 LINE",
"1140 807 LINE SMOOTH",
"1140 1160 OFFCURVE",
"625 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 807 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"478 228 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 807 LINE SMOOTH",
"478 932 OFFCURVE",
"625 932 QCURVE SMOOTH",
"772 932 OFFCURVE",
"772 807 QCURVE SMOOTH",
"772 0 LINE",
"1171 0 LINE",
"1288 137 LINE",
"1404 0 LINE",
"1802 0 LINE",
"1802 807 LINE SMOOTH",
"1802 932 OFFCURVE",
"1949 932 QCURVE SMOOTH",
"2096 932 OFFCURVE",
"2096 807 QCURVE SMOOTH",
"2096 0 LINE",
"2464 0 LINE",
"2464 807 LINE SMOOTH",
"2464 1160 OFFCURVE",
"1949 1160 QCURVE SMOOTH",
"1434 1160 OFFCURVE",
"1434 807 QCURVE",
"1434 807 LINE"
);
}
);
width = 2574;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1464 265 LINE",
"1288 405 LINE",
"1110 264 LINE",
"1110 807 LINE SMOOTH",
"1110 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 807 LINE SMOOTH",
"448 932 OFFCURVE",
"625 932 QCURVE SMOOTH",
"802 932 OFFCURVE",
"802 807 QCURVE SMOOTH",
"802 0 LINE",
"1141 0 LINE",
"1288 137 LINE",
"1434 0 LINE",
"1772 0 LINE",
"1772 807 LINE SMOOTH",
"1772 932 OFFCURVE",
"1949 932 QCURVE SMOOTH",
"2126 932 OFFCURVE",
"2126 807 QCURVE SMOOTH",
"2126 0 LINE",
"2434 0 LINE",
"2434 807 LINE SMOOTH",
"2434 1130 OFFCURVE",
"1949 1130 QCURVE SMOOTH",
"1464 1130 OFFCURVE",
"1464 807 QCURVE",
"1464 807 LINE"
);
}
);
width = 2574;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 807 LINE SMOOTH",
"388 992 OFFCURVE",
"625 992 QCURVE SMOOTH",
"862 992 OFFCURVE",
"862 807 QCURVE SMOOTH",
"862 0 LINE",
"1081 0 LINE",
"1288 187 LINE",
"1494 0 LINE",
"1712 0 LINE",
"1712 807 LINE SMOOTH",
"1712 992 OFFCURVE",
"1949 992 QCURVE SMOOTH",
"2186 992 OFFCURVE",
"2186 807 QCURVE SMOOTH",
"2186 0 LINE",
"2374 0 LINE",
"2374 807 LINE SMOOTH",
"2374 1130 OFFCURVE",
"1949 1130 QCURVE SMOOTH",
"1524 1130 OFFCURVE",
"1524 807 QCURVE SMOOTH",
"1524 167 LINE",
"1288 382 LINE",
"1050 166 LINE",
"1050 807 LINE SMOOTH",
"1050 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 807 QCURVE",
"200 807 LINE"
);
}
);
width = 2574;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1564 134 LINE",
"1292 383 LINE",
"1020 134 LINE",
"1020 807 LINE SMOOTH",
"1020 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 807 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 807 LINE SMOOTH",
"348 1032 OFFCURVE",
"625 1032 QCURVE SMOOTH",
"902 1032 OFFCURVE",
"902 807 QCURVE SMOOTH",
"902 0 LINE",
"1020 0 LINE",
"1292 249 LINE",
"1564 0 LINE",
"1682 0 LINE",
"1682 807 LINE SMOOTH",
"1682 1032 OFFCURVE",
"1954 1032 QCURVE SMOOTH",
"2226 1032 OFFCURVE",
"2226 807 QCURVE SMOOTH",
"2226 0 LINE",
"2344 0 LINE",
"2344 807 LINE SMOOTH",
"2344 1130 OFFCURVE",
"1954 1130 QCURVE SMOOTH",
"1564 1130 OFFCURVE",
"1564 807 QCURVE",
"1564 807 LINE"
);
}
);
width = 2574;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"932 0 LINE",
"990 0 LINE",
"1292 255 LINE",
"1594 0 LINE",
"1652 0 LINE",
"1652 807 LINE SMOOTH",
"1652 1072 OFFCURVE",
"1954 1072 QCURVE SMOOTH",
"2256 1072 OFFCURVE",
"2256 807 QCURVE SMOOTH",
"2256 0 LINE",
"2314 0 LINE",
"2314 807 LINE SMOOTH",
"2314 1130 OFFCURVE",
"1954 1130 QCURVE SMOOTH",
"1594 1130 OFFCURVE",
"1594 807 QCURVE SMOOTH",
"1594 76 LINE",
"1292 328 LINE",
"990 76 LINE",
"990 807 LINE SMOOTH",
"990 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 807 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 807 LINE SMOOTH",
"318 1072 OFFCURVE",
"625 1072 QCURVE SMOOTH",
"932 1072 OFFCURVE",
"932 807 QCURVE",
"932 807 LINE"
);
}
);
width = 2574;
}
);
note = uni178E;
unicode = 178E;
},
{
glyphname = uni178F;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1190 1160 LINE",
"110 1160 LINE",
"110 932 LINE",
"1190 932 LINE",
"1190 932 LINE"
);
},
{
closed = 1;
nodes = (
"478 487 LINE SMOOTH",
"478 535 OFFCURVE",
"568 592 OFFCURVE",
"650 592 QCURVE SMOOTH",
"732 592 OFFCURVE",
"822 535 OFFCURVE",
"822 487 QCURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 487 LINE SMOOTH",
"1190 810 OFFCURVE",
"650 810 QCURVE SMOOTH",
"110 810 OFFCURVE",
"110 487 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE",
"478 298 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 487 LINE SMOOTH",
"448 622 OFFCURVE",
"650 622 QCURVE SMOOTH",
"852 622 OFFCURVE",
"852 487 QCURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 487 LINE SMOOTH",
"1160 810 OFFCURVE",
"650 810 QCURVE SMOOTH",
"140 810 OFFCURVE",
"140 487 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE",
"448 298 LINE"
);
},
{
closed = 1;
nodes = (
"140 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"140 1130 LINE",
"140 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 517 LINE SMOOTH",
"388 702 OFFCURVE",
"650 702 QCURVE SMOOTH",
"912 702 OFFCURVE",
"912 517 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 517 LINE SMOOTH",
"1100 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"200 840 OFFCURVE",
"200 517 QCURVE",
"200 517 LINE"
);
},
{
closed = 1;
nodes = (
"200 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"200 1130 LINE",
"200 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 517 LINE SMOOTH",
"348 742 OFFCURVE",
"650 742 QCURVE SMOOTH",
"952 742 OFFCURVE",
"952 517 QCURVE SMOOTH",
"952 0 LINE",
"1070 0 LINE",
"1070 517 LINE SMOOTH",
"1070 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"230 840 OFFCURVE",
"230 517 QCURVE",
"230 517 LINE"
);
},
{
closed = 1;
nodes = (
"230 1032 LINE",
"1070 1032 LINE",
"1070 1130 LINE",
"230 1130 LINE",
"230 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 1130 LINE",
"260 1072 LINE",
"1040 1072 LINE",
"1040 1130 LINE",
"1040 1130 LINE"
);
},
{
closed = 1;
nodes = (
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 517 LINE SMOOTH",
"318 782 OFFCURVE",
"650 782 QCURVE SMOOTH",
"982 782 OFFCURVE",
"982 517 QCURVE SMOOTH",
"982 0 LINE",
"1040 0 LINE",
"1040 517 LINE SMOOTH",
"1040 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"260 840 OFFCURVE",
"260 517 QCURVE",
"260 517 LINE"
);
}
);
width = 1300;
}
);
note = uni178F;
unicode = 178F;
},
{
glyphname = uni1790;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"348 932 LINE",
"385 932 LINE SMOOTH",
"415 932 OFFCURVE",
"543 902 QCURVE SMOOTH",
"651 872 OFFCURVE",
"750 872 QCURVE SMOOTH",
"1190 872 OFFCURVE",
"1190 1205 QCURVE SMOOTH",
"1190 1280 LINE",
"822 1280 LINE",
"822 1205 LINE SMOOTH",
"822 1100 OFFCURVE",
"740 1100 QCURVE SMOOTH",
"580 1100 OFFCURVE",
"501 1130 QCURVE",
"402 1160 OFFCURVE",
"355 1160 QCURVE SMOOTH",
"258 1160 LINE SMOOTH",
"40 1160 OFFCURVE",
"40 972 QCURVE SMOOTH",
"40 847 LINE",
"110 713 LINE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 323 QCURVE SMOOTH",
"1190 780 LINE",
"700 780 LINE",
"700 542 LINE",
"822 542 LINE",
"822 323 LINE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 323 QCURVE SMOOTH",
"478 714 LINE SMOOTH",
"478 763 OFFCURVE",
"348 890 QCURVE",
"348 890 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 714 LINE SMOOTH",
"448 762 OFFCURVE",
"318 890 QCURVE",
"318 932 LINE",
"355 932 LINE SMOOTH",
"385 932 OFFCURVE",
"640 872 OFFCURVE",
"770 872 QCURVE SMOOTH",
"1160 872 OFFCURVE",
"1160 1175 QCURVE SMOOTH",
"1160 1280 LINE",
"852 1280 LINE",
"852 1175 LINE SMOOTH",
"852 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"258 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 972 QCURVE SMOOTH",
"60 847 LINE",
"140 714 LINE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 780 LINE",
"700 780 LINE",
"700 572 LINE",
"852 572 LINE",
"852 323 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE",
"448 323 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 800 LINE",
"700 800 LINE",
"700 632 LINE",
"912 632 LINE",
"912 323 LINE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 734 LINE SMOOTH",
"388 782 OFFCURVE",
"258 910 QCURVE",
"258 992 LINE",
"355 992 LINE SMOOTH",
"385 992 OFFCURVE",
"640 932 OFFCURVE",
"770 932 QCURVE SMOOTH",
"1100 932 OFFCURVE",
"1100 1175 QCURVE SMOOTH",
"1100 1280 LINE",
"912 1280 LINE",
"912 1175 LINE SMOOTH",
"912 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"200 734 LINE",
"200 734 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 840 LINE",
"700 840 LINE",
"700 732 LINE",
"952 732 LINE",
"952 323 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 714 LINE SMOOTH",
"348 782 OFFCURVE",
"273 846 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"355 1032 LINE SMOOTH",
"385 1032 OFFCURVE",
"640 972 OFFCURVE",
"770 972 QCURVE SMOOTH",
"1070 972 OFFCURVE",
"1070 1175 QCURVE SMOOTH",
"1070 1280 LINE",
"952 1280 LINE",
"952 1175 LINE SMOOTH",
"952 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"198 775 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE",
"230 714 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"355 1072 LINE SMOOTH",
"387 1072 OFFCURVE",
"513 1032 QCURVE SMOOTH",
"639 992 OFFCURVE",
"770 992 QCURVE SMOOTH",
"1040 992 OFFCURVE",
"1040 1175 QCURVE SMOOTH",
"1040 1280 LINE",
"982 1280 LINE",
"982 1175 LINE SMOOTH",
"982 1050 OFFCURVE",
"760 1050 QCURVE SMOOTH",
"599 1050 OFFCURVE",
"501 1090 QCURVE SMOOTH",
"403 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 323 QCURVE SMOOTH",
"1040 840 LINE",
"700 840 LINE",
"700 782 LINE",
"982 782 LINE",
"982 323 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE",
"318 323 LINE"
);
}
);
width = 1300;
}
);
note = uni1790;
unicode = 1790;
},
{
glyphname = uni1791;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"730 317 LINE SMOOTH",
"730 198 OFFCURVE",
"644 198 QCURVE SMOOTH",
"558 198 OFFCURVE",
"558 317 QCURVE SMOOTH",
"558 357 LINE",
"190 357 LINE",
"190 317 LINE SMOOTH",
"190 0 OFFCURVE",
"644 0 QCURVE SMOOTH",
"1098 0 OFFCURVE",
"1098 317 QCURVE SMOOTH",
"1098 444 LINE",
"1190 485 OFFCURVE",
"1190 561 QCURVE SMOOTH",
"1190 598 LINE SMOOTH",
"1190 690 OFFCURVE",
"1000 690 QCURVE SMOOTH",
"795 690 OFFCURVE",
"774 636 QCURVE",
"706 634 OFFCURVE",
"650 634 QCURVE",
"478 653 OFFCURVE",
"478 803 QCURVE SMOOTH",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 813 QCURVE",
"1190 813 LINE",
"1190 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 803 QCURVE SMOOTH",
"110 416 OFFCURVE",
"650 416 QCURVE SMOOTH",
"699 416 OFFCURVE",
"730 419 QCURVE",
"730 419 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"760 317 LINE SMOOTH",
"760 198 OFFCURVE",
"644 198 QCURVE SMOOTH",
"528 198 OFFCURVE",
"528 317 QCURVE SMOOTH",
"528 357 LINE",
"220 357 LINE",
"220 317 LINE SMOOTH",
"220 0 OFFCURVE",
"644 0 QCURVE SMOOTH",
"1068 0 OFFCURVE",
"1068 317 QCURVE SMOOTH",
"1068 444 LINE",
"1160 484 OFFCURVE",
"1160 561 QCURVE SMOOTH",
"1160 598 LINE SMOOTH",
"1160 690 OFFCURVE",
"970 690 QCURVE SMOOTH",
"825 690 OFFCURVE",
"804 616 QCURVE",
"753 614 OFFCURVE",
"650 614 QCURVE SMOOTH",
"448 614 OFFCURVE",
"448 783 QCURVE SMOOTH",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 813 QCURVE",
"1160 813 LINE",
"1160 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 783 QCURVE SMOOTH",
"140 416 OFFCURVE",
"650 416 QCURVE SMOOTH",
"729 416 OFFCURVE",
"760 419 QCURVE",
"760 419 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"760 317 LINE SMOOTH",
"760 148 OFFCURVE",
"614 148 QCURVE SMOOTH",
"468 148 OFFCURVE",
"468 317 QCURVE SMOOTH",
"468 357 LINE",
"280 357 LINE",
"280 317 LINE SMOOTH",
"280 0 OFFCURVE",
"614 0 QCURVE SMOOTH",
"948 0 OFFCURVE",
"948 317 QCURVE SMOOTH",
"948 434 LINE",
"1100 474 OFFCURVE",
"1100 551 QCURVE SMOOTH",
"1100 598 LINE SMOOTH",
"1100 670 OFFCURVE",
"930 670 QCURVE SMOOTH",
"785 670 OFFCURVE",
"764 556 QCURVE",
"713 554 OFFCURVE",
"650 554 QCURVE SMOOTH",
"388 554 OFFCURVE",
"388 783 QCURVE SMOOTH",
"388 982 OFFCURVE",
"650 982 QCURVE SMOOTH",
"912 982 OFFCURVE",
"912 813 QCURVE",
"1100 813 LINE",
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 783 QCURVE SMOOTH",
"200 406 OFFCURVE",
"650 406 QCURVE SMOOTH",
"709 406 OFFCURVE",
"760 409 QCURVE",
"760 409 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"893 602 OFFCURVE",
"930 602 QCURVE SMOOTH",
"972 602 OFFCURVE",
"972 568 QCURVE SMOOTH",
"972 546 OFFCURVE",
"889 535 QCURVE",
"889 535 LINE"
);
},
{
closed = 1;
nodes = (
"770 317 LINE SMOOTH",
"770 98 OFFCURVE",
"599 98 QCURVE SMOOTH",
"428 98 OFFCURVE",
"428 317 QCURVE SMOOTH",
"428 357 LINE",
"310 357 LINE",
"310 317 LINE SMOOTH",
"310 0 OFFCURVE",
"599 0 QCURVE SMOOTH",
"888 0 OFFCURVE",
"888 317 QCURVE SMOOTH",
"888 443 LINE",
"1070 475 OFFCURVE",
"1070 568 QCURVE SMOOTH",
"1070 700 OFFCURVE",
"930 700 QCURVE SMOOTH",
"776 700 OFFCURVE",
"770 526 QCURVE",
"717 524 OFFCURVE",
"650 524 QCURVE SMOOTH",
"348 524 OFFCURVE",
"348 783 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 813 QCURVE",
"1070 813 LINE",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 783 QCURVE SMOOTH",
"230 426 OFFCURVE",
"650 426 QCURVE SMOOTH",
"715 426 OFFCURVE",
"770 429 QCURVE",
"770 429 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"810 317 LINE SMOOTH",
"810 58 OFFCURVE",
"604 58 QCURVE SMOOTH",
"398 58 OFFCURVE",
"398 317 QCURVE SMOOTH",
"398 357 LINE",
"340 357 LINE",
"340 317 LINE SMOOTH",
"340 0 OFFCURVE",
"604 0 QCURVE SMOOTH",
"868 0 OFFCURVE",
"868 317 QCURVE SMOOTH",
"868 462 LINE",
"1040 493 OFFCURVE",
"1040 588 QCURVE SMOOTH",
"1040 680 OFFCURVE",
"930 680 QCURVE SMOOTH",
"810 680 OFFCURVE",
"810 513 QCURVE SMOOTH",
"810 501 LINE",
"747 494 OFFCURVE",
"650 494 QCURVE SMOOTH",
"318 494 OFFCURVE",
"318 783 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 813 QCURVE",
"1040 813 LINE",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 783 QCURVE SMOOTH",
"260 446 OFFCURVE",
"650 446 QCURVE SMOOTH",
"735 446 OFFCURVE",
"810 454 QCURVE",
"810 454 LINE"
);
},
{
closed = 1;
nodes = (
"868 513 LINE SMOOTH",
"868 632 OFFCURVE",
"930 632 QCURVE SMOOTH",
"982 632 OFFCURVE",
"982 588 QCURVE SMOOTH",
"982 533 OFFCURVE",
"868 510 QCURVE",
"868 510 LINE"
);
}
);
width = 1300;
}
);
note = uni1791;
unicode = 1791;
},
{
glyphname = uni1792;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"348 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"258 1160 LINE SMOOTH",
"40 1160 OFFCURVE",
"40 972 QCURVE SMOOTH",
"40 847 LINE",
"110 714 LINE",
"110 0 LINE",
"509 0 LINE",
"651 160 LINE",
"792 0 LINE",
"1190 0 LINE",
"1190 820 LINE",
"700 820 LINE",
"700 582 LINE",
"822 582 LINE",
"822 295 LINE",
"651 455 LINE",
"478 294 LINE",
"478 714 LINE SMOOTH",
"478 763 OFFCURVE",
"348 890 QCURVE",
"348 890 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 0 LINE",
"479 0 LINE",
"651 160 LINE",
"822 0 LINE",
"1160 0 LINE",
"1160 820 LINE",
"700 820 LINE",
"700 612 LINE",
"852 612 LINE",
"852 265 LINE",
"651 425 LINE",
"448 264 LINE",
"448 714 LINE SMOOTH",
"448 762 OFFCURVE",
"318 890 QCURVE",
"318 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"258 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 972 QCURVE SMOOTH",
"60 847 LINE",
"140 714 LINE",
"140 714 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 167 LINE",
"651 405 LINE",
"388 166 LINE",
"388 734 LINE SMOOTH",
"388 782 OFFCURVE",
"258 910 QCURVE",
"258 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"200 734 LINE",
"200 0 LINE",
"419 0 LINE",
"651 210 LINE",
"882 0 LINE",
"1100 0 LINE",
"1100 840 LINE",
"700 840 LINE",
"700 672 LINE",
"912 672 LINE",
"912 672 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 0 LINE",
"348 0 LINE",
"650 277 LINE",
"952 0 LINE",
"1070 0 LINE",
"1070 840 LINE",
"700 840 LINE",
"700 732 LINE",
"952 732 LINE",
"952 134 LINE",
"650 411 LINE",
"348 134 LINE",
"348 714 LINE SMOOTH",
"348 782 OFFCURVE",
"273 846 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"198 775 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE",
"230 714 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 0 LINE",
"318 0 LINE",
"650 280 LINE",
"982 0 LINE",
"1040 0 LINE",
"1040 840 LINE",
"700 840 LINE",
"700 782 LINE",
"982 782 LINE",
"982 76 LINE",
"650 353 LINE",
"318 76 LINE",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"1040 1072 LINE",
"1040 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE",
"260 714 LINE"
);
}
);
width = 1300;
}
);
note = uni1792;
unicode = 1792;
},
{
glyphname = uni1793;
lastChange = "2020-02-04 09:01:02 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"478 448 LINE",
"110 448 LINE",
"110 0 LINE",
"478 0 LINE",
"478 156 LINE",
"518 156 OFFCURVE",
"568 130 OFFCURVE",
"629 78 CURVE SMOOTH",
"690 26 OFFCURVE",
"744 0 OFFCURVE",
"790 0 CURVE SMOOTH",
"1057 0 OFFCURVE",
"1190 100 OFFCURVE",
"1190 300 CURVE SMOOTH",
"1190 407 LINE SMOOTH",
"1190 585 OFFCURVE",
"1050 677 OFFCURVE",
"770 684 CURVE SMOOTH",
"575 689 OFFCURVE",
"478 732 OFFCURVE",
"478 813 CURVE SMOOTH",
"478 892 OFFCURVE",
"535 932 OFFCURVE",
"650 932 CURVE SMOOTH",
"765 932 OFFCURVE",
"822 892 OFFCURVE",
"822 813 CURVE SMOOTH",
"822 745 LINE",
"1190 745 LINE",
"1190 813 LINE SMOOTH",
"1190 1044 OFFCURVE",
"1010 1160 OFFCURVE",
"650 1160 CURVE SMOOTH",
"290 1160 OFFCURVE",
"110 1044 OFFCURVE",
"110 813 CURVE SMOOTH",
"110 582 OFFCURVE",
"330 466 OFFCURVE",
"770 466 CURVE SMOOTH",
"805 466 OFFCURVE",
"822 446 OFFCURVE",
"822 407 CURVE SMOOTH",
"822 300 LINE SMOOTH",
"822 252 OFFCURVE",
"811 228 OFFCURVE",
"790 228 CURVE",
"665 327 OFFCURVE",
"570 376 OFFCURVE",
"507 376 CURVE SMOOTH",
"496 376 OFFCURVE",
"486 375 OFFCURVE",
"478 372 CURVE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 0 LINE",
"448 0 LINE",
"448 156 LINE",
"487 156 OFFCURVE",
"543 130 OFFCURVE",
"614 78 CURVE SMOOTH",
"685 26 OFFCURVE",
"743 0 OFFCURVE",
"790 0 CURVE SMOOTH",
"1037 0 OFFCURVE",
"1160 100 OFFCURVE",
"1160 300 CURVE SMOOTH",
"1160 407 LINE SMOOTH",
"1160 565 OFFCURVE",
"1030 647 OFFCURVE",
"770 654 CURVE SMOOTH",
"555 661 OFFCURVE",
"448 714 OFFCURVE",
"448 813 CURVE SMOOTH",
"448 892 OFFCURVE",
"515 932 OFFCURVE",
"650 932 CURVE SMOOTH",
"785 932 OFFCURVE",
"852 892 OFFCURVE",
"852 813 CURVE SMOOTH",
"852 725 LINE",
"1160 725 LINE",
"1160 813 LINE SMOOTH",
"1160 1024 OFFCURVE",
"990 1130 OFFCURVE",
"650 1130 CURVE SMOOTH",
"310 1130 OFFCURVE",
"140 1024 OFFCURVE",
"140 813 CURVE SMOOTH",
"140 588 OFFCURVE",
"350 473 OFFCURVE",
"770 466 CURVE SMOOTH",
"825 466 OFFCURVE",
"852 446 OFFCURVE",
"852 407 CURVE SMOOTH",
"852 300 LINE SMOOTH",
"852 232 OFFCURVE",
"831 198 OFFCURVE",
"790 198 CURVE",
"623 313 OFFCURVE",
"509 371 OFFCURVE",
"448 372 CURVE",
"448 448 LINE",
"140 448 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 0 LINE",
"388 0 LINE",
"388 150 LINE SMOOTH",
"388 174 OFFCURVE",
"397 186 OFFCURVE",
"416 186 CURVE SMOOTH",
"437 186 OFFCURVE",
"469 171 OFFCURVE",
"513 141 CURVE SMOOTH",
"668 35 LINE SMOOTH",
"703 12 OFFCURVE",
"743 0 OFFCURVE",
"790 0 CURVE SMOOTH",
"997 0 OFFCURVE",
"1100 100 OFFCURVE",
"1100 300 CURVE SMOOTH",
"1100 407 LINE SMOOTH",
"1100 545 OFFCURVE",
"1000 617 OFFCURVE",
"800 624 CURVE SMOOTH",
"525 631 OFFCURVE",
"388 694 OFFCURVE",
"388 813 CURVE SMOOTH",
"388 932 OFFCURVE",
"475 992 OFFCURVE",
"650 992 CURVE SMOOTH",
"825 992 OFFCURVE",
"912 932 OFFCURVE",
"912 813 CURVE SMOOTH",
"912 725 LINE",
"1100 725 LINE",
"1100 813 LINE SMOOTH",
"1100 1024 OFFCURVE",
"950 1130 OFFCURVE",
"650 1130 CURVE SMOOTH",
"350 1130 OFFCURVE",
"200 1024 OFFCURVE",
"200 813 CURVE SMOOTH",
"200 602 OFFCURVE",
"400 493 OFFCURVE",
"800 486 CURVE SMOOTH",
"875 486 OFFCURVE",
"912 460 OFFCURVE",
"912 407 CURVE SMOOTH",
"912 300 LINE SMOOTH",
"912 192 OFFCURVE",
"871 138 OFFCURVE",
"790 138 CURVE",
"589 269 LINE SMOOTH",
"516 316 OFFCURVE",
"449 341 OFFCURVE",
"388 342 CURVE",
"388 448 LINE",
"200 448 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 784 OFFCURVE",
"948 757 OFFCURVE",
"940 734 CURVE",
"1053 698 LINE",
"1064 732 OFFCURVE",
"1070 770 OFFCURVE",
"1070 813 CURVE SMOOTH",
"1070 1024 OFFCURVE",
"930 1130 OFFCURVE",
"650 1130 CURVE SMOOTH",
"370 1130 OFFCURVE",
"230 1024 OFFCURVE",
"230 813 CURVE SMOOTH",
"230 615 OFFCURVE",
"420 513 OFFCURVE",
"800 506 CURVE SMOOTH",
"901 506 OFFCURVE",
"952 473 OFFCURVE",
"952 407 CURVE SMOOTH",
"952 300 LINE SMOOTH",
"952 165 OFFCURVE",
"915 98 OFFCURVE",
"840 98 CURVE SMOOTH",
"800 98 OFFCURVE",
"761 113 OFFCURVE",
"722 142 CURVE SMOOTH",
"554 267 OFFCURVE",
"429 331 OFFCURVE",
"348 332 CURVE",
"348 448 LINE",
"230 448 LINE",
"230 0 LINE",
"348 0 LINE",
"348 226 LINE",
"414 226 OFFCURVE",
"515 170 OFFCURVE",
"652 57 CURVE SMOOTH",
"697 19 OFFCURVE",
"760 0 OFFCURVE",
"840 0 CURVE SMOOTH",
"993 0 OFFCURVE",
"1070 100 OFFCURVE",
"1070 300 CURVE SMOOTH",
"1070 407 LINE SMOOTH",
"1070 532 OFFCURVE",
"980 597 OFFCURVE",
"800 604 CURVE SMOOTH",
"499 611 OFFCURVE",
"348 680 OFFCURVE",
"348 813 CURVE SMOOTH",
"348 959 OFFCURVE",
"449 1032 OFFCURVE",
"650 1032 CURVE SMOOTH",
"851 1032 OFFCURVE",
"952 959 OFFCURVE",
"952 813 CURVE SMOOTH"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"982 774 OFFCURVE",
"977 741 OFFCURVE",
"966 713 CURVE",
"1022 690 LINE",
"1034 726 OFFCURVE",
"1040 767 OFFCURVE",
"1040 813 CURVE SMOOTH",
"1040 1024 OFFCURVE",
"910 1130 OFFCURVE",
"650 1130 CURVE SMOOTH",
"390 1130 OFFCURVE",
"260 1024 OFFCURVE",
"260 813 CURVE SMOOTH",
"260 629 OFFCURVE",
"440 533 OFFCURVE",
"800 526 CURVE SMOOTH",
"921 526 OFFCURVE",
"982 486 OFFCURVE",
"982 407 CURVE SMOOTH",
"982 300 LINE SMOOTH",
"982 139 OFFCURVE",
"935 58 OFFCURVE",
"840 58 CURVE SMOOTH",
"780 58 OFFCURVE",
"727 78 OFFCURVE",
"680 119 CURVE SMOOTH",
"540 240 OFFCURVE",
"419 301 OFFCURVE",
"318 302 CURVE",
"318 448 LINE",
"260 448 LINE",
"260 0 LINE",
"318 0 LINE",
"318 246 LINE",
"411 246 OFFCURVE",
"517 190 OFFCURVE",
"638 77 CURVE SMOOTH",
"693 26 OFFCURVE",
"761 0 OFFCURVE",
"840 0 CURVE SMOOTH",
"973 0 OFFCURVE",
"1040 100 OFFCURVE",
"1040 300 CURVE SMOOTH",
"1040 407 LINE SMOOTH",
"1040 518 OFFCURVE",
"960 577 OFFCURVE",
"800 584 CURVE SMOOTH",
"479 591 OFFCURVE",
"318 668 OFFCURVE",
"318 813 CURVE SMOOTH",
"318 986 OFFCURVE",
"429 1072 OFFCURVE",
"650 1072 CURVE SMOOTH",
"871 1072 OFFCURVE",
"982 986 OFFCURVE",
"982 813 CURVE SMOOTH"
);
}
);
width = 1300;
}
);
note = uni1793;
unicode = 1793;
},
{
glyphname = uni1794;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"672 827 LINE",
"822 704 LINE",
"822 323 LINE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 323 QCURVE SMOOTH",
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"508 932 LINE",
"508 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"110 704 LINE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 323 QCURVE SMOOTH",
"1190 704 LINE SMOOTH",
"1190 772 OFFCURVE",
"1090 826 QCURVE SMOOTH",
"990 880 LINE",
"990 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"880 1160 LINE SMOOTH",
"672 1160 OFFCURVE",
"672 932 QCURVE",
"672 932 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"852 323 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE SMOOTH",
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 704 LINE SMOOTH",
"1160 772 OFFCURVE",
"1060 826 QCURVE SMOOTH",
"960 880 LINE",
"960 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"900 1130 LINE SMOOTH",
"692 1130 OFFCURVE",
"692 932 QCURVE SMOOTH",
"692 827 LINE",
"852 704 LINE",
"852 704 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 323 LINE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 734 LINE SMOOTH",
"1100 802 OFFCURVE",
"1000 856 QCURVE SMOOTH",
"900 910 LINE",
"900 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"900 1130 LINE SMOOTH",
"722 1130 OFFCURVE",
"722 992 QCURVE SMOOTH",
"722 857 LINE",
"912 734 LINE",
"912 734 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 323 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 714 LINE SMOOTH",
"1070 802 OFFCURVE",
"970 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"905 772 LINE SMOOTH",
"952 744 OFFCURVE",
"952 714 QCURVE",
"952 714 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"982 323 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE SMOOTH",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 323 QCURVE SMOOTH",
"1040 714 LINE SMOOTH",
"1040 769 OFFCURVE",
"930 837 QCURVE SMOOTH",
"820 903 LINE",
"820 992 LINE SMOOTH",
"820 1072 OFFCURVE",
"920 1072 QCURVE SMOOTH",
"1070 1072 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 869 LINE",
"900 786 LINE SMOOTH",
"982 737 OFFCURVE",
"982 714 QCURVE",
"982 714 LINE"
);
}
);
width = 1300;
}
);
note = uni1794;
unicode = 1794;
},
{
glyphname = uni1795;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"348 932 LINE",
"385 932 LINE SMOOTH",
"415 932 OFFCURVE",
"543 902 QCURVE SMOOTH",
"651 872 OFFCURVE",
"750 872 QCURVE SMOOTH",
"1190 872 OFFCURVE",
"1190 1205 QCURVE SMOOTH",
"1190 1280 LINE",
"822 1280 LINE",
"822 1205 LINE SMOOTH",
"822 1100 OFFCURVE",
"740 1100 QCURVE SMOOTH",
"580 1100 OFFCURVE",
"501 1130 QCURVE",
"402 1160 OFFCURVE",
"355 1160 QCURVE SMOOTH",
"258 1160 LINE SMOOTH",
"40 1160 OFFCURVE",
"40 972 QCURVE SMOOTH",
"40 847 LINE",
"110 714 LINE",
"110 0 LINE",
"509 0 LINE",
"651 160 LINE",
"792 0 LINE",
"1190 0 LINE",
"1190 820 LINE",
"700 820 LINE",
"700 582 LINE",
"822 582 LINE",
"822 295 LINE",
"651 455 LINE",
"478 294 LINE",
"478 714 LINE SMOOTH",
"478 763 OFFCURVE",
"348 890 QCURVE",
"348 890 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"852 265 LINE",
"651 425 LINE",
"448 264 LINE",
"448 714 LINE SMOOTH",
"448 762 OFFCURVE",
"318 890 QCURVE",
"318 932 LINE",
"355 932 LINE SMOOTH",
"385 932 OFFCURVE",
"640 872 OFFCURVE",
"770 872 QCURVE SMOOTH",
"1160 872 OFFCURVE",
"1160 1175 QCURVE SMOOTH",
"1160 1280 LINE",
"852 1280 LINE",
"852 1175 LINE SMOOTH",
"852 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"258 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 972 QCURVE SMOOTH",
"60 847 LINE",
"140 714 LINE",
"140 0 LINE",
"479 0 LINE",
"651 160 LINE",
"822 0 LINE",
"1160 0 LINE",
"1160 780 LINE",
"700 780 LINE",
"700 572 LINE",
"852 572 LINE",
"852 572 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 0 LINE",
"419 0 LINE",
"651 210 LINE",
"882 0 LINE",
"1100 0 LINE",
"1100 800 LINE",
"700 800 LINE",
"700 632 LINE",
"912 632 LINE",
"912 167 LINE",
"651 405 LINE",
"388 166 LINE",
"388 734 LINE SMOOTH",
"388 782 OFFCURVE",
"258 910 QCURVE",
"258 992 LINE",
"355 992 LINE SMOOTH",
"385 992 OFFCURVE",
"640 932 OFFCURVE",
"770 932 QCURVE SMOOTH",
"1100 932 OFFCURVE",
"1100 1175 QCURVE SMOOTH",
"1100 1280 LINE",
"912 1280 LINE",
"912 1175 LINE SMOOTH",
"912 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"200 734 LINE",
"200 734 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1070 840 LINE",
"700 840 LINE",
"700 732 LINE",
"952 732 LINE",
"952 134 LINE",
"650 411 LINE",
"348 134 LINE",
"348 714 LINE SMOOTH",
"348 782 OFFCURVE",
"273 846 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"355 1032 LINE SMOOTH",
"385 1032 OFFCURVE",
"640 972 OFFCURVE",
"770 972 QCURVE SMOOTH",
"1070 972 OFFCURVE",
"1070 1175 QCURVE SMOOTH",
"1070 1280 LINE",
"952 1280 LINE",
"952 1175 LINE SMOOTH",
"952 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"198 775 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 0 LINE",
"348 0 LINE",
"650 277 LINE",
"952 0 LINE",
"1070 0 LINE",
"1070 0 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"700 782 LINE",
"982 782 LINE",
"982 76 LINE",
"650 353 LINE",
"318 76 LINE",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"355 1072 LINE SMOOTH",
"387 1072 OFFCURVE",
"513 1032 QCURVE SMOOTH",
"639 992 OFFCURVE",
"770 992 QCURVE SMOOTH",
"1040 992 OFFCURVE",
"1040 1175 QCURVE SMOOTH",
"1040 1280 LINE",
"982 1280 LINE",
"982 1175 LINE SMOOTH",
"982 1050 OFFCURVE",
"760 1050 QCURVE SMOOTH",
"599 1050 OFFCURVE",
"501 1090 QCURVE SMOOTH",
"403 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 0 LINE",
"318 0 LINE",
"650 280 LINE",
"982 0 LINE",
"1040 0 LINE",
"1040 840 LINE",
"700 840 LINE",
"700 840 LINE"
);
}
);
width = 1300;
}
);
note = uni1795;
unicode = 1795;
},
{
glyphname = uni1796;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 833 LINE SMOOTH",
"478 900 OFFCURVE",
"494 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"807 900 QCURVE SMOOTH",
"822 900 OFFCURVE",
"822 833 QCURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 833 LINE SMOOTH",
"1190 1160 OFFCURVE",
"897 1160 QCURVE SMOOTH",
"781 1160 OFFCURVE",
"650 1036 QCURVE",
"520 1160 OFFCURVE",
"405 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 833 QCURVE",
"110 833 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 833 LINE SMOOTH",
"448 900 OFFCURVE",
"481 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"820 900 QCURVE SMOOTH",
"852 900 OFFCURVE",
"852 833 QCURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 833 LINE SMOOTH",
"1160 1130 OFFCURVE",
"877 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"425 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 833 QCURVE",
"140 833 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 853 LINE SMOOTH",
"388 980 OFFCURVE",
"461 980 QCURVE SMOOTH",
"510 980 OFFCURVE",
"591 886 QCURVE SMOOTH",
"618 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"682 855 OFFCURVE",
"709 886 QCURVE SMOOTH",
"791 980 OFFCURVE",
"840 980 QCURVE SMOOTH",
"912 980 OFFCURVE",
"912 853 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 853 LINE SMOOTH",
"1100 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 853 QCURVE",
"200 853 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 853 LINE SMOOTH",
"348 1020 OFFCURVE",
"445 1020 QCURVE SMOOTH",
"500 1020 OFFCURVE",
"596 896 QCURVE SMOOTH",
"628 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"672 855 OFFCURVE",
"704 896 QCURVE SMOOTH",
"801 1020 OFFCURVE",
"857 1020 QCURVE SMOOTH",
"952 1020 OFFCURVE",
"952 853 QCURVE SMOOTH",
"952 0 LINE",
"1070 0 LINE",
"1070 853 LINE SMOOTH",
"1070 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 853 QCURVE",
"230 853 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 853 LINE SMOOTH",
"318 1072 OFFCURVE",
"445 1072 QCURVE SMOOTH",
"500 1072 OFFCURVE",
"596 954 QCURVE SMOOTH",
"628 915 OFFCURVE",
"650 915 QCURVE SMOOTH",
"673 915 OFFCURVE",
"704 954 QCURVE SMOOTH",
"801 1072 OFFCURVE",
"857 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 853 QCURVE SMOOTH",
"982 0 LINE",
"1040 0 LINE",
"1040 853 LINE SMOOTH",
"1040 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"763 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 853 QCURVE",
"260 853 LINE"
);
}
);
width = 1300;
}
);
note = uni1796;
unicode = 1796;
},
{
glyphname = uni1797;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 1160 LINE",
"110 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"1190 1160 LINE"
);
},
{
closed = 1;
nodes = (
"478 517 LINE SMOOTH",
"478 612 OFFCURVE",
"650 612 QCURVE SMOOTH",
"822 612 OFFCURVE",
"822 517 QCURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 517 LINE SMOOTH",
"1190 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"110 840 OFFCURVE",
"110 517 QCURVE SMOOTH",
"110 457 LINE",
"182 324 OFFCURVE",
"182 298 QCURVE SMOOTH",
"182 258 OFFCURVE",
"106 258 QCURVE SMOOTH",
"30 258 LINE",
"30 0 LINE",
"226 0 LINE SMOOTH",
"530 0 OFFCURVE",
"530 268 QCURVE SMOOTH",
"530 334 OFFCURVE",
"478 505 QCURVE",
"478 505 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 517 LINE SMOOTH",
"448 642 OFFCURVE",
"650 642 QCURVE SMOOTH",
"852 642 OFFCURVE",
"852 517 QCURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 517 LINE SMOOTH",
"1160 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"140 840 OFFCURVE",
"140 517 QCURVE SMOOTH",
"140 457 LINE",
"212 314 OFFCURVE",
"212 268 QCURVE SMOOTH",
"212 228 OFFCURVE",
"136 228 QCURVE SMOOTH",
"60 228 LINE",
"60 0 LINE",
"196 0 LINE SMOOTH",
"500 0 OFFCURVE",
"500 268 QCURVE SMOOTH",
"500 332 OFFCURVE",
"448 505 QCURVE",
"448 505 LINE"
);
},
{
closed = 1;
nodes = (
"140 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"140 1130 LINE",
"140 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 702 OFFCURVE",
"650 702 QCURVE SMOOTH",
"912 702 OFFCURVE",
"912 517 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 517 LINE SMOOTH",
"1100 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"200 840 OFFCURVE",
"200 517 QCURVE SMOOTH",
"200 457 LINE",
"272 304 OFFCURVE",
"272 238 QCURVE SMOOTH",
"272 168 OFFCURVE",
"196 168 QCURVE SMOOTH",
"100 168 LINE",
"100 0 LINE",
"196 0 LINE SMOOTH",
"440 0 OFFCURVE",
"440 238 QCURVE SMOOTH",
"440 322 OFFCURVE",
"388 505 QCURVE",
"388 517 LINE",
"388 517 LINE"
);
},
{
closed = 1;
nodes = (
"200 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"200 1130 LINE",
"200 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 517 LINE SMOOTH",
"348 742 OFFCURVE",
"650 742 QCURVE SMOOTH",
"952 742 OFFCURVE",
"952 517 QCURVE SMOOTH",
"952 0 LINE",
"1070 0 LINE",
"1070 517 LINE SMOOTH",
"1070 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"230 840 OFFCURVE",
"230 517 QCURVE SMOOTH",
"230 457 LINE",
"302 304 OFFCURVE",
"302 238 QCURVE SMOOTH",
"302 108 OFFCURVE",
"196 108 QCURVE SMOOTH",
"100 108 LINE",
"100 0 LINE",
"196 0 LINE SMOOTH",
"400 0 OFFCURVE",
"400 238 QCURVE SMOOTH",
"400 322 OFFCURVE",
"348 505 QCURVE",
"348 505 LINE"
);
},
{
closed = 1;
nodes = (
"230 1032 LINE",
"1070 1032 LINE",
"1070 1130 LINE",
"230 1130 LINE",
"230 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 1130 LINE",
"260 1072 LINE",
"1040 1072 LINE",
"1040 1130 LINE",
"1040 1130 LINE"
);
},
{
closed = 1;
nodes = (
"318 517 LINE SMOOTH",
"318 782 OFFCURVE",
"650 782 QCURVE SMOOTH",
"982 782 OFFCURVE",
"982 517 QCURVE SMOOTH",
"982 0 LINE",
"1040 0 LINE",
"1040 517 LINE SMOOTH",
"1040 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"260 840 OFFCURVE",
"260 517 QCURVE SMOOTH",
"260 457 LINE",
"342 305 OFFCURVE",
"342 208 QCURVE SMOOTH",
"342 58 OFFCURVE",
"246 58 QCURVE SMOOTH",
"150 58 LINE",
"150 0 LINE",
"246 0 LINE SMOOTH",
"400 0 OFFCURVE",
"400 208 QCURVE SMOOTH",
"400 323 OFFCURVE",
"318 465 QCURVE",
"318 465 LINE"
);
}
);
width = 1300;
}
);
note = uni1797;
unicode = 1797;
},
{
glyphname = uni1798;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"990 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"880 1160 LINE SMOOTH",
"672 1160 OFFCURVE",
"672 932 QCURVE SMOOTH",
"672 827 LINE",
"822 704 LINE",
"822 679 LINE",
"478 679 LINE",
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"508 932 LINE",
"508 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"110 704 LINE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 323 QCURVE SMOOTH",
"1190 704 LINE SMOOTH",
"1190 772 OFFCURVE",
"1090 826 QCURVE SMOOTH",
"990 880 LINE",
"990 880 LINE"
);
},
{
closed = 1;
nodes = (
"478 228 OFFCURVE",
"478 323 QCURVE SMOOTH",
"478 451 LINE",
"822 451 LINE",
"822 323 LINE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE",
"650 228 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"852 466 LINE",
"852 323 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE SMOOTH",
"448 466 LINE",
"448 466 LINE"
);
},
{
closed = 1;
nodes = (
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 704 LINE SMOOTH",
"1160 772 OFFCURVE",
"1060 826 QCURVE SMOOTH",
"960 880 LINE",
"960 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"900 1130 LINE SMOOTH",
"692 1130 OFFCURVE",
"692 932 QCURVE SMOOTH",
"692 827 LINE",
"852 704 LINE",
"852 664 LINE",
"448 664 LINE",
"448 664 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 734 LINE SMOOTH",
"1100 802 OFFCURVE",
"1000 856 QCURVE SMOOTH",
"900 910 LINE",
"900 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"900 1130 LINE SMOOTH",
"722 1130 OFFCURVE",
"722 992 QCURVE SMOOTH",
"722 857 LINE",
"912 734 LINE",
"912 634 LINE",
"388 634 LINE",
"388 634 LINE"
);
},
{
closed = 1;
nodes = (
"912 323 LINE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 496 LINE",
"912 496 LINE",
"912 496 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 516 LINE",
"952 323 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 516 LINE",
"348 516 LINE"
);
},
{
closed = 1;
nodes = (
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 714 LINE SMOOTH",
"1070 802 OFFCURVE",
"970 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"905 772 LINE SMOOTH",
"952 744 OFFCURVE",
"952 714 QCURVE SMOOTH",
"952 614 LINE",
"348 614 LINE",
"348 614 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"982 594 LINE",
"318 594 LINE",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 323 QCURVE SMOOTH",
"1040 714 LINE SMOOTH",
"1040 769 OFFCURVE",
"930 837 QCURVE SMOOTH",
"820 903 LINE",
"820 992 LINE SMOOTH",
"820 1072 OFFCURVE",
"920 1072 QCURVE SMOOTH",
"1070 1072 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 869 LINE",
"900 786 LINE SMOOTH",
"982 737 OFFCURVE",
"982 714 QCURVE",
"982 714 LINE"
);
},
{
closed = 1;
nodes = (
"318 536 LINE",
"982 536 LINE",
"982 323 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE",
"318 323 LINE"
);
}
);
width = 1300;
}
);
note = uni1798;
unicode = 1798;
},
{
glyphname = uni1799;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"692 827 LINE",
"792 704 LINE",
"792 323 LINE SMOOTH",
"792 228 OFFCURVE",
"635 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 323 QCURVE SMOOTH",
"478 932 LINE",
"600 932 LINE",
"600 1160 LINE",
"110 1160 LINE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"635 0 QCURVE SMOOTH",
"870 0 OFFCURVE",
"976 91 QCURVE",
"1082 0 OFFCURVE",
"1297 0 QCURVE SMOOTH",
"1802 0 OFFCURVE",
"1802 323 QCURVE SMOOTH",
"1802 704 LINE SMOOTH",
"1802 772 OFFCURVE",
"1702 826 QCURVE SMOOTH",
"1602 880 LINE",
"1602 932 LINE",
"1802 932 LINE",
"1802 1160 LINE",
"1512 1160 LINE SMOOTH",
"1284 1160 OFFCURVE",
"1284 932 QCURVE SMOOTH",
"1284 827 LINE",
"1434 704 LINE",
"1434 323 LINE SMOOTH",
"1434 228 OFFCURVE",
"1297 228 QCURVE SMOOTH",
"1160 228 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 704 LINE SMOOTH",
"1160 772 OFFCURVE",
"1085 826 QCURVE SMOOTH",
"1010 880 LINE",
"1010 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"920 1160 LINE SMOOTH",
"692 1160 OFFCURVE",
"692 962 QCURVE",
"692 962 LINE"
);
}
);
width = 1912;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"822 323 LINE SMOOTH",
"822 198 OFFCURVE",
"635 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE SMOOTH",
"448 932 LINE",
"600 932 LINE",
"600 1130 LINE",
"140 1130 LINE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"635 0 QCURVE SMOOTH",
"870 0 OFFCURVE",
"976 91 QCURVE",
"1082 0 OFFCURVE",
"1297 0 QCURVE SMOOTH",
"1772 0 OFFCURVE",
"1772 323 QCURVE SMOOTH",
"1772 704 LINE SMOOTH",
"1772 772 OFFCURVE",
"1672 826 QCURVE SMOOTH",
"1572 880 LINE",
"1572 932 LINE",
"1772 932 LINE",
"1772 1130 LINE",
"1512 1130 LINE SMOOTH",
"1304 1130 OFFCURVE",
"1304 932 QCURVE SMOOTH",
"1304 827 LINE",
"1464 704 LINE",
"1464 323 LINE SMOOTH",
"1464 198 OFFCURVE",
"1297 198 QCURVE SMOOTH",
"1130 198 OFFCURVE",
"1130 323 QCURVE SMOOTH",
"1130 704 LINE SMOOTH",
"1130 772 OFFCURVE",
"1055 826 QCURVE SMOOTH",
"980 880 LINE",
"980 932 LINE",
"1180 932 LINE",
"1180 1130 LINE",
"920 1130 LINE SMOOTH",
"712 1130 OFFCURVE",
"712 962 QCURVE SMOOTH",
"712 827 LINE",
"822 704 LINE",
"822 704 LINE"
);
}
);
width = 1912;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"635 0 QCURVE SMOOTH",
"870 0 OFFCURVE",
"976 91 QCURVE",
"1082 0 OFFCURVE",
"1297 0 QCURVE SMOOTH",
"1712 0 OFFCURVE",
"1712 323 QCURVE SMOOTH",
"1712 734 LINE SMOOTH",
"1712 792 OFFCURVE",
"1607 851 QCURVE SMOOTH",
"1502 910 LINE",
"1502 992 LINE",
"1712 992 LINE",
"1712 1130 LINE",
"1512 1130 LINE SMOOTH",
"1334 1130 OFFCURVE",
"1334 992 QCURVE SMOOTH",
"1334 857 LINE",
"1524 734 LINE",
"1524 323 LINE SMOOTH",
"1524 138 OFFCURVE",
"1297 138 QCURVE SMOOTH",
"1070 138 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 734 LINE SMOOTH",
"1070 792 OFFCURVE",
"990 851 QCURVE SMOOTH",
"910 910 LINE",
"910 992 LINE",
"1120 992 LINE",
"1120 1130 LINE",
"920 1130 LINE SMOOTH",
"742 1130 OFFCURVE",
"742 992 QCURVE SMOOTH",
"742 857 LINE",
"882 734 LINE",
"882 323 LINE SMOOTH",
"882 138 OFFCURVE",
"635 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 962 LINE",
"580 962 LINE",
"580 1130 LINE",
"200 1130 LINE",
"200 1130 LINE"
);
}
);
width = 1912;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 0 OFFCURVE",
"625 0 QCURVE SMOOTH",
"867 0 OFFCURVE",
"961 121 QCURVE",
"1053 0 OFFCURVE",
"1292 0 QCURVE SMOOTH",
"1682 0 OFFCURVE",
"1682 323 QCURVE SMOOTH",
"1682 714 LINE SMOOTH",
"1682 802 OFFCURVE",
"1582 856 QCURVE SMOOTH",
"1482 910 LINE",
"1482 992 LINE SMOOTH",
"1482 1032 OFFCURVE",
"1532 1032 QCURVE SMOOTH",
"1682 1032 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 857 LINE",
"1517 772 LINE SMOOTH",
"1564 744 OFFCURVE",
"1564 714 QCURVE SMOOTH",
"1564 323 LINE SMOOTH",
"1564 98 OFFCURVE",
"1292 98 QCURVE SMOOTH",
"1020 98 OFFCURVE",
"1020 323 QCURVE SMOOTH",
"1020 714 LINE SMOOTH",
"1020 802 OFFCURVE",
"945 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1110 1032 LINE",
"1110 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"867 772 LINE SMOOTH",
"902 744 OFFCURVE",
"902 714 QCURVE SMOOTH",
"902 323 LINE SMOOTH",
"902 98 OFFCURVE",
"625 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 1022 LINE",
"580 1022 LINE",
"580 1130 LINE",
"230 1130 LINE",
"230 323 LINE",
"230 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 1072 LINE",
"510 1072 LINE",
"510 1130 LINE",
"260 1130 LINE",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"610 0 QCURVE SMOOTH",
"860 0 OFFCURVE",
"931 165 QCURVE",
"1005 0 OFFCURVE",
"1262 0 QCURVE SMOOTH",
"1622 0 OFFCURVE",
"1622 323 QCURVE SMOOTH",
"1622 714 LINE SMOOTH",
"1622 769 OFFCURVE",
"1512 837 QCURVE SMOOTH",
"1402 903 LINE",
"1402 992 LINE SMOOTH",
"1402 1072 OFFCURVE",
"1502 1072 QCURVE SMOOTH",
"1652 1072 LINE",
"1652 1130 LINE",
"1502 1130 LINE SMOOTH",
"1344 1130 OFFCURVE",
"1344 992 QCURVE SMOOTH",
"1344 869 LINE",
"1482 786 LINE SMOOTH",
"1564 737 OFFCURVE",
"1564 714 QCURVE SMOOTH",
"1564 323 LINE SMOOTH",
"1564 58 OFFCURVE",
"1262 58 QCURVE SMOOTH",
"960 58 OFFCURVE",
"960 323 QCURVE SMOOTH",
"960 714 LINE SMOOTH",
"960 785 OFFCURVE",
"880 842 QCURVE SMOOTH",
"800 899 LINE",
"800 992 LINE SMOOTH",
"800 1072 OFFCURVE",
"890 1072 QCURVE SMOOTH",
"1050 1072 LINE",
"1050 1130 LINE",
"890 1130 LINE SMOOTH",
"742 1130 OFFCURVE",
"742 992 QCURVE SMOOTH",
"742 869 LINE",
"842 797 LINE SMOOTH",
"902 753 OFFCURVE",
"902 714 QCURVE SMOOTH",
"902 323 LINE SMOOTH",
"902 58 OFFCURVE",
"610 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE",
"318 323 LINE"
);
}
);
width = 1912;
}
);
note = uni1799;
unicode = 1799;
},
{
glyphname = uni179A;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"20 827 LINE",
"160 704 LINE",
"160 298 LINE SMOOTH",
"160 258 OFFCURVE",
"108 258 QCURVE SMOOTH",
"20 258 LINE",
"20 0 LINE",
"198 0 LINE SMOOTH",
"528 0 OFFCURVE",
"528 298 QCURVE SMOOTH",
"528 704 LINE SMOOTH",
"528 772 OFFCURVE",
"428 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE",
"20 962 LINE"
);
}
);
width = 638;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"190 268 LINE SMOOTH",
"190 228 OFFCURVE",
"108 228 QCURVE SMOOTH",
"30 228 LINE",
"30 0 LINE",
"168 0 LINE SMOOTH",
"498 0 OFFCURVE",
"498 268 QCURVE SMOOTH",
"498 704 LINE SMOOTH",
"498 772 OFFCURVE",
"398 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"190 704 LINE",
"190 704 LINE"
);
}
);
width = 638;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"250 238 LINE SMOOTH",
"250 168 OFFCURVE",
"168 168 QCURVE SMOOTH",
"60 168 LINE",
"60 0 LINE",
"168 0 LINE SMOOTH",
"438 0 OFFCURVE",
"438 238 QCURVE SMOOTH",
"438 734 LINE SMOOTH",
"438 802 OFFCURVE",
"338 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"250 734 LINE",
"250 734 LINE"
);
}
);
width = 638;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"290 188 LINE SMOOTH",
"290 108 OFFCURVE",
"218 108 QCURVE SMOOTH",
"100 108 LINE",
"100 0 LINE",
"218 0 LINE SMOOTH",
"408 0 OFFCURVE",
"408 188 QCURVE SMOOTH",
"408 714 LINE SMOOTH",
"408 802 OFFCURVE",
"308 856 QCURVE SMOOTH",
"208 910 LINE",
"208 992 LINE SMOOTH",
"208 1032 OFFCURVE",
"258 1032 QCURVE SMOOTH",
"408 1032 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"243 772 LINE SMOOTH",
"290 744 OFFCURVE",
"290 714 QCURVE",
"290 714 LINE"
);
}
);
width = 638;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"320 188 LINE SMOOTH",
"320 58 OFFCURVE",
"218 58 QCURVE SMOOTH",
"100 58 LINE",
"100 0 LINE",
"218 0 LINE SMOOTH",
"378 0 OFFCURVE",
"378 188 QCURVE SMOOTH",
"378 714 LINE SMOOTH",
"378 768 OFFCURVE",
"268 830 QCURVE SMOOTH",
"158 891 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"258 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"238 782 LINE SMOOTH",
"320 737 OFFCURVE",
"320 714 QCURVE",
"320 714 LINE"
);
}
);
width = 638;
}
);
note = uni179A;
unicode = 179A;
},
{
glyphname = uni179B;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1802 704 LINE SMOOTH",
"1802 772 OFFCURVE",
"1702 826 QCURVE SMOOTH",
"1602 880 LINE",
"1602 932 LINE",
"1802 932 LINE",
"1802 1160 LINE",
"1512 1160 LINE SMOOTH",
"1284 1160 OFFCURVE",
"1284 932 QCURVE SMOOTH",
"1284 827 LINE",
"1434 704 LINE",
"1434 323 LINE SMOOTH",
"1434 228 OFFCURVE",
"1287 228 QCURVE SMOOTH",
"1140 228 OFFCURVE",
"1140 323 QCURVE SMOOTH",
"1140 807 LINE SMOOTH",
"1140 1160 OFFCURVE",
"625 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 807 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 807 LINE SMOOTH",
"478 932 OFFCURVE",
"625 932 QCURVE SMOOTH",
"772 932 OFFCURVE",
"772 807 QCURVE SMOOTH",
"772 323 LINE SMOOTH",
"772 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1802 0 OFFCURVE",
"1802 323 QCURVE",
"1802 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1772 704 LINE SMOOTH",
"1772 772 OFFCURVE",
"1672 826 QCURVE SMOOTH",
"1572 880 LINE",
"1572 932 LINE",
"1772 932 LINE",
"1772 1130 LINE",
"1512 1130 LINE SMOOTH",
"1304 1130 OFFCURVE",
"1304 932 QCURVE SMOOTH",
"1304 827 LINE",
"1464 704 LINE",
"1464 323 LINE SMOOTH",
"1464 198 OFFCURVE",
"1287 198 QCURVE SMOOTH",
"1110 198 OFFCURVE",
"1110 323 QCURVE SMOOTH",
"1110 807 LINE SMOOTH",
"1110 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 807 LINE SMOOTH",
"448 932 OFFCURVE",
"625 932 QCURVE SMOOTH",
"802 932 OFFCURVE",
"802 807 QCURVE SMOOTH",
"802 323 LINE SMOOTH",
"802 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1772 0 OFFCURVE",
"1772 323 QCURVE",
"1772 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 807 LINE SMOOTH",
"388 992 OFFCURVE",
"625 992 QCURVE SMOOTH",
"862 992 OFFCURVE",
"862 807 QCURVE SMOOTH",
"862 323 LINE SMOOTH",
"862 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1712 0 OFFCURVE",
"1712 323 QCURVE SMOOTH",
"1712 734 LINE SMOOTH",
"1712 792 OFFCURVE",
"1607 851 QCURVE SMOOTH",
"1502 910 LINE",
"1502 992 LINE",
"1712 992 LINE",
"1712 1130 LINE",
"1512 1130 LINE SMOOTH",
"1334 1130 OFFCURVE",
"1334 992 QCURVE SMOOTH",
"1334 857 LINE",
"1524 734 LINE",
"1524 323 LINE SMOOTH",
"1524 138 OFFCURVE",
"1287 138 QCURVE SMOOTH",
"1050 138 OFFCURVE",
"1050 323 QCURVE SMOOTH",
"1050 807 LINE SMOOTH",
"1050 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 807 QCURVE",
"200 807 LINE"
);
}
);
width = 1912;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1682 714 LINE SMOOTH",
"1682 802 OFFCURVE",
"1582 856 QCURVE SMOOTH",
"1482 910 LINE",
"1482 992 LINE SMOOTH",
"1482 1032 OFFCURVE",
"1532 1032 QCURVE SMOOTH",
"1682 1032 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 857 LINE",
"1517 772 LINE SMOOTH",
"1564 744 OFFCURVE",
"1564 714 QCURVE SMOOTH",
"1564 323 LINE SMOOTH",
"1564 98 OFFCURVE",
"1292 98 QCURVE SMOOTH",
"1020 98 OFFCURVE",
"1020 323 QCURVE SMOOTH",
"1020 807 LINE SMOOTH",
"1020 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 807 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 98 LINE",
"470 98 LINE SMOOTH",
"348 98 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 807 LINE SMOOTH",
"348 1032 OFFCURVE",
"625 1032 QCURVE SMOOTH",
"902 1032 OFFCURVE",
"902 807 QCURVE SMOOTH",
"902 323 LINE SMOOTH",
"902 0 OFFCURVE",
"1292 0 QCURVE SMOOTH",
"1682 0 OFFCURVE",
"1682 323 QCURVE",
"1682 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1652 714 LINE SMOOTH",
"1652 769 OFFCURVE",
"1542 837 QCURVE SMOOTH",
"1432 903 LINE",
"1432 992 LINE SMOOTH",
"1432 1072 OFFCURVE",
"1532 1072 QCURVE SMOOTH",
"1682 1072 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 869 LINE",
"1512 786 LINE SMOOTH",
"1594 737 OFFCURVE",
"1594 714 QCURVE SMOOTH",
"1594 323 LINE SMOOTH",
"1594 58 OFFCURVE",
"1292 58 QCURVE SMOOTH",
"990 58 OFFCURVE",
"990 323 QCURVE SMOOTH",
"990 807 LINE SMOOTH",
"990 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 807 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 807 LINE SMOOTH",
"318 1072 OFFCURVE",
"625 1072 QCURVE SMOOTH",
"932 1072 OFFCURVE",
"932 807 QCURVE SMOOTH",
"932 323 LINE SMOOTH",
"932 0 OFFCURVE",
"1292 0 QCURVE SMOOTH",
"1652 0 OFFCURVE",
"1652 323 QCURVE",
"1652 323 LINE"
);
}
);
width = 1912;
}
);
note = uni179B;
unicode = 179B;
},
{
glyphname = uni179C;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"528 1340 LINE",
"160 1340 LINE",
"160 1157 LINE",
"20 1140 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"160 704 LINE",
"160 298 LINE SMOOTH",
"160 258 OFFCURVE",
"108 258 QCURVE SMOOTH",
"20 258 LINE",
"20 0 LINE",
"198 0 LINE SMOOTH",
"528 0 OFFCURVE",
"528 298 QCURVE SMOOTH",
"528 704 LINE SMOOTH",
"528 772 OFFCURVE",
"428 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 932 LINE"
);
}
);
width = 638;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"30 1109 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"190 704 LINE",
"190 268 LINE SMOOTH",
"190 228 OFFCURVE",
"108 228 QCURVE SMOOTH",
"30 228 LINE",
"30 0 LINE",
"168 0 LINE SMOOTH",
"498 0 OFFCURVE",
"498 268 QCURVE SMOOTH",
"498 704 LINE SMOOTH",
"498 772 OFFCURVE",
"398 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1340 LINE",
"190 1340 LINE",
"190 1127 LINE",
"190 1127 LINE"
);
}
);
width = 638;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"250 238 LINE SMOOTH",
"250 168 OFFCURVE",
"168 168 QCURVE SMOOTH",
"60 168 LINE",
"60 0 LINE",
"168 0 LINE SMOOTH",
"438 0 OFFCURVE",
"438 238 QCURVE SMOOTH",
"438 734 LINE SMOOTH",
"438 802 OFFCURVE",
"338 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1340 LINE",
"250 1340 LINE",
"250 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"250 734 LINE",
"250 734 LINE"
);
}
);
width = 638;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"243 772 LINE SMOOTH",
"290 744 OFFCURVE",
"290 714 QCURVE SMOOTH",
"290 188 LINE SMOOTH",
"290 108 OFFCURVE",
"218 108 QCURVE SMOOTH",
"100 108 LINE",
"100 0 LINE",
"218 0 LINE SMOOTH",
"408 0 OFFCURVE",
"408 188 QCURVE SMOOTH",
"408 714 LINE SMOOTH",
"408 802 OFFCURVE",
"308 856 QCURVE SMOOTH",
"208 910 LINE",
"208 992 LINE SMOOTH",
"208 1032 OFFCURVE",
"258 1032 QCURVE SMOOTH",
"408 1032 LINE",
"408 1340 LINE",
"290 1340 LINE",
"290 1130 LINE",
"290 1130 LINE"
);
}
);
width = 638;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"60 880 LINE",
"238 782 LINE SMOOTH",
"320 737 OFFCURVE",
"320 714 QCURVE SMOOTH",
"320 188 LINE SMOOTH",
"320 58 OFFCURVE",
"218 58 QCURVE SMOOTH",
"100 58 LINE",
"100 0 LINE",
"218 0 LINE SMOOTH",
"378 0 OFFCURVE",
"378 188 QCURVE SMOOTH",
"378 714 LINE SMOOTH",
"378 768 OFFCURVE",
"268 830 QCURVE SMOOTH",
"118 914 LINE",
"118 992 LINE SMOOTH",
"118 1072 OFFCURVE",
"198 1072 QCURVE SMOOTH",
"226 1072 OFFCURVE",
"291 1052 QCURVE SMOOTH",
"354 1032 OFFCURVE",
"383 1032 QCURVE SMOOTH",
"493 1032 OFFCURVE",
"493 1155 QCURVE SMOOTH",
"493 1280 LINE",
"435 1280 LINE",
"435 1155 LINE SMOOTH",
"435 1090 OFFCURVE",
"383 1090 QCURVE SMOOTH",
"345 1090 OFFCURVE",
"294 1110 QCURVE SMOOTH",
"243 1130 OFFCURVE",
"198 1130 QCURVE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE",
"60 992 LINE"
);
}
);
width = 638;
}
);
note = uni179C;
unicode = 179C;
},
{
glyphname = uni179D;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1190 1160 LINE",
"110 1160 LINE",
"110 932 LINE",
"1190 932 LINE",
"1190 932 LINE"
);
},
{
closed = 1;
nodes = (
"1260 192 LINE",
"1260 420 LINE",
"1190 420 LINE",
"1190 487 LINE SMOOTH",
"1190 810 OFFCURVE",
"650 810 QCURVE SMOOTH",
"110 810 OFFCURVE",
"110 487 QCURVE SMOOTH",
"110 0 LINE",
"478 0 LINE",
"478 80 LINE",
"491 99 OFFCURVE",
"493 102 QCURVE SMOOTH",
"526 150 OFFCURVE",
"562 188 OFFCURVE",
"590 200 QCURVE SMOOTH",
"619 212 OFFCURVE",
"666 212 QCURVE SMOOTH",
"700 212 LINE",
"700 400 LINE",
"662 400 LINE SMOOTH",
"533 400 OFFCURVE",
"478 321 QCURVE",
"478 487 LINE SMOOTH",
"478 592 OFFCURVE",
"650 592 QCURVE SMOOTH",
"822 592 OFFCURVE",
"822 487 QCURVE SMOOTH",
"822 420 LINE",
"744 420 LINE",
"744 192 LINE",
"822 192 LINE",
"822 0 LINE",
"1190 0 LINE",
"1190 192 LINE",
"1190 192 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"852 0 LINE",
"1160 0 LINE",
"1160 212 LINE",
"1260 212 LINE",
"1260 400 LINE",
"1160 400 LINE",
"1160 487 LINE SMOOTH",
"1160 810 OFFCURVE",
"650 810 QCURVE SMOOTH",
"140 810 OFFCURVE",
"140 487 QCURVE SMOOTH",
"140 0 LINE",
"448 0 LINE",
"448 86 LINE",
"468 141 OFFCURVE",
"553 212 OFFCURVE",
"636 212 QCURVE SMOOTH",
"714 212 LINE",
"714 400 LINE",
"636 400 LINE SMOOTH",
"517 400 OFFCURVE",
"448 320 QCURVE",
"448 487 LINE SMOOTH",
"448 652 OFFCURVE",
"650 652 QCURVE SMOOTH",
"852 652 OFFCURVE",
"852 487 QCURVE SMOOTH",
"852 400 LINE",
"774 400 LINE",
"774 212 LINE",
"852 212 LINE",
"852 212 LINE"
);
},
{
closed = 1;
nodes = (
"140 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"140 1130 LINE",
"140 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"573 400 LINE SMOOTH",
"457 400 OFFCURVE",
"388 320 QCURVE",
"388 517 LINE SMOOTH",
"388 702 OFFCURVE",
"650 702 QCURVE SMOOTH",
"912 702 OFFCURVE",
"912 517 QCURVE SMOOTH",
"912 400 LINE",
"912 400 LINE"
);
},
{
closed = 1;
nodes = (
"1200 262 LINE",
"1200 400 LINE",
"1100 400 LINE",
"1100 517 LINE SMOOTH",
"1100 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"200 840 OFFCURVE",
"200 517 QCURVE SMOOTH",
"200 0 LINE",
"388 0 LINE",
"388 86 LINE",
"408 171 OFFCURVE",
"450 216 QCURVE SMOOTH",
"493 262 OFFCURVE",
"596 262 QCURVE SMOOTH",
"912 262 LINE",
"912 0 LINE",
"1100 0 LINE",
"1100 262 LINE",
"1100 262 LINE"
);
},
{
closed = 1;
nodes = (
"200 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"200 1130 LINE",
"200 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 0 LINE",
"1070 0 LINE",
"1070 262 LINE",
"1180 262 LINE",
"1180 360 LINE",
"1070 360 LINE",
"1070 517 LINE SMOOTH",
"1070 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"230 840 OFFCURVE",
"230 517 QCURVE SMOOTH",
"230 0 LINE",
"348 0 LINE",
"348 36 LINE",
"368 121 OFFCURVE",
"483 262 OFFCURVE",
"586 262 QCURVE SMOOTH",
"660 262 LINE",
"660 360 LINE",
"586 360 LINE SMOOTH",
"447 360 OFFCURVE",
"348 230 QCURVE",
"348 517 LINE SMOOTH",
"348 742 OFFCURVE",
"650 742 QCURVE SMOOTH",
"952 742 OFFCURVE",
"952 517 QCURVE SMOOTH",
"952 360 LINE",
"823 360 LINE",
"823 262 LINE",
"952 262 LINE",
"952 262 LINE"
);
},
{
closed = 1;
nodes = (
"230 1032 LINE",
"1070 1032 LINE",
"1070 1130 LINE",
"230 1130 LINE",
"230 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 1130 LINE",
"260 1072 LINE",
"1040 1072 LINE",
"1040 1130 LINE",
"1040 1130 LINE"
);
},
{
closed = 1;
nodes = (
"823 282 LINE",
"982 282 LINE",
"982 0 LINE",
"1040 0 LINE",
"1040 282 LINE",
"1180 282 LINE",
"1180 340 LINE",
"1040 340 LINE",
"1040 517 LINE SMOOTH",
"1040 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"260 840 OFFCURVE",
"260 517 QCURVE SMOOTH",
"260 0 LINE",
"318 0 LINE",
"318 66 LINE",
"333 116 OFFCURVE",
"404 216 OFFCURVE",
"512 282 OFFCURVE",
"576 282 QCURVE SMOOTH",
"650 282 LINE",
"650 340 LINE",
"576 340 LINE SMOOTH",
"417 340 OFFCURVE",
"318 170 QCURVE",
"318 517 LINE SMOOTH",
"318 782 OFFCURVE",
"650 782 QCURVE SMOOTH",
"982 782 OFFCURVE",
"982 517 QCURVE SMOOTH",
"982 340 LINE",
"823 340 LINE",
"823 340 LINE"
);
}
);
width = 1300;
}
);
note = uni179D;
unicode = 179D;
},
{
glyphname = uni179E;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1240 412 LINE",
"1240 640 LINE",
"1190 640 LINE",
"1190 704 LINE SMOOTH",
"1190 772 OFFCURVE",
"1090 826 QCURVE SMOOTH",
"990 880 LINE",
"990 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"880 1160 LINE SMOOTH",
"672 1160 OFFCURVE",
"672 932 QCURVE SMOOTH",
"672 827 LINE",
"822 704 LINE",
"822 640 LINE",
"724 640 LINE",
"724 412 LINE",
"822 412 LINE",
"822 323 LINE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 323 QCURVE SMOOTH",
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"508 932 LINE",
"508 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"110 704 LINE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 323 QCURVE SMOOTH",
"1190 412 LINE",
"1190 412 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"754 620 LINE",
"754 432 LINE",
"852 432 LINE",
"852 323 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE SMOOTH",
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 432 LINE",
"1240 432 LINE",
"1240 620 LINE",
"1160 620 LINE",
"1160 704 LINE SMOOTH",
"1160 772 OFFCURVE",
"1060 826 QCURVE SMOOTH",
"960 880 LINE",
"960 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"900 1130 LINE SMOOTH",
"692 1130 OFFCURVE",
"692 932 QCURVE SMOOTH",
"692 827 LINE",
"852 704 LINE",
"852 620 LINE",
"852 620 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 431 LINE",
"1200 431 LINE",
"1200 569 LINE",
"1100 569 LINE",
"1100 734 LINE SMOOTH",
"1100 802 OFFCURVE",
"1000 856 QCURVE SMOOTH",
"900 910 LINE",
"900 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"900 1130 LINE SMOOTH",
"722 1130 OFFCURVE",
"722 992 QCURVE SMOOTH",
"722 857 LINE",
"912 734 LINE",
"912 569 LINE",
"700 569 LINE",
"700 431 LINE",
"912 431 LINE",
"912 323 LINE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 734 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 323 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 451 LINE",
"1200 451 LINE",
"1200 549 LINE",
"1070 549 LINE",
"1070 714 LINE SMOOTH",
"1070 802 OFFCURVE",
"970 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"905 772 LINE SMOOTH",
"952 744 OFFCURVE",
"952 714 QCURVE SMOOTH",
"952 549 LINE",
"700 549 LINE",
"700 451 LINE",
"952 451 LINE",
"952 451 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"700 471 LINE",
"982 471 LINE",
"982 323 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE SMOOTH",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 323 QCURVE SMOOTH",
"1040 471 LINE",
"1200 471 LINE",
"1200 529 LINE",
"1040 529 LINE",
"1040 714 LINE SMOOTH",
"1040 769 OFFCURVE",
"930 837 QCURVE SMOOTH",
"820 903 LINE",
"820 992 LINE SMOOTH",
"820 1072 OFFCURVE",
"920 1072 QCURVE SMOOTH",
"1070 1072 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 869 LINE",
"900 786 LINE SMOOTH",
"982 737 OFFCURVE",
"982 714 QCURVE SMOOTH",
"982 529 LINE",
"700 529 LINE",
"700 529 LINE"
);
}
);
width = 1300;
}
);
note = uni179E;
unicode = 179E;
},
{
glyphname = uni179F;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1602 932 LINE",
"1802 932 LINE",
"1802 1160 LINE",
"1512 1160 LINE SMOOTH",
"1284 1160 OFFCURVE",
"1284 932 QCURVE SMOOTH",
"1284 827 LINE",
"1434 704 LINE",
"1434 323 LINE SMOOTH",
"1434 228 OFFCURVE",
"1287 228 QCURVE SMOOTH",
"1140 228 OFFCURVE",
"1140 323 QCURVE SMOOTH",
"1140 490 LINE SMOOTH",
"1140 801 OFFCURVE",
"666 810 QCURVE",
"644 851 OFFCURVE",
"542 908 QCURVE",
"542 932 LINE",
"832 932 LINE",
"832 1160 LINE",
"452 1160 LINE SMOOTH",
"234 1160 OFFCURVE",
"234 962 QCURVE SMOOTH",
"234 867 LINE",
"348 781 LINE",
"110 714 OFFCURVE",
"110 487 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 487 LINE SMOOTH",
"478 622 OFFCURVE",
"625 622 QCURVE SMOOTH",
"772 622 OFFCURVE",
"772 487 QCURVE SMOOTH",
"772 323 LINE SMOOTH",
"772 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1802 0 OFFCURVE",
"1802 323 QCURVE SMOOTH",
"1802 704 LINE SMOOTH",
"1802 772 OFFCURVE",
"1702 826 QCURVE SMOOTH",
"1602 880 LINE",
"1602 880 LINE"
);
}
);
width = 1912;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 713 OFFCURVE",
"140 487 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 487 LINE SMOOTH",
"448 622 OFFCURVE",
"625 622 QCURVE SMOOTH",
"802 622 OFFCURVE",
"802 487 QCURVE SMOOTH",
"802 323 LINE SMOOTH",
"802 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1772 0 OFFCURVE",
"1772 323 QCURVE SMOOTH",
"1772 704 LINE SMOOTH",
"1772 772 OFFCURVE",
"1672 826 QCURVE SMOOTH",
"1572 880 LINE",
"1572 932 LINE",
"1772 932 LINE",
"1772 1130 LINE",
"1512 1130 LINE SMOOTH",
"1304 1130 OFFCURVE",
"1304 932 QCURVE SMOOTH",
"1304 827 LINE",
"1464 704 LINE",
"1464 323 LINE SMOOTH",
"1464 198 OFFCURVE",
"1287 198 QCURVE SMOOTH",
"1110 198 OFFCURVE",
"1110 323 QCURVE SMOOTH",
"1110 487 LINE SMOOTH",
"1110 809 OFFCURVE",
"629 810 QCURVE",
"585 854 OFFCURVE",
"512 910 QCURVE",
"512 932 LINE",
"832 932 LINE",
"832 1130 LINE",
"452 1130 LINE SMOOTH",
"264 1130 OFFCURVE",
"264 962 QCURVE SMOOTH",
"264 867 LINE",
"378 781 LINE",
"378 781 LINE"
);
}
);
width = 1912;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 517 LINE SMOOTH",
"388 702 OFFCURVE",
"650 702 QCURVE SMOOTH",
"862 702 OFFCURVE",
"862 517 QCURVE SMOOTH",
"862 323 LINE SMOOTH",
"862 0 OFFCURVE",
"1287 0 QCURVE SMOOTH",
"1712 0 OFFCURVE",
"1712 323 QCURVE SMOOTH",
"1712 734 LINE SMOOTH",
"1712 792 OFFCURVE",
"1607 851 QCURVE SMOOTH",
"1502 910 LINE",
"1502 992 LINE",
"1712 992 LINE",
"1712 1130 LINE",
"1512 1130 LINE SMOOTH",
"1334 1130 OFFCURVE",
"1334 992 QCURVE SMOOTH",
"1334 857 LINE",
"1524 734 LINE",
"1524 323 LINE SMOOTH",
"1524 138 OFFCURVE",
"1287 138 QCURVE SMOOTH",
"1050 138 OFFCURVE",
"1050 323 QCURVE SMOOTH",
"1050 517 LINE SMOOTH",
"1050 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"629 840 OFFCURVE",
"610 839 QCURVE",
"564 887 OFFCURVE",
"452 950 QCURVE",
"452 992 LINE",
"832 992 LINE",
"832 1130 LINE",
"452 1130 LINE SMOOTH",
"264 1130 OFFCURVE",
"264 992 QCURVE SMOOTH",
"264 897 LINE",
"392 801 LINE",
"200 728 OFFCURVE",
"200 517 QCURVE",
"200 517 LINE"
);
}
);
width = 1912;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"412 960 LINE",
"412 992 LINE SMOOTH",
"412 1032 OFFCURVE",
"462 1032 QCURVE SMOOTH",
"832 1032 LINE",
"832 1130 LINE",
"462 1130 LINE SMOOTH",
"304 1130 OFFCURVE",
"304 992 QCURVE SMOOTH",
"304 907 LINE",
"477 816 LINE",
"230 762 OFFCURVE",
"230 507 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 98 LINE",
"470 98 LINE SMOOTH",
"348 98 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 507 LINE SMOOTH",
"348 732 OFFCURVE",
"625 732 QCURVE SMOOTH",
"902 732 OFFCURVE",
"902 507 QCURVE SMOOTH",
"902 323 LINE SMOOTH",
"902 0 OFFCURVE",
"1292 0 QCURVE SMOOTH",
"1682 0 OFFCURVE",
"1682 323 QCURVE SMOOTH",
"1682 714 LINE SMOOTH",
"1682 802 OFFCURVE",
"1582 856 QCURVE SMOOTH",
"1482 910 LINE",
"1482 992 LINE SMOOTH",
"1482 1032 OFFCURVE",
"1532 1032 QCURVE SMOOTH",
"1682 1032 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 857 LINE",
"1517 772 LINE SMOOTH",
"1564 744 OFFCURVE",
"1564 714 QCURVE SMOOTH",
"1564 323 LINE SMOOTH",
"1564 98 OFFCURVE",
"1292 98 QCURVE SMOOTH",
"1020 98 OFFCURVE",
"1020 323 QCURVE SMOOTH",
"1020 507 LINE SMOOTH",
"1020 818 OFFCURVE",
"655 830 QCURVE",
"655 830 LINE"
);
}
);
width = 1912;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"598 830 LINE",
"398 940 LINE",
"398 992 LINE SMOOTH",
"398 1072 OFFCURVE",
"498 1072 QCURVE SMOOTH",
"868 1072 LINE",
"868 1130 LINE",
"498 1130 LINE SMOOTH",
"340 1130 OFFCURVE",
"340 992 QCURVE SMOOTH",
"340 917 LINE",
"510 820 LINE",
"260 774 OFFCURVE",
"260 507 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 507 LINE SMOOTH",
"318 772 OFFCURVE",
"625 772 QCURVE SMOOTH",
"932 772 OFFCURVE",
"932 507 QCURVE SMOOTH",
"932 323 LINE SMOOTH",
"932 0 OFFCURVE",
"1292 0 QCURVE SMOOTH",
"1652 0 OFFCURVE",
"1652 323 QCURVE SMOOTH",
"1652 714 LINE SMOOTH",
"1652 769 OFFCURVE",
"1542 837 QCURVE SMOOTH",
"1432 903 LINE",
"1432 992 LINE SMOOTH",
"1432 1072 OFFCURVE",
"1532 1072 QCURVE SMOOTH",
"1682 1072 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 869 LINE",
"1512 786 LINE SMOOTH",
"1594 737 OFFCURVE",
"1594 714 QCURVE SMOOTH",
"1594 323 LINE SMOOTH",
"1594 58 OFFCURVE",
"1292 58 QCURVE SMOOTH",
"990 58 OFFCURVE",
"990 323 QCURVE SMOOTH",
"990 507 LINE SMOOTH",
"990 830 OFFCURVE",
"625 830 QCURVE",
"625 830 LINE"
);
}
);
width = 1912;
}
);
note = uni179F;
unicode = 179F;
},
{
glyphname = uni17A0;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"110 704 LINE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"625 0 QCURVE SMOOTH",
"1140 0 OFFCURVE",
"1140 323 QCURVE SMOOTH",
"1140 807 LINE SMOOTH",
"1140 932 OFFCURVE",
"1287 932 QCURVE SMOOTH",
"1434 932 OFFCURVE",
"1434 807 QCURVE SMOOTH",
"1434 0 LINE",
"1802 0 LINE",
"1802 807 LINE SMOOTH",
"1802 1160 OFFCURVE",
"1287 1160 QCURVE SMOOTH",
"772 1160 OFFCURVE",
"772 807 QCURVE SMOOTH",
"772 323 LINE SMOOTH",
"772 198 OFFCURVE",
"625 198 QCURVE SMOOTH",
"478 198 OFFCURVE",
"478 323 QCURVE",
"478 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"625 0 QCURVE SMOOTH",
"1110 0 OFFCURVE",
"1110 323 QCURVE SMOOTH",
"1110 807 LINE SMOOTH",
"1110 932 OFFCURVE",
"1287 932 QCURVE SMOOTH",
"1464 932 OFFCURVE",
"1464 807 QCURVE SMOOTH",
"1464 0 LINE",
"1772 0 LINE",
"1772 807 LINE SMOOTH",
"1772 1130 OFFCURVE",
"1287 1130 QCURVE SMOOTH",
"802 1130 OFFCURVE",
"802 807 QCURVE SMOOTH",
"802 323 LINE SMOOTH",
"802 198 OFFCURVE",
"625 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE",
"448 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"625 0 QCURVE SMOOTH",
"1050 0 OFFCURVE",
"1050 323 QCURVE SMOOTH",
"1050 807 LINE SMOOTH",
"1050 992 OFFCURVE",
"1287 992 QCURVE SMOOTH",
"1524 992 OFFCURVE",
"1524 807 QCURVE SMOOTH",
"1524 0 LINE",
"1712 0 LINE",
"1712 807 LINE SMOOTH",
"1712 1130 OFFCURVE",
"1287 1130 QCURVE SMOOTH",
"862 1130 OFFCURVE",
"862 807 QCURVE SMOOTH",
"862 323 LINE SMOOTH",
"862 138 OFFCURVE",
"625 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE",
"388 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"625 0 QCURVE SMOOTH",
"1020 0 OFFCURVE",
"1020 323 QCURVE SMOOTH",
"1020 807 LINE SMOOTH",
"1020 1032 OFFCURVE",
"1292 1032 QCURVE SMOOTH",
"1564 1032 OFFCURVE",
"1564 807 QCURVE SMOOTH",
"1564 0 LINE",
"1682 0 LINE",
"1682 807 LINE SMOOTH",
"1682 1130 OFFCURVE",
"1292 1130 QCURVE SMOOTH",
"902 1130 OFFCURVE",
"902 807 QCURVE SMOOTH",
"902 323 LINE SMOOTH",
"902 98 OFFCURVE",
"625 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE",
"348 323 LINE"
);
}
);
width = 1912;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"625 0 QCURVE SMOOTH",
"990 0 OFFCURVE",
"990 323 QCURVE SMOOTH",
"990 807 LINE SMOOTH",
"990 1072 OFFCURVE",
"1292 1072 QCURVE SMOOTH",
"1594 1072 OFFCURVE",
"1594 807 QCURVE SMOOTH",
"1594 0 LINE",
"1652 0 LINE",
"1652 807 LINE SMOOTH",
"1652 1130 OFFCURVE",
"1292 1130 QCURVE SMOOTH",
"932 1130 OFFCURVE",
"932 807 QCURVE SMOOTH",
"932 323 LINE SMOOTH",
"932 58 OFFCURVE",
"625 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE",
"318 323 LINE"
);
}
);
width = 1912;
}
);
note = uni17A0;
unicode = 17A0;
},
{
glyphname = uni17A1;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"730 317 LINE SMOOTH",
"730 198 OFFCURVE",
"644 198 QCURVE SMOOTH",
"558 198 OFFCURVE",
"558 317 QCURVE SMOOTH",
"558 357 LINE",
"190 357 LINE",
"190 317 LINE SMOOTH",
"190 0 OFFCURVE",
"644 0 QCURVE SMOOTH",
"1098 0 OFFCURVE",
"1098 317 QCURVE SMOOTH",
"1098 444 LINE",
"1190 485 OFFCURVE",
"1190 561 QCURVE SMOOTH",
"1190 598 LINE SMOOTH",
"1190 690 OFFCURVE",
"1000 690 QCURVE SMOOTH",
"795 690 OFFCURVE",
"774 636 QCURVE",
"706 634 OFFCURVE",
"650 634 QCURVE",
"478 653 OFFCURVE",
"478 803 QCURVE SMOOTH",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 813 QCURVE",
"1190 813 LINE",
"1190 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 803 QCURVE SMOOTH",
"110 416 OFFCURVE",
"650 416 QCURVE SMOOTH",
"699 416 OFFCURVE",
"730 419 QCURVE",
"730 419 LINE"
);
},
{
closed = 1;
nodes = (
"1313 -395 LINE",
"1404 -500 LINE",
"1802 -500 LINE",
"1802 704 LINE SMOOTH",
"1802 772 OFFCURVE",
"1702 826 QCURVE SMOOTH",
"1602 880 LINE",
"1602 932 LINE",
"1802 932 LINE",
"1802 1160 LINE",
"1512 1160 LINE SMOOTH",
"1294 1160 OFFCURVE",
"1294 932 QCURVE SMOOTH",
"1294 827 LINE",
"1434 704 LINE",
"1434 -243 LINE",
"1313 -111 LINE",
"1190 -244 LINE",
"1190 -50 LINE",
"722 -50 LINE",
"722 -254 LINE",
"822 -254 LINE",
"822 -500 LINE",
"1221 -500 LINE",
"1221 -500 LINE"
);
}
);
width = 1912;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1772 704 LINE SMOOTH",
"1772 772 OFFCURVE",
"1672 826 QCURVE SMOOTH",
"1572 880 LINE",
"1572 932 LINE",
"1772 932 LINE",
"1772 1130 LINE",
"1512 1130 LINE SMOOTH",
"1304 1130 OFFCURVE",
"1304 932 QCURVE SMOOTH",
"1304 827 LINE",
"1464 704 LINE",
"1464 -273 LINE",
"1313 -141 LINE",
"1160 -274 LINE",
"1160 -50 LINE",
"752 -50 LINE",
"752 -254 LINE",
"852 -254 LINE",
"852 -500 LINE",
"1191 -500 LINE",
"1313 -395 LINE",
"1434 -500 LINE",
"1772 -500 LINE",
"1772 -500 LINE"
);
},
{
closed = 1;
nodes = (
"760 317 LINE SMOOTH",
"760 198 OFFCURVE",
"644 198 QCURVE SMOOTH",
"528 198 OFFCURVE",
"528 317 QCURVE SMOOTH",
"528 357 LINE",
"220 357 LINE",
"220 317 LINE SMOOTH",
"220 0 OFFCURVE",
"644 0 QCURVE SMOOTH",
"1068 0 OFFCURVE",
"1068 317 QCURVE SMOOTH",
"1068 444 LINE",
"1160 484 OFFCURVE",
"1160 561 QCURVE SMOOTH",
"1160 598 LINE SMOOTH",
"1160 690 OFFCURVE",
"970 690 QCURVE SMOOTH",
"825 690 OFFCURVE",
"804 616 QCURVE",
"753 614 OFFCURVE",
"650 614 QCURVE SMOOTH",
"448 614 OFFCURVE",
"448 783 QCURVE SMOOTH",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 813 QCURVE",
"1160 813 LINE",
"1160 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 783 QCURVE SMOOTH",
"140 416 OFFCURVE",
"650 416 QCURVE SMOOTH",
"729 416 OFFCURVE",
"760 419 QCURVE",
"760 419 LINE"
);
}
);
width = 1912;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1712 734 LINE SMOOTH",
"1712 802 OFFCURVE",
"1612 856 QCURVE SMOOTH",
"1512 910 LINE",
"1512 992 LINE",
"1712 992 LINE",
"1712 1130 LINE",
"1512 1130 LINE SMOOTH",
"1334 1130 OFFCURVE",
"1334 992 QCURVE SMOOTH",
"1334 857 LINE",
"1524 734 LINE",
"1524 -333 LINE",
"1313 -141 LINE",
"1100 -334 LINE",
"1100 -50 LINE",
"812 -50 LINE",
"812 -194 LINE",
"912 -194 LINE",
"912 -500 LINE",
"1131 -500 LINE",
"1313 -335 LINE",
"1494 -500 LINE",
"1712 -500 LINE",
"1712 -500 LINE"
);
},
{
closed = 1;
nodes = (
"760 317 LINE SMOOTH",
"760 148 OFFCURVE",
"614 148 QCURVE SMOOTH",
"468 148 OFFCURVE",
"468 317 QCURVE SMOOTH",
"468 357 LINE",
"280 357 LINE",
"280 317 LINE SMOOTH",
"280 0 OFFCURVE",
"614 0 QCURVE SMOOTH",
"948 0 OFFCURVE",
"948 317 QCURVE SMOOTH",
"948 434 LINE",
"1100 474 OFFCURVE",
"1100 551 QCURVE SMOOTH",
"1100 598 LINE SMOOTH",
"1100 670 OFFCURVE",
"930 670 QCURVE SMOOTH",
"785 670 OFFCURVE",
"764 556 QCURVE",
"713 554 OFFCURVE",
"650 554 QCURVE SMOOTH",
"388 554 OFFCURVE",
"388 783 QCURVE SMOOTH",
"388 982 OFFCURVE",
"650 982 QCURVE SMOOTH",
"912 982 OFFCURVE",
"912 813 QCURVE",
"1100 813 LINE",
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 783 QCURVE SMOOTH",
"200 406 OFFCURVE",
"650 406 QCURVE SMOOTH",
"709 406 OFFCURVE",
"760 409 QCURVE",
"760 409 LINE"
);
}
);
width = 1912;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"770 317 LINE SMOOTH",
"770 98 OFFCURVE",
"599 98 QCURVE SMOOTH",
"428 98 OFFCURVE",
"428 317 QCURVE SMOOTH",
"428 357 LINE",
"310 357 LINE",
"310 317 LINE SMOOTH",
"310 0 OFFCURVE",
"599 0 QCURVE SMOOTH",
"888 0 OFFCURVE",
"888 317 QCURVE SMOOTH",
"888 443 LINE",
"1070 475 OFFCURVE",
"1070 568 QCURVE SMOOTH",
"1070 700 OFFCURVE",
"930 700 QCURVE SMOOTH",
"776 700 OFFCURVE",
"770 526 QCURVE",
"717 524 OFFCURVE",
"650 524 QCURVE SMOOTH",
"348 524 OFFCURVE",
"348 783 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 813 QCURVE",
"1070 813 LINE",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 783 QCURVE SMOOTH",
"230 426 OFFCURVE",
"650 426 QCURVE SMOOTH",
"715 426 OFFCURVE",
"770 429 QCURVE",
"770 429 LINE"
);
},
{
closed = 1;
nodes = (
"893 602 OFFCURVE",
"930 602 QCURVE SMOOTH",
"972 602 OFFCURVE",
"972 568 QCURVE SMOOTH",
"972 546 OFFCURVE",
"889 535 QCURVE",
"889 535 LINE"
);
},
{
closed = 1;
nodes = (
"1682 714 LINE SMOOTH",
"1682 802 OFFCURVE",
"1582 856 QCURVE SMOOTH",
"1482 910 LINE",
"1482 992 LINE SMOOTH",
"1482 1032 OFFCURVE",
"1532 1032 QCURVE SMOOTH",
"1682 1032 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 857 LINE",
"1517 772 LINE SMOOTH",
"1564 744 OFFCURVE",
"1564 714 QCURVE SMOOTH",
"1564 -366 LINE",
"1312 -135 LINE",
"1060 -366 LINE",
"1060 -50 LINE",
"812 -50 LINE",
"812 -144 LINE",
"942 -144 LINE",
"942 -500 LINE",
"1060 -500 LINE",
"1312 -269 LINE",
"1564 -500 LINE",
"1682 -500 LINE",
"1682 -500 LINE"
);
}
);
width = 1912;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"810 317 LINE SMOOTH",
"810 58 OFFCURVE",
"604 58 QCURVE SMOOTH",
"398 58 OFFCURVE",
"398 317 QCURVE SMOOTH",
"398 357 LINE",
"340 357 LINE",
"340 317 LINE SMOOTH",
"340 0 OFFCURVE",
"604 0 QCURVE SMOOTH",
"868 0 OFFCURVE",
"868 317 QCURVE SMOOTH",
"868 462 LINE",
"1040 493 OFFCURVE",
"1040 588 QCURVE SMOOTH",
"1040 680 OFFCURVE",
"930 680 QCURVE SMOOTH",
"810 680 OFFCURVE",
"810 513 QCURVE SMOOTH",
"810 501 LINE",
"747 494 OFFCURVE",
"650 494 QCURVE SMOOTH",
"318 494 OFFCURVE",
"318 783 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 813 QCURVE",
"1040 813 LINE",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 783 QCURVE SMOOTH",
"260 446 OFFCURVE",
"650 446 QCURVE SMOOTH",
"735 446 OFFCURVE",
"810 454 QCURVE",
"810 454 LINE"
);
},
{
closed = 1;
nodes = (
"1594 -424 LINE",
"1312 -189 LINE",
"1030 -424 LINE",
"1030 -50 LINE",
"812 -50 LINE",
"812 -104 LINE",
"972 -104 LINE",
"972 -500 LINE",
"1030 -500 LINE",
"1312 -262 LINE",
"1594 -500 LINE",
"1652 -500 LINE",
"1652 714 LINE SMOOTH",
"1652 769 OFFCURVE",
"1542 837 QCURVE SMOOTH",
"1432 903 LINE",
"1432 992 LINE SMOOTH",
"1432 1072 OFFCURVE",
"1532 1072 QCURVE SMOOTH",
"1682 1072 LINE",
"1682 1130 LINE",
"1532 1130 LINE SMOOTH",
"1374 1130 OFFCURVE",
"1374 992 QCURVE SMOOTH",
"1374 869 LINE",
"1512 786 LINE SMOOTH",
"1594 737 OFFCURVE",
"1594 714 QCURVE",
"1594 714 LINE"
);
},
{
closed = 1;
nodes = (
"868 513 LINE SMOOTH",
"868 632 OFFCURVE",
"930 632 QCURVE SMOOTH",
"982 632 OFFCURVE",
"982 588 QCURVE SMOOTH",
"982 533 OFFCURVE",
"868 510 QCURVE",
"868 510 LINE"
);
}
);
width = 1912;
}
);
note = uni17A1;
unicode = 17A1;
},
{
glyphname = uni17A2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"20 827 LINE",
"110 704 LINE",
"110 298 LINE SMOOTH",
"110 258 OFFCURVE",
"90 258 QCURVE SMOOTH",
"20 258 LINE",
"20 0 LINE",
"160 0 LINE SMOOTH",
"478 0 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 416 LINE",
"822 416 LINE",
"822 298 LINE SMOOTH",
"822 258 OFFCURVE",
"782 258 QCURVE SMOOTH",
"722 258 LINE",
"722 0 LINE",
"872 0 LINE SMOOTH",
"1190 0 OFFCURVE",
"1190 298 QCURVE SMOOTH",
"1190 704 LINE SMOOTH",
"1190 772 OFFCURVE",
"1090 826 QCURVE SMOOTH",
"990 880 LINE",
"990 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"900 1160 LINE SMOOTH",
"672 1160 OFFCURVE",
"672 932 QCURVE SMOOTH",
"672 827 LINE",
"822 704 LINE",
"822 644 LINE",
"478 644 LINE",
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE",
"20 962 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 268 LINE SMOOTH",
"140 228 OFFCURVE",
"90 228 QCURVE SMOOTH",
"30 228 LINE",
"30 0 LINE",
"130 0 LINE SMOOTH",
"448 0 OFFCURVE",
"448 268 QCURVE SMOOTH",
"448 436 LINE",
"852 436 LINE",
"852 268 LINE SMOOTH",
"852 228 OFFCURVE",
"782 228 QCURVE SMOOTH",
"722 228 LINE",
"722 0 LINE",
"842 0 LINE SMOOTH",
"1160 0 OFFCURVE",
"1160 268 QCURVE SMOOTH",
"1160 704 LINE SMOOTH",
"1160 772 OFFCURVE",
"1060 826 QCURVE SMOOTH",
"960 880 LINE",
"960 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"900 1130 LINE SMOOTH",
"692 1130 OFFCURVE",
"692 932 QCURVE SMOOTH",
"692 827 LINE",
"852 704 LINE",
"852 634 LINE",
"448 634 LINE",
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 704 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 734 LINE SMOOTH",
"1100 802 OFFCURVE",
"1000 856 QCURVE SMOOTH",
"900 910 LINE",
"900 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"900 1130 LINE SMOOTH",
"722 1130 OFFCURVE",
"722 992 QCURVE SMOOTH",
"722 857 LINE",
"912 734 LINE",
"912 634 LINE",
"388 634 LINE",
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 238 LINE SMOOTH",
"200 168 OFFCURVE",
"130 168 QCURVE SMOOTH",
"60 168 LINE",
"60 0 LINE",
"130 0 LINE SMOOTH",
"388 0 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 496 LINE",
"912 496 LINE",
"912 238 LINE SMOOTH",
"912 168 OFFCURVE",
"842 168 QCURVE SMOOTH",
"722 168 LINE",
"722 0 LINE",
"842 0 LINE SMOOTH",
"1100 0 OFFCURVE",
"1100 238 QCURVE",
"1100 238 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 516 LINE",
"952 516 LINE",
"952 238 LINE SMOOTH",
"952 108 OFFCURVE",
"842 108 QCURVE SMOOTH",
"762 108 LINE",
"762 0 LINE",
"842 0 LINE SMOOTH",
"1070 0 OFFCURVE",
"1070 238 QCURVE SMOOTH",
"1070 714 LINE SMOOTH",
"1070 802 OFFCURVE",
"970 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"905 772 LINE SMOOTH",
"952 744 OFFCURVE",
"952 714 QCURVE SMOOTH",
"952 614 LINE",
"348 614 LINE",
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 108 OFFCURVE",
"130 108 QCURVE SMOOTH",
"90 108 LINE",
"90 0 LINE",
"130 0 LINE SMOOTH",
"348 0 OFFCURVE",
"348 238 QCURVE",
"348 238 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1040 714 LINE SMOOTH",
"1040 769 OFFCURVE",
"930 837 QCURVE SMOOTH",
"820 903 LINE",
"820 992 LINE SMOOTH",
"820 1072 OFFCURVE",
"920 1072 QCURVE SMOOTH",
"1070 1072 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 869 LINE",
"900 786 LINE SMOOTH",
"982 737 OFFCURVE",
"982 714 QCURVE SMOOTH",
"982 594 LINE",
"318 594 LINE",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 58 OFFCURVE",
"130 58 QCURVE SMOOTH",
"90 58 LINE",
"90 0 LINE",
"130 0 LINE SMOOTH",
"318 0 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 536 LINE",
"982 536 LINE",
"982 238 LINE SMOOTH",
"982 58 OFFCURVE",
"842 58 QCURVE SMOOTH",
"762 58 LINE",
"762 0 LINE",
"842 0 LINE SMOOTH",
"1040 0 OFFCURVE",
"1040 238 QCURVE",
"1040 238 LINE"
);
}
);
width = 1300;
}
);
note = uni17A2;
unicode = 17A2;
},
{
glyphname = uni17A3;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"20 827 LINE",
"110 704 LINE",
"110 298 LINE SMOOTH",
"110 258 OFFCURVE",
"90 258 QCURVE SMOOTH",
"20 258 LINE",
"20 0 LINE",
"160 0 LINE SMOOTH",
"478 0 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 416 LINE",
"822 416 LINE",
"822 298 LINE SMOOTH",
"822 258 OFFCURVE",
"782 258 QCURVE SMOOTH",
"722 258 LINE",
"722 0 LINE",
"872 0 LINE SMOOTH",
"1190 0 OFFCURVE",
"1190 298 QCURVE SMOOTH",
"1190 704 LINE SMOOTH",
"1190 772 OFFCURVE",
"1090 826 QCURVE SMOOTH",
"990 880 LINE",
"990 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"900 1160 LINE SMOOTH",
"672 1160 OFFCURVE",
"672 932 QCURVE SMOOTH",
"672 827 LINE",
"822 704 LINE",
"822 644 LINE",
"478 644 LINE",
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE",
"20 962 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 268 LINE SMOOTH",
"140 228 OFFCURVE",
"90 228 QCURVE SMOOTH",
"30 228 LINE",
"30 0 LINE",
"130 0 LINE SMOOTH",
"448 0 OFFCURVE",
"448 268 QCURVE SMOOTH",
"448 436 LINE",
"852 436 LINE",
"852 268 LINE SMOOTH",
"852 228 OFFCURVE",
"782 228 QCURVE SMOOTH",
"722 228 LINE",
"722 0 LINE",
"842 0 LINE SMOOTH",
"1160 0 OFFCURVE",
"1160 268 QCURVE SMOOTH",
"1160 704 LINE SMOOTH",
"1160 772 OFFCURVE",
"1060 826 QCURVE SMOOTH",
"960 880 LINE",
"960 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"900 1130 LINE SMOOTH",
"692 1130 OFFCURVE",
"692 932 QCURVE SMOOTH",
"692 827 LINE",
"852 704 LINE",
"852 634 LINE",
"448 634 LINE",
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 704 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 734 LINE SMOOTH",
"1100 802 OFFCURVE",
"1000 856 QCURVE SMOOTH",
"900 910 LINE",
"900 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"900 1130 LINE SMOOTH",
"722 1130 OFFCURVE",
"722 992 QCURVE SMOOTH",
"722 857 LINE",
"912 734 LINE",
"912 634 LINE",
"388 634 LINE",
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 238 LINE SMOOTH",
"200 168 OFFCURVE",
"130 168 QCURVE SMOOTH",
"60 168 LINE",
"60 0 LINE",
"130 0 LINE SMOOTH",
"388 0 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 496 LINE",
"912 496 LINE",
"912 238 LINE SMOOTH",
"912 168 OFFCURVE",
"842 168 QCURVE SMOOTH",
"722 168 LINE",
"722 0 LINE",
"842 0 LINE SMOOTH",
"1100 0 OFFCURVE",
"1100 238 QCURVE",
"1100 238 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 516 LINE",
"952 516 LINE",
"952 238 LINE SMOOTH",
"952 108 OFFCURVE",
"842 108 QCURVE SMOOTH",
"762 108 LINE",
"762 0 LINE",
"842 0 LINE SMOOTH",
"1070 0 OFFCURVE",
"1070 238 QCURVE SMOOTH",
"1070 714 LINE SMOOTH",
"1070 802 OFFCURVE",
"970 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"905 772 LINE SMOOTH",
"952 744 OFFCURVE",
"952 714 QCURVE SMOOTH",
"952 614 LINE",
"348 614 LINE",
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 108 OFFCURVE",
"130 108 QCURVE SMOOTH",
"90 108 LINE",
"90 0 LINE",
"130 0 LINE SMOOTH",
"348 0 OFFCURVE",
"348 238 QCURVE",
"348 238 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1040 714 LINE SMOOTH",
"1040 769 OFFCURVE",
"930 837 QCURVE SMOOTH",
"820 903 LINE",
"820 992 LINE SMOOTH",
"820 1072 OFFCURVE",
"920 1072 QCURVE SMOOTH",
"1070 1072 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 869 LINE",
"900 786 LINE SMOOTH",
"982 737 OFFCURVE",
"982 714 QCURVE SMOOTH",
"982 594 LINE",
"318 594 LINE",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 58 OFFCURVE",
"130 58 QCURVE SMOOTH",
"90 58 LINE",
"90 0 LINE",
"130 0 LINE SMOOTH",
"318 0 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 536 LINE",
"982 536 LINE",
"982 238 LINE SMOOTH",
"982 58 OFFCURVE",
"842 58 QCURVE SMOOTH",
"762 58 LINE",
"762 0 LINE",
"842 0 LINE SMOOTH",
"1040 0 OFFCURVE",
"1040 238 QCURVE",
"1040 238 LINE"
);
}
);
width = 1300;
}
);
note = uni17A3;
unicode = 17A3;
},
{
glyphname = uni17A4;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"900 1160 LINE SMOOTH",
"672 1160 OFFCURVE",
"672 932 QCURVE SMOOTH",
"672 827 LINE",
"822 704 LINE",
"822 644 LINE",
"478 644 LINE",
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"110 704 LINE",
"110 298 LINE SMOOTH",
"110 258 OFFCURVE",
"90 258 QCURVE SMOOTH",
"20 258 LINE",
"20 0 LINE",
"160 0 LINE SMOOTH",
"478 0 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 416 LINE",
"822 416 LINE",
"822 298 LINE SMOOTH",
"822 258 OFFCURVE",
"782 258 QCURVE SMOOTH",
"722 258 LINE",
"722 0 LINE",
"872 0 LINE SMOOTH",
"1190 0 OFFCURVE",
"1190 298 QCURVE SMOOTH",
"1190 704 LINE SMOOTH",
"1190 772 OFFCURVE",
"1090 826 QCURVE SMOOTH",
"990 880 LINE",
"990 932 LINE",
"1308 932 LINE SMOOTH",
"1410 932 OFFCURVE",
"1410 807 QCURVE SMOOTH",
"1410 0 LINE",
"1778 0 LINE",
"1778 807 LINE SMOOTH",
"1778 1160 OFFCURVE",
"1398 1160 QCURVE",
"1398 1160 LINE"
);
}
);
width = 1888;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"900 1130 LINE SMOOTH",
"692 1130 OFFCURVE",
"692 932 QCURVE SMOOTH",
"692 827 LINE",
"852 704 LINE",
"852 634 LINE",
"448 634 LINE",
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 268 LINE SMOOTH",
"140 228 OFFCURVE",
"90 228 QCURVE SMOOTH",
"30 228 LINE",
"30 0 LINE",
"130 0 LINE SMOOTH",
"448 0 OFFCURVE",
"448 268 QCURVE SMOOTH",
"448 436 LINE",
"852 436 LINE",
"852 268 LINE SMOOTH",
"852 228 OFFCURVE",
"782 228 QCURVE SMOOTH",
"722 228 LINE",
"722 0 LINE",
"842 0 LINE SMOOTH",
"1160 0 OFFCURVE",
"1160 268 QCURVE SMOOTH",
"1160 704 LINE SMOOTH",
"1160 772 OFFCURVE",
"1060 826 QCURVE SMOOTH",
"960 880 LINE",
"960 932 LINE",
"1338 932 LINE SMOOTH",
"1440 932 OFFCURVE",
"1440 807 QCURVE SMOOTH",
"1440 0 LINE",
"1748 0 LINE",
"1748 807 LINE SMOOTH",
"1748 1130 OFFCURVE",
"1398 1130 QCURVE",
"1398 1130 LINE"
);
}
);
width = 1888;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 496 LINE",
"912 496 LINE",
"912 238 LINE SMOOTH",
"912 168 OFFCURVE",
"842 168 QCURVE SMOOTH",
"722 168 LINE",
"722 0 LINE",
"842 0 LINE SMOOTH",
"1100 0 OFFCURVE",
"1100 238 QCURVE SMOOTH",
"1100 734 LINE SMOOTH",
"1100 802 OFFCURVE",
"1000 856 QCURVE SMOOTH",
"900 910 LINE",
"900 992 LINE",
"1398 992 LINE SMOOTH",
"1500 992 OFFCURVE",
"1500 807 QCURVE SMOOTH",
"1500 0 LINE",
"1688 0 LINE",
"1688 807 LINE SMOOTH",
"1688 1130 OFFCURVE",
"1398 1130 QCURVE SMOOTH",
"900 1130 LINE SMOOTH",
"722 1130 OFFCURVE",
"722 992 QCURVE SMOOTH",
"722 857 LINE",
"912 734 LINE",
"912 634 LINE",
"388 634 LINE",
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 238 LINE SMOOTH",
"200 168 OFFCURVE",
"130 168 QCURVE SMOOTH",
"60 168 LINE",
"60 0 LINE",
"130 0 LINE SMOOTH",
"388 0 OFFCURVE",
"388 238 QCURVE",
"388 238 LINE"
);
}
);
width = 1888;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"905 772 LINE SMOOTH",
"952 744 OFFCURVE",
"952 714 QCURVE SMOOTH",
"952 614 LINE",
"348 614 LINE",
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 108 OFFCURVE",
"130 108 QCURVE SMOOTH",
"90 108 LINE",
"90 0 LINE",
"130 0 LINE SMOOTH",
"348 0 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 516 LINE",
"952 516 LINE",
"952 238 LINE SMOOTH",
"952 108 OFFCURVE",
"842 108 QCURVE SMOOTH",
"762 108 LINE",
"762 0 LINE",
"842 0 LINE SMOOTH",
"1070 0 OFFCURVE",
"1070 238 QCURVE SMOOTH",
"1070 714 LINE SMOOTH",
"1070 802 OFFCURVE",
"970 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1398 1032 LINE SMOOTH",
"1540 1032 OFFCURVE",
"1540 807 QCURVE SMOOTH",
"1540 0 LINE",
"1658 0 LINE",
"1658 807 LINE SMOOTH",
"1658 1130 OFFCURVE",
"1398 1130 QCURVE",
"1398 1130 LINE"
);
}
);
width = 1888;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 869 LINE",
"900 786 LINE SMOOTH",
"982 737 OFFCURVE",
"982 714 QCURVE SMOOTH",
"982 594 LINE",
"318 594 LINE",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 58 OFFCURVE",
"130 58 QCURVE SMOOTH",
"90 58 LINE",
"90 0 LINE",
"130 0 LINE SMOOTH",
"318 0 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 536 LINE",
"982 536 LINE",
"982 238 LINE SMOOTH",
"982 58 OFFCURVE",
"842 58 QCURVE SMOOTH",
"762 58 LINE",
"762 0 LINE",
"842 0 LINE SMOOTH",
"1040 0 OFFCURVE",
"1040 238 QCURVE SMOOTH",
"1040 714 LINE SMOOTH",
"1040 769 OFFCURVE",
"930 837 QCURVE SMOOTH",
"820 903 LINE",
"820 992 LINE SMOOTH",
"820 1072 OFFCURVE",
"920 1072 QCURVE SMOOTH",
"1358 1072 LINE SMOOTH",
"1570 1072 OFFCURVE",
"1570 867 QCURVE SMOOTH",
"1570 0 LINE",
"1628 0 LINE",
"1628 867 LINE SMOOTH",
"1628 1130 OFFCURVE",
"1358 1130 QCURVE",
"1358 1130 LINE"
);
}
);
width = 1888;
}
);
note = uni17A4;
unicode = 17A4;
},
{
glyphname = uni17A5;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"30 847 LINE",
"140 714 LINE",
"388 834 LINE",
"348 890 LINE",
"348 932 LINE",
"385 932 LINE SMOOTH",
"417 932 OFFCURVE",
"543 898 QCURVE SMOOTH",
"649 870 OFFCURVE",
"748 870 QCURVE SMOOTH",
"764 870 OFFCURVE",
"800 872 QCURVE SMOOTH",
"1190 901 OFFCURVE",
"1190 1205 QCURVE SMOOTH",
"1190 1280 LINE",
"822 1280 LINE",
"822 1205 LINE SMOOTH",
"822 1100 OFFCURVE",
"733 1100 QCURVE SMOOTH",
"580 1100 OFFCURVE",
"486 1132 QCURVE SMOOTH",
"403 1160 OFFCURVE",
"355 1160 QCURVE SMOOTH",
"258 1160 LINE SMOOTH",
"30 1160 OFFCURVE",
"30 972 QCURVE",
"30 972 LINE"
);
},
{
closed = 1;
nodes = (
"478 487 LINE SMOOTH",
"478 535 OFFCURVE",
"568 592 OFFCURVE",
"650 592 QCURVE SMOOTH",
"732 592 OFFCURVE",
"822 535 OFFCURVE",
"822 487 QCURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 487 LINE SMOOTH",
"1190 810 OFFCURVE",
"650 810 QCURVE SMOOTH",
"110 810 OFFCURVE",
"110 487 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE",
"478 298 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 487 LINE SMOOTH",
"448 622 OFFCURVE",
"650 622 QCURVE SMOOTH",
"852 622 OFFCURVE",
"852 487 QCURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 487 LINE SMOOTH",
"1160 810 OFFCURVE",
"650 810 QCURVE SMOOTH",
"140 810 OFFCURVE",
"140 487 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE",
"448 298 LINE"
);
},
{
closed = 1;
nodes = (
"358 834 LINE",
"318 890 LINE",
"318 932 LINE",
"355 932 LINE SMOOTH",
"385 932 OFFCURVE",
"640 872 OFFCURVE",
"770 872 QCURVE SMOOTH",
"1160 872 OFFCURVE",
"1160 1175 QCURVE SMOOTH",
"1160 1280 LINE",
"852 1280 LINE",
"852 1175 LINE SMOOTH",
"852 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"258 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 972 QCURVE SMOOTH",
"60 847 LINE",
"140 714 LINE",
"140 714 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"204 734 LINE",
"322 836 LINE",
"268 900 LINE",
"268 992 LINE",
"355 992 LINE SMOOTH",
"385 992 OFFCURVE",
"640 932 OFFCURVE",
"770 932 QCURVE SMOOTH",
"1100 932 OFFCURVE",
"1100 1175 QCURVE SMOOTH",
"1100 1280 LINE",
"912 1280 LINE",
"912 1175 LINE SMOOTH",
"912 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"268 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"200 734 LINE",
"200 734 LINE"
);
},
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 517 LINE SMOOTH",
"388 702 OFFCURVE",
"650 702 QCURVE SMOOTH",
"912 702 OFFCURVE",
"912 517 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 517 LINE SMOOTH",
"1100 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"200 840 OFFCURVE",
"200 517 QCURVE",
"200 517 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"323 846 LINE",
"248 910 LINE",
"248 992 LINE SMOOTH",
"248 1032 OFFCURVE",
"298 1032 QCURVE SMOOTH",
"355 1032 LINE SMOOTH",
"385 1032 OFFCURVE",
"640 972 OFFCURVE",
"770 972 QCURVE SMOOTH",
"1070 972 OFFCURVE",
"1070 1175 QCURVE SMOOTH",
"1070 1280 LINE",
"952 1280 LINE",
"952 1175 LINE SMOOTH",
"952 1070 OFFCURVE",
"760 1070 QCURVE SMOOTH",
"600 1070 OFFCURVE",
"402 1130 OFFCURVE",
"355 1130 QCURVE SMOOTH",
"298 1130 LINE SMOOTH",
"150 1130 OFFCURVE",
"150 992 QCURVE SMOOTH",
"150 867 LINE",
"248 775 LINE",
"248 775 LINE"
);
},
{
closed = 1;
nodes = (
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 517 LINE SMOOTH",
"348 742 OFFCURVE",
"650 742 QCURVE SMOOTH",
"952 742 OFFCURVE",
"952 517 QCURVE SMOOTH",
"952 0 LINE",
"1070 0 LINE",
"1070 517 LINE SMOOTH",
"1070 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"230 840 OFFCURVE",
"230 517 QCURVE",
"230 517 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"200 869 LINE",
"300 797 LINE",
"338 842 LINE",
"258 899 LINE",
"258 992 LINE SMOOTH",
"258 1072 OFFCURVE",
"348 1072 QCURVE SMOOTH",
"435 1072 LINE SMOOTH",
"467 1072 OFFCURVE",
"593 1032 QCURVE SMOOTH",
"719 992 OFFCURVE",
"820 992 QCURVE SMOOTH",
"1040 992 OFFCURVE",
"1040 1175 QCURVE SMOOTH",
"1040 1280 LINE",
"982 1280 LINE",
"982 1175 LINE SMOOTH",
"982 1050 OFFCURVE",
"810 1050 QCURVE SMOOTH",
"679 1050 OFFCURVE",
"581 1090 QCURVE SMOOTH",
"483 1130 OFFCURVE",
"435 1130 QCURVE SMOOTH",
"348 1130 LINE SMOOTH",
"200 1130 OFFCURVE",
"200 992 QCURVE",
"200 992 LINE"
);
},
{
closed = 1;
nodes = (
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 517 LINE SMOOTH",
"318 782 OFFCURVE",
"650 782 QCURVE SMOOTH",
"982 782 OFFCURVE",
"982 517 QCURVE SMOOTH",
"982 0 LINE",
"1040 0 LINE",
"1040 517 LINE SMOOTH",
"1040 840 OFFCURVE",
"650 840 QCURVE SMOOTH",
"260 840 OFFCURVE",
"260 517 QCURVE",
"260 517 LINE"
);
}
);
width = 1300;
}
);
note = uni17A5;
unicode = 17A5;
},
{
glyphname = uni17A6;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"478 -340 LINE",
"478 -303 LINE SMOOTH",
"478 -260 OFFCURVE",
"625 -260 QCURVE SMOOTH",
"772 -260 OFFCURVE",
"772 -303 QCURVE SMOOTH",
"772 -500 OFFCURVE",
"1312 -500 QCURVE SMOOTH",
"1790 -500 OFFCURVE",
"1790 -260 QCURVE SMOOTH",
"1790 1080 LINE SMOOTH",
"1790 1500 OFFCURVE",
"1342 1500 QCURVE SMOOTH",
"1236 1500 OFFCURVE",
"1142 1412 QCURVE",
"1142 1730 LINE",
"774 1730 LINE",
"774 1230 LINE",
"1082 1230 LINE",
"1143 1280 OFFCURVE",
"1312 1280 QCURVE SMOOTH",
"1422 1280 OFFCURVE",
"1422 1080 QCURVE SMOOTH",
"1422 -260 LINE SMOOTH",
"1422 -340 OFFCURVE",
"1312 -340 QCURVE SMOOTH",
"1140 -340 OFFCURVE",
"1140 -303 QCURVE SMOOTH",
"1140 -70 OFFCURVE",
"625 -70 QCURVE SMOOTH",
"110 -70 OFFCURVE",
"110 -303 QCURVE SMOOTH",
"110 -500 LINE",
"584 -500 LINE",
"584 -340 LINE",
"584 -340 LINE"
);
},
{
closed = 1;
nodes = (
"772 0 LINE",
"1140 0 LINE",
"1140 807 LINE SMOOTH",
"1140 1160 OFFCURVE",
"625 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 807 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 807 LINE SMOOTH",
"478 932 OFFCURVE",
"625 932 QCURVE SMOOTH",
"772 932 OFFCURVE",
"772 807 QCURVE",
"772 807 LINE"
);
}
);
width = 1900;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"823 -230 OFFCURVE",
"823 -303 QCURVE SMOOTH",
"823 -500 OFFCURVE",
"1312 -500 QCURVE SMOOTH",
"1760 -500 OFFCURVE",
"1760 -260 QCURVE SMOOTH",
"1760 1080 LINE SMOOTH",
"1760 1470 OFFCURVE",
"1342 1470 QCURVE SMOOTH",
"1207 1470 OFFCURVE",
"1112 1412 QCURVE",
"1112 1730 LINE",
"804 1730 LINE",
"804 1230 LINE",
"1052 1230 LINE",
"1112 1280 OFFCURVE",
"1312 1280 QCURVE SMOOTH",
"1452 1280 OFFCURVE",
"1452 1080 QCURVE SMOOTH",
"1452 -260 LINE SMOOTH",
"1452 -360 OFFCURVE",
"1312 -360 QCURVE SMOOTH",
"1110 -360 OFFCURVE",
"1110 -303 QCURVE SMOOTH",
"1110 -70 OFFCURVE",
"650 -70 QCURVE SMOOTH",
"190 -70 OFFCURVE",
"190 -303 QCURVE SMOOTH",
"190 -500 LINE",
"584 -500 LINE",
"584 -340 LINE",
"477 -340 LINE",
"477 -303 LINE SMOOTH",
"477 -230 OFFCURVE",
"650 -230 QCURVE",
"650 -230 LINE"
);
},
{
closed = 1;
nodes = (
"1110 0 LINE",
"1110 807 LINE SMOOTH",
"1110 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 807 LINE SMOOTH",
"448 932 OFFCURVE",
"625 932 QCURVE SMOOTH",
"802 932 OFFCURVE",
"802 807 QCURVE SMOOTH",
"802 0 LINE",
"802 0 LINE"
);
}
);
width = 1900;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"883 -170 OFFCURVE",
"883 -303 QCURVE SMOOTH",
"883 -500 OFFCURVE",
"1312 -500 QCURVE SMOOTH",
"1700 -500 OFFCURVE",
"1700 -260 QCURVE SMOOTH",
"1700 1080 LINE SMOOTH",
"1700 1440 OFFCURVE",
"1312 1440 QCURVE SMOOTH",
"1207 1440 OFFCURVE",
"1112 1382 QCURVE",
"1112 1730 LINE",
"924 1730 LINE",
"924 1230 LINE",
"1052 1230 LINE",
"1112 1310 OFFCURVE",
"1312 1310 QCURVE SMOOTH",
"1512 1310 OFFCURVE",
"1512 1080 QCURVE SMOOTH",
"1512 -260 LINE SMOOTH",
"1512 -360 OFFCURVE",
"1312 -360 QCURVE SMOOTH",
"1050 -360 OFFCURVE",
"1050 -303 QCURVE SMOOTH",
"1050 -70 OFFCURVE",
"650 -70 QCURVE SMOOTH",
"250 -70 OFFCURVE",
"250 -303 QCURVE SMOOTH",
"250 -500 LINE",
"524 -500 LINE",
"524 -400 LINE",
"417 -400 LINE",
"417 -303 LINE SMOOTH",
"417 -170 OFFCURVE",
"650 -170 QCURVE",
"650 -170 LINE"
);
},
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 807 LINE SMOOTH",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 807 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 807 LINE SMOOTH",
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 807 QCURVE",
"200 807 LINE"
);
}
);
width = 1900;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"902 -170 OFFCURVE",
"902 -303 QCURVE SMOOTH",
"902 -500 OFFCURVE",
"1312 -500 QCURVE SMOOTH",
"1670 -500 OFFCURVE",
"1670 -260 QCURVE SMOOTH",
"1670 1080 LINE SMOOTH",
"1670 1440 OFFCURVE",
"1312 1440 QCURVE SMOOTH",
"1157 1440 OFFCURVE",
"1020 1352 QCURVE",
"1020 1730 LINE",
"902 1730 LINE",
"902 1230 LINE",
"1020 1230 LINE",
"1112 1340 OFFCURVE",
"1312 1340 QCURVE SMOOTH",
"1552 1340 OFFCURVE",
"1552 1080 QCURVE SMOOTH",
"1552 -260 LINE SMOOTH",
"1552 -400 OFFCURVE",
"1312 -400 QCURVE SMOOTH",
"1020 -400 OFFCURVE",
"1020 -303 QCURVE SMOOTH",
"1020 -70 OFFCURVE",
"625 -70 QCURVE SMOOTH",
"230 -70 OFFCURVE",
"230 -303 QCURVE SMOOTH",
"230 -500 LINE",
"524 -500 LINE",
"524 -400 LINE",
"348 -400 LINE",
"348 -303 LINE SMOOTH",
"348 -170 OFFCURVE",
"625 -170 QCURVE",
"625 -170 LINE"
);
},
{
closed = 1;
nodes = (
"902 0 LINE",
"1020 0 LINE",
"1020 807 LINE SMOOTH",
"1020 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 807 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 807 LINE SMOOTH",
"348 1032 OFFCURVE",
"625 1032 QCURVE SMOOTH",
"902 1032 OFFCURVE",
"902 807 QCURVE",
"902 807 LINE"
);
}
);
width = 1900;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"932 -128 OFFCURVE",
"932 -303 QCURVE SMOOTH",
"932 -500 OFFCURVE",
"1312 -500 QCURVE SMOOTH",
"1640 -500 OFFCURVE",
"1640 -260 QCURVE SMOOTH",
"1640 1080 LINE SMOOTH",
"1640 1440 OFFCURVE",
"1312 1440 QCURVE SMOOTH",
"1127 1440 OFFCURVE",
"990 1312 QCURVE",
"990 1730 LINE",
"932 1730 LINE",
"932 1230 LINE",
"990 1230 LINE",
"1112 1380 OFFCURVE",
"1312 1380 QCURVE SMOOTH",
"1582 1380 OFFCURVE",
"1582 1080 QCURVE SMOOTH",
"1582 -260 LINE SMOOTH",
"1582 -442 OFFCURVE",
"1312 -442 QCURVE SMOOTH",
"990 -442 OFFCURVE",
"990 -303 QCURVE SMOOTH",
"990 -70 OFFCURVE",
"625 -70 QCURVE SMOOTH",
"260 -70 OFFCURVE",
"260 -303 QCURVE SMOOTH",
"260 -372 LINE SMOOTH",
"260 -500 OFFCURVE",
"400 -500 QCURVE SMOOTH",
"524 -500 LINE",
"524 -442 LINE",
"400 -442 LINE SMOOTH",
"318 -442 OFFCURVE",
"318 -372 QCURVE SMOOTH",
"318 -303 LINE SMOOTH",
"318 -128 OFFCURVE",
"625 -128 QCURVE",
"625 -128 LINE"
);
},
{
closed = 1;
nodes = (
"932 0 LINE",
"990 0 LINE",
"990 807 LINE SMOOTH",
"990 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 807 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 807 LINE SMOOTH",
"318 1072 OFFCURVE",
"625 1072 QCURVE SMOOTH",
"932 1072 OFFCURVE",
"932 807 QCURVE",
"932 807 LINE"
);
}
);
width = 1900;
}
);
note = uni17A6;
unicode = 17A6;
},
{
glyphname = uni17A7;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1190 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 813 QCURVE SMOOTH",
"110 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"478 813 LINE",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 813 QCURVE SMOOTH",
"822 614 OFFCURVE",
"510 614 QCURVE SMOOTH",
"110 614 OFFCURVE",
"110 287 QCURVE SMOOTH",
"110 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"679 0 OFFCURVE",
"822 85 QCURVE",
"822 -50 LINE",
"1190 -50 LINE",
"1190 400 LINE",
"822 400 LINE",
"822 317 LINE",
"712 218 OFFCURVE",
"530 218 QCURVE SMOOTH",
"478 218 OFFCURVE",
"478 287 QCURVE SMOOTH",
"478 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1190 396 OFFCURVE",
"1190 813 QCURVE",
"1190 813 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1160 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 813 QCURVE SMOOTH",
"140 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"448 813 LINE",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 813 QCURVE SMOOTH",
"852 594 OFFCURVE",
"510 594 QCURVE SMOOTH",
"140 594 OFFCURVE",
"140 287 QCURVE SMOOTH",
"140 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"708 0 OFFCURVE",
"852 85 QCURVE",
"852 -50 LINE",
"1160 -50 LINE",
"1160 400 LINE",
"852 400 LINE",
"852 317 LINE",
"742 188 OFFCURVE",
"530 188 QCURVE SMOOTH",
"448 188 OFFCURVE",
"448 287 QCURVE SMOOTH",
"448 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1160 396 OFFCURVE",
"1160 813 QCURVE",
"1160 813 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 813 QCURVE SMOOTH",
"200 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"500 675 LINE",
"500 813 LINE",
"388 813 LINE",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 813 QCURVE SMOOTH",
"912 534 OFFCURVE",
"450 534 QCURVE SMOOTH",
"200 534 OFFCURVE",
"200 287 QCURVE SMOOTH",
"200 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"768 0 OFFCURVE",
"912 85 QCURVE",
"912 -50 LINE",
"1100 -50 LINE",
"1100 400 LINE",
"912 400 LINE",
"912 317 LINE",
"802 138 OFFCURVE",
"530 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 287 QCURVE SMOOTH",
"388 396 OFFCURVE",
"450 396 QCURVE SMOOTH",
"1100 396 OFFCURVE",
"1100 813 QCURVE",
"1100 813 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"822 98 OFFCURVE",
"600 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 317 QCURVE SMOOTH",
"348 416 OFFCURVE",
"450 416 QCURVE SMOOTH",
"1070 416 OFFCURVE",
"1070 813 QCURVE SMOOTH",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 813 QCURVE SMOOTH",
"230 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 773 LINE",
"424 773 LINE SMOOTH",
"348 773 OFFCURVE",
"348 813 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 813 QCURVE SMOOTH",
"952 514 OFFCURVE",
"450 514 QCURVE SMOOTH",
"230 514 OFFCURVE",
"230 317 QCURVE SMOOTH",
"230 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"952 160 QCURVE",
"952 -50 LINE",
"1070 -50 LINE",
"1070 400 LINE",
"952 400 LINE",
"952 317 LINE",
"952 317 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 58 OFFCURVE",
"318 317 QCURVE SMOOTH",
"318 436 OFFCURVE",
"450 436 QCURVE SMOOTH",
"1040 436 OFFCURVE",
"1040 813 QCURVE SMOOTH",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 813 QCURVE SMOOTH",
"260 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 733 LINE",
"424 733 LINE SMOOTH",
"318 733 OFFCURVE",
"318 813 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 813 QCURVE SMOOTH",
"982 494 OFFCURVE",
"450 494 QCURVE SMOOTH",
"260 494 OFFCURVE",
"260 317 QCURVE SMOOTH",
"260 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"982 210 QCURVE",
"982 -50 LINE",
"1040 -50 LINE",
"1040 400 LINE",
"982 400 LINE",
"982 287 LINE",
"822 58 OFFCURVE",
"600 58 QCURVE",
"600 58 LINE"
);
}
);
width = 1300;
}
);
note = uni17A7;
unicode = 17A7;
},
{
glyphname = uni17A8;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 1480 LINE",
"110 1252 LINE",
"1190 1252 LINE",
"1190 1480 LINE",
"1190 1480 LINE"
);
},
{
closed = 1;
nodes = (
"1190 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 813 QCURVE SMOOTH",
"110 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"478 813 LINE",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 813 QCURVE SMOOTH",
"822 614 OFFCURVE",
"510 614 QCURVE SMOOTH",
"110 614 OFFCURVE",
"110 287 QCURVE SMOOTH",
"110 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"679 0 OFFCURVE",
"822 85 QCURVE",
"822 -50 LINE",
"1190 -50 LINE",
"1190 400 LINE",
"822 400 LINE",
"822 317 LINE",
"712 218 OFFCURVE",
"530 218 QCURVE SMOOTH",
"478 218 OFFCURVE",
"478 287 QCURVE SMOOTH",
"478 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1190 396 OFFCURVE",
"1190 813 QCURVE",
"1190 813 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1160 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 813 QCURVE SMOOTH",
"140 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"448 813 LINE",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 813 QCURVE SMOOTH",
"852 594 OFFCURVE",
"510 594 QCURVE SMOOTH",
"140 594 OFFCURVE",
"140 287 QCURVE SMOOTH",
"140 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"708 0 OFFCURVE",
"852 85 QCURVE",
"852 -50 LINE",
"1160 -50 LINE",
"1160 400 LINE",
"852 400 LINE",
"852 317 LINE",
"742 188 OFFCURVE",
"530 188 QCURVE SMOOTH",
"448 188 OFFCURVE",
"448 287 QCURVE SMOOTH",
"448 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1160 396 OFFCURVE",
"1160 813 QCURVE",
"1160 813 LINE"
);
},
{
closed = 1;
nodes = (
"140 1252 LINE",
"1160 1252 LINE",
"1160 1450 LINE",
"140 1450 LINE",
"140 1450 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 813 QCURVE SMOOTH",
"200 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"500 675 LINE",
"500 813 LINE",
"388 813 LINE",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 813 QCURVE SMOOTH",
"912 534 OFFCURVE",
"450 534 QCURVE SMOOTH",
"200 534 OFFCURVE",
"200 287 QCURVE SMOOTH",
"200 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"768 0 OFFCURVE",
"912 85 QCURVE",
"912 -50 LINE",
"1100 -50 LINE",
"1100 400 LINE",
"912 400 LINE",
"912 317 LINE",
"802 138 OFFCURVE",
"530 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 287 QCURVE SMOOTH",
"388 396 OFFCURVE",
"450 396 QCURVE SMOOTH",
"1100 396 OFFCURVE",
"1100 813 QCURVE",
"1100 813 LINE"
);
},
{
closed = 1;
nodes = (
"200 1440 LINE",
"200 1302 LINE",
"1100 1302 LINE",
"1100 1440 LINE",
"1100 1440 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"822 98 OFFCURVE",
"600 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 317 QCURVE SMOOTH",
"348 416 OFFCURVE",
"450 416 QCURVE SMOOTH",
"1070 416 OFFCURVE",
"1070 813 QCURVE SMOOTH",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 813 QCURVE SMOOTH",
"230 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 773 LINE",
"424 773 LINE SMOOTH",
"348 773 OFFCURVE",
"348 813 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 813 QCURVE SMOOTH",
"952 514 OFFCURVE",
"450 514 QCURVE SMOOTH",
"230 514 OFFCURVE",
"230 317 QCURVE SMOOTH",
"230 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"952 160 QCURVE",
"952 -50 LINE",
"1070 -50 LINE",
"1070 400 LINE",
"952 400 LINE",
"952 317 LINE",
"952 317 LINE"
);
},
{
closed = 1;
nodes = (
"230 1400 LINE",
"230 1302 LINE",
"1070 1302 LINE",
"1070 1400 LINE",
"1070 1400 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1040 1400 LINE",
"260 1400 LINE",
"260 1342 LINE",
"1040 1342 LINE",
"1040 1342 LINE"
);
},
{
closed = 1;
nodes = (
"318 58 OFFCURVE",
"318 317 QCURVE SMOOTH",
"318 436 OFFCURVE",
"450 436 QCURVE SMOOTH",
"1040 436 OFFCURVE",
"1040 813 QCURVE SMOOTH",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 813 QCURVE SMOOTH",
"260 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 733 LINE",
"424 733 LINE SMOOTH",
"318 733 OFFCURVE",
"318 813 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 813 QCURVE SMOOTH",
"982 494 OFFCURVE",
"450 494 QCURVE SMOOTH",
"260 494 OFFCURVE",
"260 317 QCURVE SMOOTH",
"260 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"982 210 QCURVE",
"982 -50 LINE",
"1040 -50 LINE",
"1040 400 LINE",
"982 400 LINE",
"982 287 LINE",
"822 58 OFFCURVE",
"600 58 QCURVE",
"600 58 LINE"
);
}
);
width = 1300;
}
);
note = uni17A8;
unicode = 17A8;
},
{
glyphname = uni17A9;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1190 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 813 QCURVE SMOOTH",
"110 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"478 813 LINE",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 813 QCURVE SMOOTH",
"822 614 OFFCURVE",
"510 614 QCURVE SMOOTH",
"110 614 OFFCURVE",
"110 287 QCURVE SMOOTH",
"110 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"679 0 OFFCURVE",
"822 85 QCURVE",
"822 -50 LINE",
"1130 -50 LINE",
"1130 400 LINE",
"822 400 LINE",
"822 317 LINE",
"712 218 OFFCURVE",
"530 218 QCURVE SMOOTH",
"478 218 OFFCURVE",
"478 287 QCURVE SMOOTH",
"478 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1190 396 OFFCURVE",
"1190 813 QCURVE",
"1190 813 LINE"
);
},
{
closed = 1;
nodes = (
"1390 480 LINE",
"1212 480 LINE",
"1212 -50 LINE",
"1390 -50 LINE",
"1390 -50 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1160 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 813 QCURVE SMOOTH",
"140 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"448 813 LINE",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 813 QCURVE SMOOTH",
"852 594 OFFCURVE",
"510 594 QCURVE SMOOTH",
"140 594 OFFCURVE",
"140 287 QCURVE SMOOTH",
"140 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"708 0 OFFCURVE",
"852 85 QCURVE",
"852 -50 LINE",
"1160 -50 LINE",
"1160 400 LINE",
"852 400 LINE",
"852 317 LINE",
"742 188 OFFCURVE",
"530 188 QCURVE SMOOTH",
"448 188 OFFCURVE",
"448 287 QCURVE SMOOTH",
"448 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1160 396 OFFCURVE",
"1160 813 QCURVE",
"1160 813 LINE"
);
},
{
closed = 1;
nodes = (
"1212 480 LINE",
"1212 -50 LINE",
"1360 -50 LINE",
"1360 480 LINE",
"1360 480 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 813 QCURVE SMOOTH",
"200 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"500 675 LINE",
"500 813 LINE",
"388 813 LINE",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 813 QCURVE SMOOTH",
"912 534 OFFCURVE",
"450 534 QCURVE SMOOTH",
"200 534 OFFCURVE",
"200 287 QCURVE SMOOTH",
"200 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"768 0 OFFCURVE",
"912 85 QCURVE",
"912 -50 LINE",
"1100 -50 LINE",
"1100 400 LINE",
"912 400 LINE",
"912 317 LINE",
"802 138 OFFCURVE",
"530 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 287 QCURVE SMOOTH",
"388 396 OFFCURVE",
"450 396 QCURVE SMOOTH",
"1100 396 OFFCURVE",
"1100 813 QCURVE",
"1100 813 LINE"
);
},
{
closed = 1;
nodes = (
"1212 480 LINE",
"1212 -50 LINE",
"1360 -50 LINE",
"1360 480 LINE",
"1360 480 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"822 98 OFFCURVE",
"600 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 317 QCURVE SMOOTH",
"348 416 OFFCURVE",
"450 416 QCURVE SMOOTH",
"1070 416 OFFCURVE",
"1070 813 QCURVE SMOOTH",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 813 QCURVE SMOOTH",
"230 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 773 LINE",
"424 773 LINE SMOOTH",
"348 773 OFFCURVE",
"348 813 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 813 QCURVE SMOOTH",
"952 514 OFFCURVE",
"450 514 QCURVE SMOOTH",
"230 514 OFFCURVE",
"230 317 QCURVE SMOOTH",
"230 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"952 160 QCURVE",
"952 -50 LINE",
"1070 -50 LINE",
"1070 400 LINE",
"952 400 LINE",
"952 317 LINE",
"952 317 LINE"
);
},
{
closed = 1;
nodes = (
"1152 480 LINE",
"1152 -50 LINE",
"1270 -50 LINE",
"1270 480 LINE",
"1270 480 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 58 OFFCURVE",
"318 317 QCURVE SMOOTH",
"318 436 OFFCURVE",
"450 436 QCURVE SMOOTH",
"1040 436 OFFCURVE",
"1040 813 QCURVE SMOOTH",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 813 QCURVE SMOOTH",
"260 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 733 LINE",
"424 733 LINE SMOOTH",
"318 733 OFFCURVE",
"318 813 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 813 QCURVE SMOOTH",
"982 494 OFFCURVE",
"450 494 QCURVE SMOOTH",
"260 494 OFFCURVE",
"260 317 QCURVE SMOOTH",
"260 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"982 210 QCURVE",
"982 -50 LINE",
"1040 -50 LINE",
"1040 400 LINE",
"982 400 LINE",
"982 287 LINE",
"822 58 OFFCURVE",
"600 58 QCURVE",
"600 58 LINE"
);
},
{
closed = 1;
nodes = (
"1210 480 LINE",
"1152 480 LINE",
"1152 -50 LINE",
"1210 -50 LINE",
"1210 -50 LINE"
);
}
);
width = 1300;
}
);
note = uni17A9;
unicode = 17A9;
},
{
glyphname = uni17AA;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"30 1217 LINE",
"140 1084 LINE",
"388 1204 LINE",
"348 1260 LINE",
"348 1302 LINE",
"385 1302 LINE SMOOTH",
"417 1302 OFFCURVE",
"543 1268 QCURVE SMOOTH",
"649 1240 OFFCURVE",
"748 1240 QCURVE SMOOTH",
"764 1240 OFFCURVE",
"800 1242 QCURVE SMOOTH",
"1190 1269 OFFCURVE",
"1190 1575 QCURVE SMOOTH",
"1190 1650 LINE",
"822 1650 LINE",
"822 1575 LINE SMOOTH",
"822 1470 OFFCURVE",
"733 1470 QCURVE SMOOTH",
"580 1470 OFFCURVE",
"486 1502 QCURVE SMOOTH",
"403 1530 OFFCURVE",
"355 1530 QCURVE SMOOTH",
"258 1530 LINE SMOOTH",
"30 1530 OFFCURVE",
"30 1342 QCURVE",
"30 1342 LINE"
);
},
{
closed = 1;
nodes = (
"1190 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 813 QCURVE SMOOTH",
"110 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"478 813 LINE",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 813 QCURVE SMOOTH",
"822 614 OFFCURVE",
"510 614 QCURVE SMOOTH",
"110 614 OFFCURVE",
"110 287 QCURVE SMOOTH",
"110 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"679 0 OFFCURVE",
"822 85 QCURVE",
"822 -50 LINE",
"1190 -50 LINE",
"1190 400 LINE",
"822 400 LINE",
"822 317 LINE",
"712 218 OFFCURVE",
"530 218 QCURVE SMOOTH",
"478 218 OFFCURVE",
"478 287 QCURVE SMOOTH",
"478 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1190 396 OFFCURVE",
"1190 813 QCURVE",
"1190 813 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1160 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 813 QCURVE SMOOTH",
"140 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"448 813 LINE",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 813 QCURVE SMOOTH",
"852 594 OFFCURVE",
"510 594 QCURVE SMOOTH",
"140 594 OFFCURVE",
"140 287 QCURVE SMOOTH",
"140 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"708 0 OFFCURVE",
"852 85 QCURVE",
"852 -50 LINE",
"1160 -50 LINE",
"1160 400 LINE",
"852 400 LINE",
"852 317 LINE",
"742 188 OFFCURVE",
"530 188 QCURVE SMOOTH",
"448 188 OFFCURVE",
"448 287 QCURVE SMOOTH",
"448 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1160 396 OFFCURVE",
"1160 813 QCURVE",
"1160 813 LINE"
);
},
{
closed = 1;
nodes = (
"358 1174 LINE",
"318 1230 LINE",
"318 1272 LINE",
"355 1272 LINE SMOOTH",
"385 1272 OFFCURVE",
"640 1212 OFFCURVE",
"770 1212 QCURVE SMOOTH",
"1160 1212 OFFCURVE",
"1160 1515 QCURVE SMOOTH",
"1160 1620 LINE",
"852 1620 LINE",
"852 1515 LINE SMOOTH",
"852 1410 OFFCURVE",
"760 1410 QCURVE SMOOTH",
"600 1410 OFFCURVE",
"402 1470 OFFCURVE",
"355 1470 QCURVE SMOOTH",
"258 1470 LINE SMOOTH",
"60 1470 OFFCURVE",
"60 1312 QCURVE SMOOTH",
"60 1187 LINE",
"140 1054 LINE",
"140 1054 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 813 QCURVE SMOOTH",
"200 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"500 675 LINE",
"500 813 LINE",
"388 813 LINE",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 813 QCURVE SMOOTH",
"912 534 OFFCURVE",
"450 534 QCURVE SMOOTH",
"200 534 OFFCURVE",
"200 287 QCURVE SMOOTH",
"200 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"768 0 OFFCURVE",
"912 85 QCURVE",
"912 -50 LINE",
"1100 -50 LINE",
"1100 400 LINE",
"912 400 LINE",
"912 317 LINE",
"802 138 OFFCURVE",
"530 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 287 QCURVE SMOOTH",
"388 396 OFFCURVE",
"450 396 QCURVE SMOOTH",
"1100 396 OFFCURVE",
"1100 813 QCURVE",
"1100 813 LINE"
);
},
{
closed = 1;
nodes = (
"204 1024 LINE",
"322 1126 LINE",
"268 1190 LINE",
"268 1282 LINE",
"355 1282 LINE SMOOTH",
"385 1282 OFFCURVE",
"640 1222 OFFCURVE",
"770 1222 QCURVE SMOOTH",
"1100 1222 OFFCURVE",
"1100 1465 QCURVE SMOOTH",
"1100 1570 LINE",
"912 1570 LINE",
"912 1465 LINE SMOOTH",
"912 1360 OFFCURVE",
"760 1360 QCURVE SMOOTH",
"600 1360 OFFCURVE",
"402 1420 OFFCURVE",
"355 1420 QCURVE SMOOTH",
"268 1420 LINE SMOOTH",
"100 1420 OFFCURVE",
"100 1282 QCURVE SMOOTH",
"100 1147 LINE",
"200 1024 LINE",
"200 1024 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"822 98 OFFCURVE",
"600 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 317 QCURVE SMOOTH",
"348 416 OFFCURVE",
"450 416 QCURVE SMOOTH",
"1070 416 OFFCURVE",
"1070 813 QCURVE SMOOTH",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 813 QCURVE SMOOTH",
"230 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 773 LINE",
"424 773 LINE SMOOTH",
"348 773 OFFCURVE",
"348 813 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 813 QCURVE SMOOTH",
"952 514 OFFCURVE",
"450 514 QCURVE SMOOTH",
"230 514 OFFCURVE",
"230 317 QCURVE SMOOTH",
"230 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"952 160 QCURVE",
"952 -50 LINE",
"1070 -50 LINE",
"1070 400 LINE",
"952 400 LINE",
"952 317 LINE",
"952 317 LINE"
);
},
{
closed = 1;
nodes = (
"323 1116 LINE",
"248 1180 LINE",
"248 1262 LINE SMOOTH",
"248 1302 OFFCURVE",
"298 1302 QCURVE SMOOTH",
"355 1302 LINE SMOOTH",
"385 1302 OFFCURVE",
"640 1242 OFFCURVE",
"770 1242 QCURVE SMOOTH",
"1070 1242 OFFCURVE",
"1070 1445 QCURVE SMOOTH",
"1070 1550 LINE",
"952 1550 LINE",
"952 1445 LINE SMOOTH",
"952 1340 OFFCURVE",
"760 1340 QCURVE SMOOTH",
"600 1340 OFFCURVE",
"402 1400 OFFCURVE",
"355 1400 QCURVE SMOOTH",
"298 1400 LINE SMOOTH",
"150 1400 OFFCURVE",
"150 1262 QCURVE SMOOTH",
"150 1137 LINE",
"248 1045 LINE",
"248 1045 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"200 1119 LINE",
"300 1047 LINE",
"338 1092 LINE",
"258 1149 LINE",
"258 1242 LINE SMOOTH",
"258 1322 OFFCURVE",
"348 1322 QCURVE SMOOTH",
"435 1322 LINE SMOOTH",
"467 1322 OFFCURVE",
"593 1282 QCURVE SMOOTH",
"719 1242 OFFCURVE",
"820 1242 QCURVE SMOOTH",
"1040 1242 OFFCURVE",
"1040 1425 QCURVE SMOOTH",
"1040 1530 LINE",
"982 1530 LINE",
"982 1425 LINE SMOOTH",
"982 1300 OFFCURVE",
"810 1300 QCURVE SMOOTH",
"679 1300 OFFCURVE",
"581 1340 QCURVE SMOOTH",
"483 1380 OFFCURVE",
"435 1380 QCURVE SMOOTH",
"348 1380 LINE SMOOTH",
"200 1380 OFFCURVE",
"200 1242 QCURVE",
"200 1242 LINE"
);
},
{
closed = 1;
nodes = (
"318 58 OFFCURVE",
"318 317 QCURVE SMOOTH",
"318 436 OFFCURVE",
"450 436 QCURVE SMOOTH",
"1040 436 OFFCURVE",
"1040 813 QCURVE SMOOTH",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 813 QCURVE SMOOTH",
"260 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 733 LINE",
"424 733 LINE SMOOTH",
"318 733 OFFCURVE",
"318 813 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 813 QCURVE SMOOTH",
"982 494 OFFCURVE",
"450 494 QCURVE SMOOTH",
"260 494 OFFCURVE",
"260 317 QCURVE SMOOTH",
"260 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"982 210 QCURVE",
"982 -50 LINE",
"1040 -50 LINE",
"1040 400 LINE",
"982 400 LINE",
"982 287 LINE",
"822 58 OFFCURVE",
"600 58 QCURVE",
"600 58 LINE"
);
}
);
width = 1300;
}
);
note = uni17AA;
unicode = 17AA;
},
{
glyphname = uni17AB;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"672 827 LINE",
"822 704 LINE",
"822 323 LINE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 323 QCURVE SMOOTH",
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"508 932 LINE",
"508 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"110 704 LINE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 323 QCURVE SMOOTH",
"1190 704 LINE SMOOTH",
"1190 772 OFFCURVE",
"1090 826 QCURVE SMOOTH",
"990 880 LINE",
"990 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"880 1160 LINE SMOOTH",
"672 1160 OFFCURVE",
"672 932 QCURVE",
"672 932 LINE"
);
},
{
closed = 1;
nodes = (
"110 -295 LINE",
"110 -500 LINE",
"500 -500 LINE SMOOTH",
"1190 -500 OFFCURVE",
"1190 -224 QCURVE SMOOTH",
"1190 -50 OFFCURVE",
"950 -50 QCURVE SMOOTH",
"770 -50 LINE",
"770 -224 LINE",
"822 -224 LINE",
"822 -295 OFFCURVE",
"500 -295 QCURVE",
"500 -295 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 -500 LINE",
"500 -500 LINE SMOOTH",
"1160 -500 OFFCURVE",
"1160 -224 QCURVE SMOOTH",
"1160 -50 OFFCURVE",
"950 -50 QCURVE SMOOTH",
"770 -50 LINE",
"770 -224 LINE",
"852 -224 LINE",
"852 -325 OFFCURVE",
"500 -325 QCURVE SMOOTH",
"140 -325 LINE",
"140 -325 LINE"
);
},
{
closed = 1;
nodes = (
"852 323 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE SMOOTH",
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 704 LINE SMOOTH",
"1160 772 OFFCURVE",
"1060 826 QCURVE SMOOTH",
"960 880 LINE",
"960 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"900 1130 LINE SMOOTH",
"692 1130 OFFCURVE",
"692 932 QCURVE SMOOTH",
"692 827 LINE",
"852 704 LINE",
"852 704 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 -500 LINE",
"500 -500 LINE SMOOTH",
"1100 -500 OFFCURVE",
"1100 -194 QCURVE SMOOTH",
"1100 -70 OFFCURVE",
"950 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -194 LINE",
"912 -194 LINE",
"912 -385 OFFCURVE",
"500 -385 QCURVE SMOOTH",
"200 -385 LINE",
"200 -385 LINE"
);
},
{
closed = 1;
nodes = (
"912 323 LINE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 734 LINE SMOOTH",
"1100 802 OFFCURVE",
"1000 856 QCURVE SMOOTH",
"900 910 LINE",
"900 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"900 1130 LINE SMOOTH",
"722 1130 OFFCURVE",
"722 992 QCURVE SMOOTH",
"722 857 LINE",
"912 734 LINE",
"912 734 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 744 OFFCURVE",
"952 714 QCURVE SMOOTH",
"952 323 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 714 LINE SMOOTH",
"1070 802 OFFCURVE",
"970 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"905 772 LINE",
"905 772 LINE"
);
},
{
closed = 1;
nodes = (
"500 -500 LINE SMOOTH",
"1070 -500 OFFCURVE",
"1070 -214 QCURVE SMOOTH",
"1070 -70 OFFCURVE",
"876 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -168 LINE",
"876 -168 LINE SMOOTH",
"952 -168 OFFCURVE",
"952 -214 QCURVE SMOOTH",
"952 -402 OFFCURVE",
"500 -402 QCURVE SMOOTH",
"200 -402 LINE",
"200 -500 LINE",
"200 -500 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"982 323 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE SMOOTH",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 323 QCURVE SMOOTH",
"1040 714 LINE SMOOTH",
"1040 769 OFFCURVE",
"930 837 QCURVE SMOOTH",
"820 903 LINE",
"820 992 LINE SMOOTH",
"820 1072 OFFCURVE",
"920 1072 QCURVE SMOOTH",
"1070 1072 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 869 LINE",
"900 786 LINE SMOOTH",
"982 737 OFFCURVE",
"982 714 QCURVE",
"982 714 LINE"
);
},
{
closed = 1;
nodes = (
"230 -442 LINE",
"230 -500 LINE",
"500 -500 LINE SMOOTH",
"1040 -500 OFFCURVE",
"1040 -214 QCURVE SMOOTH",
"1040 -70 OFFCURVE",
"876 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -128 LINE",
"876 -128 LINE SMOOTH",
"982 -128 OFFCURVE",
"982 -214 QCURVE SMOOTH",
"982 -442 OFFCURVE",
"500 -442 QCURVE",
"500 -442 LINE"
);
}
);
width = 1300;
}
);
note = uni17AB;
unicode = 17AB;
},
{
glyphname = uni17AC;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 704 LINE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 323 QCURVE SMOOTH",
"1190 704 LINE SMOOTH",
"1190 772 OFFCURVE",
"1090 826 QCURVE SMOOTH",
"990 880 LINE",
"990 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"880 1160 LINE SMOOTH",
"672 1160 OFFCURVE",
"672 932 QCURVE SMOOTH",
"672 827 LINE",
"822 704 LINE",
"822 323 LINE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 323 QCURVE SMOOTH",
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"508 932 LINE",
"508 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"20 827 LINE"
);
},
{
closed = 1;
nodes = (
"1290 -295 LINE",
"1240 -295 LINE SMOOTH",
"1217 -295 OFFCURVE",
"1185 -270 QCURVE",
"1190 -245 OFFCURVE",
"1190 -224 QCURVE SMOOTH",
"1190 -50 OFFCURVE",
"950 -50 QCURVE SMOOTH",
"770 -50 LINE",
"770 -224 LINE",
"822 -224 LINE",
"822 -295 OFFCURVE",
"500 -295 QCURVE SMOOTH",
"110 -295 LINE",
"110 -500 LINE",
"500 -500 LINE SMOOTH",
"842 -500 OFFCURVE",
"1013 -433 QCURVE",
"1099 -500 OFFCURVE",
"1210 -500 QCURVE SMOOTH",
"1290 -500 LINE",
"1290 -500 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1160 -262 OFFCURVE",
"1160 -224 QCURVE SMOOTH",
"1160 -50 OFFCURVE",
"950 -50 QCURVE SMOOTH",
"770 -50 LINE",
"770 -224 LINE",
"852 -224 LINE",
"852 -325 OFFCURVE",
"500 -325 QCURVE SMOOTH",
"140 -325 LINE",
"140 -500 LINE",
"500 -500 LINE SMOOTH",
"840 -500 OFFCURVE",
"1005 -427 QCURVE",
"1096 -500 OFFCURVE",
"1210 -500 QCURVE SMOOTH",
"1290 -500 LINE",
"1290 -325 LINE",
"1210 -325 LINE SMOOTH",
"1185 -325 OFFCURVE",
"1148 -294 QCURVE",
"1148 -294 LINE"
);
},
{
closed = 1;
nodes = (
"852 323 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE SMOOTH",
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 704 LINE SMOOTH",
"1160 772 OFFCURVE",
"1060 826 QCURVE SMOOTH",
"960 880 LINE",
"960 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"900 1130 LINE SMOOTH",
"692 1130 OFFCURVE",
"692 932 QCURVE SMOOTH",
"692 827 LINE",
"852 704 LINE",
"852 704 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 -250 OFFCURVE",
"1100 -194 QCURVE SMOOTH",
"1100 -70 OFFCURVE",
"950 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -194 LINE",
"912 -194 LINE",
"912 -385 OFFCURVE",
"500 -385 QCURVE SMOOTH",
"200 -385 LINE",
"200 -500 LINE",
"500 -500 LINE SMOOTH",
"826 -500 OFFCURVE",
"975 -410 QCURVE",
"1074 -500 OFFCURVE",
"1170 -500 QCURVE SMOOTH",
"1250 -500 LINE",
"1250 -385 LINE",
"1170 -385 LINE SMOOTH",
"1127 -385 OFFCURVE",
"1080 -296 QCURVE",
"1080 -296 LINE"
);
},
{
closed = 1;
nodes = (
"912 323 LINE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 734 LINE SMOOTH",
"1100 802 OFFCURVE",
"1000 856 QCURVE SMOOTH",
"900 910 LINE",
"900 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"900 1130 LINE SMOOTH",
"722 1130 OFFCURVE",
"722 992 QCURVE SMOOTH",
"722 857 LINE",
"912 734 LINE",
"912 734 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 744 OFFCURVE",
"952 714 QCURVE SMOOTH",
"952 323 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 714 LINE SMOOTH",
"1070 802 OFFCURVE",
"970 856 QCURVE SMOOTH",
"870 910 LINE",
"870 992 LINE SMOOTH",
"870 1032 OFFCURVE",
"920 1032 QCURVE SMOOTH",
"1070 1032 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 857 LINE",
"905 772 LINE",
"905 772 LINE"
);
},
{
closed = 1;
nodes = (
"1070 -264 OFFCURVE",
"1070 -214 QCURVE SMOOTH",
"1070 -70 OFFCURVE",
"876 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -168 LINE",
"876 -168 LINE SMOOTH",
"952 -168 OFFCURVE",
"952 -214 QCURVE SMOOTH",
"952 -402 OFFCURVE",
"500 -402 QCURVE SMOOTH",
"200 -402 LINE",
"200 -500 LINE",
"500 -500 LINE SMOOTH",
"840 -500 OFFCURVE",
"978 -398 QCURVE",
"1044 -500 OFFCURVE",
"1180 -500 QCURVE SMOOTH",
"1240 -500 LINE",
"1240 -405 LINE",
"1180 -405 LINE SMOOTH",
"1082 -405 OFFCURVE",
"1053 -305 QCURVE",
"1053 -305 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"982 323 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE SMOOTH",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 323 QCURVE SMOOTH",
"1040 714 LINE SMOOTH",
"1040 769 OFFCURVE",
"930 837 QCURVE SMOOTH",
"820 903 LINE",
"820 992 LINE SMOOTH",
"820 1072 OFFCURVE",
"920 1072 QCURVE SMOOTH",
"1070 1072 LINE",
"1070 1130 LINE",
"920 1130 LINE SMOOTH",
"762 1130 OFFCURVE",
"762 992 QCURVE SMOOTH",
"762 869 LINE",
"900 786 LINE SMOOTH",
"982 737 OFFCURVE",
"982 714 QCURVE",
"982 714 LINE"
);
},
{
closed = 1;
nodes = (
"1040 -276 OFFCURVE",
"1040 -214 QCURVE SMOOTH",
"1040 -70 OFFCURVE",
"876 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -128 LINE",
"876 -128 LINE SMOOTH",
"982 -128 OFFCURVE",
"982 -214 QCURVE SMOOTH",
"982 -442 OFFCURVE",
"500 -442 QCURVE SMOOTH",
"230 -442 LINE",
"230 -500 LINE",
"500 -500 LINE SMOOTH",
"843 -500 OFFCURVE",
"967 -385 QCURVE",
"998 -500 OFFCURVE",
"1130 -500 QCURVE SMOOTH",
"1170 -500 LINE",
"1170 -442 LINE",
"1130 -442 LINE SMOOTH",
"1033 -442 OFFCURVE",
"1016 -322 QCURVE",
"1016 -322 LINE"
);
}
);
width = 1300;
}
);
note = uni17AC;
unicode = 17AC;
},
{
glyphname = uni17AD;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 833 LINE SMOOTH",
"478 900 OFFCURVE",
"494 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"807 900 QCURVE SMOOTH",
"822 900 OFFCURVE",
"822 833 QCURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 833 LINE SMOOTH",
"1190 1160 OFFCURVE",
"897 1160 QCURVE SMOOTH",
"781 1160 OFFCURVE",
"650 1036 QCURVE",
"520 1160 OFFCURVE",
"405 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 833 QCURVE",
"110 833 LINE"
);
},
{
closed = 1;
nodes = (
"110 -295 LINE",
"110 -500 LINE",
"500 -500 LINE SMOOTH",
"1190 -500 OFFCURVE",
"1190 -224 QCURVE SMOOTH",
"1190 -50 OFFCURVE",
"950 -50 QCURVE SMOOTH",
"770 -50 LINE",
"770 -224 LINE",
"822 -224 LINE",
"822 -295 OFFCURVE",
"500 -295 QCURVE",
"500 -295 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 -500 LINE",
"500 -500 LINE SMOOTH",
"1160 -500 OFFCURVE",
"1160 -224 QCURVE SMOOTH",
"1160 -50 OFFCURVE",
"950 -50 QCURVE SMOOTH",
"770 -50 LINE",
"770 -224 LINE",
"852 -224 LINE",
"852 -325 OFFCURVE",
"500 -325 QCURVE SMOOTH",
"140 -325 LINE",
"140 -325 LINE"
);
},
{
closed = 1;
nodes = (
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 833 LINE SMOOTH",
"448 900 OFFCURVE",
"481 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"820 900 QCURVE SMOOTH",
"852 900 OFFCURVE",
"852 833 QCURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 833 LINE SMOOTH",
"1160 1130 OFFCURVE",
"877 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"425 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 833 QCURVE",
"140 833 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 -500 LINE",
"500 -500 LINE SMOOTH",
"1100 -500 OFFCURVE",
"1100 -194 QCURVE SMOOTH",
"1100 -70 OFFCURVE",
"950 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -194 LINE",
"912 -194 LINE",
"912 -385 OFFCURVE",
"500 -385 QCURVE SMOOTH",
"200 -385 LINE",
"200 -385 LINE"
);
},
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 853 LINE SMOOTH",
"388 980 OFFCURVE",
"461 980 QCURVE SMOOTH",
"510 980 OFFCURVE",
"591 886 QCURVE SMOOTH",
"618 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"682 855 OFFCURVE",
"709 886 QCURVE SMOOTH",
"791 980 OFFCURVE",
"840 980 QCURVE SMOOTH",
"912 980 OFFCURVE",
"912 853 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 853 LINE SMOOTH",
"1100 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 853 QCURVE",
"200 853 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"500 -500 LINE SMOOTH",
"1070 -500 OFFCURVE",
"1070 -214 QCURVE SMOOTH",
"1070 -70 OFFCURVE",
"876 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -168 LINE",
"876 -168 LINE SMOOTH",
"952 -168 OFFCURVE",
"952 -214 QCURVE SMOOTH",
"952 -402 OFFCURVE",
"500 -402 QCURVE SMOOTH",
"200 -402 LINE",
"200 -500 LINE",
"200 -500 LINE"
);
},
{
closed = 1;
nodes = (
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 853 LINE SMOOTH",
"348 1020 OFFCURVE",
"445 1020 QCURVE SMOOTH",
"500 1020 OFFCURVE",
"596 896 QCURVE SMOOTH",
"628 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"672 855 OFFCURVE",
"704 896 QCURVE SMOOTH",
"801 1020 OFFCURVE",
"857 1020 QCURVE SMOOTH",
"952 1020 OFFCURVE",
"952 853 QCURVE SMOOTH",
"952 0 LINE",
"1070 0 LINE",
"1070 853 LINE SMOOTH",
"1070 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 853 QCURVE",
"230 853 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 853 LINE SMOOTH",
"318 1072 OFFCURVE",
"445 1072 QCURVE SMOOTH",
"500 1072 OFFCURVE",
"596 954 QCURVE SMOOTH",
"628 915 OFFCURVE",
"650 915 QCURVE SMOOTH",
"673 915 OFFCURVE",
"704 954 QCURVE SMOOTH",
"801 1072 OFFCURVE",
"857 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 853 QCURVE SMOOTH",
"982 0 LINE",
"1040 0 LINE",
"1040 853 LINE SMOOTH",
"1040 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"763 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 853 QCURVE",
"260 853 LINE"
);
},
{
closed = 1;
nodes = (
"230 -442 LINE",
"230 -500 LINE",
"500 -500 LINE SMOOTH",
"1040 -500 OFFCURVE",
"1040 -214 QCURVE SMOOTH",
"1040 -70 OFFCURVE",
"876 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -128 LINE",
"876 -128 LINE SMOOTH",
"982 -128 OFFCURVE",
"982 -214 QCURVE SMOOTH",
"982 -442 OFFCURVE",
"500 -442 QCURVE",
"500 -442 LINE"
);
}
);
width = 1300;
}
);
note = uni17AD;
unicode = 17AD;
},
{
glyphname = uni17AE;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 833 LINE SMOOTH",
"478 900 OFFCURVE",
"494 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"807 900 QCURVE SMOOTH",
"822 900 OFFCURVE",
"822 833 QCURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 833 LINE SMOOTH",
"1190 1160 OFFCURVE",
"897 1160 QCURVE SMOOTH",
"781 1160 OFFCURVE",
"650 1036 QCURVE",
"520 1160 OFFCURVE",
"405 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 833 QCURVE",
"110 833 LINE"
);
},
{
closed = 1;
nodes = (
"1290 -295 LINE",
"1240 -295 LINE SMOOTH",
"1217 -295 OFFCURVE",
"1185 -270 QCURVE",
"1190 -245 OFFCURVE",
"1190 -224 QCURVE SMOOTH",
"1190 -50 OFFCURVE",
"950 -50 QCURVE SMOOTH",
"770 -50 LINE",
"770 -224 LINE",
"822 -224 LINE",
"822 -295 OFFCURVE",
"500 -295 QCURVE SMOOTH",
"110 -295 LINE",
"110 -500 LINE",
"500 -500 LINE SMOOTH",
"842 -500 OFFCURVE",
"1013 -433 QCURVE",
"1099 -500 OFFCURVE",
"1210 -500 QCURVE SMOOTH",
"1290 -500 LINE",
"1290 -500 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 833 LINE SMOOTH",
"448 900 OFFCURVE",
"481 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"820 900 QCURVE SMOOTH",
"852 900 OFFCURVE",
"852 833 QCURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 833 LINE SMOOTH",
"1160 1130 OFFCURVE",
"877 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"425 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 833 QCURVE",
"140 833 LINE"
);
},
{
closed = 1;
nodes = (
"1160 -262 OFFCURVE",
"1160 -224 QCURVE SMOOTH",
"1160 -50 OFFCURVE",
"950 -50 QCURVE SMOOTH",
"770 -50 LINE",
"770 -224 LINE",
"852 -224 LINE",
"852 -325 OFFCURVE",
"500 -325 QCURVE SMOOTH",
"140 -325 LINE",
"140 -500 LINE",
"500 -500 LINE SMOOTH",
"840 -500 OFFCURVE",
"1005 -427 QCURVE",
"1096 -500 OFFCURVE",
"1210 -500 QCURVE SMOOTH",
"1290 -500 LINE",
"1290 -325 LINE",
"1210 -325 LINE SMOOTH",
"1185 -325 OFFCURVE",
"1148 -294 QCURVE",
"1148 -294 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1127 -385 OFFCURVE",
"1080 -296 QCURVE",
"1100 -250 OFFCURVE",
"1100 -194 QCURVE SMOOTH",
"1100 -70 OFFCURVE",
"950 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -194 LINE",
"912 -194 LINE",
"912 -385 OFFCURVE",
"500 -385 QCURVE SMOOTH",
"200 -385 LINE",
"200 -500 LINE",
"500 -500 LINE SMOOTH",
"826 -500 OFFCURVE",
"975 -410 QCURVE",
"1074 -500 OFFCURVE",
"1170 -500 QCURVE SMOOTH",
"1250 -500 LINE",
"1250 -385 LINE",
"1170 -385 LINE",
"1170 -385 LINE"
);
},
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 853 LINE SMOOTH",
"388 980 OFFCURVE",
"461 980 QCURVE SMOOTH",
"510 980 OFFCURVE",
"591 886 QCURVE SMOOTH",
"618 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"682 855 OFFCURVE",
"709 886 QCURVE SMOOTH",
"791 980 OFFCURVE",
"840 980 QCURVE SMOOTH",
"912 980 OFFCURVE",
"912 853 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 853 LINE SMOOTH",
"1100 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 853 QCURVE",
"200 853 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1070 -264 OFFCURVE",
"1070 -214 QCURVE SMOOTH",
"1070 -70 OFFCURVE",
"876 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -168 LINE",
"876 -168 LINE SMOOTH",
"952 -168 OFFCURVE",
"952 -214 QCURVE SMOOTH",
"952 -402 OFFCURVE",
"500 -402 QCURVE SMOOTH",
"200 -402 LINE",
"200 -500 LINE",
"500 -500 LINE SMOOTH",
"840 -500 OFFCURVE",
"978 -398 QCURVE",
"1044 -500 OFFCURVE",
"1180 -500 QCURVE SMOOTH",
"1240 -500 LINE",
"1240 -405 LINE",
"1180 -405 LINE SMOOTH",
"1082 -405 OFFCURVE",
"1053 -305 QCURVE",
"1053 -305 LINE"
);
},
{
closed = 1;
nodes = (
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 853 LINE SMOOTH",
"348 1020 OFFCURVE",
"445 1020 QCURVE SMOOTH",
"500 1020 OFFCURVE",
"596 896 QCURVE SMOOTH",
"628 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"672 855 OFFCURVE",
"704 896 QCURVE SMOOTH",
"801 1020 OFFCURVE",
"857 1020 QCURVE SMOOTH",
"952 1020 OFFCURVE",
"952 853 QCURVE SMOOTH",
"952 0 LINE",
"1070 0 LINE",
"1070 853 LINE SMOOTH",
"1070 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 853 QCURVE",
"230 853 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 853 LINE SMOOTH",
"318 1072 OFFCURVE",
"445 1072 QCURVE SMOOTH",
"500 1072 OFFCURVE",
"596 954 QCURVE SMOOTH",
"628 915 OFFCURVE",
"650 915 QCURVE SMOOTH",
"673 915 OFFCURVE",
"704 954 QCURVE SMOOTH",
"801 1072 OFFCURVE",
"857 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 853 QCURVE SMOOTH",
"982 0 LINE",
"1040 0 LINE",
"1040 853 LINE SMOOTH",
"1040 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"763 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 853 QCURVE",
"260 853 LINE"
);
},
{
closed = 1;
nodes = (
"1040 -276 OFFCURVE",
"1040 -214 QCURVE SMOOTH",
"1040 -70 OFFCURVE",
"876 -70 QCURVE SMOOTH",
"800 -70 LINE",
"800 -128 LINE",
"876 -128 LINE SMOOTH",
"982 -128 OFFCURVE",
"982 -214 QCURVE SMOOTH",
"982 -442 OFFCURVE",
"500 -442 QCURVE SMOOTH",
"230 -442 LINE",
"230 -500 LINE",
"500 -500 LINE SMOOTH",
"843 -500 OFFCURVE",
"967 -385 QCURVE",
"998 -500 OFFCURVE",
"1130 -500 QCURVE SMOOTH",
"1170 -500 LINE",
"1170 -442 LINE",
"1130 -442 LINE SMOOTH",
"1033 -442 OFFCURVE",
"1016 -322 QCURVE",
"1016 -322 LINE"
);
}
);
width = 1300;
}
);
note = uni17AE;
unicode = 17AE;
},
{
glyphname = uni17AF;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"40 817 LINE",
"40 613 LINE",
"110 613 LINE",
"110 0 LINE",
"509 0 LINE",
"651 160 LINE",
"792 0 LINE",
"1190 0 LINE",
"1190 827 LINE SMOOTH",
"1190 1160 OFFCURVE",
"721 1160 QCURVE SMOOTH",
"590 1160 LINE SMOOTH",
"478 1160 OFFCURVE",
"478 1246 QCURVE SMOOTH",
"478 1440 LINE",
"110 1440 LINE",
"110 1246 LINE SMOOTH",
"110 932 OFFCURVE",
"590 932 QCURVE SMOOTH",
"721 932 LINE SMOOTH",
"822 932 OFFCURVE",
"822 827 QCURVE SMOOTH",
"822 295 LINE",
"651 455 LINE",
"478 294 LINE",
"478 817 LINE",
"478 817 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 0 LINE",
"479 0 LINE",
"651 160 LINE",
"822 0 LINE",
"1160 0 LINE",
"1160 827 LINE SMOOTH",
"1160 1130 OFFCURVE",
"721 1130 QCURVE SMOOTH",
"590 1130 LINE SMOOTH",
"448 1130 OFFCURVE",
"448 1246 QCURVE SMOOTH",
"448 1440 LINE",
"140 1440 LINE",
"140 1246 LINE SMOOTH",
"140 932 OFFCURVE",
"590 932 QCURVE SMOOTH",
"721 932 LINE SMOOTH",
"852 932 OFFCURVE",
"852 827 QCURVE SMOOTH",
"852 265 LINE",
"651 425 LINE",
"448 264 LINE",
"448 817 LINE",
"60 817 LINE",
"60 613 LINE",
"140 613 LINE",
"140 613 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 1246 LINE SMOOTH",
"200 992 OFFCURVE",
"530 992 QCURVE SMOOTH",
"721 992 LINE SMOOTH",
"912 992 OFFCURVE",
"912 827 QCURVE SMOOTH",
"912 167 LINE",
"651 405 LINE",
"388 166 LINE",
"388 837 LINE",
"100 837 LINE",
"100 693 LINE",
"200 693 LINE",
"200 0 LINE",
"419 0 LINE",
"651 210 LINE",
"882 0 LINE",
"1100 0 LINE",
"1100 827 LINE SMOOTH",
"1100 1130 OFFCURVE",
"721 1130 QCURVE SMOOTH",
"530 1130 LINE SMOOTH",
"388 1130 OFFCURVE",
"388 1246 QCURVE SMOOTH",
"388 1440 LINE",
"200 1440 LINE",
"200 1440 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 0 LINE",
"348 0 LINE",
"650 277 LINE",
"952 0 LINE",
"1070 0 LINE",
"1070 827 LINE SMOOTH",
"1070 1130 OFFCURVE",
"721 1130 QCURVE SMOOTH",
"530 1130 LINE SMOOTH",
"348 1130 OFFCURVE",
"348 1246 QCURVE SMOOTH",
"348 1440 LINE",
"230 1440 LINE",
"230 1246 LINE SMOOTH",
"230 1032 OFFCURVE",
"530 1032 QCURVE SMOOTH",
"721 1032 LINE SMOOTH",
"952 1032 OFFCURVE",
"952 827 QCURVE SMOOTH",
"952 134 LINE",
"650 411 LINE",
"348 134 LINE",
"348 837 LINE",
"120 837 LINE",
"120 723 LINE",
"230 723 LINE",
"230 723 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"982 76 LINE",
"650 353 LINE",
"318 76 LINE",
"318 837 LINE",
"140 837 LINE",
"140 779 LINE",
"260 779 LINE",
"260 0 LINE",
"318 0 LINE",
"650 280 LINE",
"982 0 LINE",
"1040 0 LINE",
"1040 827 LINE SMOOTH",
"1040 1130 OFFCURVE",
"721 1130 QCURVE SMOOTH",
"530 1130 LINE SMOOTH",
"318 1130 OFFCURVE",
"318 1246 QCURVE SMOOTH",
"318 1440 LINE",
"260 1440 LINE",
"260 1246 LINE SMOOTH",
"260 1072 OFFCURVE",
"530 1072 QCURVE SMOOTH",
"721 1072 LINE SMOOTH",
"982 1072 OFFCURVE",
"982 827 QCURVE",
"982 827 LINE"
);
}
);
width = 1300;
}
);
note = uni17AF;
unicode = 17AF;
},
{
glyphname = uni17B0;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"781 1160 OFFCURVE",
"650 1036 QCURVE",
"520 1160 OFFCURVE",
"405 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 833 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 833 LINE SMOOTH",
"478 900 OFFCURVE",
"494 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"807 900 QCURVE SMOOTH",
"822 900 OFFCURVE",
"822 833 QCURVE SMOOTH",
"822 -12 LINE",
"110 -231 LINE",
"110 -346 LINE SMOOTH",
"110 -500 OFFCURVE",
"486 -500 QCURVE SMOOTH",
"496 -500 LINE SMOOTH",
"680 -500 OFFCURVE",
"706 -369 QCURVE",
"811 -400 OFFCURVE",
"866 -400 QCURVE SMOOTH",
"1190 -400 OFFCURVE",
"1190 -247 QCURVE SMOOTH",
"1190 833 LINE SMOOTH",
"1190 1160 OFFCURVE",
"897 1160 QCURVE",
"897 1160 LINE"
);
},
{
closed = 1;
nodes = (
"822 -159 LINE",
"822 -217 LINE SMOOTH",
"822 -255 OFFCURVE",
"791 -255 QCURVE SMOOTH",
"760 -255 OFFCURVE",
"670 -207 QCURVE",
"670 -207 LINE"
);
},
{
closed = 1;
nodes = (
"596 -235 LINE",
"596 -299 LINE SMOOTH",
"596 -370 OFFCURVE",
"506 -370 QCURVE SMOOTH",
"448 -370 OFFCURVE",
"418 -312 QCURVE",
"418 -294 LINE",
"418 -294 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"852 -265 OFFCURVE",
"816 -265 QCURVE SMOOTH",
"790 -265 OFFCURVE",
"670 -217 QCURVE",
"852 -169 LINE",
"852 -217 LINE",
"852 -217 LINE"
);
},
{
closed = 1;
nodes = (
"388 -294 LINE",
"596 -235 LINE",
"596 -299 LINE SMOOTH",
"596 -370 OFFCURVE",
"469 -370 QCURVE SMOOTH",
"388 -370 OFFCURVE",
"388 -312 QCURVE",
"388 -312 LINE"
);
},
{
closed = 1;
nodes = (
"1160 833 LINE SMOOTH",
"1160 1130 OFFCURVE",
"877 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"425 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 833 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 833 LINE SMOOTH",
"448 900 OFFCURVE",
"481 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"820 900 QCURVE SMOOTH",
"852 900 OFFCURVE",
"852 833 QCURVE SMOOTH",
"852 -42 LINE",
"140 -231 LINE",
"140 -346 LINE SMOOTH",
"140 -500 OFFCURVE",
"466 -500 QCURVE SMOOTH",
"661 -500 OFFCURVE",
"706 -369 QCURVE",
"812 -400 OFFCURVE",
"866 -400 QCURVE SMOOTH",
"1160 -400 OFFCURVE",
"1160 -247 QCURVE",
"1160 -247 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"790 -295 OFFCURVE",
"670 -257 QCURVE",
"912 -199 LINE",
"912 -247 LINE SMOOTH",
"912 -295 OFFCURVE",
"866 -295 QCURVE",
"866 -295 LINE"
);
},
{
closed = 1;
nodes = (
"388 -324 LINE",
"596 -275 LINE",
"596 -329 LINE SMOOTH",
"596 -400 OFFCURVE",
"469 -400 QCURVE SMOOTH",
"388 -400 OFFCURVE",
"388 -342 QCURVE",
"388 -342 LINE"
);
},
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 853 LINE SMOOTH",
"388 980 OFFCURVE",
"461 980 QCURVE SMOOTH",
"510 980 OFFCURVE",
"591 886 QCURVE SMOOTH",
"618 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"682 855 OFFCURVE",
"709 886 QCURVE SMOOTH",
"791 980 OFFCURVE",
"840 980 QCURVE SMOOTH",
"912 980 OFFCURVE",
"912 853 QCURVE SMOOTH",
"912 -102 LINE",
"200 -261 LINE",
"200 -346 LINE SMOOTH",
"200 -500 OFFCURVE",
"466 -500 QCURVE SMOOTH",
"661 -500 OFFCURVE",
"706 -369 QCURVE",
"812 -400 OFFCURVE",
"866 -400 QCURVE SMOOTH",
"1100 -400 OFFCURVE",
"1100 -247 QCURVE SMOOTH",
"1100 853 LINE SMOOTH",
"1100 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 853 QCURVE",
"200 853 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 -295 OFFCURVE",
"866 -295 QCURVE SMOOTH",
"790 -295 OFFCURVE",
"670 -257 QCURVE",
"952 -199 LINE",
"952 -247 LINE",
"952 -247 LINE"
);
},
{
closed = 1;
nodes = (
"348 -324 LINE",
"596 -275 LINE",
"596 -329 LINE SMOOTH",
"596 -400 OFFCURVE",
"469 -400 QCURVE SMOOTH",
"348 -400 OFFCURVE",
"348 -342 QCURVE",
"348 -342 LINE"
);
},
{
closed = 1;
nodes = (
"1070 853 LINE SMOOTH",
"1070 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 853 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 853 LINE SMOOTH",
"348 1020 OFFCURVE",
"445 1020 QCURVE SMOOTH",
"500 1020 OFFCURVE",
"596 896 QCURVE SMOOTH",
"628 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"672 855 OFFCURVE",
"704 896 QCURVE SMOOTH",
"801 1020 OFFCURVE",
"857 1020 QCURVE SMOOTH",
"952 1020 OFFCURVE",
"952 853 QCURVE SMOOTH",
"952 -102 LINE",
"230 -261 LINE",
"230 -346 LINE SMOOTH",
"230 -500 OFFCURVE",
"466 -500 QCURVE SMOOTH",
"661 -500 OFFCURVE",
"706 -369 QCURVE",
"812 -400 OFFCURVE",
"866 -400 QCURVE SMOOTH",
"1070 -400 OFFCURVE",
"1070 -247 QCURVE",
"1070 -247 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1040 853 LINE SMOOTH",
"1040 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"763 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 853 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 853 LINE SMOOTH",
"318 1072 OFFCURVE",
"445 1072 QCURVE SMOOTH",
"500 1072 OFFCURVE",
"596 954 QCURVE SMOOTH",
"628 915 OFFCURVE",
"650 915 QCURVE SMOOTH",
"673 915 OFFCURVE",
"704 954 QCURVE SMOOTH",
"801 1072 OFFCURVE",
"857 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 853 QCURVE SMOOTH",
"982 -104 LINE",
"260 -261 LINE",
"260 -346 LINE SMOOTH",
"260 -500 OFFCURVE",
"466 -500 QCURVE SMOOTH",
"662 -500 OFFCURVE",
"690 -319 QCURVE",
"792 -400 OFFCURVE",
"866 -400 QCURVE SMOOTH",
"1040 -400 OFFCURVE",
"1040 -247 QCURVE",
"1040 -247 LINE"
);
},
{
closed = 1;
nodes = (
"982 -162 LINE",
"982 -247 LINE SMOOTH",
"982 -342 OFFCURVE",
"866 -342 QCURVE SMOOTH",
"779 -342 OFFCURVE",
"670 -227 QCURVE",
"670 -227 LINE"
);
},
{
closed = 1;
nodes = (
"318 -305 LINE",
"636 -237 LINE",
"636 -299 LINE SMOOTH",
"636 -442 OFFCURVE",
"469 -442 QCURVE SMOOTH",
"318 -442 OFFCURVE",
"318 -342 QCURVE",
"318 -342 LINE"
);
}
);
width = 1300;
}
);
note = uni17B0;
unicode = 17B0;
},
{
glyphname = uni17B1;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"790 1312 LINE SMOOTH",
"931 1312 OFFCURVE",
"972 1142 QCURVE",
"1260 1142 LINE",
"1260 1540 OFFCURVE",
"850 1540 QCURVE SMOOTH",
"380 1540 LINE SMOOTH",
"50 1540 OFFCURVE",
"50 1260 QCURVE SMOOTH",
"50 1217 LINE",
"150 1094 LINE",
"154 1094 LINE",
"452 1206 LINE",
"430 1232 OFFCURVE",
"398 1260 QCURVE",
"398 1312 OFFCURVE",
"460 1312 QCURVE",
"460 1312 LINE"
);
},
{
closed = 1;
nodes = (
"1190 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 813 QCURVE SMOOTH",
"110 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"478 813 LINE",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 813 QCURVE SMOOTH",
"822 614 OFFCURVE",
"510 614 QCURVE SMOOTH",
"110 614 OFFCURVE",
"110 287 QCURVE SMOOTH",
"110 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"679 0 OFFCURVE",
"822 85 QCURVE",
"822 -50 LINE",
"1190 -50 LINE",
"1190 400 LINE",
"822 400 LINE",
"822 317 LINE",
"712 218 OFFCURVE",
"530 218 QCURVE SMOOTH",
"478 218 OFFCURVE",
"478 287 QCURVE SMOOTH",
"478 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1190 396 OFFCURVE",
"1190 813 QCURVE",
"1190 813 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"790 1282 LINE SMOOTH",
"932 1282 OFFCURVE",
"972 1112 QCURVE",
"1240 1112 LINE",
"1240 1480 OFFCURVE",
"850 1480 QCURVE SMOOTH",
"380 1480 LINE SMOOTH",
"70 1480 OFFCURVE",
"70 1230 QCURVE SMOOTH",
"70 1187 LINE",
"170 1064 LINE",
"174 1064 LINE",
"422 1176 LINE",
"400 1202 OFFCURVE",
"368 1230 QCURVE",
"368 1282 OFFCURVE",
"430 1282 QCURVE",
"430 1282 LINE"
);
},
{
closed = 1;
nodes = (
"1160 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 813 QCURVE SMOOTH",
"140 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"448 813 LINE",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 813 QCURVE SMOOTH",
"852 594 OFFCURVE",
"510 594 QCURVE SMOOTH",
"140 594 OFFCURVE",
"140 287 QCURVE SMOOTH",
"140 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"708 0 OFFCURVE",
"852 85 QCURVE",
"852 -50 LINE",
"1160 -50 LINE",
"1160 400 LINE",
"852 400 LINE",
"852 317 LINE",
"742 188 OFFCURVE",
"530 188 QCURVE SMOOTH",
"448 188 OFFCURVE",
"448 287 QCURVE SMOOTH",
"448 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1160 396 OFFCURVE",
"1160 813 QCURVE",
"1160 813 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 813 QCURVE SMOOTH",
"200 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"500 675 LINE",
"500 813 LINE",
"388 813 LINE",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 813 QCURVE SMOOTH",
"912 534 OFFCURVE",
"450 534 QCURVE SMOOTH",
"200 534 OFFCURVE",
"200 287 QCURVE SMOOTH",
"200 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"768 0 OFFCURVE",
"912 85 QCURVE",
"912 -50 LINE",
"1100 -50 LINE",
"1100 400 LINE",
"912 400 LINE",
"912 317 LINE",
"802 138 OFFCURVE",
"530 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 287 QCURVE SMOOTH",
"388 396 OFFCURVE",
"450 396 QCURVE SMOOTH",
"1100 396 OFFCURVE",
"1100 813 QCURVE",
"1100 813 LINE"
);
},
{
closed = 1;
nodes = (
"850 1292 LINE SMOOTH",
"992 1292 OFFCURVE",
"1032 1082 QCURVE",
"1180 1082 LINE",
"1180 1430 OFFCURVE",
"850 1430 QCURVE SMOOTH",
"380 1430 LINE SMOOTH",
"130 1430 OFFCURVE",
"130 1200 QCURVE SMOOTH",
"130 1157 LINE",
"230 1034 LINE",
"234 1034 LINE",
"362 1146 LINE",
"340 1172 OFFCURVE",
"308 1200 QCURVE",
"308 1292 OFFCURVE",
"370 1292 QCURVE",
"370 1292 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"822 98 OFFCURVE",
"600 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 317 QCURVE SMOOTH",
"348 416 OFFCURVE",
"450 416 QCURVE SMOOTH",
"1070 416 OFFCURVE",
"1070 813 QCURVE SMOOTH",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 813 QCURVE SMOOTH",
"230 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 773 LINE",
"424 773 LINE SMOOTH",
"348 773 OFFCURVE",
"348 813 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 813 QCURVE SMOOTH",
"952 514 OFFCURVE",
"450 514 QCURVE SMOOTH",
"230 514 OFFCURVE",
"230 317 QCURVE SMOOTH",
"230 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"952 160 QCURVE",
"952 -50 LINE",
"1070 -50 LINE",
"1070 400 LINE",
"952 400 LINE",
"952 317 LINE",
"952 317 LINE"
);
},
{
closed = 1;
nodes = (
"278 1054 LINE",
"361 1116 LINE",
"298 1170 LINE",
"298 1252 LINE SMOOTH",
"298 1292 OFFCURVE",
"348 1292 QCURVE SMOOTH",
"740 1292 LINE SMOOTH",
"1002 1292 OFFCURVE",
"1002 1157 QCURVE",
"1120 1157 LINE",
"1120 1390 OFFCURVE",
"740 1390 QCURVE SMOOTH",
"348 1390 LINE SMOOTH",
"200 1390 OFFCURVE",
"200 1252 QCURVE SMOOTH",
"200 1127 LINE",
"200 1127 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"200 1119 LINE",
"300 1047 LINE",
"338 1092 LINE",
"258 1149 LINE",
"258 1242 LINE SMOOTH",
"258 1322 OFFCURVE",
"348 1322 QCURVE SMOOTH",
"710 1322 LINE SMOOTH",
"1022 1322 OFFCURVE",
"1022 1107 QCURVE",
"1080 1107 LINE",
"1080 1380 OFFCURVE",
"710 1380 QCURVE SMOOTH",
"348 1380 LINE SMOOTH",
"200 1380 OFFCURVE",
"200 1242 QCURVE",
"200 1242 LINE"
);
},
{
closed = 1;
nodes = (
"318 58 OFFCURVE",
"318 317 QCURVE SMOOTH",
"318 436 OFFCURVE",
"450 436 QCURVE SMOOTH",
"1040 436 OFFCURVE",
"1040 813 QCURVE SMOOTH",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 813 QCURVE SMOOTH",
"260 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 733 LINE",
"424 733 LINE SMOOTH",
"318 733 OFFCURVE",
"318 813 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 813 QCURVE SMOOTH",
"982 494 OFFCURVE",
"450 494 QCURVE SMOOTH",
"260 494 OFFCURVE",
"260 317 QCURVE SMOOTH",
"260 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"982 210 QCURVE",
"982 -50 LINE",
"1040 -50 LINE",
"1040 400 LINE",
"982 400 LINE",
"982 287 LINE",
"822 58 OFFCURVE",
"600 58 QCURVE",
"600 58 LINE"
);
}
);
width = 1300;
}
);
note = uni17B1;
unicode = 17B1;
},
{
glyphname = uni17B2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"822 590 LINE",
"558 486 LINE",
"668 285 LINE",
"787 382 LINE",
"822 352 OFFCURVE",
"822 323 QCURVE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 323 QCURVE SMOOTH",
"478 807 LINE SMOOTH",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"760 932 OFFCURVE",
"956 900 OFFCURVE",
"1024 868 QCURVE",
"1140 1033 LINE",
"1071 1096 OFFCURVE",
"818 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 807 QCURVE SMOOTH",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 323 QCURVE SMOOTH",
"1190 415 OFFCURVE",
"1100 508 QCURVE",
"1190 567 LINE",
"1190 820 LINE",
"680 820 LINE",
"680 612 LINE",
"822 612 LINE",
"822 612 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"668 285 LINE",
"817 382 LINE",
"852 352 OFFCURVE",
"852 323 QCURVE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE SMOOTH",
"448 807 LINE SMOOTH",
"448 932 OFFCURVE",
"625 932 QCURVE SMOOTH",
"855 932 OFFCURVE",
"994 868 QCURVE",
"1110 1033 LINE",
"970 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 323 QCURVE SMOOTH",
"1160 415 OFFCURVE",
"1070 508 QCURVE",
"1160 567 LINE",
"1160 820 LINE",
"680 820 LINE",
"680 642 LINE",
"852 642 LINE",
"852 620 LINE",
"558 456 LINE",
"558 456 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"877 422 LINE",
"912 372 OFFCURVE",
"912 323 QCURVE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 807 LINE SMOOTH",
"388 992 OFFCURVE",
"625 992 QCURVE SMOOTH",
"855 992 OFFCURVE",
"974 918 QCURVE",
"1050 1033 LINE",
"910 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 807 QCURVE SMOOTH",
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 415 OFFCURVE",
"1010 508 QCURVE",
"1100 567 LINE",
"1100 840 LINE",
"680 840 LINE",
"680 702 LINE",
"912 702 LINE",
"912 620 LINE",
"618 436 LINE",
"698 305 LINE",
"698 305 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"698 335 LINE",
"877 452 LINE",
"952 372 OFFCURVE",
"952 323 QCURVE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 807 LINE SMOOTH",
"348 1032 OFFCURVE",
"625 1032 QCURVE SMOOTH",
"855 1032 OFFCURVE",
"994 938 QCURVE",
"1050 1023 LINE",
"910 1130 OFFCURVE",
"625 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 807 QCURVE SMOOTH",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 323 QCURVE SMOOTH",
"1070 415 OFFCURVE",
"980 508 QCURVE",
"1070 567 LINE",
"1070 840 LINE",
"680 840 LINE",
"680 742 LINE",
"952 742 LINE",
"952 620 LINE",
"638 416 LINE",
"638 416 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"916 1072 OFFCURVE",
"968 903 QCURVE",
"1022 931 LINE",
"956 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 807 QCURVE SMOOTH",
"260 323 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 323 QCURVE SMOOTH",
"1040 426 OFFCURVE",
"932 487 QCURVE",
"1040 567 LINE",
"1040 810 LINE",
"680 810 LINE",
"680 752 LINE",
"982 752 LINE",
"982 590 LINE",
"660 384 LINE",
"698 335 LINE",
"877 452 LINE",
"982 392 OFFCURVE",
"982 323 QCURVE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 323 QCURVE SMOOTH",
"318 807 LINE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE",
"650 1072 LINE"
);
}
);
width = 1300;
}
);
note = uni17B2;
unicode = 17B2;
},
{
glyphname = uni17B3;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"260 1540 LINE SMOOTH",
"40 1540 OFFCURVE",
"40 1317 QCURVE SMOOTH",
"40 1217 LINE",
"140 1094 LINE",
"144 1094 LINE",
"422 1206 LINE",
"399 1232 OFFCURVE",
"368 1260 QCURVE",
"368 1312 OFFCURVE",
"400 1312 QCURVE SMOOTH",
"815 1312 LINE",
"994 1137 LINE",
"1260 1212 LINE",
"1216 1504 OFFCURVE",
"1004 1535 QCURVE",
"941 1610 LINE SMOOTH",
"914 1642 OFFCURVE",
"914 1685 QCURVE SMOOTH",
"914 1728 OFFCURVE",
"990 1783 QCURVE",
"736 1850 LINE",
"640 1786 OFFCURVE",
"640 1704 QCURVE SMOOTH",
"640 1622 OFFCURVE",
"701 1540 QCURVE",
"701 1540 LINE"
);
},
{
closed = 1;
nodes = (
"1190 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 813 QCURVE SMOOTH",
"110 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"478 813 LINE",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 813 QCURVE SMOOTH",
"822 614 OFFCURVE",
"510 614 QCURVE SMOOTH",
"110 614 OFFCURVE",
"110 287 QCURVE SMOOTH",
"110 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"679 0 OFFCURVE",
"822 85 QCURVE",
"822 -50 LINE",
"1190 -50 LINE",
"1190 400 LINE",
"822 400 LINE",
"822 317 LINE",
"712 218 OFFCURVE",
"530 218 QCURVE SMOOTH",
"478 218 OFFCURVE",
"478 287 QCURVE SMOOTH",
"478 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1190 396 OFFCURVE",
"1190 813 QCURVE",
"1190 813 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"260 1480 LINE SMOOTH",
"60 1480 OFFCURVE",
"60 1287 QCURVE SMOOTH",
"60 1187 LINE",
"160 1064 LINE",
"164 1064 LINE",
"422 1176 LINE",
"400 1202 OFFCURVE",
"368 1230 QCURVE",
"368 1282 OFFCURVE",
"400 1282 QCURVE SMOOTH",
"815 1282 LINE",
"994 1107 LINE",
"1240 1182 LINE",
"1197 1443 OFFCURVE",
"1004 1475 QCURVE",
"941 1550 LINE SMOOTH",
"914 1582 OFFCURVE",
"914 1625 QCURVE SMOOTH",
"914 1698 OFFCURVE",
"990 1783 QCURVE",
"736 1850 LINE",
"640 1755 OFFCURVE",
"640 1648 QCURVE SMOOTH",
"640 1562 OFFCURVE",
"701 1480 QCURVE",
"701 1480 LINE"
);
},
{
closed = 1;
nodes = (
"1160 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 813 QCURVE SMOOTH",
"140 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"530 675 LINE",
"530 813 LINE",
"448 813 LINE",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 813 QCURVE SMOOTH",
"852 594 OFFCURVE",
"510 594 QCURVE SMOOTH",
"140 594 OFFCURVE",
"140 287 QCURVE SMOOTH",
"140 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"708 0 OFFCURVE",
"852 85 QCURVE",
"852 -50 LINE",
"1160 -50 LINE",
"1160 400 LINE",
"852 400 LINE",
"852 317 LINE",
"742 188 OFFCURVE",
"530 188 QCURVE SMOOTH",
"448 188 OFFCURVE",
"448 287 QCURVE SMOOTH",
"448 396 OFFCURVE",
"510 396 QCURVE SMOOTH",
"1160 396 OFFCURVE",
"1160 813 QCURVE",
"1160 813 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 813 QCURVE SMOOTH",
"200 675 OFFCURVE",
"388 675 QCURVE SMOOTH",
"500 675 LINE",
"500 813 LINE",
"388 813 LINE",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 813 QCURVE SMOOTH",
"912 534 OFFCURVE",
"450 534 QCURVE SMOOTH",
"200 534 OFFCURVE",
"200 287 QCURVE SMOOTH",
"200 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"768 0 OFFCURVE",
"912 85 QCURVE",
"912 -50 LINE",
"1100 -50 LINE",
"1100 400 LINE",
"912 400 LINE",
"912 317 LINE",
"802 138 OFFCURVE",
"530 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 287 QCURVE SMOOTH",
"388 396 OFFCURVE",
"450 396 QCURVE SMOOTH",
"1100 396 OFFCURVE",
"1100 813 QCURVE",
"1100 813 LINE"
);
},
{
closed = 1;
nodes = (
"260 1430 LINE SMOOTH",
"100 1430 OFFCURVE",
"100 1257 QCURVE SMOOTH",
"100 1157 LINE",
"200 1034 LINE",
"204 1034 LINE",
"332 1146 LINE",
"310 1172 OFFCURVE",
"278 1200 QCURVE",
"278 1257 LINE SMOOTH",
"278 1292 OFFCURVE",
"310 1292 QCURVE SMOOTH",
"875 1292 LINE",
"1054 1077 LINE",
"1180 1152 LINE",
"1137 1393 OFFCURVE",
"944 1425 QCURVE",
"881 1500 LINE SMOOTH",
"854 1532 OFFCURVE",
"854 1575 QCURVE SMOOTH",
"854 1648 OFFCURVE",
"930 1753 QCURVE",
"796 1820 LINE",
"700 1705 OFFCURVE",
"700 1598 QCURVE SMOOTH",
"700 1512 OFFCURVE",
"761 1430 QCURVE",
"761 1430 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"822 98 OFFCURVE",
"600 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 317 QCURVE SMOOTH",
"348 416 OFFCURVE",
"450 416 QCURVE SMOOTH",
"1070 416 OFFCURVE",
"1070 813 QCURVE SMOOTH",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 813 QCURVE SMOOTH",
"230 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 773 LINE",
"424 773 LINE SMOOTH",
"348 773 OFFCURVE",
"348 813 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 813 QCURVE SMOOTH",
"952 514 OFFCURVE",
"450 514 QCURVE SMOOTH",
"230 514 OFFCURVE",
"230 317 QCURVE SMOOTH",
"230 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"952 160 QCURVE",
"952 -50 LINE",
"1070 -50 LINE",
"1070 400 LINE",
"952 400 LINE",
"952 317 LINE",
"952 317 LINE"
);
},
{
closed = 1;
nodes = (
"975 1185 LINE SMOOTH",
"1010 1127 OFFCURVE",
"1047 1127 QCURVE SMOOTH",
"1059 1127 OFFCURVE",
"1071 1133 QCURVE SMOOTH",
"1120 1157 LINE",
"1120 1293 OFFCURVE",
"990 1350 QCURVE",
"959 1400 LINE SMOOTH",
"885 1521 OFFCURVE",
"885 1597 QCURVE SMOOTH",
"885 1662 OFFCURVE",
"937 1694 QCURVE",
"876 1795 LINE",
"776 1734 OFFCURVE",
"776 1622 QCURVE SMOOTH",
"776 1523 OFFCURVE",
"855 1384 QCURVE",
"802 1390 OFFCURVE",
"740 1390 QCURVE SMOOTH",
"348 1390 LINE SMOOTH",
"200 1390 OFFCURVE",
"200 1252 QCURVE SMOOTH",
"200 1127 LINE",
"278 1054 LINE",
"361 1116 LINE",
"298 1170 LINE",
"298 1252 LINE SMOOTH",
"298 1292 OFFCURVE",
"348 1292 QCURVE SMOOTH",
"740 1292 LINE SMOOTH",
"863 1292 OFFCURVE",
"928 1262 QCURVE",
"928 1262 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"988 1100 LINE",
"1080 1107 LINE",
"1080 1329 OFFCURVE",
"834 1371 QCURVE",
"780 1454 OFFCURVE",
"780 1524 QCURVE SMOOTH",
"780 1605 OFFCURVE",
"850 1666 QCURVE",
"812 1709 LINE",
"720 1626 OFFCURVE",
"720 1525 QCURVE SMOOTH",
"720 1457 OFFCURVE",
"762 1379 QCURVE",
"745 1380 OFFCURVE",
"710 1380 QCURVE SMOOTH",
"348 1380 LINE SMOOTH",
"200 1380 OFFCURVE",
"200 1242 QCURVE SMOOTH",
"200 1119 LINE",
"300 1047 LINE",
"338 1092 LINE",
"258 1149 LINE",
"258 1242 LINE SMOOTH",
"258 1322 OFFCURVE",
"348 1322 QCURVE SMOOTH",
"710 1322 LINE SMOOTH",
"754 1322 OFFCURVE",
"801 1317 QCURVE",
"822 1286 OFFCURVE",
"854 1251 QCURVE",
"854 1251 LINE"
);
},
{
closed = 1;
nodes = (
"893 1295 LINE",
"998 1254 OFFCURVE",
"1018 1155 QCURVE",
"897 1290 LINE",
"897 1290 LINE"
);
},
{
closed = 1;
nodes = (
"318 58 OFFCURVE",
"318 317 QCURVE SMOOTH",
"318 436 OFFCURVE",
"450 436 QCURVE SMOOTH",
"1040 436 OFFCURVE",
"1040 813 QCURVE SMOOTH",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 813 QCURVE SMOOTH",
"260 675 OFFCURVE",
"424 675 QCURVE SMOOTH",
"500 675 LINE",
"500 733 LINE",
"424 733 LINE SMOOTH",
"318 733 OFFCURVE",
"318 813 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 813 QCURVE SMOOTH",
"982 494 OFFCURVE",
"450 494 QCURVE SMOOTH",
"260 494 OFFCURVE",
"260 317 QCURVE SMOOTH",
"260 0 OFFCURVE",
"600 0 QCURVE SMOOTH",
"817 0 OFFCURVE",
"982 210 QCURVE",
"982 -50 LINE",
"1040 -50 LINE",
"1040 400 LINE",
"982 400 LINE",
"982 287 LINE",
"822 58 OFFCURVE",
"600 58 QCURVE",
"600 58 LINE"
);
}
);
width = 1300;
}
);
note = uni17B3;
unicode = 17B3;
},
{
glyphname = uni17B6;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-210 1160 LINE",
"-210 932 LINE",
"8 932 LINE SMOOTH",
"110 932 OFFCURVE",
"110 807 QCURVE SMOOTH",
"110 0 LINE",
"478 0 LINE",
"478 807 LINE SMOOTH",
"478 1160 OFFCURVE",
"98 1160 QCURVE",
"98 1160 LINE"
);
}
);
width = 588;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 932 LINE",
"38 932 LINE SMOOTH",
"140 932 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 0 LINE",
"448 0 LINE",
"448 807 LINE SMOOTH",
"448 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 992 LINE",
"98 992 LINE SMOOTH",
"200 992 OFFCURVE",
"200 807 QCURVE SMOOTH",
"200 0 LINE",
"388 0 LINE",
"388 807 LINE SMOOTH",
"388 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-240 1130 LINE",
"-240 1032 LINE",
"98 1032 LINE SMOOTH",
"240 1032 OFFCURVE",
"240 807 QCURVE SMOOTH",
"240 0 LINE",
"358 0 LINE",
"358 807 LINE SMOOTH",
"358 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-270 1130 LINE",
"-270 1072 LINE",
"38 1072 LINE SMOOTH",
"270 1072 OFFCURVE",
"270 837 QCURVE SMOOTH",
"270 0 LINE",
"328 0 LINE",
"328 837 LINE SMOOTH",
"328 1130 OFFCURVE",
"38 1130 QCURVE",
"38 1130 LINE"
);
}
);
width = 588;
}
);
note = uni17B6;
unicode = 17B6;
},
{
glyphname = uni17B7;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1140 1320 OFFCURVE",
"-1040 1290 QCURVE",
"-170 1290 LINE",
"-170 1520 LINE",
"-285 1614 OFFCURVE",
"-601 1751 OFFCURVE",
"-740 1760 QCURVE SMOOTH",
"-761 1762 OFFCURVE",
"-799 1762 QCURVE SMOOTH",
"-926 1762 OFFCURVE",
"-1078 1682 OFFCURVE",
"-1140 1560 OFFCURVE",
"-1140 1490 QCURVE",
"-1140 1490 LINE"
);
},
{
closed = 1;
nodes = (
"-660 1580 OFFCURVE",
"-498 1545 OFFCURVE",
"-452 1500 QCURVE",
"-860 1500 LINE",
"-860 1520 OFFCURVE",
"-828 1557 OFFCURVE",
"-772 1580 OFFCURVE",
"-740 1580 QCURVE",
"-740 1580 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1110 1290 OFFCURVE",
"-1010 1290 QCURVE SMOOTH",
"-200 1290 LINE",
"-200 1490 LINE",
"-310 1580 OFFCURVE",
"-450 1655 QCURVE SMOOTH",
"-591 1730 OFFCURVE",
"-740 1730 QCURVE SMOOTH",
"-950 1730 OFFCURVE",
"-1110 1560 OFFCURVE",
"-1110 1460 QCURVE",
"-1110 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-680 1550 OFFCURVE",
"-504 1520 OFFCURVE",
"-452 1470 QCURVE",
"-860 1470 LINE",
"-860 1500 OFFCURVE",
"-790 1550 OFFCURVE",
"-740 1550 QCURVE",
"-740 1550 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1050 1310 OFFCURVE",
"-950 1310 QCURVE SMOOTH",
"-200 1310 LINE",
"-200 1460 LINE",
"-310 1560 OFFCURVE",
"-450 1635 QCURVE SMOOTH",
"-591 1710 OFFCURVE",
"-740 1710 QCURVE SMOOTH",
"-890 1710 OFFCURVE",
"-1050 1560 OFFCURVE",
"-1050 1460 QCURVE",
"-1050 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-680 1580 OFFCURVE",
"-504 1520 OFFCURVE",
"-392 1440 QCURVE",
"-900 1440 LINE",
"-900 1520 OFFCURVE",
"-830 1580 OFFCURVE",
"-740 1580 QCURVE",
"-740 1580 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-1020 1310 OFFCURVE",
"-867 1310 QCURVE SMOOTH",
"-332 1310 LINE SMOOTH",
"-230 1310 OFFCURVE",
"-230 1375 QCURVE SMOOTH",
"-230 1408 LINE SMOOTH",
"-230 1440 OFFCURVE",
"-250 1465 QCURVE SMOOTH",
"-310 1540 OFFCURVE",
"-450 1625 QCURVE SMOOTH",
"-591 1710 OFFCURVE",
"-740 1710 QCURVE SMOOTH",
"-1020 1710 OFFCURVE",
"-1020 1460 QCURVE",
"-1020 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-630 1612 OFFCURVE",
"-507 1546 QCURVE SMOOTH",
"-384 1480 OFFCURVE",
"-332 1408 QCURVE",
"-867 1408 LINE SMOOTH",
"-922 1408 OFFCURVE",
"-922 1460 QCURVE SMOOTH",
"-922 1612 OFFCURVE",
"-740 1612 QCURVE",
"-740 1612 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-1000 1340 OFFCURVE",
"-887 1340 QCURVE SMOOTH",
"-362 1340 LINE SMOOTH",
"-260 1340 OFFCURVE",
"-260 1375 QCURVE SMOOTH",
"-260 1409 OFFCURVE",
"-280 1435 QCURVE SMOOTH",
"-339 1508 OFFCURVE",
"-480 1595 QCURVE SMOOTH",
"-620 1680 OFFCURVE",
"-760 1680 QCURVE SMOOTH",
"-1000 1680 OFFCURVE",
"-1000 1460 QCURVE",
"-1000 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-660 1622 OFFCURVE",
"-537 1556 QCURVE SMOOTH",
"-416 1491 OFFCURVE",
"-332 1398 QCURVE",
"-887 1398 LINE SMOOTH",
"-942 1398 OFFCURVE",
"-942 1460 QCURVE SMOOTH",
"-942 1622 OFFCURVE",
"-760 1622 QCURVE",
"-760 1622 LINE"
);
}
);
width = 0;
}
);
note = uni17B7;
unicode = 17B7;
},
{
glyphname = uni17B8;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-170 1830 LINE",
"-428 1830 LINE",
"-428 1673 LINE",
"-602 1760 OFFCURVE",
"-740 1760 QCURVE SMOOTH",
"-960 1760 OFFCURVE",
"-1140 1607 OFFCURVE",
"-1140 1490 QCURVE SMOOTH",
"-1140 1290 OFFCURVE",
"-1040 1290 QCURVE SMOOTH",
"-170 1290 LINE",
"-170 1290 LINE"
);
},
{
closed = 1;
nodes = (
"-860 1500 LINE",
"-860 1520 OFFCURVE",
"-828 1557 OFFCURVE",
"-772 1580 OFFCURVE",
"-740 1580 QCURVE SMOOTH",
"-660 1580 OFFCURVE",
"-498 1545 OFFCURVE",
"-452 1500 QCURVE",
"-452 1500 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-680 1550 OFFCURVE",
"-504 1520 OFFCURVE",
"-452 1470 QCURVE",
"-860 1470 LINE",
"-860 1500 OFFCURVE",
"-790 1550 OFFCURVE",
"-740 1550 QCURVE",
"-740 1550 LINE"
);
},
{
closed = 1;
nodes = (
"-423 1641 OFFCURVE",
"-450 1655 QCURVE SMOOTH",
"-591 1730 OFFCURVE",
"-740 1730 QCURVE SMOOTH",
"-950 1730 OFFCURVE",
"-1110 1560 OFFCURVE",
"-1110 1460 QCURVE SMOOTH",
"-1110 1290 OFFCURVE",
"-1010 1290 QCURVE SMOOTH",
"-200 1290 LINE",
"-200 1800 LINE",
"-398 1800 LINE",
"-398 1626 LINE",
"-398 1626 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-680 1580 OFFCURVE",
"-504 1520 OFFCURVE",
"-392 1440 QCURVE",
"-900 1440 LINE",
"-900 1520 OFFCURVE",
"-830 1580 OFFCURVE",
"-740 1580 QCURVE",
"-740 1580 LINE"
);
},
{
closed = 1;
nodes = (
"-200 1760 LINE",
"-338 1760 LINE",
"-338 1568 LINE",
"-391 1604 OFFCURVE",
"-450 1635 QCURVE SMOOTH",
"-591 1710 OFFCURVE",
"-740 1710 QCURVE SMOOTH",
"-890 1710 OFFCURVE",
"-1050 1560 OFFCURVE",
"-1050 1460 QCURVE SMOOTH",
"-1050 1310 OFFCURVE",
"-950 1310 QCURVE SMOOTH",
"-200 1310 LINE",
"-200 1310 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-922 1612 OFFCURVE",
"-740 1612 QCURVE SMOOTH",
"-630 1612 OFFCURVE",
"-507 1546 QCURVE SMOOTH",
"-384 1480 OFFCURVE",
"-332 1408 QCURVE",
"-867 1408 LINE SMOOTH",
"-922 1408 OFFCURVE",
"-922 1460 QCURVE",
"-922 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-379 1582 OFFCURVE",
"-450 1625 QCURVE SMOOTH",
"-591 1710 OFFCURVE",
"-740 1710 QCURVE SMOOTH",
"-1020 1710 OFFCURVE",
"-1020 1460 QCURVE SMOOTH",
"-1020 1310 OFFCURVE",
"-867 1310 QCURVE SMOOTH",
"-332 1310 LINE SMOOTH",
"-230 1310 OFFCURVE",
"-230 1375 QCURVE SMOOTH",
"-230 1760 LINE",
"-328 1760 LINE",
"-328 1541 LINE",
"-328 1541 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-318 1760 LINE",
"-318 1466 LINE",
"-378 1533 OFFCURVE",
"-480 1595 QCURVE SMOOTH",
"-620 1680 OFFCURVE",
"-760 1680 QCURVE SMOOTH",
"-1000 1680 OFFCURVE",
"-1000 1460 QCURVE SMOOTH",
"-1000 1340 OFFCURVE",
"-887 1340 QCURVE SMOOTH",
"-362 1340 LINE SMOOTH",
"-260 1340 OFFCURVE",
"-260 1375 QCURVE SMOOTH",
"-260 1760 LINE",
"-260 1760 LINE"
);
},
{
closed = 1;
nodes = (
"-942 1622 OFFCURVE",
"-760 1622 QCURVE SMOOTH",
"-660 1622 OFFCURVE",
"-537 1556 QCURVE SMOOTH",
"-416 1491 OFFCURVE",
"-332 1398 QCURVE",
"-887 1398 LINE SMOOTH",
"-942 1398 OFFCURVE",
"-942 1460 QCURVE",
"-942 1460 LINE"
);
}
);
width = 0;
}
);
note = uni17B8;
unicode = 17B8;
},
{
glyphname = uni17B9;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-205 1547 LINE",
"-196 1561 LINE SMOOTH",
"-170 1605 OFFCURVE",
"-170 1673 QCURVE SMOOTH",
"-170 1880 OFFCURVE",
"-402 1880 QCURVE SMOOTH",
"-455 1880 OFFCURVE",
"-549 1835 OFFCURVE",
"-575 1794 QCURVE SMOOTH",
"-605 1744 LINE",
"-670 1760 OFFCURVE",
"-740 1760 QCURVE SMOOTH",
"-960 1760 OFFCURVE",
"-1140 1607 OFFCURVE",
"-1140 1490 QCURVE SMOOTH",
"-1140 1290 OFFCURVE",
"-1040 1290 QCURVE SMOOTH",
"-170 1290 LINE",
"-170 1520 LINE",
"-170 1520 LINE"
);
},
{
closed = 1;
nodes = (
"-403 1662 OFFCURVE",
"-450 1685 QCURVE SMOOTH",
"-458 1689 LINE",
"-453 1705 OFFCURVE",
"-440 1716 QCURVE SMOOTH",
"-426 1727 OFFCURVE",
"-406 1727 QCURVE SMOOTH",
"-344 1727 OFFCURVE",
"-344 1680 QCURVE SMOOTH",
"-344 1645 OFFCURVE",
"-351 1627 QCURVE",
"-351 1627 LINE"
);
},
{
closed = 1;
nodes = (
"-660 1580 OFFCURVE",
"-498 1545 OFFCURVE",
"-452 1500 QCURVE",
"-860 1500 LINE",
"-860 1520 OFFCURVE",
"-828 1557 OFFCURVE",
"-772 1580 OFFCURVE",
"-740 1580 QCURVE",
"-740 1580 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-680 1550 OFFCURVE",
"-504 1520 OFFCURVE",
"-452 1470 QCURVE",
"-860 1470 LINE",
"-860 1500 OFFCURVE",
"-790 1550 OFFCURVE",
"-740 1550 QCURVE",
"-740 1550 LINE"
);
},
{
closed = 1;
nodes = (
"-230 1524 OFFCURVE",
"-226 1531 QCURVE SMOOTH",
"-200 1578 OFFCURVE",
"-200 1650 QCURVE SMOOTH",
"-200 1850 OFFCURVE",
"-402 1850 QCURVE SMOOTH",
"-453 1850 OFFCURVE",
"-548 1806 OFFCURVE",
"-601 1722 OFFCURVE",
"-605 1714 QCURVE",
"-672 1730 OFFCURVE",
"-740 1730 QCURVE SMOOTH",
"-950 1730 OFFCURVE",
"-1110 1560 OFFCURVE",
"-1110 1460 QCURVE SMOOTH",
"-1110 1290 OFFCURVE",
"-1010 1290 QCURVE SMOOTH",
"-200 1290 LINE",
"-200 1490 LINE",
"-217 1504 OFFCURVE",
"-235 1517 QCURVE",
"-235 1517 LINE"
);
},
{
closed = 1;
nodes = (
"-398 1627 OFFCURVE",
"-450 1655 QCURVE SMOOTH",
"-454 1657 OFFCURVE",
"-458 1659 QCURVE",
"-453 1676 OFFCURVE",
"-440 1686 QCURVE SMOOTH",
"-424 1697 OFFCURVE",
"-402 1697 QCURVE SMOOTH",
"-344 1697 OFFCURVE",
"-344 1650 QCURVE SMOOTH",
"-344 1617 OFFCURVE",
"-351 1597 QCURVE",
"-351 1597 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-680 1570 OFFCURVE",
"-504 1510 OFFCURVE",
"-392 1430 QCURVE",
"-900 1430 LINE",
"-900 1510 OFFCURVE",
"-830 1570 OFFCURVE",
"-740 1570 QCURVE",
"-740 1570 LINE"
);
},
{
closed = 1;
nodes = (
"-232 1491 OFFCURVE",
"-226 1501 QCURVE SMOOTH",
"-200 1548 OFFCURVE",
"-200 1600 QCURVE SMOOTH",
"-200 1652 OFFCURVE",
"-255 1749 OFFCURVE",
"-351 1800 OFFCURVE",
"-402 1800 QCURVE SMOOTH",
"-453 1800 OFFCURVE",
"-549 1749 OFFCURVE",
"-576 1701 QCURVE SMOOTH",
"-582 1690 OFFCURVE",
"-587 1680 QCURVE",
"-662 1700 OFFCURVE",
"-740 1700 QCURVE SMOOTH",
"-890 1700 OFFCURVE",
"-1050 1550 OFFCURVE",
"-1050 1450 QCURVE SMOOTH",
"-1050 1300 OFFCURVE",
"-950 1300 QCURVE SMOOTH",
"-200 1300 LINE",
"-200 1450 LINE",
"-218 1467 OFFCURVE",
"-238 1483 QCURVE",
"-238 1483 LINE"
);
},
{
closed = 1;
nodes = (
"-386 1591 OFFCURVE",
"-450 1625 QCURVE SMOOTH",
"-465 1633 OFFCURVE",
"-480 1640 QCURVE",
"-479 1642 OFFCURVE",
"-478 1644 QCURVE SMOOTH",
"-466 1664 OFFCURVE",
"-424 1687 OFFCURVE",
"-402 1687 QCURVE SMOOTH",
"-379 1687 OFFCURVE",
"-338 1664 OFFCURVE",
"-314 1623 OFFCURVE",
"-314 1600 QCURVE SMOOTH",
"-314 1577 OFFCURVE",
"-325 1557 QCURVE SMOOTH",
"-327 1554 OFFCURVE",
"-329 1551 QCURVE",
"-329 1551 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-485 1700 OFFCURVE",
"-420 1700 QCURVE SMOOTH",
"-328 1700 OFFCURVE",
"-328 1608 QCURVE SMOOTH",
"-328 1573 OFFCURVE",
"-341 1551 QCURVE",
"-388 1587 OFFCURVE",
"-450 1625 QCURVE SMOOTH",
"-477 1641 OFFCURVE",
"-504 1654 QCURVE",
"-504 1654 LINE"
);
},
{
closed = 1;
nodes = (
"-230 1528 OFFCURVE",
"-230 1608 QCURVE SMOOTH",
"-230 1798 OFFCURVE",
"-420 1798 QCURVE SMOOTH",
"-563 1798 OFFCURVE",
"-598 1690 QCURVE",
"-668 1710 OFFCURVE",
"-740 1710 QCURVE SMOOTH",
"-1020 1710 OFFCURVE",
"-1020 1460 QCURVE SMOOTH",
"-1020 1310 OFFCURVE",
"-867 1310 QCURVE SMOOTH",
"-332 1310 LINE SMOOTH",
"-230 1310 OFFCURVE",
"-230 1375 QCURVE SMOOTH",
"-230 1408 LINE SMOOTH",
"-230 1440 OFFCURVE",
"-250 1465 QCURVE SMOOTH",
"-256 1473 OFFCURVE",
"-264 1481 QCURVE",
"-264 1481 LINE"
);
},
{
closed = 1;
nodes = (
"-630 1612 OFFCURVE",
"-507 1546 QCURVE SMOOTH",
"-384 1480 OFFCURVE",
"-332 1408 QCURVE",
"-867 1408 LINE SMOOTH",
"-922 1408 OFFCURVE",
"-922 1460 QCURVE SMOOTH",
"-922 1612 OFFCURVE",
"-740 1612 QCURVE",
"-740 1612 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-260 1517 OFFCURVE",
"-260 1615 QCURVE SMOOTH",
"-260 1785 OFFCURVE",
"-430 1785 QCURVE SMOOTH",
"-581 1785 OFFCURVE",
"-598 1651 QCURVE",
"-680 1680 OFFCURVE",
"-760 1680 QCURVE SMOOTH",
"-1000 1680 OFFCURVE",
"-1000 1460 QCURVE SMOOTH",
"-1000 1340 OFFCURVE",
"-887 1340 QCURVE SMOOTH",
"-362 1340 LINE SMOOTH",
"-260 1340 OFFCURVE",
"-260 1375 QCURVE SMOOTH",
"-260 1409 OFFCURVE",
"-280 1435 QCURVE SMOOTH",
"-302 1461 OFFCURVE",
"-317 1475 QCURVE",
"-317 1475 LINE"
);
},
{
closed = 1;
nodes = (
"-535 1727 OFFCURVE",
"-430 1727 QCURVE SMOOTH",
"-318 1727 OFFCURVE",
"-318 1615 QCURVE SMOOTH",
"-318 1543 OFFCURVE",
"-365 1517 QCURVE",
"-417 1556 OFFCURVE",
"-480 1595 QCURVE SMOOTH",
"-514 1616 OFFCURVE",
"-542 1628 QCURVE",
"-542 1628 LINE"
);
},
{
closed = 1;
nodes = (
"-660 1622 OFFCURVE",
"-537 1556 QCURVE SMOOTH",
"-416 1491 OFFCURVE",
"-332 1398 QCURVE",
"-887 1398 LINE SMOOTH",
"-942 1398 OFFCURVE",
"-942 1460 QCURVE SMOOTH",
"-942 1622 OFFCURVE",
"-760 1622 QCURVE",
"-760 1622 LINE"
);
}
);
width = 0;
}
);
note = uni17B9;
unicode = 17B9;
},
{
glyphname = uni17BA;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-470 1695 LINE",
"-470 1890 LINE",
"-668 1890 LINE",
"-668 1756 LINE",
"-700 1760 OFFCURVE",
"-740 1760 QCURVE SMOOTH",
"-960 1760 OFFCURVE",
"-1140 1607 OFFCURVE",
"-1140 1490 QCURVE SMOOTH",
"-1140 1320 OFFCURVE",
"-1040 1290 QCURVE",
"-170 1290 LINE",
"-170 1830 LINE",
"-398 1830 LINE",
"-398 1656 LINE",
"-432 1676 OFFCURVE",
"-450 1685 QCURVE",
"-450 1685 LINE"
);
},
{
closed = 1;
nodes = (
"-860 1500 LINE",
"-860 1520 OFFCURVE",
"-828 1557 OFFCURVE",
"-772 1580 OFFCURVE",
"-740 1580 QCURVE SMOOTH",
"-660 1580 OFFCURVE",
"-498 1545 OFFCURVE",
"-452 1500 QCURVE",
"-452 1500 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-860 1500 OFFCURVE",
"-790 1550 OFFCURVE",
"-740 1550 QCURVE SMOOTH",
"-680 1550 OFFCURVE",
"-504 1520 OFFCURVE",
"-452 1470 QCURVE",
"-860 1470 LINE",
"-860 1470 LINE"
);
},
{
closed = 1;
nodes = (
"-470 1860 LINE",
"-668 1860 LINE",
"-668 1726 LINE",
"-704 1730 OFFCURVE",
"-740 1730 QCURVE SMOOTH",
"-950 1730 OFFCURVE",
"-1110 1560 OFFCURVE",
"-1110 1460 QCURVE SMOOTH",
"-1110 1290 OFFCURVE",
"-1010 1290 QCURVE SMOOTH",
"-200 1290 LINE",
"-200 1800 LINE",
"-398 1800 LINE",
"-398 1626 LINE",
"-423 1641 OFFCURVE",
"-450 1655 QCURVE SMOOTH",
"-460 1660 OFFCURVE",
"-470 1665 QCURVE",
"-470 1665 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-680 1570 OFFCURVE",
"-504 1510 OFFCURVE",
"-392 1430 QCURVE",
"-900 1430 LINE",
"-900 1510 OFFCURVE",
"-830 1570 OFFCURVE",
"-740 1570 QCURVE",
"-740 1570 LINE"
);
},
{
closed = 1;
nodes = (
"-558 1671 LINE",
"-647 1700 OFFCURVE",
"-740 1700 QCURVE SMOOTH",
"-890 1700 OFFCURVE",
"-1050 1550 OFFCURVE",
"-1050 1450 QCURVE SMOOTH",
"-1050 1300 OFFCURVE",
"-950 1300 QCURVE SMOOTH",
"-200 1300 LINE",
"-200 1750 LINE",
"-338 1750 LINE",
"-338 1558 LINE",
"-378 1584 OFFCURVE",
"-420 1608 QCURVE",
"-420 1800 LINE",
"-558 1800 LINE",
"-558 1800 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-922 1612 OFFCURVE",
"-740 1612 QCURVE SMOOTH",
"-630 1612 OFFCURVE",
"-507 1546 QCURVE SMOOTH",
"-384 1480 OFFCURVE",
"-332 1408 QCURVE",
"-867 1408 LINE SMOOTH",
"-922 1408 OFFCURVE",
"-922 1460 QCURVE",
"-922 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-430 1800 LINE",
"-528 1800 LINE",
"-528 1665 LINE",
"-632 1710 OFFCURVE",
"-740 1710 QCURVE SMOOTH",
"-1020 1710 OFFCURVE",
"-1020 1460 QCURVE SMOOTH",
"-1020 1310 OFFCURVE",
"-867 1310 QCURVE SMOOTH",
"-332 1310 LINE SMOOTH",
"-230 1310 OFFCURVE",
"-230 1375 QCURVE SMOOTH",
"-230 1760 LINE",
"-328 1760 LINE",
"-328 1541 LINE",
"-372 1576 OFFCURVE",
"-430 1613 QCURVE",
"-430 1613 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-440 1790 LINE",
"-498 1790 LINE",
"-498 1606 LINE",
"-631 1680 OFFCURVE",
"-760 1680 QCURVE SMOOTH",
"-1000 1680 OFFCURVE",
"-1000 1460 QCURVE SMOOTH",
"-1000 1340 OFFCURVE",
"-887 1340 QCURVE SMOOTH",
"-362 1340 LINE SMOOTH",
"-260 1340 OFFCURVE",
"-260 1375 QCURVE SMOOTH",
"-260 1760 LINE",
"-318 1760 LINE",
"-318 1466 LINE",
"-368 1520 OFFCURVE",
"-440 1569 QCURVE",
"-440 1569 LINE"
);
},
{
closed = 1;
nodes = (
"-942 1622 OFFCURVE",
"-760 1622 QCURVE SMOOTH",
"-660 1622 OFFCURVE",
"-537 1556 QCURVE SMOOTH",
"-416 1491 OFFCURVE",
"-332 1398 QCURVE",
"-887 1398 LINE SMOOTH",
"-942 1398 OFFCURVE",
"-942 1460 QCURVE",
"-942 1460 LINE"
);
}
);
width = 0;
}
);
note = uni17BA;
unicode = 17BA;
},
{
glyphname = uni17BB;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-110 -70 LINE",
"-553 -70 LINE",
"-553 -230 LINE",
"-478 -230 LINE",
"-478 -500 LINE",
"-110 -500 LINE",
"-110 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-553 -70 LINE",
"-553 -230 LINE",
"-448 -230 LINE",
"-448 -500 LINE",
"-140 -500 LINE",
"-140 -70 LINE",
"-140 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-493 -70 LINE",
"-493 -170 LINE",
"-388 -170 LINE",
"-388 -500 LINE",
"-200 -500 LINE",
"-200 -70 LINE",
"-200 -70 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */\0126 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 34 values pushed */\0120 0 1 0 134 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 0 0 0 5 0 5 17 17 4 7 24 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0126 0 \012WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-473 -70 LINE",
"-473 -170 LINE",
"-348 -170 LINE",
"-348 -500 LINE",
"-230 -500 LINE",
"-230 -70 LINE",
"-230 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-260 -70 LINE",
"-473 -70 LINE",
"-473 -130 LINE",
"-318 -130 LINE",
"-318 -500 LINE",
"-260 -500 LINE",
"-260 -500 LINE"
);
}
);
width = 0;
}
);
note = uni17BB;
unicode = 17BB;
},
{
glyphname = uni17BC;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-582 -70 LINE",
"-910 -70 LINE",
"-910 -290 LINE SMOOTH",
"-910 -500 OFFCURVE",
"-510 -500 QCURVE SMOOTH",
"-506 -500 LINE SMOOTH",
"-110 -500 OFFCURVE",
"-110 -290 QCURVE SMOOTH",
"-110 -70 LINE",
"-438 -70 LINE",
"-438 -290 LINE SMOOTH",
"-438 -340 OFFCURVE",
"-510 -340 QCURVE SMOOTH",
"-582 -340 OFFCURVE",
"-582 -290 QCURVE",
"-582 -290 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-820 -290 LINE SMOOTH",
"-820 -500 OFFCURVE",
"-480 -500 QCURVE SMOOTH",
"-140 -500 OFFCURVE",
"-140 -290 QCURVE SMOOTH",
"-140 -70 LINE",
"-408 -70 LINE",
"-408 -290 LINE SMOOTH",
"-408 -340 OFFCURVE",
"-480 -340 QCURVE SMOOTH",
"-552 -340 OFFCURVE",
"-552 -290 QCURVE SMOOTH",
"-552 -70 LINE",
"-820 -70 LINE",
"-820 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-760 -290 LINE SMOOTH",
"-760 -500 OFFCURVE",
"-480 -500 QCURVE SMOOTH",
"-200 -500 OFFCURVE",
"-200 -290 QCURVE SMOOTH",
"-200 -70 LINE",
"-378 -70 LINE",
"-378 -290 LINE SMOOTH",
"-378 -380 OFFCURVE",
"-480 -380 QCURVE SMOOTH",
"-582 -380 OFFCURVE",
"-582 -290 QCURVE SMOOTH",
"-582 -70 LINE",
"-760 -70 LINE",
"-760 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-730 -290 LINE SMOOTH",
"-730 -500 OFFCURVE",
"-480 -500 QCURVE SMOOTH",
"-230 -500 OFFCURVE",
"-230 -290 QCURVE SMOOTH",
"-230 -70 LINE",
"-348 -70 LINE",
"-348 -290 LINE SMOOTH",
"-348 -400 OFFCURVE",
"-480 -400 QCURVE SMOOTH",
"-612 -400 OFFCURVE",
"-612 -290 QCURVE SMOOTH",
"-612 -70 LINE",
"-730 -70 LINE",
"-730 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-642 -70 LINE",
"-700 -70 LINE",
"-700 -290 LINE SMOOTH",
"-700 -500 OFFCURVE",
"-480 -500 QCURVE SMOOTH",
"-260 -500 OFFCURVE",
"-260 -290 QCURVE SMOOTH",
"-260 -70 LINE",
"-318 -70 LINE",
"-318 -290 LINE SMOOTH",
"-318 -440 OFFCURVE",
"-480 -440 QCURVE SMOOTH",
"-642 -440 OFFCURVE",
"-642 -290 QCURVE",
"-642 -290 LINE"
);
}
);
width = 0;
}
);
note = uni17BC;
unicode = 17BC;
},
{
glyphname = uni17BD;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-960 -70 LINE",
"-960 -500 LINE",
"-610 -500 LINE",
"-535 -400 LINE",
"-460 -500 LINE",
"-110 -500 LINE",
"-110 -70 LINE",
"-438 -70 LINE",
"-438 -300 LINE",
"-535 -200 LINE",
"-632 -300 LINE",
"-632 -70 LINE",
"-632 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-870 -500 LINE",
"-580 -500 LINE",
"-505 -400 LINE",
"-430 -500 LINE",
"-140 -500 LINE",
"-140 -70 LINE",
"-408 -70 LINE",
"-408 -330 LINE",
"-505 -230 LINE",
"-602 -330 LINE",
"-602 -70 LINE",
"-870 -70 LINE",
"-870 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-810 -500 LINE",
"-610 -500 LINE",
"-505 -370 LINE",
"-400 -500 LINE",
"-200 -500 LINE",
"-200 -70 LINE",
"-378 -70 LINE",
"-378 -360 LINE",
"-505 -230 LINE",
"-632 -360 LINE",
"-632 -70 LINE",
"-810 -70 LINE",
"-810 -70 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */\0126 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 35 values pushed */\0129 4 3 2 4 2 0 1 76 1 1 0 2 2 0 87 1 1 0 0 2 95 3 1 2 0 2 79 18 17 20 16 4 7 26 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0126 0 \012WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-780 -500 LINE",
"-640 -500 LINE",
"-505 -370 LINE",
"-370 -500 LINE",
"-230 -500 LINE",
"-230 -70 LINE",
"-348 -70 LINE",
"-348 -390 LINE",
"-505 -230 LINE",
"-662 -390 LINE",
"-662 -70 LINE",
"-780 -70 LINE",
"-780 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-750 -70 LINE",
"-750 -500 LINE",
"-680 -500 LINE",
"-505 -350 LINE",
"-330 -500 LINE",
"-260 -500 LINE",
"-260 -70 LINE",
"-318 -70 LINE",
"-318 -440 LINE",
"-505 -280 LINE",
"-692 -440 LINE",
"-692 -70 LINE",
"-692 -70 LINE"
);
}
);
width = 0;
}
);
note = uni17BD;
unicode = 17BD;
},
{
glyphname = uni17BE;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-170 1830 LINE",
"-428 1830 LINE",
"-428 1673 LINE",
"-602 1760 OFFCURVE",
"-740 1760 QCURVE SMOOTH",
"-960 1760 OFFCURVE",
"-1140 1607 OFFCURVE",
"-1140 1490 QCURVE SMOOTH",
"-1140 1290 OFFCURVE",
"-1040 1290 QCURVE SMOOTH",
"-170 1290 LINE",
"-170 1290 LINE"
);
},
{
closed = 1;
nodes = (
"-860 1500 LINE",
"-860 1520 OFFCURVE",
"-828 1557 OFFCURVE",
"-772 1580 OFFCURVE",
"-740 1580 QCURVE SMOOTH",
"-660 1580 OFFCURVE",
"-498 1545 OFFCURVE",
"-452 1500 QCURVE",
"-452 1500 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-680 1550 OFFCURVE",
"-504 1520 OFFCURVE",
"-452 1470 QCURVE",
"-860 1470 LINE",
"-860 1500 OFFCURVE",
"-790 1550 OFFCURVE",
"-740 1550 QCURVE",
"-740 1550 LINE"
);
},
{
closed = 1;
nodes = (
"-423 1641 OFFCURVE",
"-450 1655 QCURVE SMOOTH",
"-591 1730 OFFCURVE",
"-740 1730 QCURVE SMOOTH",
"-950 1730 OFFCURVE",
"-1110 1560 OFFCURVE",
"-1110 1460 QCURVE SMOOTH",
"-1110 1290 OFFCURVE",
"-1010 1290 QCURVE SMOOTH",
"-200 1290 LINE",
"-200 1800 LINE",
"-398 1800 LINE",
"-398 1626 LINE",
"-398 1626 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-680 1570 OFFCURVE",
"-504 1510 OFFCURVE",
"-392 1430 QCURVE",
"-900 1430 LINE",
"-900 1510 OFFCURVE",
"-830 1570 OFFCURVE",
"-740 1570 QCURVE",
"-740 1570 LINE"
);
},
{
closed = 1;
nodes = (
"-200 1750 LINE",
"-338 1750 LINE",
"-338 1558 LINE",
"-391 1594 OFFCURVE",
"-450 1625 QCURVE SMOOTH",
"-591 1700 OFFCURVE",
"-740 1700 QCURVE SMOOTH",
"-890 1700 OFFCURVE",
"-1050 1550 OFFCURVE",
"-1050 1450 QCURVE SMOOTH",
"-1050 1300 OFFCURVE",
"-950 1300 QCURVE SMOOTH",
"-200 1300 LINE",
"-200 1300 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-922 1612 OFFCURVE",
"-740 1612 QCURVE SMOOTH",
"-630 1612 OFFCURVE",
"-507 1546 QCURVE SMOOTH",
"-384 1480 OFFCURVE",
"-332 1408 QCURVE",
"-867 1408 LINE SMOOTH",
"-922 1408 OFFCURVE",
"-922 1460 QCURVE",
"-922 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-379 1582 OFFCURVE",
"-450 1625 QCURVE SMOOTH",
"-591 1710 OFFCURVE",
"-740 1710 QCURVE SMOOTH",
"-1020 1710 OFFCURVE",
"-1020 1460 QCURVE SMOOTH",
"-1020 1310 OFFCURVE",
"-867 1310 QCURVE SMOOTH",
"-332 1310 LINE SMOOTH",
"-230 1310 OFFCURVE",
"-230 1375 QCURVE SMOOTH",
"-230 1760 LINE",
"-328 1760 LINE",
"-328 1541 LINE",
"-328 1541 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-318 1760 LINE",
"-318 1466 LINE",
"-378 1533 OFFCURVE",
"-480 1595 QCURVE SMOOTH",
"-620 1680 OFFCURVE",
"-760 1680 QCURVE SMOOTH",
"-1000 1680 OFFCURVE",
"-1000 1460 QCURVE SMOOTH",
"-1000 1340 OFFCURVE",
"-887 1340 QCURVE SMOOTH",
"-362 1340 LINE SMOOTH",
"-260 1340 OFFCURVE",
"-260 1375 QCURVE SMOOTH",
"-260 1760 LINE",
"-260 1760 LINE"
);
},
{
closed = 1;
nodes = (
"-942 1622 OFFCURVE",
"-760 1622 QCURVE SMOOTH",
"-660 1622 OFFCURVE",
"-537 1556 QCURVE SMOOTH",
"-416 1491 OFFCURVE",
"-332 1398 QCURVE",
"-887 1398 LINE SMOOTH",
"-942 1398 OFFCURVE",
"-942 1460 QCURVE",
"-942 1460 LINE"
);
}
);
width = 0;
}
);
note = uni17BE;
unicode = 17BE;
},
{
glyphname = uni17BF;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"330 1830 LINE",
"102 1830 LINE",
"102 1656 LINE",
"68 1676 OFFCURVE",
"50 1685 QCURVE SMOOTH",
"30 1695 LINE",
"30 1890 LINE",
"-168 1890 LINE",
"-168 1756 LINE",
"-200 1760 OFFCURVE",
"-240 1760 QCURVE SMOOTH",
"-424 1760 OFFCURVE",
"-580 1606 OFFCURVE",
"-580 1490 QCURVE SMOOTH",
"-580 1290 OFFCURVE",
"-480 1290 QCURVE SMOOTH",
"57 1290 LINE",
"110 1255 OFFCURVE",
"110 1110 QCURVE SMOOTH",
"110 -260 LINE SMOOTH",
"110 -320 OFFCURVE",
"0 -320 QCURVE SMOOTH",
"-110 -320 OFFCURVE",
"-110 -260 QCURVE SMOOTH",
"-110 -200 LINE",
"-60 -200 LINE",
"-60 -50 LINE",
"-478 -50 LINE",
"-478 -260 LINE SMOOTH",
"-478 -500 OFFCURVE",
"0 -500 QCURVE SMOOTH",
"478 -500 OFFCURVE",
"478 -260 QCURVE SMOOTH",
"478 1110 LINE SMOOTH",
"478 1282 OFFCURVE",
"330 1361 QCURVE",
"330 1361 LINE"
);
},
{
closed = 1;
nodes = (
"-300 1500 LINE",
"-300 1533 OFFCURVE",
"-268 1580 OFFCURVE",
"-240 1580 QCURVE SMOOTH",
"-160 1580 OFFCURVE",
"2 1545 OFFCURVE",
"48 1500 QCURVE",
"48 1500 LINE"
);
}
);
width = 588;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-300 1500 OFFCURVE",
"-270 1550 OFFCURVE",
"-240 1550 QCURVE SMOOTH",
"-180 1550 OFFCURVE",
"-4 1520 OFFCURVE",
"48 1470 QCURVE",
"-300 1470 LINE",
"-300 1470 LINE"
);
},
{
closed = 1;
nodes = (
"300 1800 LINE",
"102 1800 LINE",
"102 1626 LINE",
"77 1641 OFFCURVE",
"50 1655 QCURVE SMOOTH",
"40 1660 OFFCURVE",
"30 1665 QCURVE",
"30 1860 LINE",
"-168 1860 LINE",
"-168 1726 LINE",
"-204 1730 OFFCURVE",
"-240 1730 QCURVE SMOOTH",
"-410 1730 OFFCURVE",
"-550 1560 OFFCURVE",
"-550 1460 QCURVE SMOOTH",
"-550 1290 OFFCURVE",
"-450 1290 QCURVE SMOOTH",
"57 1290 LINE",
"140 1256 OFFCURVE",
"140 1110 QCURVE SMOOTH",
"140 -260 LINE SMOOTH",
"140 -320 OFFCURVE",
"0 -320 QCURVE SMOOTH",
"-140 -320 OFFCURVE",
"-140 -260 QCURVE SMOOTH",
"-140 -200 LINE",
"-90 -200 LINE",
"-90 -50 LINE",
"-448 -50 LINE",
"-448 -260 LINE SMOOTH",
"-448 -500 OFFCURVE",
"0 -500 QCURVE SMOOTH",
"448 -500 OFFCURVE",
"448 -260 QCURVE SMOOTH",
"448 1110 LINE SMOOTH",
"448 1282 OFFCURVE",
"300 1361 QCURVE",
"300 1361 LINE"
);
}
);
width = 588;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-370 1430 LINE",
"-370 1510 OFFCURVE",
"-350 1570 OFFCURVE",
"-310 1570 QCURVE SMOOTH",
"-280 1570 OFFCURVE",
"-104 1510 OFFCURVE",
"8 1430 QCURVE",
"8 1430 LINE"
);
},
{
closed = 1;
nodes = (
"200 1750 LINE",
"62 1750 LINE",
"62 1558 LINE",
"22 1584 OFFCURVE",
"-20 1608 QCURVE",
"-20 1800 LINE",
"-158 1800 LINE",
"-158 1671 LINE",
"-247 1700 OFFCURVE",
"-310 1700 QCURVE SMOOTH",
"-410 1700 OFFCURVE",
"-520 1550 OFFCURVE",
"-520 1450 QCURVE SMOOTH",
"-520 1300 OFFCURVE",
"-420 1300 QCURVE SMOOTH",
"0 1300 LINE SMOOTH",
"200 1300 OFFCURVE",
"200 1110 QCURVE SMOOTH",
"200 -260 LINE SMOOTH",
"200 -360 OFFCURVE",
"0 -360 QCURVE SMOOTH",
"-200 -360 OFFCURVE",
"-200 -260 QCURVE SMOOTH",
"-200 -180 LINE",
"-150 -180 LINE",
"-150 -70 LINE",
"-388 -70 LINE",
"-388 -260 LINE SMOOTH",
"-388 -500 OFFCURVE",
"0 -500 QCURVE SMOOTH",
"388 -500 OFFCURVE",
"388 -260 QCURVE SMOOTH",
"388 1110 LINE SMOOTH",
"388 1333 OFFCURVE",
"200 1400 QCURVE",
"200 1400 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-342 1612 OFFCURVE",
"-220 1612 QCURVE SMOOTH",
"-140 1612 OFFCURVE",
"-17 1546 QCURVE SMOOTH",
"106 1480 OFFCURVE",
"158 1408 QCURVE",
"-287 1408 LINE SMOOTH",
"-342 1408 OFFCURVE",
"-342 1460 QCURVE",
"-342 1460 LINE"
);
},
{
closed = 1;
nodes = (
"260 1349 OFFCURVE",
"260 1375 QCURVE SMOOTH",
"260 1760 LINE",
"162 1760 LINE",
"162 1541 LINE",
"118 1576 OFFCURVE",
"60 1613 QCURVE",
"60 1800 LINE",
"-38 1800 LINE",
"-38 1665 LINE",
"-142 1710 OFFCURVE",
"-220 1710 QCURVE SMOOTH",
"-440 1710 OFFCURVE",
"-440 1460 QCURVE SMOOTH",
"-440 1310 OFFCURVE",
"-287 1310 QCURVE SMOOTH",
"75 1310 LINE",
"240 1255 OFFCURVE",
"240 1110 QCURVE SMOOTH",
"240 -260 LINE SMOOTH",
"240 -400 OFFCURVE",
"0 -400 QCURVE SMOOTH",
"-240 -400 OFFCURVE",
"-240 -260 QCURVE SMOOTH",
"-240 -140 LINE",
"-150 -140 LINE",
"-150 -50 LINE",
"-358 -50 LINE",
"-358 -260 LINE SMOOTH",
"-358 -500 OFFCURVE",
"0 -500 QCURVE SMOOTH",
"358 -500 OFFCURVE",
"358 -260 QCURVE SMOOTH",
"358 1110 LINE SMOOTH",
"358 1252 OFFCURVE",
"244 1333 QCURVE",
"244 1333 LINE"
);
}
);
width = 588;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"248 1353 OFFCURVE",
"248 1375 QCURVE SMOOTH",
"248 1760 LINE",
"190 1760 LINE",
"190 1466 LINE",
"140 1520 OFFCURVE",
"68 1569 QCURVE",
"68 1790 LINE",
"10 1790 LINE",
"10 1606 LINE",
"-123 1680 OFFCURVE",
"-252 1680 QCURVE SMOOTH",
"-492 1680 OFFCURVE",
"-492 1460 QCURVE SMOOTH",
"-492 1340 OFFCURVE",
"-379 1340 QCURVE SMOOTH",
"106 1340 LINE",
"270 1280 OFFCURVE",
"270 1110 QCURVE SMOOTH",
"270 -260 LINE SMOOTH",
"270 -442 OFFCURVE",
"0 -442 QCURVE SMOOTH",
"-270 -442 OFFCURVE",
"-270 -260 QCURVE SMOOTH",
"-270 -108 LINE",
"-150 -108 LINE",
"-150 -50 LINE",
"-328 -50 LINE",
"-328 -260 LINE SMOOTH",
"-328 -500 OFFCURVE",
"0 -500 QCURVE SMOOTH",
"328 -500 OFFCURVE",
"328 -260 QCURVE SMOOTH",
"328 1110 LINE SMOOTH",
"328 1267 OFFCURVE",
"207 1345 QCURVE",
"207 1345 LINE"
);
},
{
closed = 1;
nodes = (
"-434 1622 OFFCURVE",
"-252 1622 QCURVE SMOOTH",
"-152 1622 OFFCURVE",
"-29 1556 QCURVE SMOOTH",
"92 1491 OFFCURVE",
"176 1398 QCURVE",
"-379 1398 LINE SMOOTH",
"-434 1398 OFFCURVE",
"-434 1460 QCURVE",
"-434 1460 LINE"
);
}
);
width = 588;
}
);
note = uni17BF;
unicode = 17BF;
},
{
glyphname = uni17C0;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-110 1800 LINE",
"-478 1800 LINE",
"-478 1300 LINE",
"-170 1300 LINE",
"-109 1350 OFFCURVE",
"20 1350 QCURVE SMOOTH",
"110 1350 OFFCURVE",
"110 1150 QCURVE SMOOTH",
"110 -260 LINE SMOOTH",
"110 -320 OFFCURVE",
"0 -320 QCURVE SMOOTH",
"-110 -320 OFFCURVE",
"-110 -260 QCURVE SMOOTH",
"-110 -200 LINE",
"-60 -200 LINE",
"-60 -50 LINE",
"-478 -50 LINE",
"-478 -260 LINE SMOOTH",
"-478 -500 OFFCURVE",
"0 -500 QCURVE SMOOTH",
"478 -500 OFFCURVE",
"478 -260 QCURVE SMOOTH",
"478 1150 LINE SMOOTH",
"478 1570 OFFCURVE",
"20 1570 QCURVE SMOOTH",
"-46 1570 OFFCURVE",
"-110 1512 QCURVE",
"-110 1512 LINE"
);
}
);
width = 588;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-448 1300 LINE",
"-200 1300 LINE",
"-140 1350 OFFCURVE",
"20 1350 QCURVE SMOOTH",
"140 1350 OFFCURVE",
"140 1150 QCURVE SMOOTH",
"140 -260 LINE SMOOTH",
"140 -320 OFFCURVE",
"0 -320 QCURVE SMOOTH",
"-140 -320 OFFCURVE",
"-140 -260 QCURVE SMOOTH",
"-140 -200 LINE",
"-90 -200 LINE",
"-90 -50 LINE",
"-448 -50 LINE",
"-448 -260 LINE SMOOTH",
"-448 -500 OFFCURVE",
"0 -500 QCURVE SMOOTH",
"448 -500 OFFCURVE",
"448 -260 QCURVE SMOOTH",
"448 1150 LINE SMOOTH",
"448 1540 OFFCURVE",
"20 1540 QCURVE SMOOTH",
"-75 1540 OFFCURVE",
"-140 1482 QCURVE",
"-140 1800 LINE",
"-448 1800 LINE",
"-448 1800 LINE"
);
}
);
width = 588;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-388 1300 LINE",
"-260 1300 LINE",
"-200 1380 OFFCURVE",
"0 1380 QCURVE SMOOTH",
"200 1380 OFFCURVE",
"200 1150 QCURVE SMOOTH",
"200 -260 LINE SMOOTH",
"200 -360 OFFCURVE",
"0 -360 QCURVE SMOOTH",
"-200 -360 OFFCURVE",
"-200 -260 QCURVE SMOOTH",
"-200 -180 LINE",
"-150 -180 LINE",
"-150 -70 LINE",
"-388 -70 LINE",
"-388 -260 LINE SMOOTH",
"-388 -500 OFFCURVE",
"0 -500 QCURVE SMOOTH",
"388 -500 OFFCURVE",
"388 -260 QCURVE SMOOTH",
"388 1150 LINE SMOOTH",
"388 1510 OFFCURVE",
"0 1510 QCURVE SMOOTH",
"-105 1510 OFFCURVE",
"-200 1452 QCURVE",
"-200 1800 LINE",
"-388 1800 LINE",
"-388 1800 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-358 1300 LINE",
"-260 1300 LINE",
"-220 1410 OFFCURVE",
"0 1410 QCURVE SMOOTH",
"240 1410 OFFCURVE",
"240 1150 QCURVE SMOOTH",
"240 -260 LINE SMOOTH",
"240 -400 OFFCURVE",
"0 -400 QCURVE SMOOTH",
"-240 -400 OFFCURVE",
"-240 -260 QCURVE SMOOTH",
"-240 -148 LINE",
"-150 -148 LINE",
"-150 -50 LINE",
"-358 -50 LINE",
"-358 -260 LINE SMOOTH",
"-358 -500 OFFCURVE",
"0 -500 QCURVE SMOOTH",
"358 -500 OFFCURVE",
"358 -260 QCURVE SMOOTH",
"358 1150 LINE SMOOTH",
"358 1510 OFFCURVE",
"0 1510 QCURVE SMOOTH",
"-125 1510 OFFCURVE",
"-240 1452 QCURVE",
"-240 1800 LINE",
"-358 1800 LINE",
"-358 1800 LINE"
);
}
);
width = 588;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-270 1800 LINE",
"-328 1800 LINE",
"-328 1300 LINE",
"-290 1300 LINE",
"-249 1452 OFFCURVE",
"0 1452 QCURVE SMOOTH",
"270 1452 OFFCURVE",
"270 1150 QCURVE SMOOTH",
"270 -260 LINE SMOOTH",
"270 -442 OFFCURVE",
"0 -442 QCURVE SMOOTH",
"-270 -442 OFFCURVE",
"-270 -260 QCURVE SMOOTH",
"-270 -108 LINE",
"-150 -108 LINE",
"-150 -50 LINE",
"-328 -50 LINE",
"-328 -260 LINE SMOOTH",
"-328 -500 OFFCURVE",
"0 -500 QCURVE SMOOTH",
"328 -500 OFFCURVE",
"328 -260 QCURVE SMOOTH",
"328 1150 LINE SMOOTH",
"328 1510 OFFCURVE",
"0 1510 QCURVE SMOOTH",
"-185 1510 OFFCURVE",
"-270 1422 QCURVE",
"-270 1422 LINE"
);
}
);
width = 588;
}
);
note = uni17C0;
unicode = 17C0;
},
{
glyphname = uni17C1;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"110 704 LINE",
"110 258 LINE SMOOTH",
"110 0 OFFCURVE",
"410 0 QCURVE SMOOTH",
"558 0 LINE",
"558 228 LINE",
"510 228 LINE SMOOTH",
"478 228 OFFCURVE",
"478 258 QCURVE",
"478 258 LINE"
);
}
);
width = 608;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 258 LINE SMOOTH",
"140 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"528 0 LINE",
"528 228 LINE",
"480 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 258 QCURVE",
"448 258 LINE"
);
}
);
width = 608;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 198 LINE SMOOTH",
"200 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"508 0 LINE",
"508 168 LINE",
"420 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 198 QCURVE SMOOTH",
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"478 992 LINE",
"478 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 734 LINE"
);
}
);
width = 608;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 178 LINE SMOOTH",
"230 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"488 0 LINE",
"488 108 LINE",
"420 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 178 QCURVE",
"348 178 LINE"
);
}
);
width = 608;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 714 LINE SMOOTH",
"318 784 OFFCURVE",
"238 841 QCURVE SMOOTH",
"158 897 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"438 1072 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"200 796 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 178 LINE SMOOTH",
"260 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"488 0 LINE",
"488 58 LINE",
"420 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 178 QCURVE",
"318 178 LINE"
);
}
);
width = 608;
}
);
note = uni17C1;
unicode = 17C1;
},
{
glyphname = uni17C2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"267 1670 LINE",
"-30 1670 OFFCURVE",
"-30 1470 QCURVE SMOOTH",
"-30 1467 LINE SMOOTH",
"-30 1230 OFFCURVE",
"261 1230 QCURVE SMOOTH",
"640 1230 OFFCURVE",
"640 1710 QCURVE",
"390 1710 LINE",
"390 1430 OFFCURVE",
"261 1430 QCURVE SMOOTH",
"210 1430 OFFCURVE",
"210 1470 QCURVE SMOOTH",
"210 1500 OFFCURVE",
"267 1500 QCURVE",
"267 1500 LINE"
);
},
{
closed = 1;
nodes = (
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"110 704 LINE",
"110 258 LINE SMOOTH",
"110 0 OFFCURVE",
"410 0 QCURVE SMOOTH",
"558 0 LINE",
"558 228 LINE",
"510 228 LINE SMOOTH",
"478 228 OFFCURVE",
"478 258 QCURVE",
"478 258 LINE"
);
}
);
width = 608;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"267 1640 LINE",
"0 1640 OFFCURVE",
"0 1440 QCURVE SMOOTH",
"0 1230 OFFCURVE",
"261 1230 QCURVE SMOOTH",
"610 1230 OFFCURVE",
"610 1680 QCURVE",
"390 1680 LINE",
"390 1400 OFFCURVE",
"261 1400 QCURVE SMOOTH",
"210 1400 OFFCURVE",
"210 1440 QCURVE SMOOTH",
"210 1470 OFFCURVE",
"267 1470 QCURVE",
"267 1470 LINE"
);
},
{
closed = 1;
nodes = (
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 258 LINE SMOOTH",
"140 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"528 0 LINE",
"528 228 LINE",
"480 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 258 QCURVE",
"448 258 LINE"
);
}
);
width = 608;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"0 1600 OFFCURVE",
"0 1420 QCURVE SMOOTH",
"0 1230 OFFCURVE",
"261 1230 QCURVE SMOOTH",
"580 1230 OFFCURVE",
"580 1680 QCURVE",
"430 1680 LINE",
"430 1360 OFFCURVE",
"261 1360 QCURVE SMOOTH",
"150 1360 OFFCURVE",
"150 1420 QCURVE SMOOTH",
"150 1470 OFFCURVE",
"267 1470 QCURVE",
"267 1600 LINE",
"267 1600 LINE"
);
},
{
closed = 1;
nodes = (
"200 198 LINE SMOOTH",
"200 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"508 0 LINE",
"508 168 LINE",
"420 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 198 QCURVE SMOOTH",
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"478 992 LINE",
"478 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 734 LINE"
);
}
);
width = 608;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"267 1600 LINE",
"20 1600 OFFCURVE",
"20 1420 QCURVE SMOOTH",
"20 1230 OFFCURVE",
"261 1230 QCURVE SMOOTH",
"580 1230 OFFCURVE",
"580 1680 QCURVE",
"480 1680 LINE",
"480 1330 OFFCURVE",
"261 1330 QCURVE SMOOTH",
"120 1330 OFFCURVE",
"120 1420 QCURVE SMOOTH",
"120 1500 OFFCURVE",
"267 1500 QCURVE",
"267 1500 LINE"
);
},
{
closed = 1;
nodes = (
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 178 LINE SMOOTH",
"230 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"488 0 LINE",
"488 108 LINE",
"420 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 178 QCURVE",
"348 178 LINE"
);
}
);
width = 608;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"267 1600 LINE",
"22 1600 OFFCURVE",
"22 1420 QCURVE SMOOTH",
"22 1230 OFFCURVE",
"261 1230 QCURVE SMOOTH",
"568 1230 OFFCURVE",
"568 1680 QCURVE",
"510 1680 LINE",
"510 1288 OFFCURVE",
"261 1288 QCURVE SMOOTH",
"80 1288 OFFCURVE",
"80 1420 QCURVE SMOOTH",
"80 1542 OFFCURVE",
"267 1542 QCURVE",
"267 1542 LINE"
);
},
{
closed = 1;
nodes = (
"318 714 LINE SMOOTH",
"318 784 OFFCURVE",
"238 841 QCURVE SMOOTH",
"158 897 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"438 1072 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"200 796 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 178 LINE SMOOTH",
"260 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"488 0 LINE",
"488 58 LINE",
"420 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 178 QCURVE",
"318 178 LINE"
);
}
);
width = 608;
}
);
note = uni17C2;
unicode = 17C2;
},
{
glyphname = uni17C3;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"20 1440 LINE",
"20 1230 LINE",
"300 1230 LINE SMOOTH",
"610 1230 OFFCURVE",
"610 1482 QCURVE SMOOTH",
"610 1485 LINE SMOOTH",
"609 1740 OFFCURVE",
"340 1740 QCURVE SMOOTH",
"275 1740 OFFCURVE",
"230 1710 QCURVE",
"230 1760 LINE SMOOTH",
"230 1910 OFFCURVE",
"-53 1910 QCURVE SMOOTH",
"-60 1910 LINE",
"-60 1730 LINE",
"-10 1730 OFFCURVE",
"-10 1710 QCURVE SMOOTH",
"-10 1510 LINE",
"230 1510 LINE",
"230 1540 OFFCURVE",
"310 1540 QCURVE SMOOTH",
"360 1540 OFFCURVE",
"360 1485 QCURVE SMOOTH",
"360 1440 OFFCURVE",
"300 1440 QCURVE",
"300 1440 LINE"
);
},
{
closed = 1;
nodes = (
"478 704 LINE SMOOTH",
"478 772 OFFCURVE",
"403 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"110 704 LINE",
"110 258 LINE SMOOTH",
"110 0 OFFCURVE",
"410 0 QCURVE SMOOTH",
"558 0 LINE",
"558 228 LINE",
"510 228 LINE SMOOTH",
"478 228 OFFCURVE",
"478 258 QCURVE",
"478 258 LINE"
);
}
);
width = 608;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"50 1410 LINE",
"50 1230 LINE",
"300 1230 LINE SMOOTH",
"580 1230 OFFCURVE",
"580 1455 QCURVE SMOOTH",
"580 1680 OFFCURVE",
"340 1680 QCURVE SMOOTH",
"275 1680 OFFCURVE",
"230 1650 QCURVE",
"230 1700 LINE SMOOTH",
"230 1850 OFFCURVE",
"-30 1850 QCURVE",
"-30 1670 LINE",
"20 1670 OFFCURVE",
"20 1650 QCURVE SMOOTH",
"20 1480 LINE",
"230 1480 LINE",
"230 1510 OFFCURVE",
"310 1510 QCURVE SMOOTH",
"360 1510 OFFCURVE",
"360 1455 QCURVE SMOOTH",
"360 1410 OFFCURVE",
"300 1410 QCURVE",
"300 1410 LINE"
);
},
{
closed = 1;
nodes = (
"448 704 LINE SMOOTH",
"448 772 OFFCURVE",
"373 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"140 704 LINE",
"140 258 LINE SMOOTH",
"140 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"528 0 LINE",
"528 228 LINE",
"480 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 258 QCURVE",
"448 258 LINE"
);
}
);
width = 608;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"50 1360 LINE",
"50 1230 LINE",
"300 1230 LINE SMOOTH",
"540 1230 OFFCURVE",
"540 1435 QCURVE SMOOTH",
"540 1630 OFFCURVE",
"310 1630 QCURVE SMOOTH",
"255 1630 OFFCURVE",
"200 1600 QCURVE",
"200 1680 LINE SMOOTH",
"200 1830 OFFCURVE",
"0 1830 QCURVE",
"0 1680 LINE",
"50 1680 OFFCURVE",
"50 1630 QCURVE SMOOTH",
"50 1460 LINE",
"200 1460 LINE",
"200 1510 OFFCURVE",
"310 1510 QCURVE SMOOTH",
"390 1510 OFFCURVE",
"390 1435 QCURVE SMOOTH",
"390 1360 OFFCURVE",
"300 1360 QCURVE",
"300 1360 LINE"
);
},
{
closed = 1;
nodes = (
"200 198 LINE SMOOTH",
"200 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"508 0 LINE",
"508 168 LINE",
"420 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 198 QCURVE SMOOTH",
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"478 992 LINE",
"478 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 734 LINE"
);
}
);
width = 608;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"70 1330 LINE",
"70 1230 LINE",
"300 1230 LINE SMOOTH",
"550 1230 OFFCURVE",
"550 1435 QCURVE SMOOTH",
"550 1630 OFFCURVE",
"310 1630 QCURVE SMOOTH",
"255 1630 OFFCURVE",
"170 1600 QCURVE",
"170 1680 LINE SMOOTH",
"170 1830 OFFCURVE",
"20 1830 QCURVE",
"20 1740 LINE",
"70 1740 OFFCURVE",
"70 1680 QCURVE SMOOTH",
"70 1460 LINE",
"170 1460 LINE",
"170 1540 OFFCURVE",
"310 1540 QCURVE SMOOTH",
"430 1540 OFFCURVE",
"430 1435 QCURVE SMOOTH",
"430 1330 OFFCURVE",
"300 1330 QCURVE",
"300 1330 LINE"
);
},
{
closed = 1;
nodes = (
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 178 LINE SMOOTH",
"230 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"488 0 LINE",
"488 108 LINE",
"420 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 178 QCURVE",
"348 178 LINE"
);
}
);
width = 608;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"60 1288 LINE",
"60 1230 LINE",
"290 1230 LINE SMOOTH",
"528 1230 OFFCURVE",
"528 1435 QCURVE SMOOTH",
"528 1630 OFFCURVE",
"300 1630 QCURVE SMOOTH",
"216 1630 OFFCURVE",
"160 1580 QCURVE",
"160 1680 LINE SMOOTH",
"160 1830 OFFCURVE",
"10 1830 QCURVE",
"10 1772 LINE",
"102 1772 OFFCURVE",
"102 1680 QCURVE SMOOTH",
"102 1460 LINE",
"160 1460 LINE",
"160 1572 OFFCURVE",
"300 1572 QCURVE SMOOTH",
"470 1572 OFFCURVE",
"470 1435 QCURVE SMOOTH",
"470 1288 OFFCURVE",
"290 1288 QCURVE",
"290 1288 LINE"
);
},
{
closed = 1;
nodes = (
"318 714 LINE SMOOTH",
"318 784 OFFCURVE",
"238 841 QCURVE SMOOTH",
"158 897 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"438 1072 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"200 796 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 178 LINE SMOOTH",
"260 0 OFFCURVE",
"420 0 QCURVE SMOOTH",
"488 0 LINE",
"488 58 LINE",
"420 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 178 QCURVE",
"318 178 LINE"
);
}
);
width = 608;
}
);
note = uni17C3;
unicode = 17C3;
},
{
glyphname = uni17C4;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-210 1160 LINE",
"-210 932 LINE",
"8 932 LINE SMOOTH",
"110 932 OFFCURVE",
"110 807 QCURVE SMOOTH",
"110 0 LINE",
"478 0 LINE",
"478 807 LINE SMOOTH",
"478 1160 OFFCURVE",
"98 1160 QCURVE",
"98 1160 LINE"
);
}
);
width = 588;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 932 LINE",
"38 932 LINE SMOOTH",
"140 932 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 0 LINE",
"448 0 LINE",
"448 807 LINE SMOOTH",
"448 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 992 LINE",
"98 992 LINE SMOOTH",
"200 992 OFFCURVE",
"200 807 QCURVE SMOOTH",
"200 0 LINE",
"388 0 LINE",
"388 807 LINE SMOOTH",
"388 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-240 1130 LINE",
"-240 1032 LINE",
"98 1032 LINE SMOOTH",
"240 1032 OFFCURVE",
"240 807 QCURVE SMOOTH",
"240 0 LINE",
"358 0 LINE",
"358 807 LINE SMOOTH",
"358 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-270 1130 LINE",
"-270 1072 LINE",
"38 1072 LINE SMOOTH",
"270 1072 OFFCURVE",
"270 837 QCURVE SMOOTH",
"270 0 LINE",
"328 0 LINE",
"328 837 LINE SMOOTH",
"328 1130 OFFCURVE",
"38 1130 QCURVE",
"38 1130 LINE"
);
}
);
width = 588;
}
);
note = uni17C4;
unicode = 17C4;
},
{
glyphname = uni17C5;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 1161 LINE",
"478 1161 LINE",
"478 1357 LINE SMOOTH",
"478 1474 OFFCURVE",
"428 1610 OFFCURVE",
"286 1680 OFFCURVE",
"148 1680 QCURVE SMOOTH",
"-100 1680 LINE",
"-100 1452 LINE",
"38 1452 LINE SMOOTH",
"110 1452 OFFCURVE",
"110 1357 QCURVE",
"110 1357 LINE"
);
},
{
closed = 1;
nodes = (
"-210 1160 LINE",
"-210 932 LINE",
"8 932 LINE SMOOTH",
"110 932 OFFCURVE",
"110 807 QCURVE SMOOTH",
"110 0 LINE",
"478 0 LINE",
"478 807 LINE SMOOTH",
"478 1160 OFFCURVE",
"98 1160 QCURVE",
"98 1160 LINE"
);
}
);
width = 588;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 932 LINE",
"38 932 LINE SMOOTH",
"140 932 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 0 LINE",
"448 0 LINE",
"448 807 LINE SMOOTH",
"448 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
},
{
closed = 1;
nodes = (
"448 1131 LINE",
"448 1357 LINE SMOOTH",
"448 1680 OFFCURVE",
"98 1680 QCURVE SMOOTH",
"-100 1680 LINE",
"-100 1482 LINE",
"38 1482 LINE SMOOTH",
"140 1482 OFFCURVE",
"140 1357 QCURVE SMOOTH",
"140 1131 LINE",
"140 1131 LINE"
);
}
);
width = 588;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 1129 LINE",
"388 1127 LINE",
"388 1427 LINE SMOOTH",
"388 1528 OFFCURVE",
"286 1640 OFFCURVE",
"128 1640 QCURVE SMOOTH",
"0 1640 LINE",
"0 1502 LINE",
"128 1502 LINE SMOOTH",
"173 1502 OFFCURVE",
"200 1469 OFFCURVE",
"200 1427 QCURVE",
"200 1427 LINE"
);
},
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 992 LINE",
"98 992 LINE SMOOTH",
"200 992 OFFCURVE",
"200 807 QCURVE SMOOTH",
"200 0 LINE",
"388 0 LINE",
"388 807 LINE SMOOTH",
"388 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"240 1129 LINE",
"358 1127 LINE",
"358 1427 LINE SMOOTH",
"358 1640 OFFCURVE",
"128 1640 QCURVE SMOOTH",
"0 1640 LINE",
"0 1542 LINE",
"128 1542 LINE SMOOTH",
"240 1542 OFFCURVE",
"240 1427 QCURVE",
"240 1427 LINE"
);
},
{
closed = 1;
nodes = (
"-240 1130 LINE",
"-240 1032 LINE",
"98 1032 LINE SMOOTH",
"240 1032 OFFCURVE",
"240 807 QCURVE SMOOTH",
"240 0 LINE",
"358 0 LINE",
"358 807 LINE SMOOTH",
"358 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"270 1129 LINE",
"328 1127 LINE",
"328 1427 LINE SMOOTH",
"328 1640 OFFCURVE",
"128 1640 QCURVE SMOOTH",
"0 1640 LINE",
"0 1582 LINE",
"128 1582 LINE SMOOTH",
"270 1582 OFFCURVE",
"270 1427 QCURVE",
"270 1427 LINE"
);
},
{
closed = 1;
nodes = (
"-270 1130 LINE",
"-270 1072 LINE",
"38 1072 LINE SMOOTH",
"270 1072 OFFCURVE",
"270 837 QCURVE SMOOTH",
"270 0 LINE",
"328 0 LINE",
"328 837 LINE SMOOTH",
"328 1130 OFFCURVE",
"38 1130 QCURVE",
"38 1130 LINE"
);
}
);
width = 588;
}
);
note = uni17C5;
unicode = 17C5;
},
{
glyphname = uni17C6;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-960 1785 OFFCURVE",
"-960 1535 QCURVE SMOOTH",
"-960 1285 OFFCURVE",
"-650 1285 QCURVE SMOOTH",
"-340 1285 OFFCURVE",
"-340 1535 QCURVE SMOOTH",
"-340 1785 OFFCURVE",
"-650 1785 QCURVE",
"-650 1785 LINE"
);
},
{
closed = 1;
nodes = (
"-575 1610 OFFCURVE",
"-575 1535 QCURVE SMOOTH",
"-575 1460 OFFCURVE",
"-650 1460 QCURVE SMOOTH",
"-725 1460 OFFCURVE",
"-725 1535 QCURVE SMOOTH",
"-725 1610 OFFCURVE",
"-650 1610 QCURVE",
"-650 1610 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-575 1610 OFFCURVE",
"-575 1535 QCURVE SMOOTH",
"-575 1460 OFFCURVE",
"-650 1460 QCURVE SMOOTH",
"-725 1460 OFFCURVE",
"-725 1535 QCURVE SMOOTH",
"-725 1610 OFFCURVE",
"-650 1610 QCURVE",
"-650 1610 LINE"
);
},
{
closed = 1;
nodes = (
"-900 1785 OFFCURVE",
"-900 1535 QCURVE SMOOTH",
"-900 1285 OFFCURVE",
"-650 1285 QCURVE SMOOTH",
"-400 1285 OFFCURVE",
"-400 1535 QCURVE SMOOTH",
"-400 1785 OFFCURVE",
"-650 1785 QCURVE",
"-650 1785 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-627 1615 OFFCURVE",
"-584 1592 OFFCURVE",
"-560 1548 OFFCURVE",
"-560 1525 QCURVE SMOOTH",
"-560 1502 OFFCURVE",
"-583 1458 OFFCURVE",
"-627 1435 OFFCURVE",
"-650 1435 QCURVE SMOOTH",
"-673 1435 OFFCURVE",
"-716 1458 OFFCURVE",
"-740 1502 OFFCURVE",
"-740 1525 QCURVE SMOOTH",
"-740 1548 OFFCURVE",
"-716 1592 OFFCURVE",
"-673 1615 OFFCURVE",
"-650 1615 QCURVE",
"-650 1615 LINE"
);
},
{
closed = 1;
nodes = (
"-707 1750 OFFCURVE",
"-814 1692 OFFCURVE",
"-875 1584 OFFCURVE",
"-875 1525 QCURVE SMOOTH",
"-875 1466 OFFCURVE",
"-815 1359 OFFCURVE",
"-708 1300 OFFCURVE",
"-650 1300 QCURVE SMOOTH",
"-591 1300 OFFCURVE",
"-484 1359 OFFCURVE",
"-425 1466 OFFCURVE",
"-425 1525 QCURVE SMOOTH",
"-425 1584 OFFCURVE",
"-486 1692 OFFCURVE",
"-593 1750 OFFCURVE",
"-650 1750 QCURVE",
"-650 1750 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-624 1627 OFFCURVE",
"-575 1601 OFFCURVE",
"-548 1551 OFFCURVE",
"-548 1525 QCURVE SMOOTH",
"-548 1499 OFFCURVE",
"-574 1449 OFFCURVE",
"-624 1423 OFFCURVE",
"-650 1423 QCURVE SMOOTH",
"-676 1423 OFFCURVE",
"-725 1449 OFFCURVE",
"-752 1499 OFFCURVE",
"-752 1525 QCURVE SMOOTH",
"-752 1551 OFFCURVE",
"-725 1601 OFFCURVE",
"-676 1627 OFFCURVE",
"-650 1627 QCURVE",
"-650 1627 LINE"
);
},
{
closed = 1;
nodes = (
"-701 1725 OFFCURVE",
"-796 1673 OFFCURVE",
"-850 1577 OFFCURVE",
"-850 1525 QCURVE SMOOTH",
"-850 1473 OFFCURVE",
"-797 1377 OFFCURVE",
"-702 1325 OFFCURVE",
"-650 1325 QCURVE SMOOTH",
"-598 1325 OFFCURVE",
"-502 1377 OFFCURVE",
"-450 1473 OFFCURVE",
"-450 1525 QCURVE SMOOTH",
"-450 1577 OFFCURVE",
"-504 1673 OFFCURVE",
"-599 1725 OFFCURVE",
"-650 1725 QCURVE",
"-650 1725 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-702 1725 OFFCURVE",
"-797 1672 OFFCURVE",
"-823 1625 QCURVE SMOOTH",
"-850 1577 OFFCURVE",
"-850 1525 QCURVE SMOOTH",
"-850 1472 OFFCURVE",
"-796 1377 OFFCURVE",
"-750 1351 QCURVE SMOOTH",
"-701 1325 OFFCURVE",
"-650 1325 QCURVE SMOOTH",
"-597 1325 OFFCURVE",
"-502 1378 OFFCURVE",
"-476 1425 QCURVE SMOOTH",
"-450 1474 OFFCURVE",
"-450 1525 QCURVE SMOOTH",
"-450 1578 OFFCURVE",
"-505 1673 OFFCURVE",
"-552 1699 QCURVE SMOOTH",
"-599 1725 OFFCURVE",
"-650 1725 QCURVE",
"-650 1725 LINE"
);
},
{
closed = 1;
nodes = (
"-612 1667 OFFCURVE",
"-545 1630 OFFCURVE",
"-527 1596 QCURVE SMOOTH",
"-508 1562 OFFCURVE",
"-508 1525 QCURVE SMOOTH",
"-508 1487 OFFCURVE",
"-545 1418 OFFCURVE",
"-579 1401 QCURVE SMOOTH",
"-613 1383 OFFCURVE",
"-650 1383 QCURVE SMOOTH",
"-688 1383 OFFCURVE",
"-755 1420 OFFCURVE",
"-773 1454 QCURVE SMOOTH",
"-792 1488 OFFCURVE",
"-792 1525 QCURVE SMOOTH",
"-792 1562 OFFCURVE",
"-753 1631 OFFCURVE",
"-720 1649 QCURVE SMOOTH",
"-686 1667 OFFCURVE",
"-650 1667 QCURVE",
"-650 1667 LINE"
);
}
);
width = 0;
}
);
note = uni17C6;
unicode = 17C6;
},
{
glyphname = uni17C7;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"70 1160 OFFCURVE",
"70 910 QCURVE SMOOTH",
"70 660 OFFCURVE",
"380 660 QCURVE SMOOTH",
"690 660 OFFCURVE",
"690 910 QCURVE SMOOTH",
"690 1160 OFFCURVE",
"380 1160 QCURVE",
"380 1160 LINE"
);
},
{
closed = 1;
nodes = (
"455 985 OFFCURVE",
"455 910 QCURVE SMOOTH",
"455 835 OFFCURVE",
"380 835 QCURVE SMOOTH",
"305 835 OFFCURVE",
"305 910 QCURVE SMOOTH",
"305 985 OFFCURVE",
"380 985 QCURVE",
"380 985 LINE"
);
},
{
closed = 1;
nodes = (
"70 500 OFFCURVE",
"70 250 QCURVE SMOOTH",
"70 0 OFFCURVE",
"380 0 QCURVE SMOOTH",
"690 0 OFFCURVE",
"690 250 QCURVE SMOOTH",
"690 500 OFFCURVE",
"380 500 QCURVE",
"380 500 LINE"
);
},
{
closed = 1;
nodes = (
"455 325 OFFCURVE",
"455 250 QCURVE SMOOTH",
"455 175 OFFCURVE",
"380 175 QCURVE SMOOTH",
"305 175 OFFCURVE",
"305 250 QCURVE SMOOTH",
"305 325 OFFCURVE",
"380 325 QCURVE",
"380 325 LINE"
);
}
);
width = 750;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"435 325 OFFCURVE",
"435 250 QCURVE SMOOTH",
"435 175 OFFCURVE",
"360 175 QCURVE SMOOTH",
"285 175 OFFCURVE",
"285 250 QCURVE SMOOTH",
"285 325 OFFCURVE",
"360 325 QCURVE",
"360 325 LINE"
);
},
{
closed = 1;
nodes = (
"110 500 OFFCURVE",
"110 250 QCURVE SMOOTH",
"110 0 OFFCURVE",
"360 0 QCURVE SMOOTH",
"610 0 OFFCURVE",
"610 250 QCURVE SMOOTH",
"610 500 OFFCURVE",
"360 500 QCURVE",
"360 500 LINE"
);
},
{
closed = 1;
nodes = (
"435 955 OFFCURVE",
"435 880 QCURVE SMOOTH",
"435 805 OFFCURVE",
"360 805 QCURVE SMOOTH",
"285 805 OFFCURVE",
"285 880 QCURVE SMOOTH",
"285 955 OFFCURVE",
"360 955 QCURVE",
"360 955 LINE"
);
},
{
closed = 1;
nodes = (
"110 1130 OFFCURVE",
"110 880 QCURVE SMOOTH",
"110 630 OFFCURVE",
"360 630 QCURVE SMOOTH",
"610 630 OFFCURVE",
"610 880 QCURVE SMOOTH",
"610 1130 OFFCURVE",
"360 1130 QCURVE",
"360 1130 LINE"
);
}
);
width = 750;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"398 315 OFFCURVE",
"441 292 OFFCURVE",
"465 248 OFFCURVE",
"465 225 QCURVE SMOOTH",
"465 202 OFFCURVE",
"442 158 OFFCURVE",
"398 135 OFFCURVE",
"375 135 QCURVE SMOOTH",
"352 135 OFFCURVE",
"309 158 OFFCURVE",
"285 202 OFFCURVE",
"285 225 QCURVE SMOOTH",
"285 248 OFFCURVE",
"309 292 OFFCURVE",
"352 315 OFFCURVE",
"375 315 QCURVE",
"375 315 LINE"
);
},
{
closed = 1;
nodes = (
"318 450 OFFCURVE",
"211 392 OFFCURVE",
"150 284 OFFCURVE",
"150 225 QCURVE SMOOTH",
"150 166 OFFCURVE",
"210 59 OFFCURVE",
"317 0 OFFCURVE",
"375 0 QCURVE SMOOTH",
"434 0 OFFCURVE",
"541 59 OFFCURVE",
"600 166 OFFCURVE",
"600 225 QCURVE SMOOTH",
"600 284 OFFCURVE",
"539 392 OFFCURVE",
"432 450 OFFCURVE",
"375 450 QCURVE",
"375 450 LINE"
);
},
{
closed = 1;
nodes = (
"398 995 OFFCURVE",
"441 972 OFFCURVE",
"465 928 OFFCURVE",
"465 905 QCURVE SMOOTH",
"465 882 OFFCURVE",
"442 838 OFFCURVE",
"398 815 OFFCURVE",
"375 815 QCURVE SMOOTH",
"352 815 OFFCURVE",
"309 838 OFFCURVE",
"285 882 OFFCURVE",
"285 905 QCURVE SMOOTH",
"285 928 OFFCURVE",
"309 972 OFFCURVE",
"352 995 OFFCURVE",
"375 995 QCURVE",
"375 995 LINE"
);
},
{
closed = 1;
nodes = (
"318 1130 OFFCURVE",
"211 1072 OFFCURVE",
"150 964 OFFCURVE",
"150 905 QCURVE SMOOTH",
"150 846 OFFCURVE",
"210 739 OFFCURVE",
"317 680 OFFCURVE",
"375 680 QCURVE SMOOTH",
"434 680 OFFCURVE",
"541 739 OFFCURVE",
"600 846 OFFCURVE",
"600 905 QCURVE SMOOTH",
"600 964 OFFCURVE",
"539 1072 OFFCURVE",
"432 1130 OFFCURVE",
"375 1130 QCURVE",
"375 1130 LINE"
);
}
);
width = 750;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"401 302 OFFCURVE",
"450 276 OFFCURVE",
"477 226 OFFCURVE",
"477 200 QCURVE SMOOTH",
"477 174 OFFCURVE",
"451 124 OFFCURVE",
"401 98 OFFCURVE",
"375 98 QCURVE SMOOTH",
"349 98 OFFCURVE",
"300 124 OFFCURVE",
"273 174 OFFCURVE",
"273 200 QCURVE SMOOTH",
"273 226 OFFCURVE",
"300 276 OFFCURVE",
"349 302 OFFCURVE",
"375 302 QCURVE",
"375 302 LINE"
);
},
{
closed = 1;
nodes = (
"324 400 OFFCURVE",
"229 348 OFFCURVE",
"175 252 OFFCURVE",
"175 200 QCURVE SMOOTH",
"175 148 OFFCURVE",
"228 52 OFFCURVE",
"323 0 OFFCURVE",
"375 0 QCURVE SMOOTH",
"427 0 OFFCURVE",
"523 52 OFFCURVE",
"575 148 OFFCURVE",
"575 200 QCURVE SMOOTH",
"575 252 OFFCURVE",
"521 348 OFFCURVE",
"426 400 OFFCURVE",
"375 400 QCURVE",
"375 400 LINE"
);
},
{
closed = 1;
nodes = (
"401 1032 OFFCURVE",
"450 1006 OFFCURVE",
"477 956 OFFCURVE",
"477 930 QCURVE SMOOTH",
"477 904 OFFCURVE",
"451 854 OFFCURVE",
"401 828 OFFCURVE",
"375 828 QCURVE SMOOTH",
"349 828 OFFCURVE",
"300 854 OFFCURVE",
"273 904 OFFCURVE",
"273 930 QCURVE SMOOTH",
"273 956 OFFCURVE",
"300 1006 OFFCURVE",
"349 1032 OFFCURVE",
"375 1032 QCURVE",
"375 1032 LINE"
);
},
{
closed = 1;
nodes = (
"324 1130 OFFCURVE",
"229 1078 OFFCURVE",
"175 982 OFFCURVE",
"175 930 QCURVE SMOOTH",
"175 878 OFFCURVE",
"228 782 OFFCURVE",
"323 730 OFFCURVE",
"375 730 QCURVE SMOOTH",
"427 730 OFFCURVE",
"523 782 OFFCURVE",
"575 878 OFFCURVE",
"575 930 QCURVE SMOOTH",
"575 982 OFFCURVE",
"521 1078 OFFCURVE",
"426 1130 OFFCURVE",
"375 1130 QCURVE",
"375 1130 LINE"
);
}
);
width = 750;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"323 1130 OFFCURVE",
"228 1077 OFFCURVE",
"202 1030 QCURVE SMOOTH",
"175 982 OFFCURVE",
"175 930 QCURVE SMOOTH",
"175 877 OFFCURVE",
"229 782 OFFCURVE",
"276 756 QCURVE SMOOTH",
"323 730 OFFCURVE",
"375 730 QCURVE SMOOTH",
"428 730 OFFCURVE",
"523 783 OFFCURVE",
"549 830 QCURVE SMOOTH",
"575 879 OFFCURVE",
"575 930 QCURVE SMOOTH",
"575 983 OFFCURVE",
"521 1078 OFFCURVE",
"474 1104 QCURVE SMOOTH",
"425 1130 OFFCURVE",
"375 1130 QCURVE",
"375 1130 LINE"
);
},
{
closed = 1;
nodes = (
"413 1072 OFFCURVE",
"480 1035 OFFCURVE",
"498 1001 QCURVE SMOOTH",
"517 967 OFFCURVE",
"517 930 QCURVE SMOOTH",
"517 892 OFFCURVE",
"480 823 OFFCURVE",
"446 806 QCURVE SMOOTH",
"411 788 OFFCURVE",
"375 788 QCURVE SMOOTH",
"337 788 OFFCURVE",
"270 825 OFFCURVE",
"252 859 QCURVE SMOOTH",
"233 893 OFFCURVE",
"233 930 QCURVE SMOOTH",
"233 967 OFFCURVE",
"272 1036 OFFCURVE",
"305 1054 QCURVE SMOOTH",
"340 1072 OFFCURVE",
"375 1072 QCURVE",
"375 1072 LINE"
);
},
{
closed = 1;
nodes = (
"323 400 OFFCURVE",
"228 347 OFFCURVE",
"202 300 QCURVE SMOOTH",
"175 252 OFFCURVE",
"175 200 QCURVE SMOOTH",
"175 147 OFFCURVE",
"229 52 OFFCURVE",
"276 26 QCURVE SMOOTH",
"323 0 OFFCURVE",
"375 0 QCURVE SMOOTH",
"428 0 OFFCURVE",
"523 53 OFFCURVE",
"549 100 QCURVE SMOOTH",
"575 149 OFFCURVE",
"575 200 QCURVE SMOOTH",
"575 253 OFFCURVE",
"521 348 OFFCURVE",
"474 374 QCURVE SMOOTH",
"425 400 OFFCURVE",
"375 400 QCURVE",
"375 400 LINE"
);
},
{
closed = 1;
nodes = (
"413 342 OFFCURVE",
"480 305 OFFCURVE",
"498 271 QCURVE SMOOTH",
"517 237 OFFCURVE",
"517 200 QCURVE SMOOTH",
"517 162 OFFCURVE",
"480 93 OFFCURVE",
"446 76 QCURVE SMOOTH",
"412 58 OFFCURVE",
"375 58 QCURVE SMOOTH",
"337 58 OFFCURVE",
"270 95 OFFCURVE",
"252 129 QCURVE SMOOTH",
"233 163 OFFCURVE",
"233 200 QCURVE SMOOTH",
"233 237 OFFCURVE",
"272 306 OFFCURVE",
"305 324 QCURVE SMOOTH",
"340 342 OFFCURVE",
"375 342 QCURVE",
"375 342 LINE"
);
}
);
width = 750;
}
);
note = uni17C7;
unicode = 17C7;
},
{
glyphname = uni17C8;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"65 1045 OFFCURVE",
"65 890 QCURVE SMOOTH",
"65 735 OFFCURVE",
"250 735 QCURVE SMOOTH",
"435 735 OFFCURVE",
"435 890 QCURVE SMOOTH",
"435 1045 OFFCURVE",
"250 1045 QCURVE",
"250 1045 LINE"
);
},
{
closed = 1;
nodes = (
"65 385 OFFCURVE",
"65 230 QCURVE SMOOTH",
"65 75 OFFCURVE",
"250 75 QCURVE SMOOTH",
"435 75 OFFCURVE",
"435 230 QCURVE SMOOTH",
"435 385 OFFCURVE",
"250 385 QCURVE",
"250 385 LINE"
);
}
);
width = 500;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"75 385 OFFCURVE",
"75 230 QCURVE SMOOTH",
"75 75 OFFCURVE",
"230 75 QCURVE SMOOTH",
"385 75 OFFCURVE",
"385 230 QCURVE SMOOTH",
"385 385 OFFCURVE",
"230 385 QCURVE",
"230 385 LINE"
);
},
{
closed = 1;
nodes = (
"75 1015 OFFCURVE",
"75 860 QCURVE SMOOTH",
"75 705 OFFCURVE",
"230 705 QCURVE SMOOTH",
"385 705 OFFCURVE",
"385 860 QCURVE SMOOTH",
"385 1015 OFFCURVE",
"230 1015 QCURVE",
"230 1015 LINE"
);
}
);
width = 500;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"224 245 OFFCURVE",
"177 219 OFFCURVE",
"150 171 OFFCURVE",
"150 145 QCURVE SMOOTH",
"150 119 OFFCURVE",
"177 71 OFFCURVE",
"224 45 OFFCURVE",
"250 45 QCURVE SMOOTH",
"276 45 OFFCURVE",
"324 71 OFFCURVE",
"350 119 OFFCURVE",
"350 145 QCURVE SMOOTH",
"350 171 OFFCURVE",
"323 219 OFFCURVE",
"276 245 OFFCURVE",
"250 245 QCURVE",
"250 245 LINE"
);
},
{
closed = 1;
nodes = (
"224 995 OFFCURVE",
"177 969 OFFCURVE",
"150 921 OFFCURVE",
"150 895 QCURVE SMOOTH",
"150 869 OFFCURVE",
"177 821 OFFCURVE",
"224 795 OFFCURVE",
"250 795 QCURVE SMOOTH",
"276 795 OFFCURVE",
"324 821 OFFCURVE",
"350 869 OFFCURVE",
"350 895 QCURVE SMOOTH",
"350 921 OFFCURVE",
"323 969 OFFCURVE",
"276 995 OFFCURVE",
"250 995 QCURVE",
"250 995 LINE"
);
}
);
width = 500;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"231 220 OFFCURVE",
"195 201 OFFCURVE",
"175 165 OFFCURVE",
"175 145 QCURVE SMOOTH",
"175 126 OFFCURVE",
"195 90 OFFCURVE",
"231 70 OFFCURVE",
"250 70 QCURVE SMOOTH",
"270 70 OFFCURVE",
"306 90 OFFCURVE",
"325 126 OFFCURVE",
"325 145 QCURVE SMOOTH",
"325 165 OFFCURVE",
"305 201 OFFCURVE",
"270 220 OFFCURVE",
"250 220 QCURVE",
"250 220 LINE"
);
},
{
closed = 1;
nodes = (
"231 970 OFFCURVE",
"195 951 OFFCURVE",
"175 915 OFFCURVE",
"175 895 QCURVE SMOOTH",
"175 876 OFFCURVE",
"195 840 OFFCURVE",
"231 820 OFFCURVE",
"250 820 QCURVE SMOOTH",
"270 820 OFFCURVE",
"306 840 OFFCURVE",
"325 876 OFFCURVE",
"325 895 QCURVE SMOOTH",
"325 915 OFFCURVE",
"305 951 OFFCURVE",
"270 970 OFFCURVE",
"250 970 QCURVE",
"250 970 LINE"
);
}
);
width = 500;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"230 940 OFFCURVE",
"204 915 OFFCURVE",
"204 897 QCURVE SMOOTH",
"204 878 OFFCURVE",
"230 852 OFFCURVE",
"248 852 QCURVE SMOOTH",
"266 852 OFFCURVE",
"292 878 OFFCURVE",
"292 897 QCURVE SMOOTH",
"292 915 OFFCURVE",
"266 940 OFFCURVE",
"248 940 QCURVE",
"248 940 LINE"
);
},
{
closed = 1;
nodes = (
"232 189 OFFCURVE",
"206 164 OFFCURVE",
"206 145 QCURVE SMOOTH",
"206 128 OFFCURVE",
"233 101 OFFCURVE",
"250 101 QCURVE SMOOTH",
"269 101 OFFCURVE",
"294 127 OFFCURVE",
"294 145 QCURVE SMOOTH",
"294 164 OFFCURVE",
"268 189 OFFCURVE",
"250 189 QCURVE",
"250 189 LINE"
);
}
);
width = 500;
}
);
note = uni17C8;
unicode = 17C8;
},
{
glyphname = uni17C9;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1000 1300 LINE",
"-710 1300 LINE",
"-710 1700 LINE",
"-1000 1700 LINE",
"-1000 1700 LINE"
);
},
{
closed = 1;
nodes = (
"-590 1300 LINE",
"-300 1300 LINE",
"-300 1700 LINE",
"-590 1700 LINE",
"-590 1700 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-710 1300 LINE",
"-710 1700 LINE",
"-960 1700 LINE",
"-960 1300 LINE",
"-960 1300 LINE"
);
},
{
closed = 1;
nodes = (
"-340 1300 LINE",
"-340 1700 LINE",
"-590 1700 LINE",
"-590 1300 LINE",
"-590 1300 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-730 1300 LINE",
"-730 1700 LINE",
"-880 1700 LINE",
"-880 1300 LINE",
"-880 1300 LINE"
);
},
{
closed = 1;
nodes = (
"-420 1300 LINE",
"-420 1700 LINE",
"-570 1700 LINE",
"-570 1300 LINE",
"-570 1300 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */\0126 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 39 values pushed */\0122 1 0 1 1 0 87 2 1 0 0 1 95 5 3 4 3 1 0 1 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 7 23 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0126 0 \012WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-756 1300 LINE",
"-756 1700 LINE",
"-854 1700 LINE",
"-854 1300 LINE",
"-854 1300 LINE"
);
},
{
closed = 1;
nodes = (
"-446 1300 LINE",
"-446 1700 LINE",
"-544 1700 LINE",
"-544 1300 LINE",
"-544 1300 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-834 1300 LINE",
"-776 1300 LINE",
"-776 1700 LINE",
"-834 1700 LINE",
"-834 1700 LINE"
);
},
{
closed = 1;
nodes = (
"-524 1300 LINE",
"-466 1300 LINE",
"-466 1700 LINE",
"-524 1700 LINE",
"-524 1700 LINE"
);
}
);
width = 0;
}
);
note = uni17C9;
unicode = 17C9;
},
{
glyphname = uni17CA;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1190 1220 LINE",
"-110 1220 LINE",
"-110 1470 LINE",
"-542 1470 LINE",
"-650 1340 LINE",
"-757 1470 LINE",
"-1190 1470 LINE",
"-1190 1470 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-140 1220 LINE",
"-140 1430 LINE",
"-542 1430 LINE",
"-650 1300 LINE",
"-757 1430 LINE",
"-1160 1430 LINE",
"-1160 1220 LINE",
"-1160 1220 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-200 1250 LINE",
"-200 1400 LINE",
"-572 1400 LINE",
"-650 1300 LINE",
"-727 1400 LINE",
"-1100 1400 LINE",
"-1100 1250 LINE",
"-1100 1250 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */\0126 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 36 values pushed */\0123 1 2 0 1 76 1 1 0 2 2 0 87 1 1 0 0 2 95 3 1 2 0 2 79 0 0 0 6 0 6 18 17 4 7 24 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0126 0 \012WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-230 1276 LINE",
"-230 1374 LINE",
"-572 1374 LINE",
"-650 1309 LINE",
"-727 1374 LINE",
"-1070 1374 LINE",
"-1070 1276 LINE",
"-1070 1276 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-1040 1296 LINE",
"-260 1296 LINE",
"-260 1354 LINE",
"-578 1354 LINE",
"-650 1316 LINE",
"-722 1354 LINE",
"-1040 1354 LINE",
"-1040 1354 LINE"
);
}
);
width = 0;
}
);
note = uni17CA;
unicode = 17CA;
},
{
glyphname = uni17CB;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-815 1300 LINE",
"-485 1300 LINE",
"-485 1700 LINE",
"-815 1700 LINE",
"-815 1700 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-515 1300 LINE",
"-515 1700 LINE",
"-785 1700 LINE",
"-785 1300 LINE",
"-785 1300 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-575 1300 LINE",
"-575 1700 LINE",
"-725 1700 LINE",
"-725 1300 LINE",
"-725 1300 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */\0126 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 27 values pushed */\0120 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 3 0 3 17 3 7 23 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0126 0 \012WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-601 1300 LINE",
"-601 1700 LINE",
"-699 1700 LINE",
"-699 1300 LINE",
"-699 1300 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-679 1300 LINE",
"-621 1300 LINE",
"-621 1700 LINE",
"-679 1700 LINE",
"-679 1700 LINE"
);
}
);
width = 0;
}
);
note = uni17CB;
unicode = 17CB;
},
{
glyphname = uni17CC;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-906 1309 LINE",
"-734 1416 OFFCURVE",
"-666 1421 QCURVE SMOOTH",
"-659 1422 OFFCURVE",
"-645 1422 QCURVE SMOOTH",
"-591 1422 OFFCURVE",
"-543 1405 QCURVE SMOOTH",
"-486 1385 OFFCURVE",
"-419 1300 QCURVE",
"-220 1411 LINE",
"-308 1510 OFFCURVE",
"-391 1529 QCURVE SMOOTH",
"-455 1543 OFFCURVE",
"-508 1543 QCURVE SMOOTH",
"-521 1543 OFFCURVE",
"-547 1541 QCURVE",
"-448 1637 OFFCURVE",
"-414 1767 QCURVE",
"-638 1860 LINE",
"-682 1751 OFFCURVE",
"-904 1564 OFFCURVE",
"-1080 1476 QCURVE",
"-1080 1476 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-888 1309 LINE",
"-727 1417 OFFCURVE",
"-665 1421 QCURVE SMOOTH",
"-655 1422 OFFCURVE",
"-645 1422 QCURVE SMOOTH",
"-594 1422 OFFCURVE",
"-550 1405 QCURVE SMOOTH",
"-498 1385 OFFCURVE",
"-435 1300 QCURVE",
"-250 1411 LINE",
"-331 1509 OFFCURVE",
"-409 1529 QCURVE SMOOTH",
"-466 1543 OFFCURVE",
"-518 1543 QCURVE SMOOTH",
"-536 1543 OFFCURVE",
"-554 1541 QCURVE",
"-462 1637 OFFCURVE",
"-430 1767 QCURVE",
"-639 1860 LINE",
"-682 1747 OFFCURVE",
"-895 1560 OFFCURVE",
"-1050 1476 QCURVE",
"-1050 1476 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-923 1309 LINE",
"-857 1373 OFFCURVE",
"-800 1400 QCURVE SMOOTH",
"-762 1417 OFFCURVE",
"-693 1417 QCURVE SMOOTH",
"-659 1417 OFFCURVE",
"-617 1413 QCURVE SMOOTH",
"-491 1400 OFFCURVE",
"-410 1300 QCURVE",
"-295 1391 LINE",
"-376 1489 OFFCURVE",
"-472 1510 QCURVE SMOOTH",
"-538 1525 OFFCURVE",
"-594 1525 QCURVE SMOOTH",
"-620 1525 OFFCURVE",
"-645 1521 QCURVE",
"-594 1571 OFFCURVE",
"-539 1651 OFFCURVE",
"-495 1767 QCURVE",
"-616 1806 LINE",
"-647 1712 OFFCURVE",
"-850 1500 OFFCURVE",
"-1005 1416 QCURVE",
"-1005 1416 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-953 1329 LINE",
"-822 1417 OFFCURVE",
"-679 1443 OFFCURVE",
"-617 1443 QCURVE SMOOTH",
"-451 1443 OFFCURVE",
"-370 1320 QCURVE",
"-295 1391 LINE",
"-376 1489 OFFCURVE",
"-472 1510 QCURVE SMOOTH",
"-538 1525 OFFCURVE",
"-624 1525 QCURVE SMOOTH",
"-660 1525 OFFCURVE",
"-685 1521 QCURVE",
"-634 1571 OFFCURVE",
"-569 1661 OFFCURVE",
"-525 1777 QCURVE",
"-606 1806 LINE",
"-632 1709 OFFCURVE",
"-838 1492 OFFCURVE",
"-995 1406 QCURVE",
"-995 1406 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-953 1329 LINE",
"-851 1397 OFFCURVE",
"-766 1447 OFFCURVE",
"-686 1467 OFFCURVE",
"-622 1467 QCURVE SMOOTH",
"-529 1467 OFFCURVE",
"-384 1417 OFFCURVE",
"-346 1360 QCURVE",
"-295 1391 LINE",
"-334 1438 OFFCURVE",
"-433 1499 OFFCURVE",
"-483 1510 QCURVE SMOOTH",
"-549 1525 OFFCURVE",
"-624 1525 QCURVE SMOOTH",
"-662 1525 OFFCURVE",
"-685 1521 QCURVE",
"-644 1561 OFFCURVE",
"-600 1615 OFFCURVE",
"-554 1702 OFFCURVE",
"-525 1777 QCURVE",
"-576 1786 LINE",
"-593 1722 OFFCURVE",
"-709 1569 OFFCURVE",
"-883 1422 OFFCURVE",
"-985 1366 QCURVE",
"-985 1366 LINE"
);
}
);
width = 0;
}
);
note = uni17CC;
unicode = 17CC;
},
{
glyphname = uni17CD;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-792 1550 OFFCURVE",
"-703 1550 QCURVE SMOOTH",
"-561 1550 LINE SMOOTH",
"-160 1550 OFFCURVE",
"-160 1860 QCURVE",
"-487 1860 LINE",
"-487 1760 OFFCURVE",
"-561 1760 QCURVE SMOOTH",
"-703 1760 LINE SMOOTH",
"-1120 1760 OFFCURVE",
"-1120 1510 QCURVE SMOOTH",
"-1120 1280 OFFCURVE",
"-752 1280 QCURVE",
"-752 1470 LINE",
"-792 1470 OFFCURVE",
"-792 1510 QCURVE",
"-792 1510 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-822 1520 OFFCURVE",
"-703 1520 QCURVE SMOOTH",
"-561 1520 LINE SMOOTH",
"-190 1520 OFFCURVE",
"-190 1800 QCURVE",
"-457 1800 LINE",
"-457 1700 OFFCURVE",
"-561 1700 QCURVE SMOOTH",
"-703 1700 LINE SMOOTH",
"-1090 1700 OFFCURVE",
"-1090 1480 QCURVE SMOOTH",
"-1090 1280 OFFCURVE",
"-752 1280 QCURVE",
"-752 1440 LINE",
"-822 1440 OFFCURVE",
"-822 1480 QCURVE",
"-822 1480 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-902 1520 OFFCURVE",
"-783 1520 QCURVE SMOOTH",
"-561 1520 LINE SMOOTH",
"-250 1520 OFFCURVE",
"-250 1800 QCURVE",
"-397 1800 LINE",
"-397 1650 OFFCURVE",
"-561 1650 QCURVE SMOOTH",
"-783 1650 LINE SMOOTH",
"-1050 1650 OFFCURVE",
"-1050 1455 QCURVE SMOOTH",
"-1050 1300 OFFCURVE",
"-807 1300 QCURVE SMOOTH",
"-742 1300 LINE",
"-742 1410 LINE",
"-807 1410 LINE SMOOTH",
"-902 1410 OFFCURVE",
"-902 1455 QCURVE",
"-902 1455 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-882 1540 OFFCURVE",
"-753 1540 QCURVE SMOOTH",
"-561 1540 LINE SMOOTH",
"-250 1540 OFFCURVE",
"-250 1800 QCURVE",
"-348 1800 LINE",
"-348 1638 OFFCURVE",
"-561 1638 QCURVE SMOOTH",
"-753 1638 LINE SMOOTH",
"-990 1638 OFFCURVE",
"-990 1469 QCURVE SMOOTH",
"-990 1300 OFFCURVE",
"-777 1300 QCURVE SMOOTH",
"-712 1300 LINE",
"-712 1398 LINE",
"-777 1398 LINE SMOOTH",
"-882 1398 OFFCURVE",
"-882 1469 QCURVE",
"-882 1469 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-902 1570 OFFCURVE",
"-753 1570 QCURVE SMOOTH",
"-561 1570 LINE SMOOTH",
"-260 1570 OFFCURVE",
"-260 1800 QCURVE",
"-318 1800 LINE",
"-318 1628 OFFCURVE",
"-561 1628 QCURVE SMOOTH",
"-753 1628 LINE SMOOTH",
"-960 1628 OFFCURVE",
"-960 1469 QCURVE SMOOTH",
"-960 1310 OFFCURVE",
"-777 1310 QCURVE SMOOTH",
"-712 1310 LINE",
"-712 1368 LINE",
"-777 1368 LINE SMOOTH",
"-902 1368 OFFCURVE",
"-902 1469 QCURVE",
"-902 1469 LINE"
);
}
);
width = 0;
}
);
note = uni17CD;
unicode = 17CD;
},
{
glyphname = uni17CE;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-485 1688 LINE",
"-485 1829 LINE",
"-815 1829 LINE",
"-815 1688 LINE",
"-955 1688 LINE",
"-955 1441 LINE",
"-815 1441 LINE",
"-815 1300 LINE",
"-485 1300 LINE",
"-485 1441 LINE",
"-345 1441 LINE",
"-345 1688 LINE",
"-345 1688 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-515 1799 LINE",
"-785 1799 LINE",
"-785 1658 LINE",
"-925 1658 LINE",
"-925 1441 LINE",
"-785 1441 LINE",
"-785 1300 LINE",
"-515 1300 LINE",
"-515 1441 LINE",
"-375 1441 LINE",
"-375 1658 LINE",
"-515 1658 LINE",
"-515 1658 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-575 1799 LINE",
"-725 1799 LINE",
"-725 1618 LINE",
"-925 1618 LINE",
"-925 1481 LINE",
"-725 1481 LINE",
"-725 1300 LINE",
"-575 1300 LINE",
"-575 1481 LINE",
"-375 1481 LINE",
"-375 1618 LINE",
"-575 1618 LINE",
"-575 1618 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */\0126 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 35 values pushed */\0120 5 0 2 5 87 4 1 0 3 1 1 2 0 1 103 0 5 5 2 95 0 2 5 2 79 17 17 17 17 17 16 6 7 28 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0126 0 \012WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-595 1799 LINE",
"-705 1799 LINE",
"-705 1598 LINE",
"-925 1598 LINE",
"-925 1501 LINE",
"-705 1501 LINE",
"-705 1300 LINE",
"-595 1300 LINE",
"-595 1501 LINE",
"-375 1501 LINE",
"-375 1598 LINE",
"-595 1598 LINE",
"-595 1598 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-621 1579 LINE",
"-621 1799 LINE",
"-679 1799 LINE",
"-679 1579 LINE",
"-925 1579 LINE",
"-925 1521 LINE",
"-679 1521 LINE",
"-679 1300 LINE",
"-621 1300 LINE",
"-621 1521 LINE",
"-375 1521 LINE",
"-375 1579 LINE",
"-375 1579 LINE"
);
}
);
width = 0;
}
);
note = uni17CE;
unicode = 17CE;
},
{
glyphname = uni17CF;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1140 1280 LINE",
"-779 1280 LINE",
"-779 1281 LINE",
"-778 1280 LINE",
"-651 1343 LINE",
"-520 1280 LINE",
"-160 1280 LINE",
"-160 1522 LINE",
"-490 1522 LINE",
"-490 1454 LINE",
"-650 1537 LINE",
"-809 1455 LINE",
"-809 1512 LINE SMOOTH",
"-809 1578 OFFCURVE",
"-740 1578 QCURVE SMOOTH",
"-610 1578 LINE SMOOTH",
"-160 1578 OFFCURVE",
"-160 1880 QCURVE",
"-490 1880 LINE",
"-490 1879 LINE SMOOTH",
"-490 1784 OFFCURVE",
"-610 1784 QCURVE SMOOTH",
"-740 1784 LINE SMOOTH",
"-1140 1784 OFFCURVE",
"-1140 1512 QCURVE",
"-1140 1512 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1110 1280 LINE",
"-809 1280 LINE",
"-809 1281 LINE",
"-808 1280 LINE",
"-651 1343 LINE",
"-490 1280 LINE",
"-190 1280 LINE",
"-190 1492 LINE",
"-460 1492 LINE",
"-460 1424 LINE",
"-650 1507 LINE",
"-839 1425 LINE",
"-839 1482 LINE SMOOTH",
"-839 1548 OFFCURVE",
"-740 1548 QCURVE SMOOTH",
"-610 1548 LINE SMOOTH",
"-190 1548 OFFCURVE",
"-190 1820 QCURVE",
"-460 1820 LINE",
"-460 1724 OFFCURVE",
"-610 1724 QCURVE SMOOTH",
"-740 1724 LINE SMOOTH",
"-1110 1724 OFFCURVE",
"-1110 1482 QCURVE",
"-1110 1482 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1050 1300 LINE",
"-869 1300 LINE",
"-869 1301 LINE",
"-868 1300 LINE",
"-651 1393 LINE",
"-430 1300 LINE",
"-250 1300 LINE",
"-250 1512 LINE",
"-400 1512 LINE",
"-400 1414 LINE",
"-650 1527 LINE",
"-899 1415 LINE",
"-899 1502 LINE SMOOTH",
"-899 1588 OFFCURVE",
"-800 1588 QCURVE SMOOTH",
"-610 1588 LINE SMOOTH",
"-250 1588 OFFCURVE",
"-250 1800 QCURVE",
"-400 1800 LINE",
"-400 1704 OFFCURVE",
"-610 1704 QCURVE SMOOTH",
"-800 1704 LINE SMOOTH",
"-1050 1704 OFFCURVE",
"-1050 1502 QCURVE",
"-1050 1502 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-1020 1300 LINE",
"-922 1300 LINE",
"-651 1443 LINE",
"-378 1300 LINE",
"-280 1300 LINE",
"-280 1512 LINE",
"-378 1512 LINE",
"-378 1394 LINE",
"-650 1537 LINE",
"-922 1395 LINE",
"-922 1502 LINE SMOOTH",
"-922 1598 OFFCURVE",
"-800 1598 QCURVE SMOOTH",
"-610 1598 LINE SMOOTH",
"-280 1598 OFFCURVE",
"-280 1800 QCURVE",
"-378 1800 LINE",
"-378 1696 OFFCURVE",
"-610 1696 QCURVE SMOOTH",
"-800 1696 LINE SMOOTH",
"-1020 1696 OFFCURVE",
"-1020 1502 QCURVE",
"-1020 1502 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-990 1300 LINE",
"-932 1300 LINE",
"-651 1453 LINE",
"-368 1300 LINE",
"-310 1300 LINE",
"-310 1512 LINE",
"-368 1512 LINE",
"-368 1364 LINE",
"-650 1517 LINE",
"-932 1365 LINE",
"-932 1502 LINE SMOOTH",
"-932 1618 OFFCURVE",
"-800 1618 QCURVE SMOOTH",
"-610 1618 LINE SMOOTH",
"-310 1618 OFFCURVE",
"-310 1800 QCURVE",
"-368 1800 LINE",
"-368 1676 OFFCURVE",
"-610 1676 QCURVE SMOOTH",
"-800 1676 LINE SMOOTH",
"-990 1676 OFFCURVE",
"-990 1502 QCURVE",
"-990 1502 LINE"
);
}
);
width = 0;
}
);
note = uni17CF;
unicode = 17CF;
},
{
glyphname = uni17D0;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-730 1350 OFFCURVE",
"-329 1350 QCURVE SMOOTH",
"190 1350 OFFCURVE",
"190 1880 QCURVE",
"-140 1880 LINE",
"-140 1560 OFFCURVE",
"-329 1560 QCURVE SMOOTH",
"-400 1560 OFFCURVE",
"-400 1600 QCURVE SMOOTH",
"-400 1660 OFFCURVE",
"-329 1660 QCURVE",
"-329 1870 LINE",
"-730 1870 OFFCURVE",
"-730 1600 QCURVE",
"-730 1600 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-700 1380 OFFCURVE",
"-329 1380 QCURVE SMOOTH",
"160 1380 OFFCURVE",
"160 1850 QCURVE",
"-110 1850 LINE",
"-110 1560 OFFCURVE",
"-329 1560 QCURVE SMOOTH",
"-430 1560 OFFCURVE",
"-430 1600 QCURVE SMOOTH",
"-430 1660 OFFCURVE",
"-329 1660 QCURVE",
"-329 1840 LINE",
"-700 1840 OFFCURVE",
"-700 1600 QCURVE",
"-700 1600 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-700 1400 OFFCURVE",
"-389 1400 QCURVE SMOOTH",
"100 1400 OFFCURVE",
"100 1800 QCURVE",
"-50 1800 LINE",
"-50 1530 OFFCURVE",
"-389 1530 QCURVE SMOOTH",
"-550 1530 OFFCURVE",
"-550 1600 QCURVE SMOOTH",
"-550 1660 OFFCURVE",
"-436 1660 QCURVE SMOOTH",
"-389 1660 LINE",
"-389 1790 LINE",
"-433 1790 LINE SMOOTH",
"-700 1790 OFFCURVE",
"-700 1600 QCURVE",
"-700 1600 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-670 1400 OFFCURVE",
"-389 1400 QCURVE SMOOTH",
"70 1400 OFFCURVE",
"70 1800 QCURVE",
"-28 1800 LINE",
"-28 1498 OFFCURVE",
"-389 1498 QCURVE SMOOTH",
"-572 1498 OFFCURVE",
"-572 1584 QCURVE SMOOTH",
"-572 1670 OFFCURVE",
"-436 1670 QCURVE SMOOTH",
"-389 1670 LINE",
"-389 1768 LINE",
"-433 1768 LINE SMOOTH",
"-670 1768 OFFCURVE",
"-670 1584 QCURVE",
"-670 1584 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-640 1410 OFFCURVE",
"-389 1410 QCURVE SMOOTH",
"40 1410 OFFCURVE",
"40 1800 QCURVE",
"-18 1800 LINE",
"-18 1468 OFFCURVE",
"-389 1468 QCURVE SMOOTH",
"-582 1468 OFFCURVE",
"-582 1584 QCURVE SMOOTH",
"-581 1710 OFFCURVE",
"-436 1710 QCURVE SMOOTH",
"-389 1710 LINE",
"-389 1768 LINE",
"-433 1768 LINE SMOOTH",
"-640 1768 OFFCURVE",
"-640 1584 QCURVE",
"-640 1584 LINE"
);
}
);
width = 0;
}
);
note = uni17D0;
unicode = 17D0;
},
{
glyphname = uni17D1;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1190 1480 LINE",
"-1190 1252 LINE",
"-110 1252 LINE",
"-110 1480 LINE",
"-110 1480 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1160 1252 LINE",
"-140 1252 LINE",
"-140 1450 LINE",
"-1160 1450 LINE",
"-1160 1450 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-250 1300 LINE",
"-250 1450 LINE",
"-1050 1450 LINE",
"-1050 1300 LINE",
"-1050 1300 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */\0126 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 27 values pushed */\0120 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 3 0 3 17 3 7 23 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0126 0 \012WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-250 1326 LINE",
"-250 1424 LINE",
"-1050 1424 LINE",
"-1050 1326 LINE",
"-1050 1326 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-1020 1366 LINE",
"-280 1366 LINE",
"-280 1424 LINE",
"-1020 1424 LINE",
"-1020 1424 LINE"
);
}
);
width = 0;
}
);
note = uni17D1;
unicode = 17D1;
},
{
glyphname = uni17D2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-515 -50 LINE",
"-785 -50 LINE",
"-785 -174 LINE",
"-925 -174 LINE",
"-925 -376 LINE",
"-785 -376 LINE",
"-785 -500 LINE",
"-515 -500 LINE",
"-515 -376 LINE",
"-375 -376 LINE",
"-375 -174 LINE",
"-515 -174 LINE",
"-515 -174 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-515 -50 LINE",
"-785 -50 LINE",
"-785 -174 LINE",
"-925 -174 LINE",
"-925 -376 LINE",
"-785 -376 LINE",
"-785 -500 LINE",
"-515 -500 LINE",
"-515 -376 LINE",
"-375 -376 LINE",
"-375 -174 LINE",
"-515 -174 LINE",
"-515 -174 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-575 -50 LINE",
"-725 -50 LINE",
"-725 -214 LINE",
"-925 -214 LINE",
"-925 -336 LINE",
"-725 -336 LINE",
"-725 -500 LINE",
"-575 -500 LINE",
"-575 -336 LINE",
"-375 -336 LINE",
"-375 -214 LINE",
"-575 -214 LINE",
"-575 -214 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */\0126 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 35 values pushed */\0120 5 0 2 5 87 4 1 0 3 1 1 2 0 1 103 0 5 5 2 95 0 2 5 2 79 17 17 17 17 17 16 6 7 28 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0126 0 \012WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-595 -50 LINE",
"-705 -50 LINE",
"-705 -224 LINE",
"-925 -224 LINE",
"-925 -326 LINE",
"-705 -326 LINE",
"-705 -500 LINE",
"-595 -500 LINE",
"-595 -326 LINE",
"-375 -326 LINE",
"-375 -224 LINE",
"-595 -224 LINE",
"-595 -224 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-621 -246 LINE",
"-621 -50 LINE",
"-679 -50 LINE",
"-679 -246 LINE",
"-925 -246 LINE",
"-925 -304 LINE",
"-679 -304 LINE",
"-679 -500 LINE",
"-621 -500 LINE",
"-621 -304 LINE",
"-375 -304 LINE",
"-375 -246 LINE",
"-375 -246 LINE"
);
}
);
width = 0;
}
);
note = uni17D2;
unicode = 17D2;
},
{
glyphname = uni17D3;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-719 1800 OFFCURVE",
"-878 1770 OFFCURVE",
"-1008 1714 OFFCURVE",
"-1036 1676 QCURVE SMOOTH",
"-1080 1614 OFFCURVE",
"-1080 1550 QCURVE SMOOTH",
"-1080 1477 OFFCURVE",
"-984 1364 OFFCURVE",
"-872 1333 QCURVE SMOOTH",
"-752 1300 OFFCURVE",
"-650 1300 QCURVE SMOOTH",
"-578 1300 OFFCURVE",
"-418 1331 OFFCURVE",
"-289 1388 OFFCURVE",
"-262 1426 QCURVE SMOOTH",
"-220 1485 OFFCURVE",
"-220 1550 QCURVE SMOOTH",
"-220 1623 OFFCURVE",
"-316 1738 OFFCURVE",
"-428 1768 QCURVE SMOOTH",
"-550 1800 OFFCURVE",
"-650 1800 QCURVE",
"-650 1800 LINE"
);
},
{
closed = 1;
nodes = (
"-590 1667 OFFCURVE",
"-491 1635 OFFCURVE",
"-477 1608 QCURVE SMOOTH",
"-462 1580 OFFCURVE",
"-462 1550 QCURVE SMOOTH",
"-462 1513 OFFCURVE",
"-493 1463 OFFCURVE",
"-540 1449 QCURVE SMOOTH",
"-591 1433 OFFCURVE",
"-649 1433 QCURVE SMOOTH",
"-706 1433 OFFCURVE",
"-808 1465 OFFCURVE",
"-822 1492 QCURVE SMOOTH",
"-836 1522 OFFCURVE",
"-836 1550 QCURVE SMOOTH",
"-836 1586 OFFCURVE",
"-802 1638 OFFCURVE",
"-755 1652 QCURVE SMOOTH",
"-703 1667 OFFCURVE",
"-649 1667 QCURVE",
"-649 1667 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-592 1667 OFFCURVE",
"-491 1636 OFFCURVE",
"-432 1580 OFFCURVE",
"-432 1550 QCURVE SMOOTH",
"-432 1520 OFFCURVE",
"-488 1464 OFFCURVE",
"-592 1433 OFFCURVE",
"-649 1433 QCURVE SMOOTH",
"-703 1433 OFFCURVE",
"-807 1464 OFFCURVE",
"-866 1520 OFFCURVE",
"-866 1550 QCURVE SMOOTH",
"-866 1580 OFFCURVE",
"-807 1636 OFFCURVE",
"-703 1667 OFFCURVE",
"-649 1667 QCURVE",
"-649 1667 LINE"
);
},
{
closed = 1;
nodes = (
"-750 1800 OFFCURVE",
"-942 1736 OFFCURVE",
"-1050 1615 OFFCURVE",
"-1050 1550 QCURVE SMOOTH",
"-1050 1485 OFFCURVE",
"-942 1366 OFFCURVE",
"-752 1300 OFFCURVE",
"-650 1300 QCURVE SMOOTH",
"-546 1300 OFFCURVE",
"-354 1366 OFFCURVE",
"-250 1485 OFFCURVE",
"-250 1550 QCURVE SMOOTH",
"-250 1615 OFFCURVE",
"-358 1736 OFFCURVE",
"-548 1800 OFFCURVE",
"-650 1800 QCURVE",
"-650 1800 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-592 1667 OFFCURVE",
"-491 1636 OFFCURVE",
"-432 1580 OFFCURVE",
"-432 1550 QCURVE SMOOTH",
"-432 1520 OFFCURVE",
"-488 1464 OFFCURVE",
"-592 1433 OFFCURVE",
"-649 1433 QCURVE SMOOTH",
"-703 1433 OFFCURVE",
"-807 1464 OFFCURVE",
"-866 1520 OFFCURVE",
"-866 1550 QCURVE SMOOTH",
"-866 1580 OFFCURVE",
"-807 1636 OFFCURVE",
"-703 1667 OFFCURVE",
"-649 1667 QCURVE",
"-649 1667 LINE"
);
},
{
closed = 1;
nodes = (
"-750 1800 OFFCURVE",
"-942 1736 OFFCURVE",
"-1050 1615 OFFCURVE",
"-1050 1550 QCURVE SMOOTH",
"-1050 1485 OFFCURVE",
"-942 1366 OFFCURVE",
"-752 1300 OFFCURVE",
"-650 1300 QCURVE SMOOTH",
"-546 1300 OFFCURVE",
"-354 1366 OFFCURVE",
"-250 1485 OFFCURVE",
"-250 1550 QCURVE SMOOTH",
"-250 1615 OFFCURVE",
"-358 1736 OFFCURVE",
"-548 1800 OFFCURVE",
"-650 1800 QCURVE",
"-650 1800 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-592 1667 OFFCURVE",
"-491 1636 OFFCURVE",
"-432 1580 OFFCURVE",
"-432 1550 QCURVE SMOOTH",
"-432 1520 OFFCURVE",
"-488 1464 OFFCURVE",
"-592 1433 OFFCURVE",
"-649 1433 QCURVE SMOOTH",
"-703 1433 OFFCURVE",
"-807 1464 OFFCURVE",
"-866 1520 OFFCURVE",
"-866 1550 QCURVE SMOOTH",
"-866 1580 OFFCURVE",
"-807 1636 OFFCURVE",
"-703 1667 OFFCURVE",
"-649 1667 QCURVE",
"-649 1667 LINE"
);
},
{
closed = 1;
nodes = (
"-737 1750 OFFCURVE",
"-905 1699 OFFCURVE",
"-1000 1602 OFFCURVE",
"-1000 1550 QCURVE SMOOTH",
"-1000 1498 OFFCURVE",
"-905 1403 OFFCURVE",
"-739 1350 OFFCURVE",
"-650 1350 QCURVE SMOOTH",
"-559 1350 OFFCURVE",
"-391 1403 OFFCURVE",
"-300 1498 OFFCURVE",
"-300 1550 QCURVE SMOOTH",
"-300 1602 OFFCURVE",
"-394 1699 OFFCURVE",
"-561 1750 OFFCURVE",
"-650 1750 QCURVE",
"-650 1750 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-817 1675 OFFCURVE",
"-873 1600 QCURVE SMOOTH",
"-900 1564 OFFCURVE",
"-900 1525 QCURVE SMOOTH",
"-900 1485 OFFCURVE",
"-846 1414 OFFCURVE",
"-800 1395 QCURVE SMOOTH",
"-775 1384 OFFCURVE",
"-711 1375 OFFCURVE",
"-650 1375 QCURVE SMOOTH",
"-479 1375 OFFCURVE",
"-426 1450 QCURVE SMOOTH",
"-400 1487 OFFCURVE",
"-400 1525 QCURVE SMOOTH",
"-400 1565 OFFCURVE",
"-455 1636 OFFCURVE",
"-502 1656 QCURVE SMOOTH",
"-528 1666 OFFCURVE",
"-591 1675 OFFCURVE",
"-650 1675 QCURVE",
"-650 1675 LINE"
);
},
{
closed = 1;
nodes = (
"-578 1632 OFFCURVE",
"-496 1606 OFFCURVE",
"-477 1578 QCURVE SMOOTH",
"-458 1551 OFFCURVE",
"-458 1525 QCURVE SMOOTH",
"-458 1497 OFFCURVE",
"-495 1445 OFFCURVE",
"-529 1432 QCURVE SMOOTH",
"-547 1425 OFFCURVE",
"-597 1419 OFFCURVE",
"-650 1419 QCURVE SMOOTH",
"-722 1419 OFFCURVE",
"-804 1445 OFFCURVE",
"-823 1472 QCURVE SMOOTH",
"-842 1499 OFFCURVE",
"-842 1525 QCURVE SMOOTH",
"-842 1553 OFFCURVE",
"-803 1605 OFFCURVE",
"-770 1618 QCURVE SMOOTH",
"-751 1625 OFFCURVE",
"-702 1632 OFFCURVE",
"-650 1632 QCURVE",
"-650 1632 LINE"
);
}
);
width = 0;
}
);
note = uni17D3;
unicode = 17D3;
},
{
glyphname = uni17D4;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"535 1160 LINE",
"382 1160 LINE SMOOTH",
"110 1160 OFFCURVE",
"110 950 QCURVE SMOOTH",
"110 670 OFFCURVE",
"426 670 QCURVE SMOOTH",
"612 670 OFFCURVE",
"722 846 QCURVE",
"722 0 LINE",
"1090 0 LINE",
"1090 1160 LINE",
"722 1160 LINE",
"638 999 LINE",
"563 898 OFFCURVE",
"506 898 QCURVE SMOOTH",
"478 898 OFFCURVE",
"478 950 QCURVE SMOOTH",
"478 992 OFFCURVE",
"535 992 QCURVE",
"535 992 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"535 1130 LINE",
"382 1130 LINE SMOOTH",
"140 1130 OFFCURVE",
"140 950 QCURVE SMOOTH",
"140 700 OFFCURVE",
"426 700 QCURVE SMOOTH",
"643 700 OFFCURVE",
"752 846 QCURVE",
"752 0 LINE",
"1060 0 LINE",
"1060 1130 LINE",
"752 1130 LINE",
"668 999 LINE",
"583 898 OFFCURVE",
"506 898 QCURVE SMOOTH",
"448 898 OFFCURVE",
"448 950 QCURVE SMOOTH",
"448 992 OFFCURVE",
"535 992 QCURVE",
"535 992 LINE"
);
}
);
width = 1200;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"495 992 LINE",
"495 1130 LINE",
"442 1130 LINE SMOOTH",
"200 1130 OFFCURVE",
"200 950 QCURVE SMOOTH",
"200 730 OFFCURVE",
"466 730 QCURVE SMOOTH",
"703 730 OFFCURVE",
"812 876 QCURVE",
"812 0 LINE",
"1000 0 LINE",
"1000 1130 LINE",
"812 1130 LINE",
"728 999 LINE SMOOTH",
"643 868 OFFCURVE",
"466 868 QCURVE SMOOTH",
"388 868 OFFCURVE",
"388 950 QCURVE SMOOTH",
"388 992 OFFCURVE",
"442 992 QCURVE",
"442 992 LINE"
);
}
);
width = 1200;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"495 1032 LINE",
"495 1130 LINE",
"442 1130 LINE SMOOTH",
"230 1130 OFFCURVE",
"230 930 QCURVE SMOOTH",
"230 730 OFFCURVE",
"466 730 QCURVE SMOOTH",
"723 730 OFFCURVE",
"852 916 QCURVE",
"852 0 LINE",
"970 0 LINE",
"970 1130 LINE",
"852 1130 LINE",
"768 979 LINE SMOOTH",
"683 828 OFFCURVE",
"466 828 QCURVE SMOOTH",
"348 828 OFFCURVE",
"348 930 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"442 1032 QCURVE",
"442 1032 LINE"
);
}
);
width = 1200;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"495 1072 LINE",
"495 1130 LINE",
"442 1130 LINE SMOOTH",
"260 1130 OFFCURVE",
"260 930 QCURVE SMOOTH",
"262 730 OFFCURVE",
"466 730 QCURVE SMOOTH",
"713 730 OFFCURVE",
"882 1006 QCURVE",
"882 0 LINE",
"940 0 LINE",
"940 1130 LINE",
"882 1130 LINE",
"788 979 LINE SMOOTH",
"669 788 OFFCURVE",
"466 788 QCURVE SMOOTH",
"318 788 OFFCURVE",
"318 930 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"442 1072 QCURVE",
"442 1072 LINE"
);
}
);
width = 1200;
}
);
note = uni17D4;
unicode = 17D4;
},
{
glyphname = uni17D5;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"535 1160 LINE",
"382 1160 LINE SMOOTH",
"110 1160 OFFCURVE",
"110 950 QCURVE SMOOTH",
"110 670 OFFCURVE",
"426 670 QCURVE SMOOTH",
"612 670 OFFCURVE",
"722 846 QCURVE",
"722 0 LINE",
"1090 0 LINE",
"1090 1160 LINE",
"722 1160 LINE",
"638 999 LINE",
"563 898 OFFCURVE",
"506 898 QCURVE SMOOTH",
"478 898 OFFCURVE",
"478 950 QCURVE SMOOTH",
"478 992 OFFCURVE",
"535 992 QCURVE",
"535 992 LINE"
);
},
{
closed = 1;
nodes = (
"1390 1160 LINE",
"1142 1160 LINE",
"1142 0 LINE",
"1390 0 LINE",
"1390 0 LINE"
);
}
);
width = 1500;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"535 1130 LINE",
"382 1130 LINE SMOOTH",
"140 1130 OFFCURVE",
"140 950 QCURVE SMOOTH",
"140 700 OFFCURVE",
"426 700 QCURVE SMOOTH",
"643 700 OFFCURVE",
"752 846 QCURVE",
"752 0 LINE",
"1040 0 LINE",
"1040 1130 LINE",
"752 1130 LINE",
"668 999 LINE",
"583 898 OFFCURVE",
"506 898 QCURVE SMOOTH",
"448 898 OFFCURVE",
"448 950 QCURVE SMOOTH",
"448 992 OFFCURVE",
"535 992 QCURVE",
"535 992 LINE"
);
},
{
closed = 1;
nodes = (
"1112 1130 LINE",
"1112 0 LINE",
"1360 0 LINE",
"1360 1130 LINE",
"1360 1130 LINE"
);
}
);
width = 1500;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"495 992 LINE",
"495 1130 LINE",
"442 1130 LINE SMOOTH",
"200 1130 OFFCURVE",
"200 950 QCURVE SMOOTH",
"200 730 OFFCURVE",
"466 730 QCURVE SMOOTH",
"703 730 OFFCURVE",
"812 876 QCURVE",
"812 0 LINE",
"1000 0 LINE",
"1000 1130 LINE",
"812 1130 LINE",
"728 999 LINE SMOOTH",
"643 868 OFFCURVE",
"466 868 QCURVE SMOOTH",
"388 868 OFFCURVE",
"388 950 QCURVE SMOOTH",
"388 992 OFFCURVE",
"442 992 QCURVE",
"442 992 LINE"
);
},
{
closed = 1;
nodes = (
"1112 1130 LINE",
"1112 0 LINE",
"1300 0 LINE",
"1300 1130 LINE",
"1300 1130 LINE"
);
}
);
width = 1500;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"495 1032 LINE",
"495 1130 LINE",
"442 1130 LINE SMOOTH",
"230 1130 OFFCURVE",
"230 930 QCURVE SMOOTH",
"230 730 OFFCURVE",
"466 730 QCURVE SMOOTH",
"723 730 OFFCURVE",
"852 916 QCURVE",
"852 0 LINE",
"970 0 LINE",
"970 1130 LINE",
"852 1130 LINE",
"768 979 LINE SMOOTH",
"683 828 OFFCURVE",
"466 828 QCURVE SMOOTH",
"348 828 OFFCURVE",
"348 930 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"442 1032 QCURVE",
"442 1032 LINE"
);
},
{
closed = 1;
nodes = (
"1152 1130 LINE",
"1152 0 LINE",
"1270 0 LINE",
"1270 1130 LINE",
"1270 1130 LINE"
);
}
);
width = 1500;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"495 1072 LINE",
"495 1130 LINE",
"442 1130 LINE SMOOTH",
"260 1130 OFFCURVE",
"260 930 QCURVE SMOOTH",
"262 730 OFFCURVE",
"466 730 QCURVE SMOOTH",
"713 730 OFFCURVE",
"882 1006 QCURVE",
"882 0 LINE",
"940 0 LINE",
"940 1130 LINE",
"882 1130 LINE",
"788 979 LINE SMOOTH",
"669 788 OFFCURVE",
"466 788 QCURVE SMOOTH",
"318 788 OFFCURVE",
"318 930 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"442 1072 QCURVE",
"442 1072 LINE"
);
},
{
closed = 1;
nodes = (
"1240 1130 LINE",
"1182 1130 LINE",
"1182 0 LINE",
"1240 0 LINE",
"1240 0 LINE"
);
}
);
width = 1500;
}
);
note = uni17D5;
unicode = 17D5;
},
{
glyphname = uni17D6;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"80 1160 OFFCURVE",
"80 960 QCURVE SMOOTH",
"80 760 OFFCURVE",
"360 760 QCURVE SMOOTH",
"640 760 OFFCURVE",
"640 960 QCURVE SMOOTH",
"640 1160 OFFCURVE",
"360 1160 QCURVE",
"360 1160 LINE"
);
},
{
closed = 1;
nodes = (
"405 1020 OFFCURVE",
"405 960 QCURVE SMOOTH",
"405 900 OFFCURVE",
"360 900 QCURVE SMOOTH",
"315 900 OFFCURVE",
"315 960 QCURVE SMOOTH",
"315 1020 OFFCURVE",
"360 1020 QCURVE",
"360 1020 LINE"
);
},
{
closed = 1;
nodes = (
"700 684 LINE",
"50 684 LINE",
"50 476 LINE",
"700 476 LINE",
"700 476 LINE"
);
},
{
closed = 1;
nodes = (
"80 400 OFFCURVE",
"80 200 QCURVE SMOOTH",
"80 0 OFFCURVE",
"360 0 QCURVE SMOOTH",
"640 0 OFFCURVE",
"640 200 QCURVE SMOOTH",
"640 400 OFFCURVE",
"360 400 QCURVE",
"360 400 LINE"
);
},
{
closed = 1;
nodes = (
"405 260 OFFCURVE",
"405 200 QCURVE SMOOTH",
"405 140 OFFCURVE",
"360 140 QCURVE SMOOTH",
"315 140 OFFCURVE",
"315 200 QCURVE SMOOTH",
"315 260 OFFCURVE",
"360 260 QCURVE",
"360 260 LINE"
);
}
);
width = 750;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"435 260 OFFCURVE",
"435 200 QCURVE SMOOTH",
"435 140 OFFCURVE",
"360 140 QCURVE SMOOTH",
"285 140 OFFCURVE",
"285 200 QCURVE SMOOTH",
"285 260 OFFCURVE",
"360 260 QCURVE",
"360 260 LINE"
);
},
{
closed = 1;
nodes = (
"110 400 OFFCURVE",
"110 200 QCURVE SMOOTH",
"110 0 OFFCURVE",
"360 0 QCURVE SMOOTH",
"610 0 OFFCURVE",
"610 200 QCURVE SMOOTH",
"610 400 OFFCURVE",
"360 400 QCURVE",
"360 400 LINE"
);
},
{
closed = 1;
nodes = (
"435 990 OFFCURVE",
"435 930 QCURVE SMOOTH",
"435 870 OFFCURVE",
"360 870 QCURVE SMOOTH",
"285 870 OFFCURVE",
"285 930 QCURVE SMOOTH",
"285 990 OFFCURVE",
"360 990 QCURVE",
"360 990 LINE"
);
},
{
closed = 1;
nodes = (
"110 1130 OFFCURVE",
"110 930 QCURVE SMOOTH",
"110 730 OFFCURVE",
"360 730 QCURVE SMOOTH",
"610 730 OFFCURVE",
"610 930 QCURVE SMOOTH",
"610 1130 OFFCURVE",
"360 1130 QCURVE",
"360 1130 LINE"
);
},
{
closed = 1;
nodes = (
"50 654 LINE",
"50 476 LINE",
"700 476 LINE",
"700 654 LINE",
"700 654 LINE"
);
}
);
width = 750;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"398 315 OFFCURVE",
"441 292 OFFCURVE",
"465 248 OFFCURVE",
"465 225 QCURVE SMOOTH",
"465 202 OFFCURVE",
"442 158 OFFCURVE",
"398 135 OFFCURVE",
"375 135 QCURVE SMOOTH",
"352 135 OFFCURVE",
"309 158 OFFCURVE",
"285 202 OFFCURVE",
"285 225 QCURVE SMOOTH",
"285 248 OFFCURVE",
"309 292 OFFCURVE",
"352 315 OFFCURVE",
"375 315 QCURVE",
"375 315 LINE"
);
},
{
closed = 1;
nodes = (
"318 450 OFFCURVE",
"211 392 OFFCURVE",
"150 284 OFFCURVE",
"150 225 QCURVE SMOOTH",
"150 166 OFFCURVE",
"210 59 OFFCURVE",
"317 0 OFFCURVE",
"375 0 QCURVE SMOOTH",
"434 0 OFFCURVE",
"541 59 OFFCURVE",
"600 166 OFFCURVE",
"600 225 QCURVE SMOOTH",
"600 284 OFFCURVE",
"539 392 OFFCURVE",
"432 450 OFFCURVE",
"375 450 QCURVE",
"375 450 LINE"
);
},
{
closed = 1;
nodes = (
"398 995 OFFCURVE",
"441 972 OFFCURVE",
"465 928 OFFCURVE",
"465 905 QCURVE SMOOTH",
"465 882 OFFCURVE",
"442 838 OFFCURVE",
"398 815 OFFCURVE",
"375 815 QCURVE SMOOTH",
"352 815 OFFCURVE",
"309 838 OFFCURVE",
"285 882 OFFCURVE",
"285 905 QCURVE SMOOTH",
"285 928 OFFCURVE",
"309 972 OFFCURVE",
"352 995 OFFCURVE",
"375 995 QCURVE",
"375 995 LINE"
);
},
{
closed = 1;
nodes = (
"318 1130 OFFCURVE",
"211 1072 OFFCURVE",
"150 964 OFFCURVE",
"150 905 QCURVE SMOOTH",
"150 846 OFFCURVE",
"210 739 OFFCURVE",
"317 680 OFFCURVE",
"375 680 QCURVE SMOOTH",
"434 680 OFFCURVE",
"541 739 OFFCURVE",
"600 846 OFFCURVE",
"600 905 QCURVE SMOOTH",
"600 964 OFFCURVE",
"539 1072 OFFCURVE",
"432 1130 OFFCURVE",
"375 1130 QCURVE",
"375 1130 LINE"
);
},
{
closed = 1;
nodes = (
"50 634 LINE",
"50 496 LINE",
"700 496 LINE",
"700 634 LINE",
"700 634 LINE"
);
}
);
width = 750;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"401 302 OFFCURVE",
"450 276 OFFCURVE",
"477 226 OFFCURVE",
"477 200 QCURVE SMOOTH",
"477 174 OFFCURVE",
"451 124 OFFCURVE",
"401 98 OFFCURVE",
"375 98 QCURVE SMOOTH",
"349 98 OFFCURVE",
"300 124 OFFCURVE",
"273 174 OFFCURVE",
"273 200 QCURVE SMOOTH",
"273 226 OFFCURVE",
"300 276 OFFCURVE",
"349 302 OFFCURVE",
"375 302 QCURVE",
"375 302 LINE"
);
},
{
closed = 1;
nodes = (
"324 400 OFFCURVE",
"229 348 OFFCURVE",
"175 252 OFFCURVE",
"175 200 QCURVE SMOOTH",
"175 148 OFFCURVE",
"228 52 OFFCURVE",
"323 0 OFFCURVE",
"375 0 QCURVE SMOOTH",
"427 0 OFFCURVE",
"523 52 OFFCURVE",
"575 148 OFFCURVE",
"575 200 QCURVE SMOOTH",
"575 252 OFFCURVE",
"521 348 OFFCURVE",
"426 400 OFFCURVE",
"375 400 QCURVE",
"375 400 LINE"
);
},
{
closed = 1;
nodes = (
"401 1032 OFFCURVE",
"450 1006 OFFCURVE",
"477 956 OFFCURVE",
"477 930 QCURVE SMOOTH",
"477 904 OFFCURVE",
"451 854 OFFCURVE",
"401 828 OFFCURVE",
"375 828 QCURVE SMOOTH",
"349 828 OFFCURVE",
"300 854 OFFCURVE",
"273 904 OFFCURVE",
"273 930 QCURVE SMOOTH",
"273 956 OFFCURVE",
"300 1006 OFFCURVE",
"349 1032 OFFCURVE",
"375 1032 QCURVE",
"375 1032 LINE"
);
},
{
closed = 1;
nodes = (
"324 1130 OFFCURVE",
"229 1078 OFFCURVE",
"175 982 OFFCURVE",
"175 930 QCURVE SMOOTH",
"175 878 OFFCURVE",
"228 782 OFFCURVE",
"323 730 OFFCURVE",
"375 730 QCURVE SMOOTH",
"427 730 OFFCURVE",
"523 782 OFFCURVE",
"575 878 OFFCURVE",
"575 930 QCURVE SMOOTH",
"575 982 OFFCURVE",
"521 1078 OFFCURVE",
"426 1130 OFFCURVE",
"375 1130 QCURVE",
"375 1130 LINE"
);
},
{
closed = 1;
nodes = (
"50 614 LINE",
"50 516 LINE",
"700 516 LINE",
"700 614 LINE",
"700 614 LINE"
);
}
);
width = 750;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"323 1130 OFFCURVE",
"228 1077 OFFCURVE",
"202 1030 QCURVE SMOOTH",
"175 982 OFFCURVE",
"175 930 QCURVE SMOOTH",
"175 877 OFFCURVE",
"229 782 OFFCURVE",
"276 756 QCURVE SMOOTH",
"323 730 OFFCURVE",
"375 730 QCURVE SMOOTH",
"428 730 OFFCURVE",
"523 783 OFFCURVE",
"549 830 QCURVE SMOOTH",
"575 879 OFFCURVE",
"575 930 QCURVE SMOOTH",
"575 983 OFFCURVE",
"521 1078 OFFCURVE",
"474 1104 QCURVE SMOOTH",
"425 1130 OFFCURVE",
"375 1130 QCURVE",
"375 1130 LINE"
);
},
{
closed = 1;
nodes = (
"413 1072 OFFCURVE",
"480 1035 OFFCURVE",
"498 1001 QCURVE SMOOTH",
"517 967 OFFCURVE",
"517 930 QCURVE SMOOTH",
"517 892 OFFCURVE",
"480 823 OFFCURVE",
"446 806 QCURVE SMOOTH",
"411 788 OFFCURVE",
"375 788 QCURVE SMOOTH",
"337 788 OFFCURVE",
"270 825 OFFCURVE",
"252 859 QCURVE SMOOTH",
"233 893 OFFCURVE",
"233 930 QCURVE SMOOTH",
"233 967 OFFCURVE",
"272 1036 OFFCURVE",
"305 1054 QCURVE SMOOTH",
"340 1072 OFFCURVE",
"375 1072 QCURVE",
"375 1072 LINE"
);
},
{
closed = 1;
nodes = (
"700 594 LINE",
"50 594 LINE",
"50 536 LINE",
"700 536 LINE",
"700 536 LINE"
);
},
{
closed = 1;
nodes = (
"323 400 OFFCURVE",
"228 347 OFFCURVE",
"202 300 QCURVE SMOOTH",
"175 252 OFFCURVE",
"175 200 QCURVE SMOOTH",
"175 147 OFFCURVE",
"229 52 OFFCURVE",
"276 26 QCURVE SMOOTH",
"323 0 OFFCURVE",
"375 0 QCURVE SMOOTH",
"428 0 OFFCURVE",
"523 53 OFFCURVE",
"549 100 QCURVE SMOOTH",
"575 149 OFFCURVE",
"575 200 QCURVE SMOOTH",
"575 253 OFFCURVE",
"521 348 OFFCURVE",
"474 374 QCURVE SMOOTH",
"425 400 OFFCURVE",
"375 400 QCURVE",
"375 400 LINE"
);
},
{
closed = 1;
nodes = (
"413 342 OFFCURVE",
"480 305 OFFCURVE",
"498 271 QCURVE SMOOTH",
"517 237 OFFCURVE",
"517 200 QCURVE SMOOTH",
"517 162 OFFCURVE",
"480 93 OFFCURVE",
"446 76 QCURVE SMOOTH",
"412 58 OFFCURVE",
"375 58 QCURVE SMOOTH",
"337 58 OFFCURVE",
"270 95 OFFCURVE",
"252 129 QCURVE SMOOTH",
"233 163 OFFCURVE",
"233 200 QCURVE SMOOTH",
"233 237 OFFCURVE",
"272 306 OFFCURVE",
"305 324 QCURVE SMOOTH",
"340 342 OFFCURVE",
"375 342 QCURVE",
"375 342 LINE"
);
}
);
width = 750;
}
);
note = uni17D6;
unicode = 17D6;
},
{
glyphname = uni17D7;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"722 -180 LINE SMOOTH",
"722 -272 OFFCURVE",
"550 -272 QCURVE",
"550 -500 LINE",
"1090 -500 OFFCURVE",
"1090 -180 QCURVE SMOOTH",
"1090 1160 LINE",
"722 1160 LINE",
"669 996 OFFCURVE",
"631 996 QCURVE SMOOTH",
"615 996 OFFCURVE",
"537 1078 QCURVE SMOOTH",
"459 1160 OFFCURVE",
"345 1160 QCURVE SMOOTH",
"60 1160 OFFCURVE",
"60 863 QCURVE SMOOTH",
"60 569 OFFCURVE",
"458 569 QCURVE",
"458 803 LINE",
"408 803 OFFCURVE",
"408 863 QCURVE SMOOTH",
"408 910 OFFCURVE",
"431 910 QCURVE SMOOTH",
"460 910 OFFCURVE",
"511 842 QCURVE SMOOTH",
"561 774 OFFCURVE",
"631 774 QCURVE SMOOTH",
"678 774 OFFCURVE",
"722 863 QCURVE",
"722 863 LINE"
);
}
);
width = 1200;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"752 -180 LINE SMOOTH",
"752 -302 OFFCURVE",
"550 -302 QCURVE",
"550 -500 LINE",
"1060 -500 OFFCURVE",
"1060 -180 QCURVE SMOOTH",
"1060 1130 LINE",
"752 1130 LINE",
"700 966 OFFCURVE",
"631 966 QCURVE SMOOTH",
"614 966 OFFCURVE",
"489 1130 OFFCURVE",
"375 1130 QCURVE SMOOTH",
"90 1130 OFFCURVE",
"90 863 QCURVE SMOOTH",
"90 599 OFFCURVE",
"458 599 QCURVE",
"458 803 LINE",
"378 803 OFFCURVE",
"378 863 QCURVE SMOOTH",
"378 910 OFFCURVE",
"411 910 QCURVE SMOOTH",
"460 910 OFFCURVE",
"561 774 OFFCURVE",
"631 774 QCURVE SMOOTH",
"709 774 OFFCURVE",
"752 863 QCURVE",
"752 863 LINE"
);
}
);
width = 1200;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"812 -180 LINE SMOOTH",
"812 -362 OFFCURVE",
"550 -362 QCURVE",
"550 -500 LINE",
"1000 -500 OFFCURVE",
"1000 -180 QCURVE SMOOTH",
"1000 1130 LINE",
"812 1130 LINE",
"700 966 OFFCURVE",
"631 966 QCURVE SMOOTH",
"614 966 OFFCURVE",
"489 1130 OFFCURVE",
"375 1130 QCURVE SMOOTH",
"150 1130 OFFCURVE",
"150 903 QCURVE SMOOTH",
"150 699 OFFCURVE",
"438 699 QCURVE",
"438 843 LINE",
"338 843 OFFCURVE",
"338 903 QCURVE SMOOTH",
"338 980 OFFCURVE",
"391 980 QCURVE SMOOTH",
"460 980 OFFCURVE",
"561 834 OFFCURVE",
"631 834 QCURVE SMOOTH",
"709 834 OFFCURVE",
"812 923 QCURVE",
"812 923 LINE"
);
}
);
width = 1200;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"852 -180 LINE SMOOTH",
"852 -402 OFFCURVE",
"550 -402 QCURVE",
"550 -500 LINE",
"970 -500 OFFCURVE",
"970 -180 QCURVE SMOOTH",
"970 1130 LINE",
"852 1130 LINE",
"740 926 OFFCURVE",
"651 926 QCURVE SMOOTH",
"614 926 OFFCURVE",
"489 1130 OFFCURVE",
"371 1130 QCURVE SMOOTH",
"180 1130 OFFCURVE",
"180 903 QCURVE SMOOTH",
"180 700 OFFCURVE",
"438 700 QCURVE",
"438 798 LINE",
"298 798 OFFCURVE",
"298 903 QCURVE SMOOTH",
"298 1032 OFFCURVE",
"371 1032 QCURVE SMOOTH",
"460 1032 OFFCURVE",
"561 834 OFFCURVE",
"651 834 QCURVE SMOOTH",
"749 834 OFFCURVE",
"852 963 QCURVE",
"852 963 LINE"
);
}
);
width = 1200;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"882 -180 LINE SMOOTH",
"882 -442 OFFCURVE",
"550 -442 QCURVE",
"550 -500 LINE",
"940 -500 OFFCURVE",
"940 -180 QCURVE SMOOTH",
"940 1130 LINE",
"882 1130 LINE",
"769 906 OFFCURVE",
"651 906 QCURVE SMOOTH",
"594 906 OFFCURVE",
"542 1018 QCURVE SMOOTH",
"490 1130 OFFCURVE",
"371 1130 QCURVE SMOOTH",
"210 1130 OFFCURVE",
"210 903 QCURVE SMOOTH",
"210 700 OFFCURVE",
"438 700 QCURVE",
"438 758 LINE",
"268 758 OFFCURVE",
"268 903 QCURVE SMOOTH",
"268 1072 OFFCURVE",
"371 1072 QCURVE SMOOTH",
"460 1072 OFFCURVE",
"511 963 QCURVE SMOOTH",
"560 854 OFFCURVE",
"651 854 QCURVE SMOOTH",
"789 854 OFFCURVE",
"882 1023 QCURVE",
"882 1023 LINE"
);
}
);
width = 1200;
}
);
note = uni17D7;
unicode = 17D7;
},
{
glyphname = uni17D8;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"535 1160 LINE",
"382 1160 LINE SMOOTH",
"110 1160 OFFCURVE",
"110 950 QCURVE SMOOTH",
"110 670 OFFCURVE",
"426 670 QCURVE SMOOTH",
"612 670 OFFCURVE",
"722 846 QCURVE",
"722 0 LINE",
"1090 0 LINE",
"1090 1160 LINE",
"722 1160 LINE",
"638 999 LINE",
"563 898 OFFCURVE",
"506 898 QCURVE SMOOTH",
"478 898 OFFCURVE",
"478 950 QCURVE SMOOTH",
"478 992 OFFCURVE",
"535 992 QCURVE",
"535 992 LINE"
);
},
{
closed = 1;
nodes = (
"3002 704 LINE SMOOTH",
"3002 772 OFFCURVE",
"2902 826 QCURVE SMOOTH",
"2802 880 LINE",
"2802 932 LINE",
"3002 932 LINE",
"3002 1160 LINE",
"2712 1160 LINE SMOOTH",
"2484 1160 OFFCURVE",
"2484 932 QCURVE SMOOTH",
"2484 827 LINE",
"2634 704 LINE",
"2634 323 LINE SMOOTH",
"2634 228 OFFCURVE",
"2487 228 QCURVE SMOOTH",
"2340 228 OFFCURVE",
"2340 323 QCURVE SMOOTH",
"2340 807 LINE SMOOTH",
"2340 1160 OFFCURVE",
"1825 1160 QCURVE SMOOTH",
"1310 1160 OFFCURVE",
"1310 807 QCURVE SMOOTH",
"1310 298 LINE SMOOTH",
"1310 0 OFFCURVE",
"1670 0 QCURVE SMOOTH",
"1800 0 LINE",
"1800 258 LINE",
"1730 258 LINE SMOOTH",
"1678 258 OFFCURVE",
"1678 298 QCURVE SMOOTH",
"1678 807 LINE SMOOTH",
"1678 932 OFFCURVE",
"1825 932 QCURVE SMOOTH",
"1972 932 OFFCURVE",
"1972 807 QCURVE SMOOTH",
"1972 323 LINE SMOOTH",
"1972 0 OFFCURVE",
"2487 0 QCURVE SMOOTH",
"3002 0 OFFCURVE",
"3002 323 QCURVE",
"3002 323 LINE"
);
},
{
closed = 1;
nodes = (
"3635 1160 LINE",
"3482 1160 LINE SMOOTH",
"3210 1160 OFFCURVE",
"3210 950 QCURVE SMOOTH",
"3210 670 OFFCURVE",
"3526 670 QCURVE SMOOTH",
"3712 670 OFFCURVE",
"3822 846 QCURVE",
"3822 0 LINE",
"4190 0 LINE",
"4190 1160 LINE",
"3822 1160 LINE",
"3738 999 LINE",
"3663 898 OFFCURVE",
"3606 898 QCURVE SMOOTH",
"3578 898 OFFCURVE",
"3578 950 QCURVE SMOOTH",
"3578 992 OFFCURVE",
"3635 992 QCURVE",
"3635 992 LINE"
);
}
);
width = 4300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"3655 1130 LINE",
"3502 1130 LINE SMOOTH",
"3260 1130 OFFCURVE",
"3260 950 QCURVE SMOOTH",
"3260 700 OFFCURVE",
"3546 700 QCURVE SMOOTH",
"3743 700 OFFCURVE",
"3852 846 QCURVE",
"3852 0 LINE",
"4160 0 LINE",
"4160 1130 LINE",
"3852 1130 LINE",
"3768 999 LINE",
"3683 898 OFFCURVE",
"3626 898 QCURVE SMOOTH",
"3568 898 OFFCURVE",
"3568 950 QCURVE SMOOTH",
"3568 992 OFFCURVE",
"3655 992 QCURVE",
"3655 992 LINE"
);
},
{
closed = 1;
nodes = (
"535 1130 LINE",
"382 1130 LINE SMOOTH",
"140 1130 OFFCURVE",
"140 950 QCURVE SMOOTH",
"140 700 OFFCURVE",
"426 700 QCURVE SMOOTH",
"643 700 OFFCURVE",
"752 846 QCURVE",
"752 0 LINE",
"1060 0 LINE",
"1060 1130 LINE",
"752 1130 LINE",
"668 999 LINE",
"583 898 OFFCURVE",
"506 898 QCURVE SMOOTH",
"448 898 OFFCURVE",
"448 950 QCURVE SMOOTH",
"448 992 OFFCURVE",
"535 992 QCURVE",
"535 992 LINE"
);
},
{
closed = 1;
nodes = (
"2972 704 LINE SMOOTH",
"2972 772 OFFCURVE",
"2872 826 QCURVE SMOOTH",
"2772 880 LINE",
"2772 932 LINE",
"2972 932 LINE",
"2972 1130 LINE",
"2712 1130 LINE SMOOTH",
"2504 1130 OFFCURVE",
"2504 932 QCURVE SMOOTH",
"2504 827 LINE",
"2664 704 LINE",
"2664 323 LINE SMOOTH",
"2664 198 OFFCURVE",
"2487 198 QCURVE SMOOTH",
"2310 198 OFFCURVE",
"2310 323 QCURVE SMOOTH",
"2310 807 LINE SMOOTH",
"2310 1130 OFFCURVE",
"1825 1130 QCURVE SMOOTH",
"1340 1130 OFFCURVE",
"1340 807 QCURVE SMOOTH",
"1340 298 LINE SMOOTH",
"1340 0 OFFCURVE",
"1670 0 QCURVE SMOOTH",
"1800 0 LINE",
"1800 228 LINE",
"1730 228 LINE SMOOTH",
"1648 228 OFFCURVE",
"1648 298 QCURVE SMOOTH",
"1648 807 LINE SMOOTH",
"1648 932 OFFCURVE",
"1825 932 QCURVE SMOOTH",
"2002 932 OFFCURVE",
"2002 807 QCURVE SMOOTH",
"2002 323 LINE SMOOTH",
"2002 0 OFFCURVE",
"2487 0 QCURVE SMOOTH",
"2972 0 OFFCURVE",
"2972 323 QCURVE",
"2972 323 LINE"
);
}
);
width = 4300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"495 992 LINE",
"495 1130 LINE",
"442 1130 LINE SMOOTH",
"200 1130 OFFCURVE",
"200 950 QCURVE SMOOTH",
"200 730 OFFCURVE",
"466 730 QCURVE SMOOTH",
"703 730 OFFCURVE",
"812 876 QCURVE",
"812 0 LINE",
"1000 0 LINE",
"1000 1130 LINE",
"812 1130 LINE",
"728 999 LINE SMOOTH",
"643 868 OFFCURVE",
"466 868 QCURVE SMOOTH",
"388 868 OFFCURVE",
"388 950 QCURVE SMOOTH",
"388 992 OFFCURVE",
"442 992 QCURVE",
"442 992 LINE"
);
},
{
closed = 1;
nodes = (
"3595 992 LINE",
"3595 1130 LINE",
"3542 1130 LINE SMOOTH",
"3300 1130 OFFCURVE",
"3300 950 QCURVE SMOOTH",
"3300 730 OFFCURVE",
"3566 730 QCURVE SMOOTH",
"3803 730 OFFCURVE",
"3912 876 QCURVE",
"3912 0 LINE",
"4100 0 LINE",
"4100 1130 LINE",
"3912 1130 LINE",
"3828 999 LINE SMOOTH",
"3743 868 OFFCURVE",
"3566 868 QCURVE SMOOTH",
"3488 868 OFFCURVE",
"3488 950 QCURVE SMOOTH",
"3488 992 OFFCURVE",
"3542 992 QCURVE",
"3542 992 LINE"
);
},
{
closed = 1;
nodes = (
"2912 734 LINE SMOOTH",
"2912 792 OFFCURVE",
"2807 851 QCURVE SMOOTH",
"2702 910 LINE",
"2702 992 LINE",
"2912 992 LINE",
"2912 1130 LINE",
"2712 1130 LINE SMOOTH",
"2534 1130 OFFCURVE",
"2534 992 QCURVE SMOOTH",
"2534 857 LINE",
"2724 734 LINE",
"2724 323 LINE SMOOTH",
"2724 138 OFFCURVE",
"2487 138 QCURVE SMOOTH",
"2250 138 OFFCURVE",
"2250 323 QCURVE SMOOTH",
"2250 807 LINE SMOOTH",
"2250 1130 OFFCURVE",
"1825 1130 QCURVE SMOOTH",
"1400 1130 OFFCURVE",
"1400 807 QCURVE SMOOTH",
"1400 0 LINE",
"1800 0 LINE",
"1800 168 LINE",
"1588 168 LINE",
"1588 807 LINE SMOOTH",
"1588 992 OFFCURVE",
"1825 992 QCURVE SMOOTH",
"2062 992 OFFCURVE",
"2062 807 QCURVE SMOOTH",
"2062 323 LINE SMOOTH",
"2062 0 OFFCURVE",
"2487 0 QCURVE SMOOTH",
"2912 0 OFFCURVE",
"2912 323 QCURVE",
"2912 323 LINE"
);
}
);
width = 4300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"3595 1032 LINE",
"3595 1130 LINE",
"3542 1130 LINE SMOOTH",
"3330 1130 OFFCURVE",
"3330 930 QCURVE SMOOTH",
"3330 730 OFFCURVE",
"3566 730 QCURVE SMOOTH",
"3823 730 OFFCURVE",
"3952 916 QCURVE",
"3952 0 LINE",
"4070 0 LINE",
"4070 1130 LINE",
"3952 1130 LINE",
"3868 979 LINE SMOOTH",
"3783 828 OFFCURVE",
"3566 828 QCURVE SMOOTH",
"3448 828 OFFCURVE",
"3448 930 QCURVE SMOOTH",
"3448 1032 OFFCURVE",
"3542 1032 QCURVE",
"3542 1032 LINE"
);
},
{
closed = 1;
nodes = (
"495 1032 LINE",
"495 1130 LINE",
"442 1130 LINE SMOOTH",
"230 1130 OFFCURVE",
"230 930 QCURVE SMOOTH",
"230 730 OFFCURVE",
"466 730 QCURVE SMOOTH",
"723 730 OFFCURVE",
"852 916 QCURVE",
"852 0 LINE",
"970 0 LINE",
"970 1130 LINE",
"852 1130 LINE",
"768 979 LINE SMOOTH",
"683 828 OFFCURVE",
"466 828 QCURVE SMOOTH",
"348 828 OFFCURVE",
"348 930 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"442 1032 QCURVE",
"442 1032 LINE"
);
},
{
closed = 1;
nodes = (
"2882 714 LINE SMOOTH",
"2882 802 OFFCURVE",
"2782 856 QCURVE SMOOTH",
"2682 910 LINE",
"2682 992 LINE SMOOTH",
"2682 1032 OFFCURVE",
"2732 1032 QCURVE SMOOTH",
"2882 1032 LINE",
"2882 1130 LINE",
"2732 1130 LINE SMOOTH",
"2574 1130 OFFCURVE",
"2574 992 QCURVE SMOOTH",
"2574 857 LINE",
"2717 772 LINE SMOOTH",
"2764 744 OFFCURVE",
"2764 714 QCURVE SMOOTH",
"2764 323 LINE SMOOTH",
"2764 98 OFFCURVE",
"2492 98 QCURVE SMOOTH",
"2220 98 OFFCURVE",
"2220 323 QCURVE SMOOTH",
"2220 807 LINE SMOOTH",
"2220 1130 OFFCURVE",
"1825 1130 QCURVE SMOOTH",
"1430 1130 OFFCURVE",
"1430 807 QCURVE SMOOTH",
"1430 238 LINE SMOOTH",
"1430 0 OFFCURVE",
"1670 0 QCURVE SMOOTH",
"1800 0 LINE",
"1800 98 LINE",
"1670 98 LINE SMOOTH",
"1548 98 OFFCURVE",
"1548 238 QCURVE SMOOTH",
"1548 807 LINE SMOOTH",
"1548 1032 OFFCURVE",
"1825 1032 QCURVE SMOOTH",
"2102 1032 OFFCURVE",
"2102 807 QCURVE SMOOTH",
"2102 323 LINE SMOOTH",
"2102 0 OFFCURVE",
"2492 0 QCURVE SMOOTH",
"2882 0 OFFCURVE",
"2882 323 QCURVE",
"2882 323 LINE"
);
}
);
width = 4300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"495 1072 LINE",
"495 1130 LINE",
"442 1130 LINE SMOOTH",
"260 1130 OFFCURVE",
"260 930 QCURVE SMOOTH",
"262 730 OFFCURVE",
"466 730 QCURVE SMOOTH",
"713 730 OFFCURVE",
"882 1006 QCURVE",
"882 0 LINE",
"940 0 LINE",
"940 1130 LINE",
"882 1130 LINE",
"788 979 LINE SMOOTH",
"669 788 OFFCURVE",
"466 788 QCURVE SMOOTH",
"318 788 OFFCURVE",
"318 930 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"442 1072 QCURVE",
"442 1072 LINE"
);
},
{
closed = 1;
nodes = (
"2837 714 LINE SMOOTH",
"2837 769 OFFCURVE",
"2727 837 QCURVE SMOOTH",
"2617 903 LINE",
"2617 992 LINE SMOOTH",
"2617 1072 OFFCURVE",
"2717 1072 QCURVE SMOOTH",
"2867 1072 LINE",
"2867 1130 LINE",
"2717 1130 LINE SMOOTH",
"2559 1130 OFFCURVE",
"2559 992 QCURVE SMOOTH",
"2559 869 LINE",
"2697 786 LINE SMOOTH",
"2779 737 OFFCURVE",
"2779 714 QCURVE SMOOTH",
"2779 323 LINE SMOOTH",
"2779 58 OFFCURVE",
"2477 58 QCURVE SMOOTH",
"2175 58 OFFCURVE",
"2175 323 QCURVE SMOOTH",
"2175 807 LINE SMOOTH",
"2175 1130 OFFCURVE",
"1810 1130 QCURVE SMOOTH",
"1445 1130 OFFCURVE",
"1445 807 QCURVE SMOOTH",
"1445 238 LINE SMOOTH",
"1445 0 OFFCURVE",
"1655 0 QCURVE SMOOTH",
"1785 0 LINE",
"1785 58 LINE",
"1655 58 LINE SMOOTH",
"1503 58 OFFCURVE",
"1503 238 QCURVE SMOOTH",
"1503 807 LINE SMOOTH",
"1503 1072 OFFCURVE",
"1810 1072 QCURVE SMOOTH",
"2117 1072 OFFCURVE",
"2117 807 QCURVE SMOOTH",
"2117 323 LINE SMOOTH",
"2117 0 OFFCURVE",
"2477 0 QCURVE SMOOTH",
"2837 0 OFFCURVE",
"2837 323 QCURVE",
"2837 323 LINE"
);
},
{
closed = 1;
nodes = (
"3595 1072 LINE",
"3595 1130 LINE",
"3542 1130 LINE SMOOTH",
"3360 1130 OFFCURVE",
"3360 930 QCURVE SMOOTH",
"3360 730 OFFCURVE",
"3566 730 QCURVE SMOOTH",
"3813 730 OFFCURVE",
"3982 1006 QCURVE",
"3982 0 LINE",
"4040 0 LINE",
"4040 1130 LINE",
"3982 1130 LINE",
"3888 979 LINE SMOOTH",
"3769 788 OFFCURVE",
"3566 788 QCURVE SMOOTH",
"3418 788 OFFCURVE",
"3418 930 QCURVE SMOOTH",
"3418 1072 OFFCURVE",
"3542 1072 QCURVE",
"3542 1072 LINE"
);
}
);
width = 4300;
}
);
note = uni17D8;
unicode = 17D8;
},
{
glyphname = uni17D9;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1390 0 OFFCURVE",
"1390 580 QCURVE SMOOTH",
"1390 1160 OFFCURVE",
"750 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 580 QCURVE SMOOTH",
"110 0 OFFCURVE",
"750 0 QCURVE",
"750 0 LINE"
);
},
{
closed = 1;
nodes = (
"1163 1016 OFFCURVE",
"1163 580 QCURVE SMOOTH",
"1163 144 OFFCURVE",
"750 144 QCURVE SMOOTH",
"338 144 OFFCURVE",
"338 580 QCURVE SMOOTH",
"338 1016 OFFCURVE",
"750 1016 QCURVE",
"750 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1095 205 OFFCURVE",
"1095 580 QCURVE SMOOTH",
"1095 955 OFFCURVE",
"750 955 QCURVE SMOOTH",
"405 955 OFFCURVE",
"405 580 QCURVE SMOOTH",
"405 205 OFFCURVE",
"750 205 QCURVE",
"750 205 LINE"
);
},
{
closed = 1;
nodes = (
"868 811 OFFCURVE",
"868 580 QCURVE SMOOTH",
"868 349 OFFCURVE",
"750 349 QCURVE SMOOTH",
"633 349 OFFCURVE",
"633 580 QCURVE SMOOTH",
"633 811 OFFCURVE",
"750 811 QCURVE",
"750 811 LINE"
);
}
);
width = 1500;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1360 0 OFFCURVE",
"1360 565 QCURVE SMOOTH",
"1360 1130 OFFCURVE",
"750 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 565 QCURVE SMOOTH",
"140 0 OFFCURVE",
"750 0 QCURVE",
"750 0 LINE"
);
},
{
closed = 1;
nodes = (
"1163 990 OFFCURVE",
"1163 565 QCURVE SMOOTH",
"1163 140 OFFCURVE",
"750 140 QCURVE SMOOTH",
"338 140 OFFCURVE",
"338 565 QCURVE SMOOTH",
"338 990 OFFCURVE",
"750 990 QCURVE",
"750 990 LINE"
);
},
{
closed = 1;
nodes = (
"1065 200 OFFCURVE",
"1065 565 QCURVE SMOOTH",
"1065 930 OFFCURVE",
"750 930 QCURVE SMOOTH",
"435 930 OFFCURVE",
"435 565 QCURVE SMOOTH",
"435 200 OFFCURVE",
"750 200 QCURVE",
"750 200 LINE"
);
},
{
closed = 1;
nodes = (
"868 790 OFFCURVE",
"868 565 QCURVE SMOOTH",
"868 340 OFFCURVE",
"750 340 QCURVE SMOOTH",
"633 340 OFFCURVE",
"633 565 QCURVE SMOOTH",
"633 790 OFFCURVE",
"750 790 QCURVE",
"750 790 LINE"
);
}
);
width = 1500;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1300 0 OFFCURVE",
"1300 565 QCURVE SMOOTH",
"1300 1130 OFFCURVE",
"750 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 565 QCURVE SMOOTH",
"200 0 OFFCURVE",
"750 0 QCURVE",
"750 0 LINE"
);
},
{
closed = 1;
nodes = (
"1163 1030 OFFCURVE",
"1163 565 QCURVE SMOOTH",
"1163 100 OFFCURVE",
"750 100 QCURVE SMOOTH",
"338 100 OFFCURVE",
"338 565 QCURVE SMOOTH",
"338 1030 OFFCURVE",
"750 1030 QCURVE",
"750 1030 LINE"
);
},
{
closed = 1;
nodes = (
"1025 200 OFFCURVE",
"1025 565 QCURVE SMOOTH",
"1025 930 OFFCURVE",
"750 930 QCURVE SMOOTH",
"475 930 OFFCURVE",
"475 565 QCURVE SMOOTH",
"475 200 OFFCURVE",
"750 200 QCURVE",
"750 200 LINE"
);
},
{
closed = 1;
nodes = (
"888 830 OFFCURVE",
"888 565 QCURVE SMOOTH",
"888 300 OFFCURVE",
"750 300 QCURVE SMOOTH",
"613 300 OFFCURVE",
"613 565 QCURVE SMOOTH",
"613 830 OFFCURVE",
"750 830 QCURVE",
"750 830 LINE"
);
}
);
width = 1500;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1290 0 OFFCURVE",
"1290 565 QCURVE SMOOTH",
"1290 1130 OFFCURVE",
"750 1130 QCURVE SMOOTH",
"210 1130 OFFCURVE",
"210 565 QCURVE SMOOTH",
"210 0 OFFCURVE",
"750 0 QCURVE",
"750 0 LINE"
);
},
{
closed = 1;
nodes = (
"1183 1040 OFFCURVE",
"1183 565 QCURVE SMOOTH",
"1183 90 OFFCURVE",
"750 90 QCURVE SMOOTH",
"318 90 OFFCURVE",
"318 565 QCURVE SMOOTH",
"318 1040 OFFCURVE",
"750 1040 QCURVE",
"750 1040 LINE"
);
},
{
closed = 1;
nodes = (
"1015 200 OFFCURVE",
"1015 565 QCURVE SMOOTH",
"1015 930 OFFCURVE",
"750 930 QCURVE SMOOTH",
"485 930 OFFCURVE",
"485 565 QCURVE SMOOTH",
"485 200 OFFCURVE",
"750 200 QCURVE",
"750 200 LINE"
);
},
{
closed = 1;
nodes = (
"908 840 OFFCURVE",
"908 565 QCURVE SMOOTH",
"908 290 OFFCURVE",
"750 290 QCURVE SMOOTH",
"593 290 OFFCURVE",
"593 565 QCURVE SMOOTH",
"593 840 OFFCURVE",
"750 840 QCURVE",
"750 840 LINE"
);
}
);
width = 1500;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1260 0 OFFCURVE",
"1260 565 QCURVE SMOOTH",
"1260 1130 OFFCURVE",
"750 1130 QCURVE SMOOTH",
"240 1130 OFFCURVE",
"240 565 QCURVE SMOOTH",
"240 0 OFFCURVE",
"750 0 QCURVE",
"750 0 LINE"
);
},
{
closed = 1;
nodes = (
"1202 1072 OFFCURVE",
"1202 565 QCURVE SMOOTH",
"1202 58 OFFCURVE",
"750 58 QCURVE SMOOTH",
"298 58 OFFCURVE",
"298 565 QCURVE SMOOTH",
"298 1072 OFFCURVE",
"750 1072 QCURVE",
"750 1072 LINE"
);
},
{
closed = 1;
nodes = (
"996 200 OFFCURVE",
"996 565 QCURVE SMOOTH",
"996 930 OFFCURVE",
"750 930 QCURVE SMOOTH",
"505 930 OFFCURVE",
"505 565 QCURVE SMOOTH",
"505 200 OFFCURVE",
"750 200 QCURVE",
"750 200 LINE"
);
},
{
closed = 1;
nodes = (
"938 872 OFFCURVE",
"938 565 QCURVE SMOOTH",
"938 258 OFFCURVE",
"750 258 QCURVE SMOOTH",
"563 258 OFFCURVE",
"563 565 QCURVE SMOOTH",
"563 872 OFFCURVE",
"750 872 QCURVE",
"750 872 LINE"
);
}
);
width = 1500;
}
);
note = uni17D9;
unicode = 17D9;
},
{
glyphname = uni17DA;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 1160 OFFCURVE",
"110 844 QCURVE SMOOTH",
"110 316 LINE SMOOTH",
"110 0 OFFCURVE",
"575 0 QCURVE",
"595 -4 OFFCURVE",
"622 -4 QCURVE SMOOTH",
"939 -4 OFFCURVE",
"1388 739 QCURVE",
"1701 106 LINE",
"1826 106 LINE",
"2013 554 LINE",
"2200 211 LINE",
"2326 211 LINE",
"2451 495 LINE",
"2669 495 LINE",
"2669 723 LINE",
"2389 723 LINE",
"2263 578 LINE",
"2075 945 LINE",
"1950 945 LINE",
"1764 466 LINE",
"1451 1051 LINE",
"1325 1051 LINE",
"762 164 OFFCURVE",
"578 164 QCURVE SMOOTH",
"415 164 OFFCURVE",
"415 316 QCURVE SMOOTH",
"415 844 LINE SMOOTH",
"415 993 OFFCURVE",
"578 993 QCURVE SMOOTH",
"706 993 OFFCURVE",
"706 844 QCURVE SMOOTH",
"706 769 OFFCURVE",
"641 769 QCURVE",
"641 602 LINE",
"1014 602 OFFCURVE",
"1014 841 QCURVE SMOOTH",
"1014 1160 OFFCURVE",
"575 1160 QCURVE",
"575 1160 LINE"
);
}
);
width = 2779;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 1129 OFFCURVE",
"140 821 QCURVE SMOOTH",
"140 308 LINE SMOOTH",
"140 0 OFFCURVE",
"575 0 QCURVE SMOOTH",
"903 0 OFFCURVE",
"1388 778 QCURVE",
"1701 103 LINE",
"1826 103 LINE",
"2013 598 LINE",
"2200 205 LINE",
"2326 205 LINE",
"2451 511 LINE",
"2639 511 LINE",
"2639 674 LINE",
"2389 674 LINE",
"2263 504 LINE",
"2075 920 LINE",
"1950 920 LINE",
"1764 395 LINE",
"1451 1023 LINE",
"1325 1023 LINE",
"763 160 OFFCURVE",
"578 160 QCURVE SMOOTH",
"385 160 OFFCURVE",
"385 308 QCURVE SMOOTH",
"385 821 LINE SMOOTH",
"385 966 OFFCURVE",
"578 966 QCURVE SMOOTH",
"766 966 OFFCURVE",
"766 821 QCURVE SMOOTH",
"766 748 OFFCURVE",
"641 748 QCURVE",
"641 586 LINE",
"1014 586 OFFCURVE",
"1014 819 QCURVE SMOOTH",
"1014 1129 OFFCURVE",
"575 1129 QCURVE",
"575 1129 LINE"
);
}
);
width = 2779;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 1129 OFFCURVE",
"200 821 QCURVE SMOOTH",
"200 308 LINE SMOOTH",
"200 0 OFFCURVE",
"575 0 QCURVE SMOOTH",
"903 0 OFFCURVE",
"1179 511 QCURVE SMOOTH",
"1388 898 LINE",
"1701 103 LINE",
"1826 103 LINE",
"2013 718 LINE",
"2200 205 LINE",
"2326 205 LINE",
"2451 511 LINE",
"2639 511 LINE SMOOTH",
"2700 511 OFFCURVE",
"2700 563 QCURVE SMOOTH",
"2700 614 OFFCURVE",
"2639 614 QCURVE SMOOTH",
"2389 614 LINE",
"2263 384 LINE",
"2075 920 LINE",
"1950 920 LINE",
"1764 275 LINE",
"1451 1023 LINE",
"1325 1023 LINE",
"1079 563 LINE SMOOTH",
"954 326 OFFCURVE",
"703 100 OFFCURVE",
"578 100 QCURVE SMOOTH",
"325 100 OFFCURVE",
"325 308 QCURVE SMOOTH",
"325 821 LINE SMOOTH",
"325 1026 OFFCURVE",
"578 1026 QCURVE SMOOTH",
"826 1026 OFFCURVE",
"826 821 QCURVE SMOOTH",
"826 718 OFFCURVE",
"641 718 QCURVE SMOOTH",
"578 718 OFFCURVE",
"578 667 QCURVE SMOOTH",
"578 616 OFFCURVE",
"641 616 QCURVE SMOOTH",
"954 616 OFFCURVE",
"954 819 QCURVE SMOOTH",
"954 1129 OFFCURVE",
"575 1129 QCURVE",
"575 1129 LINE"
);
}
);
width = 2900;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"200 1129 OFFCURVE",
"200 821 QCURVE SMOOTH",
"200 308 LINE SMOOTH",
"200 0 OFFCURVE",
"575 0 QCURVE SMOOTH",
"903 0 OFFCURVE",
"1179 511 QCURVE SMOOTH",
"1388 898 LINE",
"1701 103 LINE",
"1826 103 LINE",
"2013 718 LINE",
"2200 205 LINE",
"2286 205 LINE",
"2431 511 LINE",
"2619 511 LINE SMOOTH",
"2680 511 OFFCURVE",
"2680 563 QCURVE SMOOTH",
"2680 614 OFFCURVE",
"2619 614 QCURVE SMOOTH",
"2369 614 LINE",
"2243 384 LINE",
"2055 920 LINE",
"1950 920 LINE",
"1764 275 LINE",
"1451 1023 LINE",
"1325 1023 LINE",
"1079 563 LINE SMOOTH",
"954 326 OFFCURVE",
"703 100 OFFCURVE",
"578 100 QCURVE SMOOTH",
"315 100 OFFCURVE",
"315 308 QCURVE SMOOTH",
"315 821 LINE SMOOTH",
"315 1026 OFFCURVE",
"578 1026 QCURVE SMOOTH",
"836 1026 OFFCURVE",
"836 851 QCURVE SMOOTH",
"836 718 OFFCURVE",
"641 718 QCURVE SMOOTH",
"578 718 OFFCURVE",
"578 667 QCURVE SMOOTH",
"578 616 OFFCURVE",
"641 616 QCURVE SMOOTH",
"954 616 OFFCURVE",
"954 849 QCURVE SMOOTH",
"954 1129 OFFCURVE",
"575 1129 QCURVE",
"575 1129 LINE"
);
}
);
width = 2900;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"230 1129 OFFCURVE",
"230 821 QCURVE SMOOTH",
"230 308 LINE SMOOTH",
"230 0 OFFCURVE",
"575 0 QCURVE SMOOTH",
"903 0 OFFCURVE",
"1179 511 QCURVE SMOOTH",
"1388 898 LINE",
"1701 103 LINE",
"1766 103 LINE",
"1983 808 LINE",
"2200 205 LINE",
"2246 205 LINE",
"2411 531 LINE",
"2619 531 LINE SMOOTH",
"2680 531 OFFCURVE",
"2680 563 QCURVE SMOOTH",
"2680 594 OFFCURVE",
"2619 594 QCURVE SMOOTH",
"2369 594 LINE",
"2233 304 LINE",
"1995 920 LINE",
"1950 920 LINE",
"1734 225 LINE",
"1411 1023 LINE",
"1365 1023 LINE",
"1119 563 LINE SMOOTH",
"1036 407 OFFCURVE",
"848 180 OFFCURVE",
"661 60 OFFCURVE",
"578 60 QCURVE SMOOTH",
"295 60 OFFCURVE",
"295 308 QCURVE SMOOTH",
"295 821 LINE SMOOTH",
"295 1066 OFFCURVE",
"578 1066 QCURVE SMOOTH",
"866 1066 OFFCURVE",
"866 851 QCURVE SMOOTH",
"866 698 OFFCURVE",
"641 698 QCURVE SMOOTH",
"578 698 OFFCURVE",
"578 667 QCURVE SMOOTH",
"578 636 OFFCURVE",
"641 636 QCURVE SMOOTH",
"924 636 OFFCURVE",
"924 849 QCURVE SMOOTH",
"924 1129 OFFCURVE",
"575 1129 QCURVE",
"575 1129 LINE"
);
}
);
width = 2900;
}
);
note = uni17DA;
unicode = 17DA;
},
{
glyphname = uni17DB;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"600 426 LINE",
"600 654 LINE",
"528 654 LINE",
"528 704 LINE SMOOTH",
"528 772 OFFCURVE",
"428 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"160 704 LINE",
"160 654 LINE",
"40 654 LINE",
"40 426 LINE",
"160 426 LINE",
"160 298 LINE SMOOTH",
"160 258 OFFCURVE",
"108 258 QCURVE SMOOTH",
"20 258 LINE",
"20 0 LINE",
"198 0 LINE SMOOTH",
"528 0 OFFCURVE",
"528 298 QCURVE SMOOTH",
"528 426 LINE",
"528 426 LINE"
);
}
);
width = 638;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"70 639 LINE",
"70 441 LINE",
"190 441 LINE",
"190 268 LINE SMOOTH",
"190 228 OFFCURVE",
"108 228 QCURVE SMOOTH",
"30 228 LINE",
"30 0 LINE",
"168 0 LINE SMOOTH",
"498 0 OFFCURVE",
"498 268 QCURVE SMOOTH",
"498 441 LINE",
"590 441 LINE",
"590 639 LINE",
"498 639 LINE",
"498 714 LINE SMOOTH",
"498 782 OFFCURVE",
"398 836 QCURVE SMOOTH",
"298 890 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 972 QCURVE SMOOTH",
"30 837 LINE",
"190 714 LINE",
"190 639 LINE",
"190 639 LINE"
);
}
);
width = 638;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"332 321 OFFCURVE",
"332 241 QCURVE SMOOTH",
"332 200 LINE SMOOTH",
"332 138 OFFCURVE",
"290 138 QCURVE SMOOTH",
"248 138 OFFCURVE",
"248 240 QCURVE SMOOTH",
"248 321 OFFCURVE",
"290 321 QCURVE",
"290 321 LINE"
);
},
{
closed = 1;
nodes = (
"332 456 LINE",
"312 459 OFFCURVE",
"290 459 QCURVE SMOOTH",
"100 459 OFFCURVE",
"100 240 QCURVE SMOOTH",
"100 0 OFFCURVE",
"290 0 QCURVE SMOOTH",
"520 0 OFFCURVE",
"520 200 QCURVE SMOOTH",
"520 531 LINE",
"620 531 LINE",
"620 669 LINE",
"520 669 LINE",
"520 721 LINE SMOOTH",
"520 782 OFFCURVE",
"404 846 QCURVE SMOOTH",
"288 910 LINE",
"288 937 LINE SMOOTH",
"288 992 OFFCURVE",
"340 992 QCURVE SMOOTH",
"520 992 LINE",
"520 1130 LINE",
"340 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 937 QCURVE SMOOTH",
"100 857 LINE",
"332 694 LINE",
"332 669 LINE",
"100 669 LINE",
"100 531 LINE",
"332 531 LINE",
"332 531 LINE"
);
}
);
width = 720;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"100 599 LINE",
"100 501 LINE",
"290 501 LINE",
"290 188 LINE SMOOTH",
"290 108 OFFCURVE",
"218 108 QCURVE SMOOTH",
"100 108 LINE",
"100 0 LINE",
"218 0 LINE SMOOTH",
"408 0 OFFCURVE",
"408 188 QCURVE SMOOTH",
"408 501 LINE",
"540 501 LINE",
"540 599 LINE",
"408 599 LINE",
"408 714 LINE SMOOTH",
"408 802 OFFCURVE",
"308 856 QCURVE SMOOTH",
"208 910 LINE",
"208 992 LINE SMOOTH",
"208 1032 OFFCURVE",
"258 1032 QCURVE SMOOTH",
"408 1032 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"243 772 LINE SMOOTH",
"290 744 OFFCURVE",
"290 714 QCURVE SMOOTH",
"290 599 LINE",
"290 599 LINE"
);
}
);
width = 640;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"540 521 LINE",
"540 579 LINE",
"378 579 LINE",
"378 714 LINE SMOOTH",
"378 768 OFFCURVE",
"268 830 QCURVE SMOOTH",
"158 891 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"258 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"238 782 LINE SMOOTH",
"320 737 OFFCURVE",
"320 714 QCURVE SMOOTH",
"320 579 LINE",
"100 579 LINE",
"100 521 LINE",
"320 521 LINE",
"320 188 LINE SMOOTH",
"320 58 OFFCURVE",
"218 58 QCURVE SMOOTH",
"100 58 LINE",
"100 0 LINE",
"218 0 LINE SMOOTH",
"378 0 OFFCURVE",
"378 188 QCURVE SMOOTH",
"378 521 LINE",
"378 521 LINE"
);
}
);
width = 640;
}
);
note = uni17DB;
unicode = 17DB;
},
{
glyphname = uni17E0;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 380 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 380 QCURVE SMOOTH",
"1190 780 LINE SMOOTH",
"1190 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 780 QCURVE",
"110 780 LINE"
);
},
{
closed = 1;
nodes = (
"478 780 LINE SMOOTH",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 780 QCURVE SMOOTH",
"822 380 LINE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 380 QCURVE",
"478 380 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 750 LINE SMOOTH",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 750 QCURVE SMOOTH",
"852 380 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 380 QCURVE",
"448 380 LINE"
);
},
{
closed = 1;
nodes = (
"140 380 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 380 QCURVE SMOOTH",
"1160 750 LINE SMOOTH",
"1160 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 750 QCURVE",
"140 750 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 750 LINE SMOOTH",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 750 QCURVE SMOOTH",
"912 380 LINE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 380 QCURVE",
"388 380 LINE"
);
},
{
closed = 1;
nodes = (
"200 380 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 380 QCURVE SMOOTH",
"1100 750 LINE SMOOTH",
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 750 QCURVE",
"200 750 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 750 LINE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 750 QCURVE SMOOTH",
"952 380 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 380 QCURVE",
"348 380 LINE"
);
},
{
closed = 1;
nodes = (
"230 380 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 380 QCURVE SMOOTH",
"1070 750 LINE SMOOTH",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 750 QCURVE",
"230 750 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 380 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 380 QCURVE SMOOTH",
"1040 750 LINE SMOOTH",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 750 QCURVE",
"260 750 LINE"
);
},
{
closed = 1;
nodes = (
"318 750 LINE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 750 QCURVE SMOOTH",
"982 380 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 380 QCURVE",
"318 380 LINE"
);
}
);
width = 1300;
}
);
note = uni17E0;
unicode = 17E0;
},
{
glyphname = uni17E1;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"822 320 LINE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 320 QCURVE",
"110 320 LINE",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 320 QCURVE SMOOTH",
"1190 840 LINE SMOOTH",
"1190 1160 OFFCURVE",
"650 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 840 QCURVE SMOOTH",
"110 750 LINE SMOOTH",
"110 450 OFFCURVE",
"515 450 QCURVE SMOOTH",
"650 450 LINE",
"650 700 LINE",
"575 700 LINE SMOOTH",
"478 700 OFFCURVE",
"478 750 QCURVE SMOOTH",
"478 840 LINE SMOOTH",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 840 QCURVE",
"822 840 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"852 320 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 320 QCURVE",
"140 320 LINE",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 320 QCURVE SMOOTH",
"1160 810 LINE SMOOTH",
"1160 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 810 QCURVE SMOOTH",
"140 720 LINE SMOOTH",
"140 450 OFFCURVE",
"515 450 QCURVE SMOOTH",
"650 450 LINE",
"650 670 LINE",
"575 670 LINE SMOOTH",
"448 670 OFFCURVE",
"448 720 QCURVE SMOOTH",
"448 810 LINE SMOOTH",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 810 QCURVE",
"852 810 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 320 QCURVE",
"200 320 LINE",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 320 QCURVE SMOOTH",
"1100 810 LINE SMOOTH",
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 810 QCURVE SMOOTH",
"200 720 LINE SMOOTH",
"200 480 OFFCURVE",
"515 480 QCURVE SMOOTH",
"650 480 LINE",
"650 640 LINE",
"515 640 LINE SMOOTH",
"388 640 OFFCURVE",
"388 720 QCURVE SMOOTH",
"388 810 LINE SMOOTH",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 810 QCURVE SMOOTH",
"912 320 LINE",
"912 320 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 320 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 320 QCURVE",
"230 320 LINE",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 320 QCURVE SMOOTH",
"1070 810 LINE SMOOTH",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 810 QCURVE SMOOTH",
"230 720 LINE SMOOTH",
"230 490 OFFCURVE",
"515 490 QCURVE SMOOTH",
"650 490 LINE",
"650 600 LINE",
"515 600 LINE SMOOTH",
"348 600 OFFCURVE",
"348 720 QCURVE SMOOTH",
"348 810 LINE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 810 QCURVE",
"952 810 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"982 320 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 320 QCURVE",
"260 320 LINE",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 320 QCURVE SMOOTH",
"1040 810 LINE SMOOTH",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 810 QCURVE SMOOTH",
"260 720 LINE SMOOTH",
"260 510 OFFCURVE",
"515 510 QCURVE SMOOTH",
"650 510 LINE",
"650 568 LINE",
"515 568 LINE SMOOTH",
"318 568 OFFCURVE",
"318 720 QCURVE SMOOTH",
"318 810 LINE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 810 QCURVE",
"982 810 LINE"
);
}
);
width = 1300;
}
);
note = uni17E1;
unicode = 17E1;
},
{
glyphname = uni17E2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"40 1380 LINE",
"40 1140 LINE",
"110 1140 LINE",
"110 400 LINE SMOOTH",
"110 0 OFFCURVE",
"769 0 QCURVE SMOOTH",
"1428 0 OFFCURVE",
"1428 400 QCURVE SMOOTH",
"1428 1160 LINE",
"1081 1160 LINE",
"971 1046 LINE",
"840 1160 LINE",
"543 1160 LINE",
"543 500 LINE",
"924 500 LINE",
"924 740 LINE",
"840 740 LINE",
"840 902 LINE",
"971 788 LINE",
"1081 902 LINE",
"1081 400 LINE SMOOTH",
"1081 228 OFFCURVE",
"769 228 QCURVE SMOOTH",
"457 228 OFFCURVE",
"457 400 QCURVE SMOOTH",
"457 1230 LINE SMOOTH",
"457 1380 OFFCURVE",
"200 1380 QCURVE",
"200 1380 LINE"
);
}
);
width = 1538;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 400 LINE SMOOTH",
"140 0 OFFCURVE",
"769 0 QCURVE SMOOTH",
"1398 0 OFFCURVE",
"1398 400 QCURVE SMOOTH",
"1398 1130 LINE",
"1111 1130 LINE",
"971 1016 LINE",
"840 1130 LINE",
"543 1130 LINE",
"543 530 LINE",
"924 530 LINE",
"924 740 LINE",
"840 740 LINE",
"840 902 LINE",
"971 788 LINE",
"1111 902 LINE",
"1111 400 LINE SMOOTH",
"1111 198 OFFCURVE",
"769 198 QCURVE SMOOTH",
"427 198 OFFCURVE",
"427 400 QCURVE SMOOTH",
"427 1230 LINE SMOOTH",
"427 1380 OFFCURVE",
"200 1380 QCURVE SMOOTH",
"40 1380 LINE",
"40 1170 LINE",
"140 1170 LINE",
"140 1170 LINE"
);
}
);
width = 1538;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1338 1130 LINE",
"1150 1130 LINE",
"940 956 LINE",
"740 1130 LINE",
"542 1130 LINE",
"542 560 LINE",
"790 560 LINE",
"790 710 LINE",
"740 710 LINE",
"740 962 LINE",
"940 788 LINE",
"1150 962 LINE",
"1150 400 LINE SMOOTH",
"1150 138 OFFCURVE",
"769 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 400 QCURVE SMOOTH",
"388 1230 LINE SMOOTH",
"388 1380 OFFCURVE",
"200 1380 QCURVE SMOOTH",
"100 1380 LINE",
"100 1230 LINE",
"200 1230 LINE",
"200 400 LINE SMOOTH",
"200 0 OFFCURVE",
"769 0 QCURVE SMOOTH",
"1338 0 OFFCURVE",
"1338 400 QCURVE",
"1338 400 LINE"
);
}
);
width = 1538;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1308 1130 LINE",
"1190 1130 LINE",
"940 926 LINE",
"700 1130 LINE",
"572 1130 LINE",
"572 560 LINE",
"790 560 LINE",
"790 670 LINE",
"700 670 LINE",
"700 992 LINE",
"940 788 LINE",
"1190 992 LINE",
"1190 400 LINE SMOOTH",
"1190 98 OFFCURVE",
"769 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 400 QCURVE SMOOTH",
"348 1205 LINE SMOOTH",
"348 1380 OFFCURVE",
"165 1380 QCURVE SMOOTH",
"100 1380 LINE",
"100 1270 LINE",
"165 1270 LINE SMOOTH",
"230 1270 OFFCURVE",
"230 1205 QCURVE SMOOTH",
"230 400 LINE SMOOTH",
"230 0 OFFCURVE",
"769 0 QCURVE SMOOTH",
"1308 0 OFFCURVE",
"1308 400 QCURVE",
"1308 400 LINE"
);
}
);
width = 1538;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1278 1130 LINE",
"1220 1130 LINE",
"940 926 LINE",
"670 1130 LINE",
"602 1130 LINE",
"602 582 LINE",
"790 582 LINE",
"790 640 LINE",
"670 640 LINE",
"670 1052 LINE",
"940 848 LINE",
"1220 1052 LINE",
"1220 400 LINE SMOOTH",
"1220 58 OFFCURVE",
"769 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 400 QCURVE SMOOTH",
"318 1205 LINE SMOOTH",
"318 1380 OFFCURVE",
"165 1380 QCURVE SMOOTH",
"120 1380 LINE",
"120 1322 LINE",
"165 1322 LINE SMOOTH",
"260 1322 OFFCURVE",
"260 1205 QCURVE SMOOTH",
"260 400 LINE SMOOTH",
"260 0 OFFCURVE",
"769 0 QCURVE SMOOTH",
"1278 0 OFFCURVE",
"1278 400 QCURVE",
"1278 400 LINE"
);
}
);
width = 1538;
}
);
note = uni17E2;
unicode = 17E2;
},
{
glyphname = uni17E3;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"570 0 LINE",
"570 258 LINE",
"530 258 LINE SMOOTH",
"478 258 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 770 LINE SMOOTH",
"478 932 OFFCURVE",
"588 932 QCURVE SMOOTH",
"698 932 OFFCURVE",
"698 770 QCURVE SMOOTH",
"698 0 LINE",
"1066 0 LINE",
"1066 770 LINE SMOOTH",
"1066 932 OFFCURVE",
"1176 932 QCURVE SMOOTH",
"1286 932 OFFCURVE",
"1286 770 QCURVE SMOOTH",
"1286 0 LINE",
"1654 0 LINE",
"1654 770 LINE SMOOTH",
"1654 1160 OFFCURVE",
"1176 1160 QCURVE SMOOTH",
"976 1160 OFFCURVE",
"881 1071 QCURVE",
"786 1160 OFFCURVE",
"588 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 780 QCURVE",
"110 780 LINE"
);
}
);
width = 1764;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"530 0 QCURVE SMOOTH",
"570 0 LINE",
"570 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 770 LINE SMOOTH",
"448 932 OFFCURVE",
"588 932 QCURVE SMOOTH",
"728 932 OFFCURVE",
"728 770 QCURVE SMOOTH",
"728 0 LINE",
"1036 0 LINE",
"1036 770 LINE SMOOTH",
"1036 932 OFFCURVE",
"1176 932 QCURVE SMOOTH",
"1316 932 OFFCURVE",
"1316 770 QCURVE SMOOTH",
"1316 0 LINE",
"1624 0 LINE",
"1624 770 LINE SMOOTH",
"1624 1130 OFFCURVE",
"1176 1130 QCURVE SMOOTH",
"975 1130 OFFCURVE",
"881 1041 QCURVE",
"787 1130 OFFCURVE",
"588 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 780 QCURVE",
"140 780 LINE"
);
}
);
width = 1764;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"570 0 LINE",
"570 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 770 LINE SMOOTH",
"388 992 OFFCURVE",
"588 992 QCURVE SMOOTH",
"788 992 OFFCURVE",
"788 770 QCURVE SMOOTH",
"788 0 LINE",
"976 0 LINE",
"976 770 LINE SMOOTH",
"976 992 OFFCURVE",
"1176 992 QCURVE SMOOTH",
"1376 992 OFFCURVE",
"1376 770 QCURVE SMOOTH",
"1376 0 LINE",
"1564 0 LINE",
"1564 770 LINE SMOOTH",
"1564 1130 OFFCURVE",
"1176 1130 QCURVE SMOOTH",
"975 1130 OFFCURVE",
"881 1041 QCURVE",
"787 1130 OFFCURVE",
"588 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 780 QCURVE",
"200 780 LINE"
);
}
);
width = 1764;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"570 0 LINE",
"570 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 770 LINE SMOOTH",
"348 1032 OFFCURVE",
"588 1032 QCURVE SMOOTH",
"828 1032 OFFCURVE",
"828 770 QCURVE SMOOTH",
"828 0 LINE",
"946 0 LINE",
"946 770 LINE SMOOTH",
"946 1032 OFFCURVE",
"1176 1032 QCURVE SMOOTH",
"1416 1032 OFFCURVE",
"1416 770 QCURVE SMOOTH",
"1416 0 LINE",
"1534 0 LINE",
"1534 770 LINE SMOOTH",
"1534 1130 OFFCURVE",
"1176 1130 QCURVE SMOOTH",
"975 1130 OFFCURVE",
"881 1001 QCURVE",
"787 1130 OFFCURVE",
"588 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 780 QCURVE",
"230 780 LINE"
);
}
);
width = 1764;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"570 0 LINE",
"570 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 770 LINE SMOOTH",
"318 1072 OFFCURVE",
"588 1072 QCURVE SMOOTH",
"858 1072 OFFCURVE",
"858 770 QCURVE SMOOTH",
"858 0 LINE",
"916 0 LINE",
"916 770 LINE SMOOTH",
"916 1072 OFFCURVE",
"1176 1072 QCURVE SMOOTH",
"1446 1072 OFFCURVE",
"1446 770 QCURVE SMOOTH",
"1446 0 LINE",
"1504 0 LINE",
"1504 770 LINE SMOOTH",
"1503 1130 OFFCURVE",
"1176 1130 QCURVE SMOOTH",
"954 1130 OFFCURVE",
"881 971 QCURVE",
"808 1130 OFFCURVE",
"588 1130 QCURVE SMOOTH",
"262 1130 OFFCURVE",
"260 780 QCURVE",
"260 780 LINE"
);
}
);
width = 1764;
}
);
note = uni17E3;
unicode = 17E3;
},
{
glyphname = uni17E4;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"478 1240 LINE SMOOTH",
"478 1390 OFFCURVE",
"200 1390 QCURVE SMOOTH",
"30 1390 LINE",
"30 1200 LINE",
"110 1200 LINE",
"110 400 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1140 0 LINE",
"1190 228 LINE",
"978 438 OFFCURVE",
"978 519 QCURVE SMOOTH",
"978 740 LINE",
"1190 740 LINE",
"1190 968 LINE",
"840 968 LINE SMOOTH",
"610 968 OFFCURVE",
"610 740 QCURVE SMOOTH",
"610 519 LINE SMOOTH",
"610 389 OFFCURVE",
"900 228 QCURVE",
"650 228 LINE SMOOTH",
"478 228 OFFCURVE",
"478 400 QCURVE",
"478 400 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 1240 LINE SMOOTH",
"448 1390 OFFCURVE",
"200 1390 QCURVE SMOOTH",
"40 1390 LINE",
"40 1230 LINE",
"140 1230 LINE",
"140 400 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1110 0 LINE",
"1160 198 LINE",
"948 408 OFFCURVE",
"948 519 QCURVE SMOOTH",
"948 740 LINE",
"1160 740 LINE",
"1160 938 LINE",
"840 938 LINE SMOOTH",
"640 938 OFFCURVE",
"640 740 QCURVE SMOOTH",
"640 519 LINE SMOOTH",
"640 358 OFFCURVE",
"900 198 QCURVE",
"650 198 LINE SMOOTH",
"448 198 OFFCURVE",
"448 400 QCURVE",
"448 400 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 1240 LINE SMOOTH",
"388 1390 OFFCURVE",
"200 1390 QCURVE SMOOTH",
"100 1390 LINE",
"100 1230 LINE",
"200 1230 LINE",
"200 400 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1050 0 LINE",
"1100 138 LINE",
"888 408 OFFCURVE",
"888 519 QCURVE SMOOTH",
"888 800 LINE",
"1100 800 LINE",
"1100 938 LINE",
"900 938 LINE SMOOTH",
"700 938 OFFCURVE",
"700 800 QCURVE SMOOTH",
"700 519 LINE SMOOTH",
"700 358 OFFCURVE",
"940 138 QCURVE",
"650 138 LINE SMOOTH",
"388 138 OFFCURVE",
"388 400 QCURVE",
"388 400 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 1205 LINE SMOOTH",
"348 1380 OFFCURVE",
"165 1380 QCURVE SMOOTH",
"100 1380 LINE",
"100 1270 LINE",
"165 1270 LINE SMOOTH",
"230 1270 OFFCURVE",
"230 1205 QCURVE SMOOTH",
"230 400 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1020 0 LINE",
"1070 98 LINE",
"858 408 OFFCURVE",
"858 519 QCURVE SMOOTH",
"858 770 LINE SMOOTH",
"858 840 OFFCURVE",
"930 840 QCURVE SMOOTH",
"1070 840 LINE",
"1070 938 LINE",
"930 938 LINE SMOOTH",
"740 938 OFFCURVE",
"740 770 QCURVE SMOOTH",
"740 519 LINE SMOOTH",
"740 358 OFFCURVE",
"950 98 QCURVE",
"650 98 LINE SMOOTH",
"348 98 OFFCURVE",
"348 400 QCURVE",
"348 400 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 1205 LINE SMOOTH",
"318 1380 OFFCURVE",
"165 1380 QCURVE SMOOTH",
"120 1380 LINE",
"120 1322 LINE",
"165 1322 LINE SMOOTH",
"260 1322 OFFCURVE",
"260 1205 QCURVE SMOOTH",
"260 400 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"990 0 LINE",
"1040 58 LINE",
"828 347 OFFCURVE",
"828 519 QCURVE SMOOTH",
"828 770 LINE SMOOTH",
"828 880 OFFCURVE",
"930 880 QCURVE SMOOTH",
"1040 880 LINE",
"1040 938 LINE",
"930 938 LINE SMOOTH",
"770 938 OFFCURVE",
"770 770 QCURVE SMOOTH",
"770 519 LINE SMOOTH",
"770 318 OFFCURVE",
"970 58 QCURVE",
"650 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 400 QCURVE",
"318 400 LINE"
);
}
);
width = 1300;
}
);
note = uni17E4;
unicode = 17E4;
},
{
glyphname = uni17E5;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"478 820 LINE SMOOTH",
"478 870 OFFCURVE",
"502 934 QCURVE",
"615 845 OFFCURVE",
"770 845 QCURVE SMOOTH",
"1190 845 OFFCURVE",
"1190 1139 QCURVE SMOOTH",
"1190 1500 LINE",
"822 1500 LINE",
"822 1139 LINE SMOOTH",
"822 1043 OFFCURVE",
"770 1043 QCURVE SMOOTH",
"696 1043 OFFCURVE",
"645 1073 QCURVE",
"700 1104 OFFCURVE",
"700 1156 QCURVE SMOOTH",
"700 1330 OFFCURVE",
"480 1330 QCURVE SMOOTH",
"250 1330 OFFCURVE",
"250 1156 QCURVE SMOOTH",
"250 1094 OFFCURVE",
"318 1037 QCURVE",
"290 1027 OFFCURVE",
"275 1020 QCURVE",
"121 968 OFFCURVE",
"110 820 QCURVE",
"110 330 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1138 0 LINE",
"1190 198 LINE",
"1008 318 OFFCURVE",
"1008 400 QCURVE SMOOTH",
"1008 502 LINE",
"1190 502 LINE",
"1190 730 LINE",
"888 730 LINE SMOOTH",
"640 730 OFFCURVE",
"640 532 QCURVE SMOOTH",
"640 400 LINE SMOOTH",
"640 318 OFFCURVE",
"870 228 QCURVE",
"650 228 LINE SMOOTH",
"478 228 OFFCURVE",
"478 330 QCURVE",
"478 330 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 820 LINE SMOOTH",
"448 869 OFFCURVE",
"502 934 QCURVE",
"614 845 OFFCURVE",
"770 845 QCURVE SMOOTH",
"1160 845 OFFCURVE",
"1160 1139 QCURVE SMOOTH",
"1160 1500 LINE",
"852 1500 LINE",
"852 1139 LINE SMOOTH",
"852 1043 OFFCURVE",
"770 1043 QCURVE SMOOTH",
"696 1043 OFFCURVE",
"645 1073 QCURVE",
"700 1104 OFFCURVE",
"700 1156 QCURVE SMOOTH",
"700 1300 OFFCURVE",
"480 1300 QCURVE SMOOTH",
"250 1300 OFFCURVE",
"250 1156 QCURVE SMOOTH",
"250 1094 OFFCURVE",
"318 1037 QCURVE",
"297 1030 OFFCURVE",
"275 1020 QCURVE SMOOTH",
"150 967 OFFCURVE",
"140 820 QCURVE",
"140 330 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1108 0 LINE",
"1160 198 LINE",
"948 318 OFFCURVE",
"948 400 QCURVE SMOOTH",
"948 532 LINE",
"1160 532 LINE",
"1160 730 LINE",
"888 730 LINE SMOOTH",
"700 730 OFFCURVE",
"700 532 QCURVE SMOOTH",
"700 400 LINE SMOOTH",
"700 288 OFFCURVE",
"870 198 QCURVE",
"650 198 LINE SMOOTH",
"448 198 OFFCURVE",
"448 330 QCURVE",
"448 330 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 820 LINE SMOOTH",
"388 869 OFFCURVE",
"436 915 OFFCURVE",
"472 934 QCURVE",
"614 885 OFFCURVE",
"770 885 QCURVE SMOOTH",
"1100 885 OFFCURVE",
"1100 1139 QCURVE SMOOTH",
"1100 1500 LINE",
"912 1500 LINE",
"912 1139 LINE SMOOTH",
"912 1023 OFFCURVE",
"770 1023 QCURVE SMOOTH",
"696 1023 OFFCURVE",
"595 1053 QCURVE",
"670 1104 OFFCURVE",
"670 1156 QCURVE SMOOTH",
"670 1300 OFFCURVE",
"480 1300 QCURVE SMOOTH",
"300 1300 OFFCURVE",
"300 1156 QCURVE SMOOTH",
"300 1094 OFFCURVE",
"368 1037 QCURVE",
"347 1030 OFFCURVE",
"325 1020 QCURVE SMOOTH",
"200 967 OFFCURVE",
"200 820 QCURVE SMOOTH",
"200 330 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1048 0 LINE",
"1100 138 LINE",
"888 318 OFFCURVE",
"888 400 QCURVE SMOOTH",
"888 592 LINE",
"1100 592 LINE",
"1100 730 LINE",
"888 730 LINE SMOOTH",
"700 730 OFFCURVE",
"700 592 QCURVE SMOOTH",
"700 400 LINE SMOOTH",
"700 288 OFFCURVE",
"950 138 QCURVE",
"650 138 LINE SMOOTH",
"388 138 OFFCURVE",
"388 330 QCURVE",
"388 330 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 820 LINE SMOOTH",
"348 869 OFFCURVE",
"426 928 OFFCURVE",
"472 944 QCURVE",
"614 885 OFFCURVE",
"770 885 QCURVE SMOOTH",
"1070 885 OFFCURVE",
"1070 1139 QCURVE SMOOTH",
"1070 1500 LINE",
"952 1500 LINE",
"952 1139 LINE SMOOTH",
"952 983 OFFCURVE",
"770 983 QCURVE SMOOTH",
"696 983 OFFCURVE",
"565 1013 QCURVE",
"670 1064 OFFCURVE",
"670 1156 QCURVE SMOOTH",
"670 1300 OFFCURVE",
"480 1300 QCURVE SMOOTH",
"300 1300 OFFCURVE",
"300 1156 QCURVE SMOOTH",
"300 1064 OFFCURVE",
"398 1007 QCURVE",
"377 1000 OFFCURVE",
"355 990 QCURVE SMOOTH",
"230 937 OFFCURVE",
"230 820 QCURVE SMOOTH",
"230 330 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1018 0 LINE",
"1070 98 LINE",
"858 318 OFFCURVE",
"858 400 QCURVE SMOOTH",
"858 576 LINE SMOOTH",
"858 632 OFFCURVE",
"914 632 QCURVE SMOOTH",
"1070 632 LINE",
"1070 730 LINE",
"914 730 LINE SMOOTH",
"740 730 OFFCURVE",
"740 576 QCURVE SMOOTH",
"740 400 LINE SMOOTH",
"740 288 OFFCURVE",
"950 98 QCURVE",
"650 98 LINE SMOOTH",
"348 98 OFFCURVE",
"348 330 QCURVE",
"348 330 LINE"
);
},
{
closed = 1;
nodes = (
"567 1203 OFFCURVE",
"567 1156 QCURVE SMOOTH",
"567 1107 OFFCURVE",
"492 1067 QCURVE",
"407 1107 OFFCURVE",
"407 1156 QCURVE SMOOTH",
"407 1203 OFFCURVE",
"480 1203 QCURVE",
"480 1203 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 820 LINE SMOOTH",
"318 891 OFFCURVE",
"492 964 QCURVE",
"636 905 OFFCURVE",
"770 905 QCURVE SMOOTH",
"1040 905 OFFCURVE",
"1040 1139 QCURVE SMOOTH",
"1040 1500 LINE",
"982 1500 LINE",
"982 1139 LINE SMOOTH",
"982 963 OFFCURVE",
"770 963 QCURVE",
"754 961 OFFCURVE",
"744 961 QCURVE SMOOTH",
"677 961 OFFCURVE",
"565 1003 QCURVE",
"660 1044 OFFCURVE",
"660 1146 QCURVE SMOOTH",
"660 1300 OFFCURVE",
"480 1300 QCURVE SMOOTH",
"310 1300 OFFCURVE",
"310 1146 QCURVE SMOOTH",
"310 1044 OFFCURVE",
"418 997 QCURVE",
"260 937 OFFCURVE",
"260 820 QCURVE SMOOTH",
"260 330 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"988 0 LINE",
"1040 58 LINE",
"828 276 OFFCURVE",
"828 400 QCURVE SMOOTH",
"828 576 LINE SMOOTH",
"828 672 OFFCURVE",
"914 672 QCURVE SMOOTH",
"1040 672 LINE",
"1040 730 LINE",
"914 730 LINE SMOOTH",
"770 730 OFFCURVE",
"770 576 QCURVE SMOOTH",
"770 400 LINE SMOOTH",
"770 248 OFFCURVE",
"960 58 QCURVE",
"650 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 330 QCURVE",
"318 330 LINE"
);
},
{
closed = 1;
nodes = (
"602 1242 OFFCURVE",
"602 1146 QCURVE SMOOTH",
"602 1056 OFFCURVE",
"492 1026 QCURVE",
"368 1056 OFFCURVE",
"368 1146 QCURVE SMOOTH",
"368 1242 OFFCURVE",
"480 1242 QCURVE",
"480 1242 LINE"
);
}
);
width = 1300;
}
);
note = uni17E5;
unicode = 17E5;
},
{
glyphname = uni17E6;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"478 1480 LINE",
"110 1480 LINE",
"110 790 LINE",
"478 790 LINE",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 730 QCURVE SMOOTH",
"822 400 LINE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 335 QCURVE SMOOTH",
"478 442 OFFCURVE",
"610 442 QCURVE SMOOTH",
"700 442 LINE",
"700 670 LINE",
"550 670 LINE SMOOTH",
"110 670 OFFCURVE",
"110 335 QCURVE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 400 QCURVE SMOOTH",
"1190 730 LINE SMOOTH",
"1190 1160 OFFCURVE",
"690 1160 QCURVE SMOOTH",
"586 1160 OFFCURVE",
"478 1106 QCURVE",
"478 1106 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 790 LINE",
"448 790 LINE",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 730 QCURVE SMOOTH",
"852 400 LINE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 335 QCURVE SMOOTH",
"448 472 OFFCURVE",
"610 472 QCURVE SMOOTH",
"700 472 LINE",
"700 670 LINE",
"550 670 LINE SMOOTH",
"140 670 OFFCURVE",
"140 335 QCURVE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 400 QCURVE SMOOTH",
"1160 730 LINE SMOOTH",
"1160 1130 OFFCURVE",
"690 1130 QCURVE SMOOTH",
"556 1130 OFFCURVE",
"448 1076 QCURVE",
"448 1480 LINE",
"140 1480 LINE",
"140 1480 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 790 LINE",
"388 790 LINE",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 730 QCURVE SMOOTH",
"912 400 LINE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 335 QCURVE SMOOTH",
"388 532 OFFCURVE",
"550 532 QCURVE SMOOTH",
"700 532 LINE",
"700 670 LINE",
"550 670 LINE SMOOTH",
"200 670 OFFCURVE",
"200 335 QCURVE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 400 QCURVE SMOOTH",
"1100 730 LINE SMOOTH",
"1100 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"516 1130 OFFCURVE",
"388 1076 QCURVE",
"388 1480 LINE",
"200 1480 LINE",
"200 1480 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 790 LINE",
"348 790 LINE",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 730 QCURVE SMOOTH",
"952 400 LINE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 335 QCURVE SMOOTH",
"348 572 OFFCURVE",
"550 572 QCURVE SMOOTH",
"700 572 LINE",
"700 670 LINE",
"550 670 LINE SMOOTH",
"230 670 OFFCURVE",
"230 335 QCURVE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 400 QCURVE SMOOTH",
"1070 730 LINE SMOOTH",
"1070 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"416 1130 OFFCURVE",
"348 1016 QCURVE",
"348 1480 LINE",
"230 1480 LINE",
"230 1480 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 1480 LINE",
"260 1480 LINE",
"260 790 LINE",
"318 790 LINE",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 730 QCURVE SMOOTH",
"982 400 LINE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 335 QCURVE SMOOTH",
"318 592 OFFCURVE",
"550 592 QCURVE SMOOTH",
"700 592 LINE",
"700 650 LINE",
"550 650 LINE SMOOTH",
"260 650 OFFCURVE",
"260 335 QCURVE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 400 QCURVE SMOOTH",
"1040 730 LINE SMOOTH",
"1040 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"386 1130 OFFCURVE",
"318 986 QCURVE",
"318 986 LINE"
);
}
);
width = 1300;
}
);
note = uni17E6;
unicode = 17E6;
},
{
glyphname = uni17E7;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1086 833 LINE SMOOTH",
"1086 1160 OFFCURVE",
"802 1160 QCURVE SMOOTH",
"698 1160 OFFCURVE",
"598 1036 QCURVE",
"498 1160 OFFCURVE",
"396 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 833 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"436 0 QCURVE SMOOTH",
"553 0 LINE",
"553 258 LINE",
"490 258 LINE SMOOTH",
"447 258 OFFCURVE",
"447 298 QCURVE SMOOTH",
"447 833 LINE SMOOTH",
"447 900 OFFCURVE",
"460 900 QCURVE SMOOTH",
"472 900 OFFCURVE",
"545 806 QCURVE SMOOTH",
"569 775 OFFCURVE",
"598 775 QCURVE SMOOTH",
"627 775 OFFCURVE",
"651 806 QCURVE SMOOTH",
"724 900 OFFCURVE",
"737 900 QCURVE SMOOTH",
"749 900 OFFCURVE",
"749 833 QCURVE SMOOTH",
"749 260 LINE SMOOTH",
"749 0 OFFCURVE",
"1120 0 QCURVE SMOOTH",
"1490 0 OFFCURVE",
"1490 260 QCURVE SMOOTH",
"1490 1430 LINE",
"1183 1430 LINE",
"1183 260 LINE SMOOTH",
"1183 228 OFFCURVE",
"1120 228 QCURVE SMOOTH",
"1086 228 OFFCURVE",
"1086 260 QCURVE",
"1086 260 LINE"
);
}
);
width = 1600;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1056 833 LINE SMOOTH",
"1056 1130 OFFCURVE",
"802 1130 QCURVE SMOOTH",
"699 1130 OFFCURVE",
"598 1006 QCURVE",
"498 1130 OFFCURVE",
"396 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 833 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"436 0 QCURVE SMOOTH",
"553 0 LINE",
"553 228 LINE",
"490 228 LINE SMOOTH",
"417 228 OFFCURVE",
"417 298 QCURVE SMOOTH",
"417 833 LINE SMOOTH",
"417 900 OFFCURVE",
"446 900 QCURVE SMOOTH",
"472 900 OFFCURVE",
"545 806 QCURVE SMOOTH",
"569 775 OFFCURVE",
"598 775 QCURVE SMOOTH",
"627 775 OFFCURVE",
"651 806 QCURVE SMOOTH",
"725 900 OFFCURVE",
"751 900 QCURVE SMOOTH",
"779 900 OFFCURVE",
"779 833 QCURVE SMOOTH",
"779 260 LINE SMOOTH",
"779 0 OFFCURVE",
"1120 0 QCURVE SMOOTH",
"1460 0 OFFCURVE",
"1460 260 QCURVE SMOOTH",
"1460 1430 LINE",
"1183 1430 LINE",
"1183 260 LINE SMOOTH",
"1183 198 OFFCURVE",
"1120 198 QCURVE SMOOTH",
"1056 198 OFFCURVE",
"1056 260 QCURVE",
"1056 260 LINE"
);
}
);
width = 1600;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 853 LINE SMOOTH",
"388 980 OFFCURVE",
"447 980 QCURVE SMOOTH",
"493 980 OFFCURVE",
"569 886 QCURVE SMOOTH",
"595 855 OFFCURVE",
"625 855 QCURVE SMOOTH",
"655 855 OFFCURVE",
"681 886 QCURVE SMOOTH",
"758 980 OFFCURVE",
"804 980 QCURVE SMOOTH",
"862 980 OFFCURVE",
"862 853 QCURVE SMOOTH",
"862 200 LINE SMOOTH",
"862 0 OFFCURVE",
"1125 0 QCURVE SMOOTH",
"1400 0 OFFCURVE",
"1400 200 QCURVE SMOOTH",
"1400 1430 LINE",
"1212 1430 LINE",
"1212 200 LINE SMOOTH",
"1212 138 OFFCURVE",
"1131 138 QCURVE SMOOTH",
"1050 138 OFFCURVE",
"1050 200 QCURVE SMOOTH",
"1050 853 LINE SMOOTH",
"1050 1130 OFFCURVE",
"821 1130 QCURVE SMOOTH",
"731 1130 OFFCURVE",
"625 1006 QCURVE",
"520 1130 OFFCURVE",
"431 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 853 QCURVE",
"200 853 LINE"
);
}
);
width = 1600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 853 LINE SMOOTH",
"348 1020 OFFCURVE",
"432 1020 QCURVE SMOOTH",
"484 1020 OFFCURVE",
"574 896 QCURVE SMOOTH",
"604 855 OFFCURVE",
"625 855 QCURVE SMOOTH",
"646 855 OFFCURVE",
"676 896 QCURVE SMOOTH",
"767 1020 OFFCURVE",
"820 1020 QCURVE SMOOTH",
"902 1020 OFFCURVE",
"902 853 QCURVE SMOOTH",
"902 200 LINE SMOOTH",
"902 0 OFFCURVE",
"1125 0 QCURVE SMOOTH",
"1370 0 OFFCURVE",
"1370 200 QCURVE SMOOTH",
"1370 1430 LINE",
"1252 1430 LINE",
"1252 200 LINE SMOOTH",
"1252 98 OFFCURVE",
"1131 98 QCURVE SMOOTH",
"1020 98 OFFCURVE",
"1020 200 QCURVE SMOOTH",
"1020 853 LINE SMOOTH",
"1020 1130 OFFCURVE",
"820 1130 QCURVE SMOOTH",
"730 1130 OFFCURVE",
"625 986 QCURVE",
"521 1130 OFFCURVE",
"432 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 853 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE",
"348 238 LINE"
);
}
);
width = 1600;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 853 LINE SMOOTH",
"318 1072 OFFCURVE",
"432 1072 QCURVE SMOOTH",
"477 1072 OFFCURVE",
"574 948 QCURVE SMOOTH",
"605 909 OFFCURVE",
"625 907 QCURVE",
"645 909 OFFCURVE",
"676 948 QCURVE SMOOTH",
"773 1072 OFFCURVE",
"820 1072 QCURVE SMOOTH",
"932 1072 OFFCURVE",
"932 853 QCURVE SMOOTH",
"932 200 LINE SMOOTH",
"932 0 OFFCURVE",
"1125 0 QCURVE SMOOTH",
"1340 0 OFFCURVE",
"1340 200 QCURVE SMOOTH",
"1340 1430 LINE",
"1282 1430 LINE",
"1282 200 LINE SMOOTH",
"1282 58 OFFCURVE",
"1131 58 QCURVE SMOOTH",
"990 58 OFFCURVE",
"990 200 QCURVE SMOOTH",
"990 853 LINE SMOOTH",
"990 1130 OFFCURVE",
"820 1130 QCURVE SMOOTH",
"730 1130 OFFCURVE",
"625 986 QCURVE",
"522 1130 OFFCURVE",
"432 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 853 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE",
"318 238 LINE"
);
}
);
width = 1600;
}
);
note = uni17E7;
unicode = 17E7;
},
{
glyphname = uni17E8;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"110 0 LINE",
"509 0 LINE",
"651 120 LINE",
"792 0 LINE",
"1190 0 LINE",
"1190 410 LINE SMOOTH",
"1190 700 OFFCURVE",
"860 700 QCURVE SMOOTH",
"680 700 LINE",
"680 490 LINE",
"770 490 LINE SMOOTH",
"822 490 OFFCURVE",
"822 410 QCURVE SMOOTH",
"822 257 LINE",
"651 405 LINE",
"478 256 LINE",
"478 810 LINE SMOOTH",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 810 QCURVE",
"1190 810 LINE",
"1190 1480 LINE",
"822 1480 LINE",
"822 1106 LINE",
"725 1160 OFFCURVE",
"610 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 810 QCURVE",
"110 810 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"140 0 LINE",
"479 0 LINE",
"651 150 LINE",
"822 0 LINE",
"1160 0 LINE",
"1160 410 LINE SMOOTH",
"1160 700 OFFCURVE",
"860 700 QCURVE SMOOTH",
"680 700 LINE",
"680 490 LINE",
"800 490 LINE SMOOTH",
"852 490 OFFCURVE",
"852 410 QCURVE SMOOTH",
"852 227 LINE",
"651 405 LINE",
"448 226 LINE",
"448 810 LINE SMOOTH",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 810 QCURVE",
"1160 810 LINE",
"1160 1480 LINE",
"852 1480 LINE",
"852 1076 LINE",
"754 1130 OFFCURVE",
"610 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 810 QCURVE",
"140 810 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 0 LINE",
"419 0 LINE",
"651 210 LINE",
"882 0 LINE",
"1100 0 LINE",
"1100 470 LINE SMOOTH",
"1100 700 OFFCURVE",
"860 700 QCURVE SMOOTH",
"680 700 LINE",
"680 550 LINE",
"860 550 LINE SMOOTH",
"912 550 OFFCURVE",
"912 470 QCURVE SMOOTH",
"912 167 LINE",
"651 405 LINE",
"388 166 LINE",
"388 810 LINE SMOOTH",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 810 QCURVE",
"1100 810 LINE",
"1100 1480 LINE",
"912 1480 LINE",
"912 1076 LINE",
"784 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 810 QCURVE",
"200 810 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"230 0 LINE",
"349 0 LINE",
"651 280 LINE",
"952 0 LINE",
"1070 0 LINE",
"1070 470 LINE SMOOTH",
"1070 700 OFFCURVE",
"860 700 QCURVE SMOOTH",
"680 700 LINE",
"680 590 LINE",
"860 590 LINE SMOOTH",
"952 590 OFFCURVE",
"952 470 QCURVE SMOOTH",
"952 127 LINE",
"651 405 LINE",
"348 126 LINE",
"348 810 LINE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 810 QCURVE",
"1070 810 LINE",
"1070 1480 LINE",
"952 1480 LINE",
"952 1036 LINE",
"844 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 810 QCURVE",
"230 810 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"260 0 LINE",
"319 0 LINE",
"651 280 LINE",
"982 0 LINE",
"1040 0 LINE",
"1040 470 LINE SMOOTH",
"1040 680 OFFCURVE",
"860 680 QCURVE SMOOTH",
"680 680 LINE",
"680 622 LINE",
"860 622 LINE SMOOTH",
"982 622 OFFCURVE",
"982 470 QCURVE SMOOTH",
"982 77 LINE",
"651 355 LINE",
"318 76 LINE",
"318 810 LINE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 810 QCURVE",
"1040 810 LINE",
"1040 1480 LINE",
"982 1480 LINE",
"982 994 LINE",
"930 1068 OFFCURVE",
"768 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 810 QCURVE",
"260 810 LINE"
);
}
);
width = 1300;
}
);
note = uni17E8;
unicode = 17E8;
},
{
glyphname = uni17E9;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1190 872 LINE",
"1190 1440 LINE",
"822 1440 LINE",
"822 1122 LINE",
"693 1160 OFFCURVE",
"620 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 862 QCURVE",
"119 718 OFFCURVE",
"308 675 QCURVE",
"119 632 OFFCURVE",
"110 486 QCURVE",
"110 290 LINE SMOOTH",
"110 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1190 0 OFFCURVE",
"1190 253 QCURVE SMOOTH",
"1190 506 OFFCURVE",
"810 506 QCURVE SMOOTH",
"650 506 LINE",
"650 298 LINE",
"750 298 LINE SMOOTH",
"822 298 OFFCURVE",
"822 258 QCURVE SMOOTH",
"822 228 OFFCURVE",
"650 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 290 QCURVE SMOOTH",
"478 486 LINE SMOOTH",
"478 572 OFFCURVE",
"650 572 QCURVE SMOOTH",
"950 572 LINE",
"950 790 LINE",
"650 790 LINE SMOOTH",
"478 790 OFFCURVE",
"478 862 QCURVE SMOOTH",
"478 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"822 932 OFFCURVE",
"822 872 QCURVE",
"822 872 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"852 1092 LINE",
"724 1130 OFFCURVE",
"620 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 862 QCURVE",
"179 719 OFFCURVE",
"338 675 QCURVE",
"179 632 OFFCURVE",
"140 486 QCURVE",
"140 290 LINE SMOOTH",
"140 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1160 0 OFFCURVE",
"1160 253 QCURVE SMOOTH",
"1160 486 OFFCURVE",
"810 486 QCURVE SMOOTH",
"650 486 LINE",
"650 298 LINE",
"750 298 LINE SMOOTH",
"852 298 OFFCURVE",
"852 258 QCURVE SMOOTH",
"852 198 OFFCURVE",
"650 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 290 QCURVE SMOOTH",
"448 486 LINE SMOOTH",
"448 572 OFFCURVE",
"650 572 QCURVE SMOOTH",
"950 572 LINE",
"950 770 LINE",
"650 770 LINE SMOOTH",
"448 770 OFFCURVE",
"448 862 QCURVE SMOOTH",
"448 932 OFFCURVE",
"650 932 QCURVE SMOOTH",
"852 932 OFFCURVE",
"852 872 QCURVE",
"1160 872 LINE",
"1160 1440 LINE",
"852 1440 LINE",
"852 1440 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 1092 LINE",
"784 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 862 QCURVE",
"239 719 OFFCURVE",
"338 675 QCURVE",
"239 632 OFFCURVE",
"200 486 QCURVE",
"200 290 LINE SMOOTH",
"200 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1100 0 OFFCURVE",
"1100 253 QCURVE SMOOTH",
"1100 486 OFFCURVE",
"750 486 QCURVE SMOOTH",
"650 486 LINE",
"650 358 LINE",
"750 358 LINE SMOOTH",
"912 358 OFFCURVE",
"912 258 QCURVE SMOOTH",
"912 138 OFFCURVE",
"650 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 290 QCURVE SMOOTH",
"388 486 LINE SMOOTH",
"388 602 OFFCURVE",
"650 602 QCURVE SMOOTH",
"950 602 LINE",
"950 740 LINE",
"650 740 LINE SMOOTH",
"388 740 OFFCURVE",
"388 862 QCURVE SMOOTH",
"388 992 OFFCURVE",
"650 992 QCURVE SMOOTH",
"912 992 OFFCURVE",
"912 872 QCURVE",
"1100 872 LINE",
"1100 1440 LINE",
"912 1440 LINE",
"912 1440 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 1052 LINE",
"844 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 862 QCURVE",
"269 719 OFFCURVE",
"388 675 QCURVE",
"269 632 OFFCURVE",
"230 486 QCURVE",
"230 290 LINE SMOOTH",
"230 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1070 0 OFFCURVE",
"1070 253 QCURVE SMOOTH",
"1070 486 OFFCURVE",
"750 486 QCURVE SMOOTH",
"650 486 LINE",
"650 398 LINE",
"750 398 LINE SMOOTH",
"952 398 OFFCURVE",
"952 258 QCURVE SMOOTH",
"952 98 OFFCURVE",
"650 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 290 QCURVE SMOOTH",
"348 486 LINE SMOOTH",
"348 622 OFFCURVE",
"650 622 QCURVE SMOOTH",
"950 622 LINE",
"950 720 LINE",
"650 720 LINE SMOOTH",
"348 720 OFFCURVE",
"348 862 QCURVE SMOOTH",
"348 1032 OFFCURVE",
"650 1032 QCURVE SMOOTH",
"952 1032 OFFCURVE",
"952 872 QCURVE",
"1070 872 LINE",
"1070 1440 LINE",
"952 1440 LINE",
"952 1440 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1040 1440 LINE",
"982 1440 LINE",
"982 1022 LINE",
"874 1130 OFFCURVE",
"650 1130 QCURVE SMOOTH",
"261 1130 OFFCURVE",
"260 862 QCURVE SMOOTH",
"260 719 OFFCURVE",
"418 675 QCURVE",
"260 631 OFFCURVE",
"260 486 QCURVE SMOOTH",
"260 290 LINE SMOOTH",
"260 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"1040 0 OFFCURVE",
"1040 253 QCURVE SMOOTH",
"1040 486 OFFCURVE",
"750 486 QCURVE SMOOTH",
"650 486 LINE",
"650 428 LINE",
"750 428 LINE SMOOTH",
"982 428 OFFCURVE",
"982 258 QCURVE SMOOTH",
"982 58 OFFCURVE",
"650 58 QCURVE SMOOTH",
"318 58 OFFCURVE",
"318 290 QCURVE SMOOTH",
"318 486 LINE SMOOTH",
"318 642 OFFCURVE",
"650 642 QCURVE SMOOTH",
"950 642 LINE",
"950 700 LINE",
"650 700 LINE SMOOTH",
"318 700 OFFCURVE",
"318 862 QCURVE SMOOTH",
"318 1072 OFFCURVE",
"650 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 872 QCURVE",
"1040 872 LINE",
"1040 872 LINE"
);
}
);
width = 1300;
}
);
note = uni17E9;
unicode = 17E9;
},
{
glyphname = uni17D21780;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1170 -500 LINE",
"-822 -500 LINE",
"-822 -291 LINE SMOOTH",
"-822 -242 OFFCURVE",
"-650 -242 QCURVE SMOOTH",
"-478 -242 OFFCURVE",
"-478 -291 QCURVE SMOOTH",
"-478 -500 LINE",
"-130 -500 LINE",
"-130 -291 LINE SMOOTH",
"-130 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1170 -70 OFFCURVE",
"-1170 -291 QCURVE",
"-1170 -291 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1110 -500 LINE",
"-823 -500 LINE",
"-823 -302 LINE SMOOTH",
"-823 -219 OFFCURVE",
"-650 -219 QCURVE SMOOTH",
"-477 -219 OFFCURVE",
"-477 -302 QCURVE SMOOTH",
"-477 -500 LINE",
"-190 -500 LINE",
"-190 -302 LINE SMOOTH",
"-190 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1110 -70 OFFCURVE",
"-1110 -302 QCURVE",
"-1110 -302 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1050 -500 LINE",
"-883 -500 LINE",
"-883 -322 LINE SMOOTH",
"-883 -179 OFFCURVE",
"-650 -179 QCURVE SMOOTH",
"-417 -179 OFFCURVE",
"-417 -322 QCURVE SMOOTH",
"-417 -500 LINE",
"-250 -500 LINE",
"-250 -322 LINE SMOOTH",
"-250 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1050 -70 OFFCURVE",
"-1050 -322 QCURVE",
"-1050 -322 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-387 -500 LINE",
"-280 -500 LINE",
"-280 -267 LINE SMOOTH",
"-280 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1020 -70 OFFCURVE",
"-1020 -267 QCURVE SMOOTH",
"-1020 -500 LINE",
"-913 -500 LINE",
"-913 -267 LINE SMOOTH",
"-913 -155 OFFCURVE",
"-650 -155 QCURVE SMOOTH",
"-387 -155 OFFCURVE",
"-387 -267 QCURVE",
"-387 -267 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-358 -500 LINE",
"-300 -500 LINE",
"-300 -293 LINE SMOOTH",
"-300 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1000 -70 OFFCURVE",
"-1000 -293 QCURVE SMOOTH",
"-1000 -500 LINE",
"-942 -500 LINE",
"-942 -293 LINE SMOOTH",
"-942 -128 OFFCURVE",
"-650 -128 QCURVE SMOOTH",
"-358 -128 OFFCURVE",
"-358 -293 QCURVE",
"-358 -293 LINE"
);
}
);
width = 0;
}
);
note = uni17D21780;
},
{
glyphname = uni17D21781;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-812 -219 LINE",
"-812 -161 OFFCURVE",
"-650 -161 QCURVE SMOOTH",
"-488 -161 OFFCURVE",
"-488 -190 QCURVE SMOOTH",
"-488 -230 OFFCURVE",
"-829 -262 QCURVE SMOOTH",
"-1170 -294 OFFCURVE",
"-1170 -379 QCURVE SMOOTH",
"-1170 -500 OFFCURVE",
"-650 -500 QCURVE SMOOTH",
"-130 -500 OFFCURVE",
"-130 -350 QCURVE",
"-488 -350 LINE",
"-488 -409 OFFCURVE",
"-650 -409 QCURVE SMOOTH",
"-812 -409 OFFCURVE",
"-812 -379 QCURVE SMOOTH",
"-812 -353 OFFCURVE",
"-471 -315 QCURVE SMOOTH",
"-130 -276 OFFCURVE",
"-130 -190 QCURVE SMOOTH",
"-130 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1170 -70 OFFCURVE",
"-1170 -219 QCURVE",
"-1170 -219 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-812 -219 LINE",
"-812 -161 OFFCURVE",
"-650 -161 QCURVE SMOOTH",
"-488 -161 OFFCURVE",
"-488 -190 QCURVE SMOOTH",
"-488 -230 OFFCURVE",
"-1110 -293 OFFCURVE",
"-1110 -379 QCURVE SMOOTH",
"-1110 -500 OFFCURVE",
"-650 -500 QCURVE SMOOTH",
"-190 -500 OFFCURVE",
"-190 -350 QCURVE",
"-488 -350 LINE",
"-488 -409 OFFCURVE",
"-650 -409 QCURVE SMOOTH",
"-812 -409 OFFCURVE",
"-812 -379 QCURVE SMOOTH",
"-812 -353 OFFCURVE",
"-190 -276 OFFCURVE",
"-190 -190 QCURVE SMOOTH",
"-190 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1110 -70 OFFCURVE",
"-1110 -219 QCURVE",
"-1110 -219 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-872 -219 LINE",
"-872 -151 OFFCURVE",
"-650 -151 QCURVE SMOOTH",
"-428 -151 OFFCURVE",
"-428 -189 QCURVE SMOOTH",
"-428 -231 OFFCURVE",
"-1050 -294 OFFCURVE",
"-1050 -380 QCURVE SMOOTH",
"-1050 -500 OFFCURVE",
"-650 -500 QCURVE SMOOTH",
"-250 -500 OFFCURVE",
"-250 -349 QCURVE",
"-428 -349 LINE",
"-428 -419 OFFCURVE",
"-650 -419 QCURVE SMOOTH",
"-872 -419 OFFCURVE",
"-872 -380 QCURVE SMOOTH",
"-872 -353 OFFCURVE",
"-250 -275 OFFCURVE",
"-250 -189 QCURVE SMOOTH",
"-250 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1050 -70 OFFCURVE",
"-1050 -219 QCURVE",
"-1050 -219 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-902 -219 LINE",
"-902 -151 OFFCURVE",
"-650 -151 QCURVE SMOOTH",
"-398 -151 OFFCURVE",
"-398 -189 QCURVE SMOOTH",
"-398 -231 OFFCURVE",
"-1020 -294 OFFCURVE",
"-1020 -380 QCURVE SMOOTH",
"-1020 -500 OFFCURVE",
"-650 -500 QCURVE SMOOTH",
"-280 -500 OFFCURVE",
"-280 -349 QCURVE",
"-398 -349 LINE",
"-398 -419 OFFCURVE",
"-650 -419 QCURVE SMOOTH",
"-902 -419 OFFCURVE",
"-902 -380 QCURVE SMOOTH",
"-902 -353 OFFCURVE",
"-280 -275 OFFCURVE",
"-280 -189 QCURVE SMOOTH",
"-280 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1020 -70 OFFCURVE",
"-1020 -219 QCURVE",
"-1020 -219 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-942 -202 LINE",
"-942 -121 OFFCURVE",
"-650 -121 QCURVE SMOOTH",
"-358 -121 OFFCURVE",
"-358 -175 QCURVE SMOOTH",
"-358 -221 OFFCURVE",
"-679 -266 QCURVE",
"-1000 -290 OFFCURVE",
"-1000 -364 QCURVE SMOOTH",
"-1000 -500 OFFCURVE",
"-650 -500 QCURVE SMOOTH",
"-300 -500 OFFCURVE",
"-300 -337 QCURVE",
"-358 -337 LINE",
"-358 -449 OFFCURVE",
"-650 -449 QCURVE SMOOTH",
"-942 -449 OFFCURVE",
"-942 -364 QCURVE SMOOTH",
"-942 -332 OFFCURVE",
"-621 -300 QCURVE SMOOTH",
"-300 -270 OFFCURVE",
"-300 -175 QCURVE SMOOTH",
"-300 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1000 -70 OFFCURVE",
"-1000 -202 QCURVE",
"-1000 -202 LINE"
);
}
);
width = 0;
}
);
note = uni17D21781;
},
{
glyphname = uni17D21782;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-822 -273 LINE SMOOTH",
"-822 -220 OFFCURVE",
"-650 -220 QCURVE SMOOTH",
"-478 -220 OFFCURVE",
"-478 -273 QCURVE SMOOTH",
"-478 -500 LINE",
"-130 -500 LINE",
"-130 -273 LINE SMOOTH",
"-130 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1170 -70 OFFCURVE",
"-1170 -273 QCURVE SMOOTH",
"-1170 -500 LINE",
"-822 -500 LINE",
"-822 -485 LINE",
"-794 -419 OFFCURVE",
"-650 -419 QCURVE",
"-650 -269 LINE",
"-763 -269 OFFCURVE",
"-822 -324 QCURVE",
"-822 -324 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-823 -302 LINE SMOOTH",
"-823 -209 OFFCURVE",
"-650 -209 QCURVE SMOOTH",
"-477 -209 OFFCURVE",
"-477 -302 QCURVE SMOOTH",
"-477 -500 LINE",
"-190 -500 LINE",
"-190 -302 LINE SMOOTH",
"-190 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1110 -70 OFFCURVE",
"-1110 -302 QCURVE SMOOTH",
"-1110 -500 LINE",
"-823 -500 LINE",
"-823 -483 LINE",
"-794 -408 OFFCURVE",
"-650 -408 QCURVE",
"-650 -266 LINE",
"-763 -266 OFFCURVE",
"-823 -359 QCURVE",
"-823 -359 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-883 -293 LINE SMOOTH",
"-883 -166 OFFCURVE",
"-650 -166 QCURVE SMOOTH",
"-417 -166 OFFCURVE",
"-417 -293 QCURVE SMOOTH",
"-417 -500 LINE",
"-250 -500 LINE",
"-250 -293 LINE SMOOTH",
"-250 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1050 -70 OFFCURVE",
"-1050 -293 QCURVE SMOOTH",
"-1050 -500 LINE",
"-883 -500 LINE",
"-883 -482 LINE",
"-854 -383 OFFCURVE",
"-650 -383 QCURVE",
"-650 -275 LINE",
"-823 -275 OFFCURVE",
"-883 -353 QCURVE",
"-883 -353 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-913 -267 LINE SMOOTH",
"-913 -155 OFFCURVE",
"-650 -155 QCURVE SMOOTH",
"-387 -155 OFFCURVE",
"-387 -267 QCURVE SMOOTH",
"-387 -500 LINE",
"-280 -500 LINE",
"-280 -267 LINE SMOOTH",
"-280 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1020 -70 OFFCURVE",
"-1020 -267 QCURVE SMOOTH",
"-1020 -500 LINE",
"-913 -500 LINE",
"-913 -484 LINE",
"-884 -397 OFFCURVE",
"-650 -388 QCURVE",
"-650 -301 LINE",
"-853 -301 OFFCURVE",
"-913 -370 QCURVE",
"-913 -370 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-1000 -70 OFFCURVE",
"-1000 -293 QCURVE SMOOTH",
"-1000 -500 LINE",
"-942 -500 LINE",
"-942 -482 LINE",
"-860 -342 OFFCURVE",
"-640 -333 QCURVE",
"-640 -275 LINE",
"-849 -275 OFFCURVE",
"-942 -411 QCURVE",
"-942 -293 LINE SMOOTH",
"-942 -128 OFFCURVE",
"-650 -128 QCURVE SMOOTH",
"-358 -128 OFFCURVE",
"-358 -293 QCURVE SMOOTH",
"-358 -500 LINE",
"-300 -500 LINE",
"-300 -293 LINE SMOOTH",
"-300 -70 OFFCURVE",
"-650 -70 QCURVE",
"-650 -70 LINE"
);
}
);
width = 0;
}
);
note = uni17D21782;
},
{
glyphname = uni17D21783;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"20 827 LINE",
"160 704 LINE",
"160 -240 LINE SMOOTH",
"160 -259 OFFCURVE",
"110 -259 QCURVE SMOOTH",
"60 -259 OFFCURVE",
"60 -240 QCURVE SMOOTH",
"60 -70 LINE",
"-300 -70 LINE",
"-300 -240 LINE SMOOTH",
"-300 -259 OFFCURVE",
"-360 -259 QCURVE SMOOTH",
"-420 -259 OFFCURVE",
"-420 -240 QCURVE SMOOTH",
"-420 -70 LINE",
"-830 -70 LINE",
"-830 -207 LINE",
"-780 -207 LINE",
"-780 -240 LINE SMOOTH",
"-780 -500 OFFCURVE",
"-360 -500 QCURVE SMOOTH",
"-226 -500 OFFCURVE",
"-119 -448 QCURVE",
"-14 -500 OFFCURVE",
"130 -500 QCURVE SMOOTH",
"528 -500 OFFCURVE",
"528 -240 QCURVE SMOOTH",
"528 704 LINE SMOOTH",
"528 772 OFFCURVE",
"428 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE",
"20 962 LINE"
);
}
);
width = 638;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"190 -260 LINE SMOOTH",
"190 -309 OFFCURVE",
"130 -309 QCURVE SMOOTH",
"60 -309 OFFCURVE",
"60 -260 QCURVE SMOOTH",
"60 -70 LINE",
"-240 -70 LINE",
"-240 -260 LINE SMOOTH",
"-240 -309 OFFCURVE",
"-300 -309 QCURVE SMOOTH",
"-360 -309 OFFCURVE",
"-360 -260 QCURVE SMOOTH",
"-360 -70 LINE",
"-710 -70 LINE",
"-710 -227 LINE",
"-660 -227 LINE",
"-660 -260 LINE SMOOTH",
"-660 -500 OFFCURVE",
"-300 -500 QCURVE SMOOTH",
"-167 -500 OFFCURVE",
"-89 -448 QCURVE",
"18 -500 OFFCURVE",
"130 -500 QCURVE SMOOTH",
"498 -500 OFFCURVE",
"498 -260 QCURVE SMOOTH",
"498 704 LINE SMOOTH",
"498 772 OFFCURVE",
"398 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"190 704 LINE",
"190 704 LINE"
);
}
);
width = 638;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"438 734 LINE SMOOTH",
"438 802 OFFCURVE",
"338 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"250 734 LINE",
"250 -268 LINE SMOOTH",
"250 -367 OFFCURVE",
"150 -367 QCURVE SMOOTH",
"40 -367 OFFCURVE",
"40 -268 QCURVE SMOOTH",
"40 -70 LINE",
"-140 -70 LINE",
"-140 -268 LINE SMOOTH",
"-140 -367 OFFCURVE",
"-240 -367 QCURVE SMOOTH",
"-340 -367 OFFCURVE",
"-340 -268 QCURVE SMOOTH",
"-340 -70 LINE",
"-570 -70 LINE",
"-570 -150 LINE",
"-520 -150 LINE",
"-520 -268 LINE SMOOTH",
"-520 -500 OFFCURVE",
"-240 -500 QCURVE SMOOTH",
"-127 -500 OFFCURVE",
"-49 -450 QCURVE",
"38 -500 OFFCURVE",
"150 -500 QCURVE SMOOTH",
"438 -500 OFFCURVE",
"438 -268 QCURVE",
"438 -268 LINE"
);
}
);
width = 638;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"290 -303 LINE SMOOTH",
"290 -412 OFFCURVE",
"150 -412 QCURVE SMOOTH",
"0 -412 OFFCURVE",
"0 -303 QCURVE SMOOTH",
"0 -70 LINE",
"-100 -70 LINE",
"-100 -303 LINE SMOOTH",
"-100 -412 OFFCURVE",
"-240 -412 QCURVE SMOOTH",
"-370 -412 OFFCURVE",
"-370 -303 QCURVE SMOOTH",
"-370 -70 LINE",
"-570 -70 LINE",
"-570 -150 LINE",
"-480 -150 LINE",
"-480 -303 LINE SMOOTH",
"-480 -500 OFFCURVE",
"-240 -500 QCURVE SMOOTH",
"-127 -500 OFFCURVE",
"-49 -432 QCURVE",
"38 -500 OFFCURVE",
"150 -500 QCURVE SMOOTH",
"408 -500 OFFCURVE",
"408 -303 QCURVE SMOOTH",
"408 714 LINE SMOOTH",
"408 802 OFFCURVE",
"308 856 QCURVE SMOOTH",
"208 910 LINE",
"208 992 LINE SMOOTH",
"208 1032 OFFCURVE",
"258 1032 QCURVE SMOOTH",
"408 1032 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"243 772 LINE SMOOTH",
"290 744 OFFCURVE",
"290 714 QCURVE",
"290 714 LINE"
);
}
);
width = 638;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"408 1072 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"238 782 LINE SMOOTH",
"320 737 OFFCURVE",
"320 714 QCURVE SMOOTH",
"320 -277 LINE SMOOTH",
"320 -442 OFFCURVE",
"150 -442 QCURVE SMOOTH",
"-21 -442 OFFCURVE",
"-21 -277 QCURVE SMOOTH",
"-21 -70 LINE",
"-79 -70 LINE",
"-79 -277 LINE SMOOTH",
"-79 -442 OFFCURVE",
"-240 -442 QCURVE SMOOTH",
"-390 -442 OFFCURVE",
"-390 -277 QCURVE SMOOTH",
"-390 -70 LINE",
"-570 -70 LINE",
"-570 -128 LINE",
"-448 -128 LINE",
"-448 -277 LINE SMOOTH",
"-448 -500 OFFCURVE",
"-240 -500 QCURVE SMOOTH",
"-128 -500 OFFCURVE",
"-49 -423 QCURVE",
"39 -500 OFFCURVE",
"150 -500 QCURVE SMOOTH",
"378 -500 OFFCURVE",
"378 -277 QCURVE SMOOTH",
"378 714 LINE SMOOTH",
"378 768 OFFCURVE",
"268 830 QCURVE SMOOTH",
"158 891 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"258 1072 QCURVE",
"258 1072 LINE"
);
}
);
width = 638;
}
);
note = uni17D21783;
},
{
glyphname = uni17D21784;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-130 -500 OFFCURVE",
"-130 -70 QCURVE",
"-478 -70 LINE",
"-478 -316 OFFCURVE",
"-726 -316 QCURVE SMOOTH",
"-822 -316 OFFCURVE",
"-822 -280 QCURVE SMOOTH",
"-822 -239 OFFCURVE",
"-724 -239 QCURVE",
"-724 -93 LINE",
"-1170 -93 OFFCURVE",
"-1170 -280 QCURVE SMOOTH",
"-1170 -500 OFFCURVE",
"-726 -500 QCURVE",
"-726 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-190 -500 OFFCURVE",
"-190 -70 QCURVE",
"-477 -70 LINE",
"-477 -328 OFFCURVE",
"-726 -328 QCURVE SMOOTH",
"-823 -328 OFFCURVE",
"-823 -290 QCURVE SMOOTH",
"-823 -247 OFFCURVE",
"-724 -247 QCURVE",
"-724 -94 LINE",
"-1110 -94 OFFCURVE",
"-1110 -290 QCURVE SMOOTH",
"-1110 -500 OFFCURVE",
"-726 -500 QCURVE",
"-726 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-250 -500 OFFCURVE",
"-250 -70 QCURVE",
"-417 -70 LINE",
"-417 -370 OFFCURVE",
"-726 -370 QCURVE SMOOTH",
"-883 -370 OFFCURVE",
"-883 -290 QCURVE SMOOTH",
"-883 -215 OFFCURVE",
"-724 -215 QCURVE",
"-724 -95 LINE",
"-1050 -95 OFFCURVE",
"-1050 -290 QCURVE SMOOTH",
"-1050 -500 OFFCURVE",
"-726 -500 QCURVE",
"-726 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-280 -500 OFFCURVE",
"-280 -70 QCURVE",
"-387 -70 LINE",
"-387 -410 OFFCURVE",
"-726 -410 QCURVE SMOOTH",
"-913 -410 OFFCURVE",
"-913 -290 QCURVE SMOOTH",
"-913 -185 OFFCURVE",
"-724 -185 QCURVE",
"-724 -95 LINE",
"-1020 -95 OFFCURVE",
"-1020 -290 QCURVE SMOOTH",
"-1020 -500 OFFCURVE",
"-726 -500 QCURVE",
"-726 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-300 -500 OFFCURVE",
"-300 -70 QCURVE",
"-358 -70 LINE",
"-358 -449 OFFCURVE",
"-726 -449 QCURVE SMOOTH",
"-942 -449 OFFCURVE",
"-942 -296 QCURVE SMOOTH",
"-942 -143 OFFCURVE",
"-724 -143 QCURVE",
"-724 -92 LINE",
"-1000 -92 OFFCURVE",
"-1000 -296 QCURVE SMOOTH",
"-1000 -500 OFFCURVE",
"-726 -500 QCURVE",
"-726 -500 LINE"
);
}
);
width = 0;
}
);
note = uni17D21784;
},
{
glyphname = uni17D21785;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-313 -494 LINE",
"-108 -383 LINE",
"-219 -279 LINE",
"-135 -209 OFFCURVE",
"-135 -180 QCURVE SMOOTH",
"-135 -124 OFFCURVE",
"-256 -70 OFFCURVE",
"-388 -70 QCURVE SMOOTH",
"-561 -70 OFFCURVE",
"-561 -197 QCURVE SMOOTH",
"-561 -236 OFFCURVE",
"-539 -273 QCURVE",
"-660 -373 OFFCURVE",
"-772 -373 QCURVE SMOOTH",
"-816 -373 OFFCURVE",
"-816 -351 QCURVE",
"-656 -296 OFFCURVE",
"-656 -198 QCURVE SMOOTH",
"-656 -70 LINE",
"-1024 -70 LINE",
"-1024 -198 LINE",
"-944 -198 LINE",
"-944 -217 OFFCURVE",
"-1063 -259 OFFCURVE",
"-1174 -285 QCURVE",
"-1174 -351 LINE SMOOTH",
"-1174 -424 OFFCURVE",
"-992 -500 OFFCURVE",
"-832 -500 QCURVE SMOOTH",
"-627 -500 OFFCURVE",
"-445 -379 QCURVE",
"-445 -379 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-168 -377 LINE",
"-279 -268 LINE",
"-195 -194 OFFCURVE",
"-195 -164 QCURVE SMOOTH",
"-195 -70 OFFCURVE",
"-388 -70 QCURVE SMOOTH",
"-561 -70 OFFCURVE",
"-561 -182 QCURVE SMOOTH",
"-561 -223 OFFCURVE",
"-539 -262 QCURVE",
"-660 -367 OFFCURVE",
"-772 -367 QCURVE SMOOTH",
"-816 -367 OFFCURVE",
"-816 -344 QCURVE",
"-656 -286 OFFCURVE",
"-656 -183 QCURVE SMOOTH",
"-656 -70 LINE",
"-994 -70 LINE",
"-994 -183 LINE",
"-914 -183 LINE",
"-914 -225 OFFCURVE",
"-1114 -275 QCURVE",
"-1114 -344 LINE SMOOTH",
"-1114 -500 OFFCURVE",
"-832 -500 QCURVE SMOOTH",
"-628 -500 OFFCURVE",
"-445 -373 QCURVE",
"-313 -494 LINE",
"-313 -494 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-199 -409 LINE",
"-339 -267 LINE",
"-255 -189 OFFCURVE",
"-255 -159 QCURVE SMOOTH",
"-255 -70 OFFCURVE",
"-388 -70 QCURVE SMOOTH",
"-561 -70 OFFCURVE",
"-561 -197 QCURVE SMOOTH",
"-561 -240 OFFCURVE",
"-539 -280 QCURVE",
"-660 -381 OFFCURVE",
"-832 -381 QCURVE SMOOTH",
"-876 -381 OFFCURVE",
"-876 -336 QCURVE",
"-696 -276 OFFCURVE",
"-696 -168 QCURVE SMOOTH",
"-696 -70 LINE",
"-934 -70 LINE",
"-934 -168 LINE",
"-854 -168 LINE",
"-854 -211 OFFCURVE",
"-1054 -263 QCURVE",
"-1054 -336 LINE SMOOTH",
"-1054 -500 OFFCURVE",
"-832 -500 QCURVE SMOOTH",
"-628 -500 OFFCURVE",
"-458 -357 QCURVE",
"-313 -493 LINE",
"-313 -493 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-242 -414 LINE",
"-362 -308 LINE",
"-285 -249 OFFCURVE",
"-285 -179 QCURVE SMOOTH",
"-285 -70 OFFCURVE",
"-428 -70 QCURVE SMOOTH",
"-591 -70 OFFCURVE",
"-591 -187 QCURVE SMOOTH",
"-591 -250 OFFCURVE",
"-509 -321 QCURVE",
"-650 -411 OFFCURVE",
"-832 -411 QCURVE SMOOTH",
"-906 -411 OFFCURVE",
"-906 -336 QCURVE",
"-726 -276 OFFCURVE",
"-726 -168 QCURVE SMOOTH",
"-726 -70 LINE",
"-904 -70 LINE",
"-904 -168 LINE",
"-824 -168 LINE",
"-824 -211 OFFCURVE",
"-1024 -263 QCURVE",
"-1024 -336 LINE SMOOTH",
"-1024 -500 OFFCURVE",
"-832 -500 QCURVE SMOOTH",
"-618 -500 OFFCURVE",
"-438 -366 QCURVE",
"-303 -493 LINE",
"-303 -493 LINE"
);
},
{
closed = 1;
nodes = (
"-377 -144 OFFCURVE",
"-377 -179 QCURVE SMOOTH",
"-377 -213 OFFCURVE",
"-430 -253 QCURVE",
"-483 -213 OFFCURVE",
"-483 -188 QCURVE SMOOTH",
"-483 -144 OFFCURVE",
"-430 -144 QCURVE",
"-430 -144 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-305 -463 LINE",
"-272 -424 LINE",
"-385 -334 LINE",
"-313 -265 OFFCURVE",
"-305 -199 QCURVE",
"-305 -70 OFFCURVE",
"-428 -70 QCURVE SMOOTH",
"-571 -70 OFFCURVE",
"-571 -187 QCURVE SMOOTH",
"-571 -253 OFFCURVE",
"-465 -329 QCURVE",
"-597 -442 OFFCURVE",
"-832 -442 QCURVE SMOOTH",
"-946 -442 OFFCURVE",
"-946 -316 QCURVE",
"-736 -223 OFFCURVE",
"-736 -128 QCURVE SMOOTH",
"-736 -70 LINE",
"-904 -70 LINE",
"-904 -128 LINE",
"-794 -128 LINE",
"-794 -192 OFFCURVE",
"-1004 -284 QCURVE",
"-1004 -336 LINE SMOOTH",
"-1004 -500 OFFCURVE",
"-832 -500 QCURVE SMOOTH",
"-598 -500 OFFCURVE",
"-418 -367 QCURVE",
"-418 -367 LINE"
);
},
{
closed = 1;
nodes = (
"-363 -128 OFFCURVE",
"-363 -199 QCURVE SMOOTH",
"-363 -238 OFFCURVE",
"-425 -301 QCURVE",
"-513 -228 OFFCURVE",
"-513 -188 QCURVE SMOOTH",
"-513 -128 OFFCURVE",
"-430 -128 QCURVE",
"-430 -128 LINE"
);
}
);
width = 0;
}
);
note = uni17D21785;
},
{
glyphname = uni17D21786;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-772 -70 LINE",
"-1131 -70 LINE",
"-1131 -200 LINE",
"-1232 -200 OFFCURVE",
"-1232 -340 QCURVE SMOOTH",
"-1232 -421 OFFCURVE",
"-1110 -500 OFFCURVE",
"-977 -500 QCURVE SMOOTH",
"-772 -500 OFFCURVE",
"-772 -389 QCURVE",
"-701 -389 OFFCURVE",
"-633 -445 QCURVE SMOOTH",
"-566 -500 OFFCURVE",
"-444 -500 QCURVE SMOOTH",
"-298 -500 OFFCURVE",
"-130 -392 OFFCURVE",
"-130 -289 QCURVE SMOOTH",
"-130 -70 LINE",
"-547 -70 LINE",
"-547 -186 LINE",
"-489 -186 LINE",
"-489 -289 LINE SMOOTH",
"-489 -317 OFFCURVE",
"-531 -318 QCURVE SMOOTH",
"-578 -318 OFFCURVE",
"-647 -264 QCURVE SMOOTH",
"-714 -209 OFFCURVE",
"-772 -209 QCURVE",
"-772 -209 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1071 -206 LINE",
"-1172 -206 OFFCURVE",
"-1172 -353 QCURVE SMOOTH",
"-1172 -500 OFFCURVE",
"-977 -500 QCURVE SMOOTH",
"-773 -500 OFFCURVE",
"-773 -384 QCURVE",
"-701 -384 OFFCURVE",
"-566 -500 OFFCURVE",
"-444 -500 QCURVE SMOOTH",
"-190 -500 OFFCURVE",
"-190 -300 QCURVE SMOOTH",
"-190 -70 LINE",
"-547 -70 LINE",
"-547 -192 LINE",
"-488 -192 LINE",
"-488 -300 LINE SMOOTH",
"-488 -329 OFFCURVE",
"-531 -330 QCURVE SMOOTH",
"-578 -330 OFFCURVE",
"-716 -216 OFFCURVE",
"-773 -216 QCURVE",
"-773 -70 LINE",
"-1071 -70 LINE",
"-1071 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1011 -253 LINE",
"-1122 -253 OFFCURVE",
"-1122 -381 QCURVE SMOOTH",
"-1122 -500 OFFCURVE",
"-977 -500 QCURVE SMOOTH",
"-833 -500 OFFCURVE",
"-833 -378 QCURVE",
"-761 -378 OFFCURVE",
"-566 -500 OFFCURVE",
"-504 -500 QCURVE SMOOTH",
"-250 -500 OFFCURVE",
"-250 -320 QCURVE SMOOTH",
"-250 -70 LINE",
"-517 -70 LINE",
"-517 -177 LINE",
"-428 -177 LINE",
"-428 -320 LINE SMOOTH",
"-428 -381 OFFCURVE",
"-501 -382 QCURVE SMOOTH",
"-578 -382 OFFCURVE",
"-776 -263 OFFCURVE",
"-833 -263 QCURVE",
"-833 -70 LINE",
"-1011 -70 LINE",
"-1011 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-981 -253 LINE",
"-997 -253 LINE SMOOTH",
"-1122 -253 OFFCURVE",
"-1122 -376 QCURVE SMOOTH",
"-1122 -500 OFFCURVE",
"-997 -500 QCURVE SMOOTH",
"-873 -500 OFFCURVE",
"-873 -376 QCURVE SMOOTH",
"-873 -349 LINE",
"-771 -349 OFFCURVE",
"-566 -500 OFFCURVE",
"-494 -500 QCURVE SMOOTH",
"-280 -500 OFFCURVE",
"-280 -320 QCURVE SMOOTH",
"-280 -70 LINE",
"-517 -70 LINE",
"-517 -167 LINE",
"-388 -167 LINE",
"-388 -320 LINE SMOOTH",
"-388 -402 OFFCURVE",
"-491 -402 QCURVE SMOOTH",
"-548 -402 OFFCURVE",
"-776 -253 OFFCURVE",
"-873 -253 QCURVE",
"-873 -70 LINE",
"-981 -70 LINE",
"-981 -70 LINE"
);
},
{
closed = 1;
nodes = (
"-978 -349 LINE",
"-978 -376 LINE SMOOTH",
"-978 -408 OFFCURVE",
"-1002 -408 QCURVE SMOOTH",
"-1027 -408 OFFCURVE",
"-1027 -376 QCURVE SMOOTH",
"-1027 -349 OFFCURVE",
"-1002 -349 QCURVE",
"-1002 -349 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-903 -70 LINE",
"-961 -70 LINE",
"-961 -270 LINE",
"-997 -270 LINE SMOOTH",
"-1102 -270 OFFCURVE",
"-1102 -376 QCURVE SMOOTH",
"-1102 -500 OFFCURVE",
"-1003 -500 QCURVE SMOOTH",
"-903 -500 OFFCURVE",
"-903 -376 QCURVE SMOOTH",
"-903 -328 LINE",
"-802 -328 OFFCURVE",
"-684 -414 QCURVE SMOOTH",
"-565 -500 OFFCURVE",
"-504 -500 QCURVE SMOOTH",
"-300 -500 OFFCURVE",
"-300 -320 QCURVE SMOOTH",
"-300 -70 LINE",
"-517 -70 LINE",
"-517 -128 LINE",
"-358 -128 LINE",
"-358 -320 LINE SMOOTH",
"-358 -442 OFFCURVE",
"-501 -442 QCURVE SMOOTH",
"-547 -442 OFFCURVE",
"-677 -356 QCURVE SMOOTH",
"-807 -270 OFFCURVE",
"-903 -270 QCURVE",
"-903 -270 LINE"
);
},
{
closed = 1;
nodes = (
"-961 -328 LINE",
"-961 -382 LINE SMOOTH",
"-961 -442 OFFCURVE",
"-1002 -442 QCURVE SMOOTH",
"-1057 -442 OFFCURVE",
"-1057 -376 QCURVE SMOOTH",
"-1057 -328 OFFCURVE",
"-1002 -328 QCURVE",
"-1002 -328 LINE"
);
}
);
width = 0;
}
);
note = uni17D21786;
},
{
glyphname = uni17D21787;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"13 -356 LINE",
"13 -177 LINE",
"-99 -177 LINE",
"-102 -123 OFFCURVE",
"-251 -70 OFFCURVE",
"-407 -70 QCURVE SMOOTH",
"-528 -70 OFFCURVE",
"-528 -171 QCURVE SMOOTH",
"-528 -174 LINE SMOOTH",
"-528 -228 OFFCURVE",
"-477 -294 OFFCURVE",
"-424 -301 QCURVE",
"-432 -336 OFFCURVE",
"-466 -336 QCURVE SMOOTH",
"-502 -336 OFFCURVE",
"-638 -258 QCURVE",
"-767 -336 OFFCURVE",
"-816 -336 QCURVE SMOOTH",
"-859 -336 OFFCURVE",
"-859 -270 QCURVE SMOOTH",
"-859 -239 OFFCURVE",
"-748 -239 QCURVE",
"-748 -70 LINE",
"-958 -70 OFFCURVE",
"-1191 -172 OFFCURVE",
"-1191 -270 QCURVE SMOOTH",
"-1191 -383 OFFCURVE",
"-1002 -500 OFFCURVE",
"-836 -500 QCURVE SMOOTH",
"-697 -500 OFFCURVE",
"-632 -402 QCURVE",
"-529 -498 OFFCURVE",
"-414 -498 QCURVE SMOOTH",
"-308 -498 OFFCURVE",
"-192 -470 OFFCURVE",
"-168 -440 QCURVE SMOOTH",
"-122 -382 OFFCURVE",
"-108 -356 QCURVE",
"-108 -356 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-159 -182 LINE",
"-165 -70 OFFCURVE",
"-407 -70 QCURVE SMOOTH",
"-528 -70 OFFCURVE",
"-528 -176 QCURVE SMOOTH",
"-528 -179 LINE SMOOTH",
"-528 -234 OFFCURVE",
"-479 -305 OFFCURVE",
"-424 -312 QCURVE",
"-431 -349 OFFCURVE",
"-466 -349 QCURVE SMOOTH",
"-501 -349 OFFCURVE",
"-638 -267 QCURVE",
"-767 -349 OFFCURVE",
"-816 -349 QCURVE SMOOTH",
"-859 -349 OFFCURVE",
"-859 -280 QCURVE SMOOTH",
"-859 -247 OFFCURVE",
"-748 -247 QCURVE",
"-748 -70 LINE",
"-1131 -70 OFFCURVE",
"-1131 -280 QCURVE SMOOTH",
"-1131 -500 OFFCURVE",
"-836 -500 QCURVE SMOOTH",
"-697 -500 OFFCURVE",
"-632 -418 QCURVE",
"-529 -498 OFFCURVE",
"-414 -498 QCURVE SMOOTH",
"-275 -498 OFFCURVE",
"-181 -396 OFFCURVE",
"-168 -370 QCURVE",
"-17 -370 LINE",
"-17 -182 LINE",
"-17 -182 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-199 -187 LINE",
"-205 -70 OFFCURVE",
"-407 -70 QCURVE SMOOTH",
"-528 -70 OFFCURVE",
"-528 -161 QCURVE SMOOTH",
"-528 -164 LINE SMOOTH",
"-528 -220 OFFCURVE",
"-459 -296 OFFCURVE",
"-344 -304 QCURVE",
"-351 -362 OFFCURVE",
"-414 -362 QCURVE SMOOTH",
"-501 -362 OFFCURVE",
"-638 -256 QCURVE",
"-767 -362 OFFCURVE",
"-836 -362 QCURVE SMOOTH",
"-939 -362 OFFCURVE",
"-939 -270 QCURVE SMOOTH",
"-939 -194 OFFCURVE",
"-778 -194 QCURVE",
"-778 -70 LINE",
"-1091 -70 OFFCURVE",
"-1091 -270 QCURVE SMOOTH",
"-1091 -500 OFFCURVE",
"-836 -500 QCURVE SMOOTH",
"-697 -500 OFFCURVE",
"-632 -414 QCURVE",
"-529 -498 OFFCURVE",
"-414 -498 QCURVE SMOOTH",
"-315 -498 OFFCURVE",
"-221 -391 OFFCURVE",
"-208 -323 QCURVE",
"-57 -323 LINE",
"-57 -187 LINE",
"-57 -187 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-229 -211 LINE",
"-235 -70 OFFCURVE",
"-377 -70 QCURVE SMOOTH",
"-528 -70 OFFCURVE",
"-528 -181 QCURVE SMOOTH",
"-528 -184 LINE SMOOTH",
"-528 -304 OFFCURVE",
"-324 -304 QCURVE",
"-331 -402 OFFCURVE",
"-414 -402 QCURVE SMOOTH",
"-521 -402 OFFCURVE",
"-638 -256 QCURVE",
"-747 -402 OFFCURVE",
"-836 -402 QCURVE SMOOTH",
"-959 -402 OFFCURVE",
"-959 -270 QCURVE SMOOTH",
"-959 -165 OFFCURVE",
"-778 -165 QCURVE",
"-778 -70 LINE",
"-1061 -70 OFFCURVE",
"-1061 -270 QCURVE SMOOTH",
"-1061 -500 OFFCURVE",
"-836 -500 QCURVE SMOOTH",
"-727 -500 OFFCURVE",
"-638 -394 QCURVE",
"-529 -498 OFFCURVE",
"-414 -498 QCURVE SMOOTH",
"-335 -498 OFFCURVE",
"-251 -391 OFFCURVE",
"-238 -304 QCURVE",
"-97 -304 LINE",
"-97 -211 LINE",
"-97 -211 LINE"
);
},
{
closed = 1;
nodes = (
"-324 -151 OFFCURVE",
"-324 -211 QCURVE",
"-416 -211 OFFCURVE",
"-416 -176 QCURVE SMOOTH",
"-416 -151 OFFCURVE",
"-370 -151 QCURVE",
"-370 -151 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-117 -250 LINE",
"-117 -212 LINE",
"-249 -212 LINE",
"-252 -142 OFFCURVE",
"-319 -70 OFFCURVE",
"-380 -70 QCURVE SMOOTH",
"-439 -70 OFFCURVE",
"-508 -126 OFFCURVE",
"-508 -168 QCURVE SMOOTH",
"-508 -171 LINE SMOOTH",
"-508 -250 OFFCURVE",
"-305 -250 QCURVE SMOOTH",
"-300 -250 LINE",
"-302 -342 OFFCURVE",
"-335 -410 OFFCURVE",
"-386 -449 OFFCURVE",
"-414 -449 QCURVE SMOOTH",
"-518 -449 OFFCURVE",
"-638 -320 QCURVE",
"-749 -449 OFFCURVE",
"-836 -449 QCURVE SMOOTH",
"-983 -449 OFFCURVE",
"-983 -267 QCURVE SMOOTH",
"-983 -120 OFFCURVE",
"-778 -120 QCURVE",
"-778 -70 LINE",
"-1041 -70 OFFCURVE",
"-1041 -267 QCURVE SMOOTH",
"-1041 -500 OFFCURVE",
"-836 -500 QCURVE SMOOTH",
"-786 -500 OFFCURVE",
"-678 -451 OFFCURVE",
"-632 -396 QCURVE",
"-528 -498 OFFCURVE",
"-414 -498 QCURVE SMOOTH",
"-341 -498 OFFCURVE",
"-263 -388 OFFCURVE",
"-248 -250 QCURVE",
"-248 -250 LINE"
);
},
{
closed = 1;
nodes = (
"-300 -110 OFFCURVE",
"-300 -212 QCURVE",
"-377 -212 OFFCURVE",
"-450 -192 OFFCURVE",
"-450 -168 QCURVE SMOOTH",
"-450 -142 OFFCURVE",
"-414 -110 OFFCURVE",
"-380 -110 QCURVE",
"-380 -110 LINE"
);
}
);
width = 0;
}
);
note = uni17D21787;
},
{
glyphname = uni17D21788;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"160 -240 LINE SMOOTH",
"160 -289 OFFCURVE",
"125 -289 QCURVE SMOOTH",
"60 -289 OFFCURVE",
"60 -240 QCURVE SMOOTH",
"60 -70 LINE",
"-300 -70 LINE",
"-300 -240 LINE SMOOTH",
"-300 -289 OFFCURVE",
"-345 -289 QCURVE SMOOTH",
"-390 -289 OFFCURVE",
"-390 -240 QCURVE SMOOTH",
"-390 -70 OFFCURVE",
"-740 -70 QCURVE SMOOTH",
"-1120 -70 OFFCURVE",
"-1120 -240 QCURVE SMOOTH",
"-1120 -500 LINE",
"-740 -500 LINE",
"-740 -331 LINE",
"-790 -331 LINE",
"-790 -240 LINE SMOOTH",
"-790 -218 OFFCURVE",
"-740 -218 QCURVE SMOOTH",
"-690 -218 OFFCURVE",
"-690 -240 QCURVE SMOOTH",
"-690 -500 OFFCURVE",
"-350 -500 QCURVE SMOOTH",
"-257 -500 OFFCURVE",
"-119 -448 QCURVE",
"-12 -500 OFFCURVE",
"120 -500 QCURVE SMOOTH",
"528 -500 OFFCURVE",
"528 -240 QCURVE SMOOTH",
"528 704 LINE SMOOTH",
"528 772 OFFCURVE",
"428 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"160 704 LINE",
"160 704 LINE"
);
}
);
width = 638;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"190 -260 LINE SMOOTH",
"190 -309 OFFCURVE",
"125 -309 QCURVE SMOOTH",
"60 -309 OFFCURVE",
"60 -260 QCURVE SMOOTH",
"60 -70 LINE",
"-240 -70 LINE",
"-240 -260 LINE SMOOTH",
"-240 -309 OFFCURVE",
"-285 -309 QCURVE SMOOTH",
"-330 -309 OFFCURVE",
"-330 -260 QCURVE SMOOTH",
"-330 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1000 -70 OFFCURVE",
"-1000 -260 QCURVE SMOOTH",
"-1000 -500 LINE",
"-650 -500 LINE",
"-650 -351 LINE",
"-700 -351 LINE",
"-700 -260 LINE SMOOTH",
"-700 -218 OFFCURVE",
"-650 -218 QCURVE SMOOTH",
"-600 -218 OFFCURVE",
"-600 -260 QCURVE SMOOTH",
"-600 -500 OFFCURVE",
"-290 -500 QCURVE SMOOTH",
"-197 -500 OFFCURVE",
"-89 -448 QCURVE",
"-12 -500 OFFCURVE",
"120 -500 QCURVE SMOOTH",
"498 -500 OFFCURVE",
"498 -260 QCURVE SMOOTH",
"498 704 LINE SMOOTH",
"498 772 OFFCURVE",
"398 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"190 704 LINE",
"190 704 LINE"
);
}
);
width = 638;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"250 -268 LINE SMOOTH",
"250 -367 OFFCURVE",
"155 -367 QCURVE SMOOTH",
"60 -367 OFFCURVE",
"60 -268 QCURVE SMOOTH",
"60 -70 LINE",
"-120 -70 LINE",
"-120 -268 LINE SMOOTH",
"-120 -367 OFFCURVE",
"-195 -367 QCURVE SMOOTH",
"-270 -367 OFFCURVE",
"-270 -268 QCURVE SMOOTH",
"-270 -70 OFFCURVE",
"-530 -70 QCURVE SMOOTH",
"-790 -70 OFFCURVE",
"-790 -268 QCURVE SMOOTH",
"-790 -500 LINE",
"-530 -500 LINE",
"-530 -400 LINE",
"-610 -400 LINE",
"-610 -268 LINE SMOOTH",
"-610 -169 OFFCURVE",
"-530 -169 QCURVE SMOOTH",
"-450 -169 OFFCURVE",
"-450 -268 QCURVE SMOOTH",
"-450 -500 OFFCURVE",
"-200 -500 QCURVE SMOOTH",
"-107 -500 OFFCURVE",
"-29 -450 QCURVE",
"48 -500 OFFCURVE",
"150 -500 QCURVE SMOOTH",
"438 -500 OFFCURVE",
"438 -268 QCURVE SMOOTH",
"438 734 LINE SMOOTH",
"438 802 OFFCURVE",
"338 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"250 734 LINE",
"250 734 LINE"
);
}
);
width = 638;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"408 714 LINE SMOOTH",
"408 802 OFFCURVE",
"308 856 QCURVE SMOOTH",
"208 910 LINE",
"208 992 LINE SMOOTH",
"208 1032 OFFCURVE",
"258 1032 QCURVE SMOOTH",
"408 1032 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"243 772 LINE SMOOTH",
"290 744 OFFCURVE",
"290 714 QCURVE SMOOTH",
"290 -321 LINE SMOOTH",
"290 -412 OFFCURVE",
"155 -412 QCURVE SMOOTH",
"25 -412 OFFCURVE",
"25 -321 QCURVE SMOOTH",
"25 -70 LINE",
"-85 -70 LINE",
"-85 -321 LINE SMOOTH",
"-85 -412 OFFCURVE",
"-195 -412 QCURVE SMOOTH",
"-310 -412 OFFCURVE",
"-310 -321 QCURVE SMOOTH",
"-310 -218 LINE SMOOTH",
"-310 -70 OFFCURVE",
"-530 -70 QCURVE SMOOTH",
"-760 -70 OFFCURVE",
"-760 -218 QCURVE SMOOTH",
"-760 -500 LINE",
"-530 -500 LINE",
"-530 -409 LINE",
"-640 -409 LINE",
"-640 -218 LINE SMOOTH",
"-640 -160 OFFCURVE",
"-530 -160 QCURVE SMOOTH",
"-420 -160 OFFCURVE",
"-420 -218 QCURVE SMOOTH",
"-420 -321 LINE SMOOTH",
"-420 -500 OFFCURVE",
"-200 -500 QCURVE SMOOTH",
"-107 -500 OFFCURVE",
"-29 -450 QCURVE",
"48 -500 OFFCURVE",
"150 -500 QCURVE SMOOTH",
"408 -500 OFFCURVE",
"408 -321 QCURVE",
"408 -321 LINE"
);
}
);
width = 638;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"408 1072 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"238 782 LINE SMOOTH",
"320 737 OFFCURVE",
"320 714 QCURVE SMOOTH",
"320 -348 LINE SMOOTH",
"320 -443 OFFCURVE",
"155 -443 QCURVE SMOOTH",
"-1 -443 OFFCURVE",
"-1 -348 QCURVE SMOOTH",
"-1 -70 LINE",
"-59 -70 LINE",
"-59 -348 LINE SMOOTH",
"-59 -443 OFFCURVE",
"-195 -443 QCURVE SMOOTH",
"-336 -443 OFFCURVE",
"-336 -348 QCURVE SMOOTH",
"-336 -237 LINE SMOOTH",
"-336 -70 OFFCURVE",
"-530 -70 QCURVE SMOOTH",
"-734 -70 OFFCURVE",
"-734 -237 QCURVE SMOOTH",
"-734 -500 LINE",
"-530 -500 LINE",
"-530 -442 LINE",
"-666 -442 LINE",
"-666 -237 LINE SMOOTH",
"-666 -128 OFFCURVE",
"-530 -128 QCURVE SMOOTH",
"-394 -128 OFFCURVE",
"-394 -237 QCURVE SMOOTH",
"-394 -348 LINE SMOOTH",
"-394 -500 OFFCURVE",
"-200 -500 QCURVE SMOOTH",
"-107 -500 OFFCURVE",
"-29 -443 QCURVE",
"47 -500 OFFCURVE",
"150 -500 QCURVE SMOOTH",
"378 -500 OFFCURVE",
"378 -348 QCURVE SMOOTH",
"378 714 LINE SMOOTH",
"378 768 OFFCURVE",
"268 830 QCURVE SMOOTH",
"158 891 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"258 1072 QCURVE",
"258 1072 LINE"
);
}
);
width = 638;
}
);
note = uni17D21788;
},
{
glyphname = uni17D21789;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-522 -234 LINE",
"-461 -234 OFFCURVE",
"-461 -275 QCURVE SMOOTH",
"-461 -316 OFFCURVE",
"-530 -316 QCURVE SMOOTH",
"-612 -316 OFFCURVE",
"-733 -225 QCURVE SMOOTH",
"-854 -134 OFFCURVE",
"-1112 -134 QCURVE SMOOTH",
"-1192 -134 LINE",
"-1192 -328 LINE",
"-1112 -328 LINE SMOOTH",
"-939 -328 OFFCURVE",
"-823 -414 QCURVE SMOOTH",
"-707 -500 OFFCURVE",
"-530 -500 QCURVE SMOOTH",
"-122 -500 OFFCURVE",
"-122 -275 QCURVE SMOOTH",
"-122 -70 OFFCURVE",
"-522 -70 QCURVE",
"-522 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-560 -242 LINE",
"-498 -242 OFFCURVE",
"-498 -285 QCURVE SMOOTH",
"-498 -328 OFFCURVE",
"-568 -328 QCURVE SMOOTH",
"-649 -328 OFFCURVE",
"-893 -137 OFFCURVE",
"-1150 -137 QCURVE SMOOTH",
"-1260 -137 LINE",
"-1260 -309 LINE",
"-1150 -309 LINE SMOOTH",
"-976 -309 OFFCURVE",
"-745 -500 OFFCURVE",
"-568 -500 QCURVE SMOOTH",
"-190 -500 OFFCURVE",
"-190 -285 QCURVE SMOOTH",
"-190 -70 OFFCURVE",
"-560 -70 QCURVE",
"-560 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1150 -133 LINE",
"-1150 -285 LINE",
"-1097 -285 LINE SMOOTH",
"-913 -285 OFFCURVE",
"-779 -392 QCURVE SMOOTH",
"-645 -500 OFFCURVE",
"-460 -500 QCURVE SMOOTH",
"-200 -500 OFFCURVE",
"-200 -286 QCURVE SMOOTH",
"-200 -70 OFFCURVE",
"-434 -70 QCURVE SMOOTH",
"-508 -70 LINE",
"-508 -200 LINE",
"-434 -200 LINE SMOOTH",
"-350 -200 OFFCURVE",
"-350 -279 QCURVE SMOOTH",
"-350 -374 OFFCURVE",
"-460 -374 QCURVE SMOOTH",
"-602 -374 OFFCURVE",
"-732 -254 QCURVE SMOOTH",
"-863 -133 OFFCURVE",
"-1097 -133 QCURVE",
"-1097 -133 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-1180 -212 LINE",
"-1097 -212 LINE SMOOTH",
"-913 -212 OFFCURVE",
"-646 -500 OFFCURVE",
"-460 -500 QCURVE SMOOTH",
"-230 -500 OFFCURVE",
"-230 -271 QCURVE SMOOTH",
"-230 -70 OFFCURVE",
"-434 -70 QCURVE SMOOTH",
"-508 -70 LINE",
"-508 -165 LINE",
"-434 -165 LINE SMOOTH",
"-330 -165 OFFCURVE",
"-330 -271 QCURVE SMOOTH",
"-330 -409 OFFCURVE",
"-460 -409 QCURVE SMOOTH",
"-600 -409 OFFCURVE",
"-862 -108 OFFCURVE",
"-1097 -108 QCURVE SMOOTH",
"-1180 -108 LINE",
"-1180 -108 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-1180 -108 LINE",
"-1180 -163 LINE",
"-1097 -163 LINE SMOOTH",
"-914 -163 OFFCURVE",
"-646 -500 OFFCURVE",
"-460 -500 QCURVE SMOOTH",
"-260 -500 OFFCURVE",
"-260 -285 QCURVE SMOOTH",
"-260 -70 OFFCURVE",
"-484 -70 QCURVE SMOOTH",
"-528 -70 LINE",
"-528 -125 LINE",
"-484 -125 LINE SMOOTH",
"-318 -125 OFFCURVE",
"-318 -285 QCURVE SMOOTH",
"-318 -445 OFFCURVE",
"-460 -445 QCURVE SMOOTH",
"-620 -445 OFFCURVE",
"-882 -108 OFFCURVE",
"-1097 -108 QCURVE",
"-1097 -108 LINE"
);
}
);
width = 0;
}
);
note = uni17D21789;
},
{
glyphname = uni17D21789.a;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-110 -179 LINE SMOOTH",
"-110 -70 OFFCURVE",
"-324 -70 QCURVE SMOOTH",
"-1097 -70 LINE",
"-1280 -146 LINE",
"-1502 -70 LINE",
"-1626 -70 LINE SMOOTH",
"-1840 -70 OFFCURVE",
"-1840 -179 QCURVE SMOOTH",
"-1840 -318 LINE",
"-1502 -318 LINE",
"-1502 -198 LINE",
"-1280 -274 LINE",
"-1097 -198 LINE",
"-1097 -318 LINE",
"-790 -318 LINE",
"-790 -199 LINE",
"-448 -199 LINE",
"-448 -401 LINE",
"-1150 -363 OFFCURVE",
"-1408 -363 QCURVE SMOOTH",
"-1840 -363 LINE",
"-1840 -469 LINE",
"-1408 -469 LINE SMOOTH",
"-1229 -469 OFFCURVE",
"-983 -485 QCURVE SMOOTH",
"-729 -500 OFFCURVE",
"-446 -500 QCURVE SMOOTH",
"-110 -500 OFFCURVE",
"-110 -410 QCURVE",
"-110 -410 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-140 -184 LINE SMOOTH",
"-140 -70 OFFCURVE",
"-324 -70 QCURVE SMOOTH",
"-1097 -70 LINE",
"-1280 -150 LINE",
"-1502 -70 LINE",
"-1626 -70 LINE SMOOTH",
"-1810 -70 OFFCURVE",
"-1810 -184 QCURVE SMOOTH",
"-1810 -309 LINE",
"-1502 -309 LINE",
"-1502 -183 LINE",
"-1280 -263 LINE",
"-1097 -183 LINE",
"-1097 -309 LINE",
"-790 -309 LINE",
"-790 -184 LINE",
"-448 -184 LINE",
"-448 -396 LINE",
"-1150 -356 OFFCURVE",
"-1408 -356 QCURVE SMOOTH",
"-1810 -356 LINE",
"-1810 -467 LINE",
"-1408 -467 LINE SMOOTH",
"-1229 -467 OFFCURVE",
"-983 -484 QCURVE SMOOTH",
"-730 -500 OFFCURVE",
"-446 -500 QCURVE SMOOTH",
"-140 -500 OFFCURVE",
"-140 -406 QCURVE",
"-140 -406 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1750 -353 LINE",
"-1750 -446 LINE",
"-1468 -446 LINE SMOOTH",
"-1236 -446 OFFCURVE",
"-1023 -473 QCURVE SMOOTH",
"-808 -500 OFFCURVE",
"-576 -500 QCURVE SMOOTH",
"-200 -500 OFFCURVE",
"-200 -402 QCURVE SMOOTH",
"-200 -338 LINE",
"-585 -338 LINE",
"-585 -411 LINE",
"-388 -411 LINE",
"-388 -441 OFFCURVE",
"-527 -441 QCURVE SMOOTH",
"-665 -441 OFFCURVE",
"-904 -397 QCURVE SMOOTH",
"-1141 -353 OFFCURVE",
"-1468 -353 QCURVE",
"-1468 -353 LINE"
);
},
{
closed = 1;
nodes = (
"-200 -70 LINE",
"-1037 -70 LINE",
"-1280 -153 LINE",
"-1562 -70 LINE",
"-1750 -70 LINE",
"-1750 -308 LINE",
"-1478 -308 LINE",
"-1478 -220 LINE",
"-1562 -220 LINE",
"-1562 -168 LINE",
"-1280 -252 LINE",
"-1037 -168 LINE",
"-1037 -308 LINE",
"-850 -308 LINE",
"-850 -170 LINE",
"-388 -170 LINE",
"-388 -308 LINE",
"-200 -308 LINE",
"-200 -308 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-230 -70 LINE",
"-997 -70 LINE",
"-1280 -163 LINE",
"-1602 -70 LINE",
"-1720 -70 LINE",
"-1720 -288 LINE",
"-1478 -288 LINE",
"-1478 -220 LINE",
"-1602 -220 LINE",
"-1602 -159 LINE",
"-1280 -252 LINE",
"-997 -159 LINE",
"-997 -288 LINE",
"-880 -288 LINE",
"-880 -161 LINE",
"-348 -161 LINE",
"-348 -288 LINE",
"-230 -288 LINE",
"-230 -288 LINE"
);
},
{
closed = 1;
nodes = (
"-1720 -353 LINE",
"-1720 -446 LINE",
"-1468 -446 LINE SMOOTH",
"-1197 -446 OFFCURVE",
"-1003 -473 QCURVE SMOOTH",
"-810 -500 OFFCURVE",
"-526 -500 QCURVE SMOOTH",
"-230 -500 OFFCURVE",
"-230 -381 QCURVE SMOOTH",
"-230 -318 LINE",
"-585 -318 LINE",
"-585 -391 LINE",
"-348 -391 LINE",
"-348 -431 OFFCURVE",
"-526 -431 QCURVE SMOOTH",
"-729 -431 OFFCURVE",
"-964 -392 QCURVE SMOOTH",
"-1204 -353 OFFCURVE",
"-1468 -353 QCURVE",
"-1468 -353 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-260 -70 LINE",
"-968 -70 LINE",
"-1280 -170 LINE",
"-1632 -70 LINE",
"-1690 -70 LINE",
"-1690 -293 LINE",
"-1478 -293 LINE",
"-1478 -233 LINE",
"-1632 -233 LINE",
"-1632 -122 LINE",
"-1280 -222 LINE",
"-968 -122 LINE",
"-968 -293 LINE",
"-910 -293 LINE",
"-910 -123 LINE",
"-318 -123 LINE",
"-318 -293 LINE",
"-260 -293 LINE",
"-260 -293 LINE"
);
},
{
closed = 1;
nodes = (
"-1690 -370 LINE",
"-1690 -421 LINE",
"-1468 -421 LINE SMOOTH",
"-1201 -421 OFFCURVE",
"-1003 -461 QCURVE SMOOTH",
"-809 -500 OFFCURVE",
"-526 -500 QCURVE SMOOTH",
"-260 -500 OFFCURVE",
"-260 -390 QCURVE SMOOTH",
"-260 -339 LINE",
"-585 -339 LINE",
"-585 -390 LINE",
"-318 -390 LINE",
"-318 -391 LINE SMOOTH",
"-318 -449 OFFCURVE",
"-526 -449 QCURVE SMOOTH",
"-788 -449 OFFCURVE",
"-999 -410 QCURVE SMOOTH",
"-1199 -370 OFFCURVE",
"-1468 -370 QCURVE",
"-1468 -370 LINE"
);
}
);
width = 0;
}
);
note = uni17D21789.a;
},
{
glyphname = uni17D2178A;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1170 -345 LINE SMOOTH",
"-1170 -500 OFFCURVE",
"-893 -500 QCURVE SMOOTH",
"-676 -500 LINE",
"-676 -345 LINE",
"-822 -345 LINE",
"-822 -311 LINE SMOOTH",
"-822 -232 OFFCURVE",
"-650 -232 QCURVE SMOOTH",
"-478 -232 OFFCURVE",
"-478 -311 QCURVE SMOOTH",
"-478 -500 LINE",
"-130 -500 LINE",
"-130 -311 LINE SMOOTH",
"-130 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1170 -70 OFFCURVE",
"-1170 -311 QCURVE",
"-1170 -311 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1110 -337 LINE SMOOTH",
"-1110 -500 OFFCURVE",
"-893 -500 QCURVE SMOOTH",
"-676 -500 LINE",
"-676 -337 LINE",
"-823 -337 LINE",
"-823 -302 LINE SMOOTH",
"-823 -219 OFFCURVE",
"-650 -219 QCURVE SMOOTH",
"-477 -219 OFFCURVE",
"-477 -302 QCURVE SMOOTH",
"-477 -500 LINE",
"-190 -500 LINE",
"-190 -302 LINE SMOOTH",
"-190 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1110 -70 OFFCURVE",
"-1110 -302 QCURVE",
"-1110 -302 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1050 -370 LINE SMOOTH",
"-1050 -500 OFFCURVE",
"-883 -500 QCURVE SMOOTH",
"-696 -500 LINE",
"-696 -370 LINE",
"-883 -370 LINE",
"-883 -293 LINE SMOOTH",
"-883 -166 OFFCURVE",
"-650 -166 QCURVE SMOOTH",
"-417 -166 OFFCURVE",
"-417 -293 QCURVE SMOOTH",
"-417 -500 LINE",
"-250 -500 LINE",
"-250 -293 LINE SMOOTH",
"-250 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1050 -70 OFFCURVE",
"-1050 -293 QCURVE",
"-1050 -293 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-1020 -370 LINE SMOOTH",
"-1020 -500 OFFCURVE",
"-858 -500 QCURVE SMOOTH",
"-726 -500 LINE",
"-726 -402 LINE",
"-858 -402 LINE SMOOTH",
"-913 -402 OFFCURVE",
"-913 -370 QCURVE SMOOTH",
"-913 -293 LINE SMOOTH",
"-913 -166 OFFCURVE",
"-650 -166 QCURVE SMOOTH",
"-387 -166 OFFCURVE",
"-387 -293 QCURVE SMOOTH",
"-387 -500 LINE",
"-280 -500 LINE",
"-280 -293 LINE SMOOTH",
"-280 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1020 -70 OFFCURVE",
"-1020 -293 QCURVE",
"-1020 -293 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-990 -370 LINE SMOOTH",
"-990 -500 OFFCURVE",
"-858 -500 QCURVE SMOOTH",
"-726 -500 LINE",
"-726 -442 LINE",
"-858 -442 LINE SMOOTH",
"-932 -442 OFFCURVE",
"-932 -370 QCURVE SMOOTH",
"-932 -263 LINE SMOOTH",
"-932 -128 OFFCURVE",
"-650 -128 QCURVE SMOOTH",
"-368 -128 OFFCURVE",
"-368 -263 QCURVE SMOOTH",
"-368 -500 LINE",
"-310 -500 LINE",
"-310 -263 LINE SMOOTH",
"-310 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-990 -70 OFFCURVE",
"-990 -263 QCURVE",
"-990 -263 LINE"
);
}
);
width = 0;
}
);
note = uni17D2178A;
},
{
glyphname = uni17D2178B;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1172 -120 LINE",
"-1172 -500 LINE",
"-812 -500 LINE",
"-649 -439 LINE",
"-486 -500 LINE",
"-126 -500 LINE",
"-126 -270 LINE",
"-37 -270 LINE",
"-37 -120 LINE",
"-126 -120 LINE",
"-126 -70 LINE",
"-486 -70 LINE",
"-486 -120 LINE",
"-486 -120 LINE"
);
},
{
closed = 1;
nodes = (
"-486 -343 LINE",
"-649 -295 LINE",
"-812 -343 LINE",
"-812 -270 LINE",
"-486 -270 LINE",
"-486 -270 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1112 -500 LINE",
"-813 -500 LINE",
"-649 -436 LINE",
"-485 -500 LINE",
"-186 -500 LINE",
"-186 -259 LINE",
"-97 -259 LINE",
"-97 -122 LINE",
"-186 -122 LINE",
"-186 -70 LINE",
"-485 -70 LINE",
"-485 -122 LINE",
"-1112 -122 LINE",
"-1112 -122 LINE"
);
},
{
closed = 1;
nodes = (
"-649 -285 LINE",
"-813 -335 LINE",
"-813 -259 LINE",
"-485 -259 LINE",
"-485 -335 LINE",
"-485 -335 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1052 -500 LINE",
"-873 -500 LINE",
"-649 -414 LINE",
"-425 -500 LINE",
"-246 -500 LINE",
"-246 -237 LINE",
"-157 -237 LINE",
"-157 -137 LINE",
"-246 -137 LINE",
"-246 -50 LINE",
"-425 -50 LINE",
"-425 -137 LINE",
"-1052 -137 LINE",
"-1052 -137 LINE"
);
},
{
closed = 1;
nodes = (
"-649 -300 LINE",
"-873 -374 LINE",
"-873 -237 LINE",
"-425 -237 LINE",
"-425 -374 LINE",
"-425 -374 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */\01217 16 13 10 4 4 3 1 76 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 22 values pushed */\0122 1 0 6 1 3 4 0 3 103 0 1 1 4 95 5 1 4 4 20 4 78 \012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01250 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 22 values pushed */\0122 1 0 6 1 3 4 0 3 103 0 1 1 18 77 5 1 4 4 20 4 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 22 values pushed */\0122 1 0 6 1 3 4 0 3 103 0 1 1 4 95 5 1 4 4 20 4 78 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01218 18 17 17 17 17 16 7 7 29 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-1022 -500 LINE",
"-913 -500 LINE",
"-649 -388 LINE",
"-385 -500 LINE",
"-276 -500 LINE",
"-276 -221 LINE",
"-157 -221 LINE",
"-157 -139 LINE",
"-276 -139 LINE",
"-276 -50 LINE",
"-385 -50 LINE",
"-385 -139 LINE",
"-1022 -139 LINE",
"-1022 -139 LINE"
);
},
{
closed = 1;
nodes = (
"-649 -301 LINE",
"-913 -401 LINE",
"-913 -221 LINE",
"-385 -221 LINE",
"-385 -401 LINE",
"-385 -401 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-992 -155 LINE",
"-992 -500 LINE",
"-934 -500 LINE",
"-649 -373 LINE",
"-364 -500 LINE",
"-306 -500 LINE",
"-306 -208 LINE",
"-187 -208 LINE",
"-187 -155 LINE",
"-306 -155 LINE",
"-306 -70 LINE",
"-364 -70 LINE",
"-364 -155 LINE",
"-364 -155 LINE"
);
},
{
closed = 1;
nodes = (
"-364 -438 LINE",
"-649 -315 LINE",
"-934 -438 LINE",
"-934 -208 LINE",
"-364 -208 LINE",
"-364 -208 LINE"
);
}
);
width = 0;
}
);
note = uni17D2178B;
},
{
glyphname = uni17D2178C;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-130 -70 LINE",
"-489 -70 LINE",
"-650 -150 LINE",
"-811 -70 LINE",
"-1170 -70 LINE",
"-1170 -245 LINE",
"-811 -245 LINE",
"-811 -184 LINE",
"-650 -248 LINE",
"-489 -184 LINE",
"-489 -211 LINE SMOOTH",
"-489 -272 OFFCURVE",
"-1170 -303 QCURVE",
"-1170 -500 LINE",
"-801 -500 LINE",
"-489 -455 LINE",
"-489 -500 LINE",
"-130 -500 LINE",
"-130 -328 LINE",
"-489 -328 LINE",
"-489 -366 LINE",
"-811 -410 LINE",
"-811 -366 LINE",
"-130 -280 OFFCURVE",
"-130 -214 QCURVE",
"-130 -214 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-190 -70 LINE",
"-488 -70 LINE",
"-650 -150 LINE",
"-812 -70 LINE",
"-1110 -70 LINE",
"-1110 -245 LINE",
"-812 -245 LINE",
"-812 -184 LINE",
"-650 -248 LINE",
"-488 -184 LINE",
"-488 -211 LINE SMOOTH",
"-488 -243 OFFCURVE",
"-1110 -303 QCURVE",
"-1110 -500 LINE",
"-802 -500 LINE",
"-488 -455 LINE",
"-488 -500 LINE",
"-190 -500 LINE",
"-190 -328 LINE",
"-488 -328 LINE",
"-488 -366 LINE",
"-812 -410 LINE",
"-812 -366 LINE",
"-190 -280 OFFCURVE",
"-190 -214 QCURVE",
"-190 -214 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-250 -70 LINE",
"-428 -70 LINE",
"-650 -133 LINE",
"-872 -70 LINE",
"-1050 -70 LINE",
"-1050 -233 LINE",
"-872 -233 LINE",
"-872 -170 LINE",
"-650 -217 LINE",
"-428 -170 LINE",
"-428 -197 LINE SMOOTH",
"-428 -231 OFFCURVE",
"-1050 -294 QCURVE",
"-1050 -500 LINE",
"-872 -500 LINE",
"-428 -443 LINE",
"-428 -500 LINE",
"-250 -500 LINE",
"-250 -320 LINE",
"-428 -320 LINE",
"-428 -359 LINE",
"-872 -406 LINE",
"-872 -360 LINE",
"-250 -290 OFFCURVE",
"-250 -240 QCURVE",
"-250 -240 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-280 -70 LINE",
"-398 -70 LINE",
"-650 -133 LINE",
"-902 -70 LINE",
"-1020 -70 LINE",
"-1020 -233 LINE",
"-902 -233 LINE",
"-902 -150 LINE",
"-650 -217 LINE",
"-398 -150 LINE",
"-398 -197 LINE SMOOTH",
"-398 -231 OFFCURVE",
"-1020 -294 QCURVE",
"-1020 -500 LINE",
"-902 -500 LINE",
"-398 -443 LINE",
"-398 -500 LINE",
"-280 -500 LINE",
"-280 -320 LINE",
"-398 -320 LINE",
"-398 -359 LINE",
"-902 -426 LINE",
"-902 -360 LINE",
"-280 -290 OFFCURVE",
"-280 -240 QCURVE",
"-280 -240 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-932 -351 LINE",
"-321 -290 OFFCURVE",
"-310 -245 QCURVE",
"-310 -70 LINE",
"-368 -70 LINE",
"-650 -152 LINE",
"-932 -70 LINE",
"-990 -70 LINE",
"-990 -214 LINE",
"-932 -214 LINE",
"-932 -123 LINE",
"-650 -200 LINE",
"-368 -123 LINE",
"-368 -207 LINE SMOOTH",
"-368 -259 OFFCURVE",
"-990 -311 QCURVE",
"-990 -500 LINE",
"-932 -500 LINE",
"-368 -432 LINE",
"-368 -500 LINE",
"-310 -500 LINE",
"-310 -341 LINE",
"-368 -341 LINE",
"-368 -382 LINE",
"-932 -452 LINE",
"-932 -452 LINE"
);
}
);
width = 0;
}
);
note = uni17D2178C;
},
{
glyphname = uni17D2178D;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"20 827 LINE",
"160 704 LINE",
"160 -260 LINE",
"67 -224 OFFCURVE",
"-50 -224 QCURVE SMOOTH",
"-130 -224 LINE",
"-130 -70 LINE",
"-488 -70 LINE",
"-650 -155 LINE",
"-812 -70 LINE",
"-1170 -70 LINE",
"-1170 -500 LINE",
"-703 -500 LINE",
"-703 -337 LINE",
"-812 -337 LINE",
"-812 -238 LINE",
"-650 -321 LINE",
"-488 -238 LINE",
"-488 -500 LINE",
"-130 -500 LINE",
"-130 -380 LINE",
"-50 -380 LINE SMOOTH",
"13 -380 OFFCURVE",
"108 -411 OFFCURVE",
"160 -466 OFFCURVE",
"160 -500 QCURVE",
"528 -500 LINE",
"528 704 LINE SMOOTH",
"528 772 OFFCURVE",
"428 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE",
"20 962 LINE"
);
}
);
width = 638;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"190 -270 LINE",
"97 -234 OFFCURVE",
"-50 -234 QCURVE SMOOTH",
"-190 -234 LINE",
"-190 -70 LINE",
"-488 -70 LINE",
"-650 -155 LINE",
"-812 -70 LINE",
"-1110 -70 LINE",
"-1110 -500 LINE",
"-703 -500 LINE",
"-703 -327 LINE",
"-812 -327 LINE",
"-812 -228 LINE",
"-650 -311 LINE",
"-488 -228 LINE",
"-488 -500 LINE",
"-190 -500 LINE",
"-190 -380 LINE",
"-50 -380 LINE SMOOTH",
"46 -380 OFFCURVE",
"190 -428 OFFCURVE",
"190 -500 QCURVE",
"498 -500 LINE",
"498 704 LINE SMOOTH",
"498 772 OFFCURVE",
"398 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"190 704 LINE",
"190 704 LINE"
);
}
);
width = 638;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"250 -349 LINE",
"97 -314 OFFCURVE",
"-50 -314 QCURVE SMOOTH",
"-200 -314 LINE",
"-200 -70 LINE",
"-378 -70 LINE",
"-600 -174 LINE",
"-822 -70 LINE",
"-1000 -70 LINE",
"-1000 -400 LINE SMOOTH",
"-1000 -500 OFFCURVE",
"-822 -500 QCURVE SMOOTH",
"-733 -500 LINE",
"-733 -400 LINE",
"-822 -400 LINE",
"-822 -193 LINE",
"-600 -296 LINE",
"-378 -193 LINE",
"-378 -500 LINE",
"-200 -500 LINE",
"-200 -403 LINE",
"-50 -403 LINE SMOOTH",
"46 -403 OFFCURVE",
"250 -450 OFFCURVE",
"250 -500 QCURVE",
"438 -500 LINE",
"438 734 LINE SMOOTH",
"438 802 OFFCURVE",
"338 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"250 734 LINE",
"250 734 LINE"
);
}
);
width = 638;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"290 -375 LINE",
"97 -314 OFFCURVE",
"-50 -314 QCURVE SMOOTH",
"-280 -314 LINE",
"-280 -70 LINE",
"-388 -70 LINE",
"-650 -196 LINE",
"-912 -70 LINE",
"-1020 -70 LINE",
"-1020 -385 LINE SMOOTH",
"-1020 -500 OFFCURVE",
"-858 -500 QCURVE SMOOTH",
"-726 -500 LINE",
"-726 -412 LINE",
"-858 -412 LINE SMOOTH",
"-913 -412 OFFCURVE",
"-913 -385 QCURVE SMOOTH",
"-913 -161 LINE",
"-650 -287 LINE",
"-388 -161 LINE",
"-388 -500 LINE",
"-280 -500 LINE",
"-280 -385 LINE",
"-50 -385 LINE SMOOTH",
"46 -385 OFFCURVE",
"290 -450 OFFCURVE",
"290 -500 QCURVE",
"408 -500 LINE",
"408 714 LINE SMOOTH",
"408 802 OFFCURVE",
"308 856 QCURVE SMOOTH",
"208 910 LINE",
"208 992 LINE SMOOTH",
"208 1032 OFFCURVE",
"258 1032 QCURVE SMOOTH",
"408 1032 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"243 772 LINE SMOOTH",
"290 744 OFFCURVE",
"290 714 QCURVE",
"290 714 LINE"
);
}
);
width = 638;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"408 1072 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"238 782 LINE SMOOTH",
"320 737 OFFCURVE",
"320 714 QCURVE SMOOTH",
"320 -399 LINE",
"127 -300 OFFCURVE",
"-50 -300 QCURVE SMOOTH",
"-310 -300 LINE",
"-310 -70 LINE",
"-368 -70 LINE",
"-650 -233 LINE",
"-931 -70 LINE",
"-990 -70 LINE",
"-990 -380 LINE SMOOTH",
"-990 -500 OFFCURVE",
"-858 -500 QCURVE SMOOTH",
"-726 -500 LINE",
"-726 -442 LINE",
"-858 -442 LINE SMOOTH",
"-932 -442 OFFCURVE",
"-932 -380 QCURVE SMOOTH",
"-932 -133 LINE",
"-650 -295 LINE",
"-368 -133 LINE",
"-368 -500 LINE",
"-310 -500 LINE",
"-310 -358 LINE",
"-50 -358 LINE SMOOTH",
"16 -358 OFFCURVE",
"193 -399 OFFCURVE",
"320 -464 OFFCURVE",
"320 -500 QCURVE",
"378 -500 LINE",
"378 714 LINE SMOOTH",
"378 768 OFFCURVE",
"268 830 QCURVE SMOOTH",
"158 891 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"258 1072 QCURVE",
"258 1072 LINE"
);
}
);
width = 638;
}
);
note = uni17D2178D;
},
{
glyphname = uni17D2178E;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1778 -500 LINE",
"-1410 -500 LINE",
"-1269 -395 LINE",
"-1128 -500 LINE",
"-760 -500 LINE",
"-760 -290 LINE SMOOTH",
"-760 -242 OFFCURVE",
"-619 -242 QCURVE SMOOTH",
"-478 -242 OFFCURVE",
"-478 -290 QCURVE SMOOTH",
"-478 -500 LINE",
"-110 -500 LINE",
"-110 -290 LINE SMOOTH",
"-110 -70 OFFCURVE",
"-619 -70 QCURVE SMOOTH",
"-1128 -70 OFFCURVE",
"-1128 -283 QCURVE SMOOTH",
"-1128 -321 LINE",
"-1269 -229 LINE",
"-1410 -321 LINE",
"-1410 -283 LINE SMOOTH",
"-1410 -70 OFFCURVE",
"-1919 -70 QCURVE SMOOTH",
"-2428 -70 OFFCURVE",
"-2428 -290 QCURVE SMOOTH",
"-2428 -345 LINE SMOOTH",
"-2428 -500 OFFCURVE",
"-2194 -500 QCURVE SMOOTH",
"-1990 -500 LINE",
"-1990 -347 LINE",
"-2060 -347 LINE",
"-2060 -290 LINE SMOOTH",
"-2060 -242 OFFCURVE",
"-1919 -242 QCURVE SMOOTH",
"-1778 -242 OFFCURVE",
"-1778 -290 QCURVE",
"-1778 -290 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1748 -500 LINE",
"-1440 -500 LINE",
"-1269 -390 LINE",
"-1098 -500 LINE",
"-790 -500 LINE",
"-790 -280 LINE SMOOTH",
"-790 -229 OFFCURVE",
"-619 -229 QCURVE SMOOTH",
"-448 -229 OFFCURVE",
"-448 -280 QCURVE SMOOTH",
"-448 -500 LINE",
"-140 -500 LINE",
"-140 -280 LINE SMOOTH",
"-140 -70 OFFCURVE",
"-619 -70 QCURVE SMOOTH",
"-1098 -70 OFFCURVE",
"-1098 -272 QCURVE SMOOTH",
"-1098 -312 LINE",
"-1269 -216 LINE",
"-1440 -312 LINE",
"-1440 -272 LINE SMOOTH",
"-1440 -70 OFFCURVE",
"-1919 -70 QCURVE SMOOTH",
"-2398 -70 OFFCURVE",
"-2398 -280 QCURVE SMOOTH",
"-2398 -337 LINE SMOOTH",
"-2398 -500 OFFCURVE",
"-2194 -500 QCURVE SMOOTH",
"-1990 -500 LINE",
"-1990 -340 LINE",
"-2090 -340 LINE",
"-2090 -280 LINE SMOOTH",
"-2090 -229 OFFCURVE",
"-1919 -229 QCURVE SMOOTH",
"-1748 -229 OFFCURVE",
"-1748 -280 QCURVE",
"-1748 -280 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1688 -500 LINE",
"-1500 -500 LINE",
"-1269 -385 LINE",
"-1038 -500 LINE",
"-850 -500 LINE",
"-850 -249 LINE SMOOTH",
"-850 -177 OFFCURVE",
"-619 -177 QCURVE SMOOTH",
"-388 -177 OFFCURVE",
"-388 -249 QCURVE SMOOTH",
"-388 -500 LINE",
"-200 -500 LINE",
"-200 -249 LINE SMOOTH",
"-200 -70 OFFCURVE",
"-619 -70 QCURVE SMOOTH",
"-1038 -70 OFFCURVE",
"-1038 -242 QCURVE SMOOTH",
"-1038 -363 LINE",
"-1269 -263 LINE",
"-1500 -363 LINE",
"-1500 -242 LINE SMOOTH",
"-1500 -70 OFFCURVE",
"-1919 -70 QCURVE SMOOTH",
"-2338 -70 OFFCURVE",
"-2338 -249 QCURVE SMOOTH",
"-2338 -372 LINE SMOOTH",
"-2338 -500 OFFCURVE",
"-2150 -500 QCURVE SMOOTH",
"-2050 -500 LINE",
"-2050 -372 LINE",
"-2150 -372 LINE",
"-2150 -249 LINE SMOOTH",
"-2150 -177 OFFCURVE",
"-1919 -177 QCURVE SMOOTH",
"-1688 -177 OFFCURVE",
"-1688 -249 QCURVE",
"-1688 -249 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-2308 -375 LINE SMOOTH",
"-2308 -500 OFFCURVE",
"-2146 -500 QCURVE SMOOTH",
"-2014 -500 LINE",
"-2014 -402 LINE",
"-2146 -402 LINE SMOOTH",
"-2190 -402 OFFCURVE",
"-2190 -375 QCURVE SMOOTH",
"-2190 -228 LINE SMOOTH",
"-2190 -167 OFFCURVE",
"-1919 -167 QCURVE SMOOTH",
"-1648 -167 OFFCURVE",
"-1648 -228 QCURVE SMOOTH",
"-1648 -500 LINE",
"-1530 -500 LINE",
"-1269 -371 LINE",
"-1008 -500 LINE",
"-890 -500 LINE",
"-890 -228 LINE SMOOTH",
"-890 -167 OFFCURVE",
"-619 -167 QCURVE SMOOTH",
"-348 -167 OFFCURVE",
"-348 -228 QCURVE SMOOTH",
"-348 -500 LINE",
"-230 -500 LINE",
"-230 -228 LINE SMOOTH",
"-230 -70 OFFCURVE",
"-619 -70 QCURVE SMOOTH",
"-1008 -70 OFFCURVE",
"-1008 -222 QCURVE SMOOTH",
"-1008 -397 LINE",
"-1269 -271 LINE",
"-1530 -397 LINE",
"-1530 -222 LINE SMOOTH",
"-1530 -70 OFFCURVE",
"-1919 -70 QCURVE SMOOTH",
"-2308 -70 OFFCURVE",
"-2308 -228 QCURVE",
"-2308 -228 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-2278 -385 LINE SMOOTH",
"-2278 -500 OFFCURVE",
"-2146 -500 QCURVE SMOOTH",
"-2014 -500 LINE",
"-2014 -449 LINE",
"-2146 -449 LINE SMOOTH",
"-2220 -449 OFFCURVE",
"-2220 -385 QCURVE SMOOTH",
"-2220 -228 LINE SMOOTH",
"-2220 -121 OFFCURVE",
"-1919 -121 QCURVE SMOOTH",
"-1618 -121 OFFCURVE",
"-1618 -228 QCURVE SMOOTH",
"-1618 -500 LINE",
"-1560 -500 LINE",
"-1269 -345 LINE",
"-978 -500 LINE",
"-920 -500 LINE",
"-920 -228 LINE SMOOTH",
"-920 -121 OFFCURVE",
"-619 -121 QCURVE SMOOTH",
"-318 -121 OFFCURVE",
"-318 -228 QCURVE SMOOTH",
"-318 -500 LINE",
"-260 -500 LINE",
"-260 -228 LINE SMOOTH",
"-260 -70 OFFCURVE",
"-619 -70 QCURVE SMOOTH",
"-978 -70 OFFCURVE",
"-978 -222 QCURVE SMOOTH",
"-978 -441 LINE",
"-1269 -295 LINE",
"-1560 -441 LINE",
"-1560 -222 LINE SMOOTH",
"-1560 -70 OFFCURVE",
"-1919 -70 QCURVE SMOOTH",
"-2278 -70 OFFCURVE",
"-2278 -228 QCURVE",
"-2278 -228 LINE"
);
}
);
width = 0;
}
);
note = uni17D2178E;
},
{
glyphname = uni17D2178F;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1170 -335 LINE SMOOTH",
"-1170 -500 OFFCURVE",
"-893 -500 QCURVE SMOOTH",
"-676 -500 LINE",
"-676 -335 LINE",
"-822 -335 LINE",
"-822 -301 LINE SMOOTH",
"-822 -222 OFFCURVE",
"-650 -222 QCURVE SMOOTH",
"-478 -222 OFFCURVE",
"-478 -301 QCURVE SMOOTH",
"-478 -500 LINE",
"-130 -500 LINE",
"-130 -301 LINE SMOOTH",
"-130 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1170 -70 OFFCURVE",
"-1170 -301 QCURVE",
"-1170 -301 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1110 -337 LINE SMOOTH",
"-1110 -500 OFFCURVE",
"-893 -500 QCURVE SMOOTH",
"-676 -500 LINE",
"-676 -337 LINE",
"-823 -337 LINE",
"-823 -302 LINE SMOOTH",
"-823 -219 OFFCURVE",
"-650 -219 QCURVE SMOOTH",
"-477 -219 OFFCURVE",
"-477 -302 QCURVE SMOOTH",
"-477 -500 LINE",
"-190 -500 LINE",
"-190 -302 LINE SMOOTH",
"-190 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1110 -70 OFFCURVE",
"-1110 -302 QCURVE",
"-1110 -302 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1050 -370 LINE SMOOTH",
"-1050 -500 OFFCURVE",
"-883 -500 QCURVE SMOOTH",
"-696 -500 LINE",
"-696 -370 LINE",
"-883 -370 LINE",
"-883 -293 LINE SMOOTH",
"-883 -166 OFFCURVE",
"-650 -166 QCURVE SMOOTH",
"-417 -166 OFFCURVE",
"-417 -293 QCURVE SMOOTH",
"-417 -500 LINE",
"-250 -500 LINE",
"-250 -293 LINE SMOOTH",
"-250 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1050 -70 OFFCURVE",
"-1050 -293 QCURVE",
"-1050 -293 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-1020 -370 LINE SMOOTH",
"-1020 -500 OFFCURVE",
"-858 -500 QCURVE SMOOTH",
"-726 -500 LINE",
"-726 -402 LINE",
"-858 -402 LINE SMOOTH",
"-913 -402 OFFCURVE",
"-913 -370 QCURVE SMOOTH",
"-913 -293 LINE SMOOTH",
"-913 -166 OFFCURVE",
"-650 -166 QCURVE SMOOTH",
"-387 -166 OFFCURVE",
"-387 -293 QCURVE SMOOTH",
"-387 -500 LINE",
"-280 -500 LINE",
"-280 -293 LINE SMOOTH",
"-280 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1020 -70 OFFCURVE",
"-1020 -293 QCURVE",
"-1020 -293 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-990 -370 LINE SMOOTH",
"-990 -500 OFFCURVE",
"-858 -500 QCURVE SMOOTH",
"-726 -500 LINE",
"-726 -442 LINE",
"-858 -442 LINE SMOOTH",
"-932 -442 OFFCURVE",
"-932 -370 QCURVE SMOOTH",
"-932 -263 LINE SMOOTH",
"-932 -128 OFFCURVE",
"-650 -128 QCURVE SMOOTH",
"-368 -128 OFFCURVE",
"-368 -263 QCURVE SMOOTH",
"-368 -500 LINE",
"-310 -500 LINE",
"-310 -263 LINE SMOOTH",
"-310 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-990 -70 OFFCURVE",
"-990 -263 QCURVE",
"-990 -263 LINE"
);
}
);
width = 0;
}
);
note = uni17D2178F;
},
{
glyphname = uni17D21790;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-80 -500 LINE",
"-80 -309 LINE",
"-218 -309 LINE SMOOTH",
"-371 -309 OFFCURVE",
"-490 -190 QCURVE SMOOTH",
"-609 -70 OFFCURVE",
"-800 -70 QCURVE SMOOTH",
"-1190 -70 OFFCURVE",
"-1190 -328 QCURVE SMOOTH",
"-1190 -499 LINE",
"-718 -499 LINE",
"-718 -340 LINE",
"-839 -340 LINE",
"-839 -328 LINE SMOOTH",
"-839 -266 OFFCURVE",
"-770 -266 QCURVE SMOOTH",
"-657 -266 OFFCURVE",
"-535 -383 QCURVE SMOOTH",
"-413 -500 OFFCURVE",
"-218 -500 QCURVE",
"-218 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-140 -321 LINE",
"-218 -321 LINE SMOOTH",
"-372 -321 OFFCURVE",
"-638 -70 OFFCURVE",
"-830 -70 QCURVE SMOOTH",
"-1160 -70 OFFCURVE",
"-1160 -320 QCURVE SMOOTH",
"-1160 -499 LINE",
"-748 -499 LINE",
"-748 -332 LINE",
"-870 -332 LINE",
"-870 -320 LINE SMOOTH",
"-870 -255 OFFCURVE",
"-800 -255 QCURVE SMOOTH",
"-686 -255 OFFCURVE",
"-413 -500 OFFCURVE",
"-218 -500 QCURVE SMOOTH",
"-140 -500 LINE",
"-140 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-200 -372 LINE",
"-278 -372 LINE SMOOTH",
"-372 -372 OFFCURVE",
"-638 -70 OFFCURVE",
"-830 -70 QCURVE SMOOTH",
"-1100 -70 OFFCURVE",
"-1100 -331 QCURVE SMOOTH",
"-1100 -499 LINE",
"-768 -499 LINE",
"-768 -374 LINE",
"-930 -374 LINE",
"-930 -331 LINE SMOOTH",
"-930 -194 OFFCURVE",
"-830 -194 QCURVE SMOOTH",
"-686 -194 OFFCURVE",
"-413 -490 OFFCURVE",
"-278 -490 QCURVE SMOOTH",
"-200 -490 LINE",
"-200 -490 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-230 -363 LINE",
"-278 -363 LINE SMOOTH",
"-372 -363 OFFCURVE",
"-638 -70 OFFCURVE",
"-830 -70 QCURVE SMOOTH",
"-1070 -70 OFFCURVE",
"-1070 -294 QCURVE SMOOTH",
"-1070 -499 OFFCURVE",
"-869 -499 QCURVE SMOOTH",
"-768 -499 LINE",
"-768 -415 LINE",
"-869 -415 LINE SMOOTH",
"-970 -415 OFFCURVE",
"-970 -294 QCURVE SMOOTH",
"-970 -152 OFFCURVE",
"-830 -152 QCURVE SMOOTH",
"-686 -152 OFFCURVE",
"-403 -450 OFFCURVE",
"-278 -450 QCURVE SMOOTH",
"-230 -450 LINE",
"-230 -450 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-230 -450 LINE",
"-230 -392 LINE",
"-278 -392 LINE SMOOTH",
"-372 -392 OFFCURVE",
"-515 -231 QCURVE SMOOTH",
"-658 -70 OFFCURVE",
"-830 -70 QCURVE SMOOTH",
"-1048 -70 OFFCURVE",
"-1048 -284 QCURVE SMOOTH",
"-1048 -499 OFFCURVE",
"-819 -499 QCURVE SMOOTH",
"-768 -499 LINE",
"-768 -444 LINE",
"-819 -444 LINE SMOOTH",
"-990 -444 OFFCURVE",
"-990 -283 QCURVE SMOOTH",
"-990 -123 OFFCURVE",
"-830 -123 QCURVE SMOOTH",
"-687 -123 OFFCURVE",
"-535 -287 QCURVE SMOOTH",
"-384 -450 OFFCURVE",
"-278 -450 QCURVE",
"-278 -450 LINE"
);
}
);
width = 0;
}
);
note = uni17D21790;
},
{
glyphname = uni17D21791;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1174 -322 LINE SMOOTH",
"-1174 -500 OFFCURVE",
"-772 -500 QCURVE SMOOTH",
"-578 -500 OFFCURVE",
"-494 -363 QCURVE",
"-494 -500 LINE",
"-130 -500 LINE",
"-130 -144 LINE",
"-494 -144 LINE",
"-559 -344 OFFCURVE",
"-772 -344 QCURVE SMOOTH",
"-812 -344 OFFCURVE",
"-812 -322 QCURVE",
"-576 -275 OFFCURVE",
"-576 -168 QCURVE SMOOTH",
"-576 -70 LINE",
"-944 -70 LINE",
"-944 -187 LINE",
"-904 -187 LINE",
"-904 -218 OFFCURVE",
"-1174 -258 QCURVE",
"-1174 -258 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1114 -334 LINE SMOOTH",
"-1114 -500 OFFCURVE",
"-772 -500 QCURVE SMOOTH",
"-578 -500 OFFCURVE",
"-494 -377 QCURVE",
"-494 -500 LINE",
"-190 -500 LINE",
"-190 -148 LINE",
"-494 -148 LINE",
"-558 -357 OFFCURVE",
"-772 -357 QCURVE SMOOTH",
"-812 -357 OFFCURVE",
"-812 -334 QCURVE",
"-576 -286 OFFCURVE",
"-576 -173 QCURVE SMOOTH",
"-576 -70 LINE",
"-884 -70 LINE",
"-884 -193 LINE",
"-844 -193 LINE",
"-844 -225 OFFCURVE",
"-1114 -267 QCURVE",
"-1114 -267 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1054 -327 LINE SMOOTH",
"-1054 -500 OFFCURVE",
"-792 -500 QCURVE SMOOTH",
"-558 -500 OFFCURVE",
"-434 -352 QCURVE",
"-434 -500 LINE",
"-250 -500 LINE",
"-250 -151 LINE",
"-434 -151 LINE",
"-568 -391 OFFCURVE",
"-792 -391 QCURVE SMOOTH",
"-872 -391 OFFCURVE",
"-872 -327 QCURVE",
"-566 -276 OFFCURVE",
"-566 -158 QCURVE SMOOTH",
"-566 -70 LINE",
"-804 -70 LINE",
"-804 -158 LINE",
"-744 -158 LINE",
"-744 -211 OFFCURVE",
"-1054 -256 QCURVE",
"-1054 -256 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-1024 -327 LINE SMOOTH",
"-1024 -500 OFFCURVE",
"-792 -500 QCURVE SMOOTH",
"-538 -500 OFFCURVE",
"-384 -302 QCURVE",
"-384 -500 LINE",
"-280 -500 LINE",
"-280 -151 LINE",
"-384 -151 LINE",
"-528 -402 OFFCURVE",
"-792 -402 QCURVE SMOOTH",
"-922 -402 OFFCURVE",
"-922 -327 QCURVE",
"-596 -276 OFFCURVE",
"-596 -168 QCURVE SMOOTH",
"-596 -70 LINE",
"-804 -70 LINE",
"-804 -168 LINE",
"-714 -168 LINE",
"-714 -211 OFFCURVE",
"-1024 -256 QCURVE",
"-1024 -256 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-994 -317 LINE SMOOTH",
"-994 -500 OFFCURVE",
"-792 -500 QCURVE SMOOTH",
"-502 -500 OFFCURVE",
"-368 -240 QCURVE",
"-368 -500 LINE",
"-310 -500 LINE",
"-310 -142 LINE",
"-368 -142 LINE",
"-512 -449 OFFCURVE",
"-792 -449 QCURVE SMOOTH",
"-936 -449 OFFCURVE",
"-936 -317 QCURVE",
"-616 -255 OFFCURVE",
"-616 -121 QCURVE SMOOTH",
"-616 -70 LINE",
"-804 -70 LINE",
"-804 -121 LINE",
"-674 -121 LINE",
"-674 -224 OFFCURVE",
"-994 -281 QCURVE",
"-994 -281 LINE"
);
}
);
width = 0;
}
);
note = uni17D21791;
},
{
glyphname = uni17D21792;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-130 -70 LINE",
"-476 -70 LINE",
"-476 -100 LINE",
"-1170 -271 LINE",
"-1170 -353 LINE SMOOTH",
"-1170 -500 OFFCURVE",
"-814 -500 QCURVE SMOOTH",
"-641 -500 OFFCURVE",
"-600 -375 QCURVE",
"-506 -405 OFFCURVE",
"-458 -405 QCURVE SMOOTH",
"-130 -405 OFFCURVE",
"-130 -258 QCURVE",
"-130 -258 LINE"
);
},
{
closed = 1;
nodes = (
"-476 -213 LINE",
"-476 -239 LINE SMOOTH",
"-476 -266 OFFCURVE",
"-501 -266 QCURVE SMOOTH",
"-525 -266 OFFCURVE",
"-602 -248 QCURVE",
"-602 -248 LINE"
);
},
{
closed = 1;
nodes = (
"-848 -332 LINE",
"-728 -294 LINE",
"-728 -336 LINE SMOOTH",
"-728 -366 OFFCURVE",
"-811 -366 QCURVE SMOOTH",
"-848 -366 OFFCURVE",
"-848 -349 QCURVE",
"-848 -349 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-476 -100 LINE",
"-1110 -271 LINE",
"-1110 -353 LINE SMOOTH",
"-1110 -500 OFFCURVE",
"-814 -500 QCURVE SMOOTH",
"-640 -500 OFFCURVE",
"-600 -375 QCURVE",
"-506 -405 OFFCURVE",
"-458 -405 QCURVE SMOOTH",
"-190 -405 OFFCURVE",
"-190 -258 QCURVE SMOOTH",
"-190 -70 LINE",
"-476 -70 LINE",
"-476 -70 LINE"
);
},
{
closed = 1;
nodes = (
"-476 -213 LINE",
"-476 -239 LINE SMOOTH",
"-476 -266 OFFCURVE",
"-501 -266 QCURVE SMOOTH",
"-526 -266 OFFCURVE",
"-602 -248 QCURVE",
"-602 -248 LINE"
);
},
{
closed = 1;
nodes = (
"-848 -332 LINE",
"-728 -294 LINE",
"-728 -336 LINE SMOOTH",
"-728 -366 OFFCURVE",
"-811 -366 QCURVE SMOOTH",
"-848 -366 OFFCURVE",
"-848 -349 QCURVE",
"-848 -349 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-416 -102 LINE",
"-1050 -261 LINE",
"-1050 -346 LINE SMOOTH",
"-1050 -500 OFFCURVE",
"-814 -500 QCURVE SMOOTH",
"-640 -500 OFFCURVE",
"-600 -369 QCURVE",
"-506 -400 OFFCURVE",
"-458 -400 QCURVE SMOOTH",
"-250 -400 OFFCURVE",
"-250 -247 QCURVE SMOOTH",
"-250 -70 LINE",
"-416 -70 LINE",
"-416 -70 LINE"
);
},
{
closed = 1;
nodes = (
"-416 -199 LINE",
"-416 -247 LINE SMOOTH",
"-416 -295 OFFCURVE",
"-458 -295 QCURVE SMOOTH",
"-526 -295 OFFCURVE",
"-632 -257 QCURVE",
"-632 -257 LINE"
);
},
{
closed = 1;
nodes = (
"-888 -323 LINE",
"-698 -275 LINE",
"-698 -329 LINE SMOOTH",
"-698 -400 OFFCURVE",
"-811 -400 QCURVE SMOOTH",
"-888 -400 OFFCURVE",
"-888 -342 QCURVE",
"-888 -342 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-376 -102 LINE",
"-1020 -261 LINE",
"-1020 -346 LINE SMOOTH",
"-1020 -500 OFFCURVE",
"-814 -500 QCURVE SMOOTH",
"-620 -500 OFFCURVE",
"-610 -339 QCURVE",
"-516 -400 OFFCURVE",
"-458 -400 QCURVE SMOOTH",
"-280 -400 OFFCURVE",
"-280 -247 QCURVE SMOOTH",
"-280 -70 LINE",
"-376 -70 LINE",
"-376 -70 LINE"
);
},
{
closed = 1;
nodes = (
"-376 -179 LINE",
"-376 -247 LINE SMOOTH",
"-376 -305 OFFCURVE",
"-458 -305 QCURVE SMOOTH",
"-526 -305 OFFCURVE",
"-632 -247 QCURVE",
"-632 -247 LINE"
);
},
{
closed = 1;
nodes = (
"-928 -323 LINE",
"-698 -265 LINE",
"-698 -329 LINE SMOOTH",
"-698 -409 OFFCURVE",
"-811 -409 QCURVE SMOOTH",
"-928 -409 OFFCURVE",
"-928 -342 QCURVE",
"-928 -342 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-310 -70 LINE",
"-368 -70 LINE",
"-368 -98 LINE",
"-990 -265 LINE",
"-990 -319 LINE SMOOTH",
"-990 -500 OFFCURVE",
"-814 -500 QCURVE SMOOTH",
"-620 -500 OFFCURVE",
"-610 -290 QCURVE",
"-516 -362 OFFCURVE",
"-458 -362 QCURVE SMOOTH",
"-310 -362 OFFCURVE",
"-310 -226 QCURVE",
"-310 -226 LINE"
);
},
{
closed = 1;
nodes = (
"-368 -147 LINE",
"-368 -226 LINE SMOOTH",
"-368 -310 OFFCURVE",
"-458 -310 QCURVE SMOOTH",
"-516 -310 OFFCURVE",
"-622 -217 QCURVE",
"-622 -217 LINE"
);
},
{
closed = 1;
nodes = (
"-932 -299 LINE",
"-668 -228 LINE",
"-668 -299 LINE SMOOTH",
"-668 -449 OFFCURVE",
"-814 -449 QCURVE SMOOTH",
"-932 -449 OFFCURVE",
"-932 -325 QCURVE",
"-932 -325 LINE"
);
}
);
width = 0;
}
);
note = uni17D21792;
},
{
glyphname = uni17D21793;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-510 -422 LINE",
"-510 -500 OFFCURVE",
"-325 -500 QCURVE SMOOTH",
"-80 -500 OFFCURVE",
"-80 -399 QCURVE SMOOTH",
"-80 -278 OFFCURVE",
"-180 -278 QCURVE",
"-180 -236 LINE",
"-30 -236 LINE",
"-30 -103 LINE",
"-180 -103 LINE",
"-180 -70 LINE",
"-510 -70 LINE",
"-510 -103 LINE",
"-840 -103 LINE SMOOTH",
"-1190 -103 OFFCURVE",
"-1190 -284 QCURVE SMOOTH",
"-1190 -468 OFFCURVE",
"-820 -468 QCURVE",
"-820 -468 LINE"
);
},
{
closed = 1;
nodes = (
"-860 -236 OFFCURVE",
"-780 -236 QCURVE SMOOTH",
"-510 -236 LINE",
"-510 -278 LINE",
"-820 -307 LINE",
"-860 -307 OFFCURVE",
"-860 -285 QCURVE",
"-860 -285 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-510 -418 LINE",
"-510 -500 OFFCURVE",
"-325 -500 QCURVE SMOOTH",
"-140 -500 OFFCURVE",
"-140 -394 QCURVE SMOOTH",
"-140 -288 OFFCURVE",
"-240 -288 QCURVE",
"-240 -244 LINE",
"-90 -244 LINE",
"-90 -105 LINE",
"-240 -105 LINE",
"-240 -70 LINE",
"-510 -70 LINE",
"-510 -105 LINE",
"-870 -105 LINE SMOOTH",
"-1160 -105 OFFCURVE",
"-1160 -294 QCURVE SMOOTH",
"-1160 -466 OFFCURVE",
"-850 -466 QCURVE",
"-850 -466 LINE"
);
},
{
closed = 1;
nodes = (
"-890 -244 OFFCURVE",
"-810 -244 QCURVE SMOOTH",
"-510 -244 LINE",
"-510 -288 LINE",
"-850 -319 LINE",
"-890 -319 OFFCURVE",
"-890 -295 QCURVE",
"-890 -295 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-450 -414 LINE",
"-450 -500 OFFCURVE",
"-325 -500 QCURVE SMOOTH",
"-200 -500 OFFCURVE",
"-200 -409 QCURVE SMOOTH",
"-200 -318 OFFCURVE",
"-300 -318 QCURVE",
"-300 -222 LINE",
"-150 -222 LINE",
"-150 -125 LINE",
"-300 -125 LINE",
"-300 -70 LINE",
"-450 -70 LINE",
"-450 -125 LINE",
"-870 -125 LINE SMOOTH",
"-1100 -125 OFFCURVE",
"-1100 -285 QCURVE SMOOTH",
"-1100 -445 OFFCURVE",
"-850 -445 QCURVE",
"-850 -445 LINE"
);
},
{
closed = 1;
nodes = (
"-950 -222 OFFCURVE",
"-870 -222 QCURVE SMOOTH",
"-450 -222 LINE",
"-450 -318 LINE",
"-850 -349 LINE",
"-950 -349 OFFCURVE",
"-950 -286 QCURVE",
"-950 -286 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-410 -383 LINE",
"-410 -500 OFFCURVE",
"-305 -500 QCURVE SMOOTH",
"-200 -500 OFFCURVE",
"-200 -404 QCURVE SMOOTH",
"-200 -297 OFFCURVE",
"-330 -297 QCURVE",
"-330 -211 LINE",
"-150 -211 LINE",
"-150 -125 LINE",
"-330 -125 LINE",
"-330 -70 LINE",
"-410 -70 LINE",
"-410 -125 LINE",
"-870 -125 LINE SMOOTH",
"-1070 -125 OFFCURVE",
"-1070 -285 QCURVE SMOOTH",
"-1070 -425 OFFCURVE",
"-850 -425 QCURVE",
"-850 -425 LINE"
);
},
{
closed = 1;
nodes = (
"-980 -211 OFFCURVE",
"-870 -211 QCURVE SMOOTH",
"-410 -211 LINE",
"-410 -297 LINE",
"-850 -340 LINE",
"-980 -340 OFFCURVE",
"-980 -286 QCURVE",
"-980 -286 LINE"
);
},
{
closed = 1;
nodes = (
"-271 -378 OFFCURVE",
"-271 -404 QCURVE SMOOTH",
"-271 -431 OFFCURVE",
"-305 -431 QCURVE SMOOTH",
"-332 -431 OFFCURVE",
"-332 -378 QCURVE",
"-332 -378 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-440 -378 LINE",
"-440 -500 OFFCURVE",
"-335 -500 QCURVE SMOOTH",
"-230 -500 OFFCURVE",
"-230 -415 QCURVE SMOOTH",
"-230 -321 OFFCURVE",
"-382 -321 QCURVE",
"-382 -191 LINE",
"-180 -191 LINE",
"-180 -139 LINE",
"-382 -139 LINE",
"-382 -70 LINE",
"-440 -70 LINE",
"-440 -139 LINE",
"-870 -139 LINE SMOOTH",
"-1040 -139 OFFCURVE",
"-1040 -286 QCURVE SMOOTH",
"-1040 -434 OFFCURVE",
"-850 -434 QCURVE",
"-850 -434 LINE"
);
},
{
closed = 1;
nodes = (
"-980 -191 OFFCURVE",
"-870 -191 QCURVE SMOOTH",
"-440 -191 LINE",
"-440 -321 LINE",
"-850 -382 LINE",
"-980 -382 OFFCURVE",
"-980 -286 QCURVE",
"-980 -286 LINE"
);
},
{
closed = 1;
nodes = (
"-288 -373 OFFCURVE",
"-288 -415 QCURVE SMOOTH",
"-288 -449 OFFCURVE",
"-335 -449 QCURVE SMOOTH",
"-382 -449 OFFCURVE",
"-382 -373 QCURVE",
"-382 -373 LINE"
);
}
);
width = 0;
}
);
note = uni17D21793;
},
{
glyphname = uni17D21794;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"20 827 LINE",
"160 704 LINE",
"160 -306 LINE",
"34 -200 LINE",
"-94 -307 LINE",
"-94 -195 LINE",
"-34 -195 LINE",
"-34 -70 LINE",
"-462 -70 LINE",
"-462 -500 LINE",
"-63 -500 LINE",
"34 -421 LINE",
"130 -500 LINE",
"528 -500 LINE",
"528 704 LINE SMOOTH",
"528 772 OFFCURVE",
"428 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE",
"20 962 LINE"
);
}
);
width = 638;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"190 -326 LINE",
"49 -220 LINE",
"-94 -327 LINE",
"-94 -205 LINE",
"-34 -205 LINE",
"-34 -70 LINE",
"-402 -70 LINE",
"-402 -500 LINE",
"-63 -500 LINE",
"49 -421 LINE",
"160 -500 LINE",
"498 -500 LINE",
"498 704 LINE SMOOTH",
"498 772 OFFCURVE",
"398 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"190 704 LINE",
"190 704 LINE"
);
}
);
width = 638;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"250 -367 LINE",
"49 -229 LINE",
"-154 -368 LINE",
"-154 -185 LINE",
"-54 -185 LINE",
"-54 -70 LINE",
"-342 -70 LINE",
"-342 -500 LINE",
"-123 -500 LINE",
"49 -387 LINE",
"220 -500 LINE",
"438 -500 LINE",
"438 734 LINE SMOOTH",
"438 802 OFFCURVE",
"338 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"250 734 LINE",
"250 734 LINE"
);
}
);
width = 638;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"290 -394 LINE",
"49 -247 LINE",
"-194 -394 LINE",
"-194 -155 LINE",
"-54 -155 LINE",
"-54 -70 LINE",
"-312 -70 LINE",
"-312 -500 LINE",
"-194 -500 LINE",
"49 -342 LINE",
"290 -500 LINE",
"408 -500 LINE",
"408 714 LINE SMOOTH",
"408 802 OFFCURVE",
"308 856 QCURVE SMOOTH",
"208 910 LINE",
"208 992 LINE SMOOTH",
"208 1032 OFFCURVE",
"258 1032 QCURVE SMOOTH",
"408 1032 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"243 772 LINE SMOOTH",
"290 744 OFFCURVE",
"290 714 QCURVE",
"290 714 LINE"
);
}
);
width = 638;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"408 1072 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"238 782 LINE SMOOTH",
"320 737 OFFCURVE",
"320 714 QCURVE SMOOTH",
"320 -433 LINE",
"49 -246 LINE",
"-224 -433 LINE",
"-224 -134 LINE",
"-54 -134 LINE",
"-54 -80 LINE",
"-282 -80 LINE",
"-282 -500 LINE",
"-224 -500 LINE",
"49 -310 LINE",
"320 -500 LINE",
"378 -500 LINE",
"378 714 LINE SMOOTH",
"378 768 OFFCURVE",
"268 830 QCURVE SMOOTH",
"158 891 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"258 1072 QCURVE",
"258 1072 LINE"
);
}
);
width = 638;
}
);
note = uni17D21794;
},
{
glyphname = uni17D21795;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-130 -500 LINE",
"-130 -70 LINE",
"-581 -70 LINE",
"-581 -202 LINE",
"-488 -202 LINE",
"-488 -317 LINE",
"-650 -220 LINE",
"-812 -317 LINE",
"-812 -70 LINE",
"-1170 -70 LINE",
"-1170 -500 LINE",
"-812 -500 LINE",
"-650 -403 LINE",
"-488 -500 LINE",
"-488 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-190 -70 LINE",
"-581 -70 LINE",
"-581 -208 LINE",
"-488 -208 LINE",
"-488 -329 LINE",
"-650 -227 LINE",
"-812 -329 LINE",
"-812 -70 LINE",
"-1110 -70 LINE",
"-1110 -500 LINE",
"-812 -500 LINE",
"-650 -398 LINE",
"-488 -500 LINE",
"-190 -500 LINE",
"-190 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-250 -70 LINE",
"-561 -70 LINE",
"-561 -185 LINE",
"-428 -185 LINE",
"-428 -361 LINE",
"-650 -235 LINE",
"-872 -361 LINE",
"-872 -70 LINE",
"-1050 -70 LINE",
"-1050 -500 LINE",
"-872 -500 LINE",
"-650 -374 LINE",
"-428 -500 LINE",
"-250 -500 LINE",
"-250 -500 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */\0129 8 7 2 4 0 3 1 76 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 19 values pushed */\0120 3 0 2 3 87 4 1 2 2 0 95 1 1 0 0 20 0 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 18 values pushed */\0120 3 3 2 95 4 1 2 2 18 77 1 1 0 0 20 0 78 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 8 values pushed */\01217 20 17 18 16 5 7 27 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-280 -70 LINE",
"-561 -70 LINE",
"-561 -163 LINE",
"-398 -163 LINE",
"-398 -395 LINE",
"-650 -266 LINE",
"-902 -395 LINE",
"-902 -70 LINE",
"-1020 -70 LINE",
"-1020 -500 LINE",
"-902 -500 LINE",
"-650 -371 LINE",
"-398 -500 LINE",
"-280 -500 LINE",
"-280 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-310 -500 LINE",
"-310 -70 LINE",
"-561 -70 LINE",
"-561 -135 LINE",
"-368 -135 LINE",
"-368 -431 LINE",
"-650 -285 LINE",
"-932 -431 LINE",
"-932 -70 LINE",
"-990 -70 LINE",
"-990 -500 LINE",
"-932 -500 LINE",
"-650 -354 LINE",
"-368 -500 LINE",
"-368 -500 LINE"
);
}
);
width = 0;
}
);
note = uni17D21795;
},
{
glyphname = uni17D21796;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-488 -228 LINE",
"-488 -500 LINE",
"-130 -500 LINE",
"-130 -70 LINE",
"-488 -70 LINE",
"-650 -155 LINE",
"-812 -70 LINE",
"-1170 -70 LINE",
"-1170 -325 LINE SMOOTH",
"-1170 -500 OFFCURVE",
"-906 -500 QCURVE SMOOTH",
"-703 -500 LINE",
"-703 -327 LINE",
"-812 -327 LINE",
"-812 -228 LINE",
"-650 -311 LINE",
"-650 -311 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-190 -70 LINE",
"-488 -70 LINE",
"-650 -159 LINE",
"-812 -70 LINE",
"-1110 -70 LINE",
"-1110 -337 LINE SMOOTH",
"-1110 -500 OFFCURVE",
"-906 -500 QCURVE SMOOTH",
"-703 -500 LINE",
"-703 -340 LINE",
"-812 -340 LINE",
"-812 -236 LINE",
"-650 -323 LINE",
"-488 -236 LINE",
"-488 -500 LINE",
"-190 -500 LINE",
"-190 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-250 -70 LINE",
"-428 -70 LINE",
"-650 -183 LINE",
"-872 -70 LINE",
"-1050 -70 LINE",
"-1050 -372 LINE SMOOTH",
"-1050 -500 OFFCURVE",
"-872 -500 QCURVE SMOOTH",
"-753 -500 LINE",
"-753 -372 LINE",
"-872 -372 LINE",
"-872 -204 LINE",
"-650 -316 LINE",
"-428 -204 LINE",
"-428 -500 LINE",
"-250 -500 LINE",
"-250 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-1020 -385 LINE SMOOTH",
"-1020 -500 OFFCURVE",
"-858 -500 QCURVE SMOOTH",
"-726 -500 LINE",
"-726 -412 LINE",
"-858 -412 LINE SMOOTH",
"-913 -412 OFFCURVE",
"-913 -385 QCURVE SMOOTH",
"-913 -161 LINE",
"-650 -287 LINE",
"-388 -161 LINE",
"-388 -500 LINE",
"-280 -500 LINE",
"-280 -70 LINE",
"-388 -70 LINE",
"-650 -196 LINE",
"-912 -70 LINE",
"-1020 -70 LINE",
"-1020 -70 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-932 -70 LINE",
"-990 -70 LINE",
"-990 -385 LINE SMOOTH",
"-990 -500 OFFCURVE",
"-858 -500 QCURVE SMOOTH",
"-726 -500 LINE",
"-726 -449 LINE",
"-858 -449 LINE SMOOTH",
"-932 -449 OFFCURVE",
"-932 -385 QCURVE SMOOTH",
"-932 -126 LINE",
"-650 -251 LINE",
"-368 -126 LINE",
"-368 -500 LINE",
"-310 -500 LINE",
"-310 -70 LINE",
"-368 -70 LINE",
"-650 -196 LINE",
"-650 -196 LINE"
);
}
);
width = 0;
}
);
note = uni17D21796;
},
{
glyphname = uni17D21797;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1257 -320 LINE",
"-1257 -500 LINE",
"-822 -500 LINE",
"-822 -291 LINE SMOOTH",
"-822 -212 OFFCURVE",
"-650 -212 QCURVE SMOOTH",
"-478 -212 OFFCURVE",
"-478 -291 QCURVE SMOOTH",
"-478 -500 LINE",
"-130 -500 LINE",
"-130 -291 LINE SMOOTH",
"-130 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1170 -70 OFFCURVE",
"-1170 -291 QCURVE SMOOTH",
"-1170 -320 LINE",
"-1170 -320 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-823 -302 LINE SMOOTH",
"-823 -219 OFFCURVE",
"-650 -219 QCURVE SMOOTH",
"-477 -219 OFFCURVE",
"-477 -302 QCURVE SMOOTH",
"-477 -500 LINE",
"-190 -500 LINE",
"-190 -302 LINE SMOOTH",
"-190 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1110 -70 OFFCURVE",
"-1110 -302 QCURVE SMOOTH",
"-1110 -332 LINE",
"-1197 -332 LINE",
"-1197 -500 LINE",
"-823 -500 LINE",
"-823 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-883 -293 LINE SMOOTH",
"-883 -166 OFFCURVE",
"-650 -166 QCURVE SMOOTH",
"-417 -166 OFFCURVE",
"-417 -293 QCURVE SMOOTH",
"-417 -500 LINE",
"-250 -500 LINE",
"-250 -293 LINE SMOOTH",
"-250 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1050 -70 OFFCURVE",
"-1050 -293 QCURVE SMOOTH",
"-1050 -374 LINE",
"-1157 -374 LINE",
"-1157 -500 LINE",
"-883 -500 LINE",
"-883 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-913 -267 LINE SMOOTH",
"-913 -166 OFFCURVE",
"-650 -166 QCURVE SMOOTH",
"-387 -166 OFFCURVE",
"-387 -267 QCURVE SMOOTH",
"-387 -500 LINE",
"-280 -500 LINE",
"-280 -267 LINE SMOOTH",
"-280 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-1020 -70 OFFCURVE",
"-1020 -267 QCURVE SMOOTH",
"-1020 -406 LINE",
"-1157 -406 LINE",
"-1157 -500 LINE",
"-913 -500 LINE",
"-913 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-1147 -500 LINE",
"-932 -500 LINE",
"-932 -293 LINE SMOOTH",
"-932 -128 OFFCURVE",
"-650 -128 QCURVE SMOOTH",
"-368 -128 OFFCURVE",
"-368 -293 QCURVE SMOOTH",
"-368 -500 LINE",
"-310 -500 LINE",
"-310 -293 LINE SMOOTH",
"-310 -70 OFFCURVE",
"-650 -70 QCURVE SMOOTH",
"-990 -70 OFFCURVE",
"-990 -293 QCURVE SMOOTH",
"-990 -442 LINE",
"-1147 -442 LINE",
"-1147 -442 LINE"
);
}
);
width = 0;
}
);
note = uni17D21797;
},
{
glyphname = uni17D21798;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-123 -70 LINE",
"-466 -70 LINE",
"-466 -186 LINE",
"-1130 -186 LINE",
"-1130 -397 LINE",
"-466 -397 LINE",
"-466 -500 OFFCURVE",
"-233 -500 QCURVE SMOOTH",
"0 -500 OFFCURVE",
"0 -342 QCURVE SMOOTH",
"0 -186 OFFCURVE",
"-123 -186 QCURVE",
"-123 -186 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1100 -192 LINE",
"-1100 -392 LINE",
"-466 -392 LINE",
"-466 -500 OFFCURVE",
"-263 -500 QCURVE SMOOTH",
"-60 -500 OFFCURVE",
"-60 -345 QCURVE SMOOTH",
"-60 -192 OFFCURVE",
"-183 -192 QCURVE",
"-183 -70 LINE",
"-466 -70 LINE",
"-466 -192 LINE",
"-466 -192 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1100 -237 LINE",
"-1100 -375 LINE",
"-406 -375 LINE",
"-406 -500 OFFCURVE",
"-263 -500 QCURVE SMOOTH",
"-120 -500 OFFCURVE",
"-120 -368 QCURVE SMOOTH",
"-120 -237 OFFCURVE",
"-243 -237 QCURVE",
"-243 -70 LINE",
"-406 -70 LINE",
"-406 -237 LINE",
"-406 -237 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-1070 -218 LINE",
"-1070 -315 LINE",
"-406 -315 LINE",
"-406 -358 LINE SMOOTH",
"-406 -500 OFFCURVE",
"-258 -500 QCURVE SMOOTH",
"-120 -500 OFFCURVE",
"-120 -367 QCURVE SMOOTH",
"-120 -218 OFFCURVE",
"-268 -218 QCURVE SMOOTH",
"-303 -218 LINE",
"-303 -70 LINE",
"-406 -70 LINE",
"-406 -218 LINE",
"-406 -218 LINE"
);
},
{
closed = 1;
nodes = (
"-268 -315 LINE SMOOTH",
"-214 -315 OFFCURVE",
"-214 -367 QCURVE SMOOTH",
"-214 -410 OFFCURVE",
"-258 -410 QCURVE SMOOTH",
"-303 -410 OFFCURVE",
"-303 -358 QCURVE SMOOTH",
"-303 -315 LINE",
"-303 -315 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-371 -70 LINE",
"-371 -263 LINE",
"-1070 -263 LINE",
"-1070 -321 LINE",
"-371 -321 LINE",
"-371 -373 LINE SMOOTH",
"-371 -500 OFFCURVE",
"-248 -500 QCURVE SMOOTH",
"-193 -500 OFFCURVE",
"-130 -437 OFFCURVE",
"-130 -384 QCURVE SMOOTH",
"-130 -329 OFFCURVE",
"-202 -263 OFFCURVE",
"-268 -263 QCURVE SMOOTH",
"-313 -263 LINE",
"-313 -70 LINE",
"-313 -70 LINE"
);
},
{
closed = 1;
nodes = (
"-313 -321 LINE",
"-268 -321 LINE SMOOTH",
"-184 -321 OFFCURVE",
"-184 -382 QCURVE SMOOTH",
"-184 -442 OFFCURVE",
"-248 -442 QCURVE SMOOTH",
"-313 -442 OFFCURVE",
"-313 -373 QCURVE",
"-313 -373 LINE"
);
}
);
width = 0;
}
);
note = uni17D21798;
},
{
glyphname = uni17D21799;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"20 827 LINE",
"160 704 LINE",
"160 -225 LINE SMOOTH",
"160 -289 OFFCURVE",
"50 -289 QCURVE SMOOTH",
"-90 -289 OFFCURVE",
"-90 -225 QCURVE SMOOTH",
"-90 -70 LINE",
"-458 -70 LINE",
"-458 -225 LINE SMOOTH",
"-458 -500 OFFCURVE",
"50 -500 QCURVE SMOOTH",
"528 -500 OFFCURVE",
"528 -225 QCURVE SMOOTH",
"528 704 LINE SMOOTH",
"528 772 OFFCURVE",
"428 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1160 LINE",
"238 1160 LINE SMOOTH",
"20 1160 OFFCURVE",
"20 962 QCURVE",
"20 962 LINE"
);
}
);
width = 638;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"190 -245 LINE SMOOTH",
"190 -309 OFFCURVE",
"50 -309 QCURVE SMOOTH",
"-90 -309 OFFCURVE",
"-90 -245 QCURVE SMOOTH",
"-90 -70 LINE",
"-398 -70 LINE",
"-398 -245 LINE SMOOTH",
"-398 -500 OFFCURVE",
"50 -500 QCURVE SMOOTH",
"498 -500 OFFCURVE",
"498 -245 QCURVE SMOOTH",
"498 704 LINE SMOOTH",
"498 772 OFFCURVE",
"398 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"190 704 LINE",
"190 704 LINE"
);
}
);
width = 638;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"250 -253 LINE SMOOTH",
"250 -367 OFFCURVE",
"50 -367 QCURVE SMOOTH",
"-150 -367 OFFCURVE",
"-150 -253 QCURVE SMOOTH",
"-150 -70 LINE",
"-338 -70 LINE",
"-338 -253 LINE SMOOTH",
"-338 -500 OFFCURVE",
"50 -500 QCURVE SMOOTH",
"438 -500 OFFCURVE",
"438 -253 QCURVE SMOOTH",
"438 734 LINE SMOOTH",
"438 802 OFFCURVE",
"338 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"250 734 LINE",
"250 734 LINE"
);
}
);
width = 638;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"290 -253 LINE SMOOTH",
"290 -403 OFFCURVE",
"50 -403 QCURVE SMOOTH",
"-190 -403 OFFCURVE",
"-190 -253 QCURVE SMOOTH",
"-190 -70 LINE",
"-308 -70 LINE",
"-308 -253 LINE SMOOTH",
"-308 -500 OFFCURVE",
"50 -500 QCURVE SMOOTH",
"408 -500 OFFCURVE",
"408 -253 QCURVE SMOOTH",
"408 714 LINE SMOOTH",
"408 802 OFFCURVE",
"308 856 QCURVE SMOOTH",
"208 910 LINE",
"208 992 LINE SMOOTH",
"208 1032 OFFCURVE",
"258 1032 QCURVE SMOOTH",
"408 1032 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"243 772 LINE SMOOTH",
"290 744 OFFCURVE",
"290 714 QCURVE",
"290 714 LINE"
);
}
);
width = 638;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"408 1072 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"238 782 LINE SMOOTH",
"320 737 OFFCURVE",
"320 714 QCURVE SMOOTH",
"320 -250 LINE SMOOTH",
"320 -442 OFFCURVE",
"50 -442 QCURVE SMOOTH",
"-220 -442 OFFCURVE",
"-220 -250 QCURVE SMOOTH",
"-220 -70 LINE",
"-278 -70 LINE",
"-278 -250 LINE SMOOTH",
"-278 -500 OFFCURVE",
"50 -500 QCURVE SMOOTH",
"378 -500 OFFCURVE",
"378 -250 QCURVE SMOOTH",
"378 714 LINE SMOOTH",
"378 768 OFFCURVE",
"268 830 QCURVE SMOOTH",
"158 891 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"258 1072 QCURVE",
"258 1072 LINE"
);
}
);
width = 638;
}
);
note = uni17D21799;
},
{
glyphname = uni17D2179A;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"20 837 LINE",
"100 714 LINE",
"100 -200 LINE SMOOTH",
"100 -500 OFFCURVE",
"578 -500 QCURVE SMOOTH",
"1056 -500 OFFCURVE",
"1056 -200 QCURVE SMOOTH",
"1056 -80 LINE",
"688 -80 LINE",
"688 -200 LINE SMOOTH",
"688 -270 OFFCURVE",
"578 -270 QCURVE SMOOTH",
"468 -270 OFFCURVE",
"468 -200 QCURVE SMOOTH",
"468 714 LINE SMOOTH",
"468 782 OFFCURVE",
"393 836 QCURVE SMOOTH",
"318 890 LINE",
"318 932 LINE",
"518 932 LINE",
"518 1150 LINE",
"228 1150 LINE SMOOTH",
"20 1150 OFFCURVE",
"20 972 QCURVE",
"20 972 LINE"
);
}
);
width = 578;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"130 -220 LINE SMOOTH",
"130 -500 OFFCURVE",
"578 -500 QCURVE SMOOTH",
"1026 -500 OFFCURVE",
"1026 -220 QCURVE SMOOTH",
"1026 -70 LINE",
"718 -70 LINE",
"718 -220 LINE SMOOTH",
"718 -290 OFFCURVE",
"578 -290 QCURVE SMOOTH",
"438 -290 OFFCURVE",
"438 -220 QCURVE SMOOTH",
"438 714 LINE SMOOTH",
"438 782 OFFCURVE",
"363 836 QCURVE SMOOTH",
"288 890 LINE",
"288 932 LINE",
"488 932 LINE",
"488 1130 LINE",
"228 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 972 QCURVE SMOOTH",
"30 837 LINE",
"130 714 LINE",
"130 714 LINE"
);
}
);
width = 578;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 -220 LINE SMOOTH",
"200 -500 OFFCURVE",
"588 -500 QCURVE SMOOTH",
"976 -500 OFFCURVE",
"976 -220 QCURVE SMOOTH",
"976 -70 LINE",
"788 -70 LINE",
"788 -220 LINE SMOOTH",
"788 -350 OFFCURVE",
"588 -350 QCURVE SMOOTH",
"388 -350 OFFCURVE",
"388 -220 QCURVE",
"388 -220 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 -220 LINE SMOOTH",
"230 -500 OFFCURVE",
"588 -500 QCURVE SMOOTH",
"946 -500 OFFCURVE",
"946 -220 QCURVE SMOOTH",
"946 -70 LINE",
"828 -70 LINE",
"828 -220 LINE SMOOTH",
"828 -390 OFFCURVE",
"588 -390 QCURVE SMOOTH",
"348 -390 OFFCURVE",
"348 -220 QCURVE",
"348 -220 LINE"
);
}
);
width = 578;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 -250 LINE SMOOTH",
"260 -500 OFFCURVE",
"588 -500 QCURVE SMOOTH",
"916 -500 OFFCURVE",
"916 -250 QCURVE SMOOTH",
"916 -100 LINE",
"858 -100 LINE",
"858 -250 LINE SMOOTH",
"858 -442 OFFCURVE",
"588 -442 QCURVE SMOOTH",
"318 -442 OFFCURVE",
"318 -250 QCURVE",
"318 -250 LINE"
);
}
);
width = 578;
}
);
note = uni17D2179A;
},
{
glyphname = uni17D2179B;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-774 -233 OFFCURVE",
"-774 -272 QCURVE SMOOTH",
"-774 -298 LINE SMOOTH",
"-774 -500 OFFCURVE",
"-477 -500 QCURVE SMOOTH",
"-100 -500 OFFCURVE",
"-100 -298 QCURVE SMOOTH",
"-100 -70 LINE",
"-428 -70 LINE",
"-428 -298 LINE SMOOTH",
"-428 -337 OFFCURVE",
"-477 -337 QCURVE SMOOTH",
"-526 -337 OFFCURVE",
"-526 -298 QCURVE SMOOTH",
"-526 -272 LINE SMOOTH",
"-526 -70 OFFCURVE",
"-823 -70 QCURVE SMOOTH",
"-1200 -70 OFFCURVE",
"-1200 -272 QCURVE SMOOTH",
"-1200 -500 LINE",
"-872 -500 LINE",
"-872 -272 LINE SMOOTH",
"-872 -233 OFFCURVE",
"-823 -233 QCURVE",
"-823 -233 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-774 -233 OFFCURVE",
"-774 -272 QCURVE SMOOTH",
"-774 -298 LINE SMOOTH",
"-774 -500 OFFCURVE",
"-477 -500 QCURVE SMOOTH",
"-160 -500 OFFCURVE",
"-160 -298 QCURVE SMOOTH",
"-160 -70 LINE",
"-428 -70 LINE",
"-428 -298 LINE SMOOTH",
"-428 -337 OFFCURVE",
"-477 -337 QCURVE SMOOTH",
"-526 -337 OFFCURVE",
"-526 -298 QCURVE SMOOTH",
"-526 -272 LINE SMOOTH",
"-526 -70 OFFCURVE",
"-823 -70 QCURVE SMOOTH",
"-1140 -70 OFFCURVE",
"-1140 -272 QCURVE SMOOTH",
"-1140 -500 LINE",
"-872 -500 LINE",
"-872 -272 LINE SMOOTH",
"-872 -233 OFFCURVE",
"-823 -233 QCURVE",
"-823 -233 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-734 -180 OFFCURVE",
"-734 -273 QCURVE SMOOTH",
"-734 -297 LINE SMOOTH",
"-734 -500 OFFCURVE",
"-477 -500 QCURVE SMOOTH",
"-220 -500 OFFCURVE",
"-220 -297 QCURVE SMOOTH",
"-220 -70 LINE",
"-388 -70 LINE",
"-388 -297 LINE SMOOTH",
"-388 -390 OFFCURVE",
"-477 -390 QCURVE SMOOTH",
"-566 -390 OFFCURVE",
"-566 -297 QCURVE SMOOTH",
"-566 -273 LINE SMOOTH",
"-566 -70 OFFCURVE",
"-823 -70 QCURVE SMOOTH",
"-1080 -70 OFFCURVE",
"-1080 -273 QCURVE SMOOTH",
"-1080 -500 LINE",
"-912 -500 LINE",
"-912 -273 LINE SMOOTH",
"-912 -180 OFFCURVE",
"-823 -180 QCURVE",
"-823 -180 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-694 -150 OFFCURVE",
"-694 -249 QCURVE SMOOTH",
"-694 -321 LINE SMOOTH",
"-694 -500 OFFCURVE",
"-477 -500 QCURVE SMOOTH",
"-250 -500 OFFCURVE",
"-250 -321 QCURVE SMOOTH",
"-250 -70 LINE",
"-348 -70 LINE",
"-348 -321 LINE SMOOTH",
"-348 -420 OFFCURVE",
"-477 -420 QCURVE SMOOTH",
"-596 -420 OFFCURVE",
"-596 -321 QCURVE SMOOTH",
"-596 -249 LINE SMOOTH",
"-596 -70 OFFCURVE",
"-823 -70 QCURVE SMOOTH",
"-1050 -70 OFFCURVE",
"-1050 -249 QCURVE SMOOTH",
"-1050 -500 LINE",
"-952 -500 LINE",
"-952 -249 LINE SMOOTH",
"-952 -150 OFFCURVE",
"-823 -150 QCURVE",
"-823 -150 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-674 -121 OFFCURVE",
"-674 -249 QCURVE SMOOTH",
"-674 -321 LINE SMOOTH",
"-674 -500 OFFCURVE",
"-477 -500 QCURVE SMOOTH",
"-270 -500 OFFCURVE",
"-270 -321 QCURVE SMOOTH",
"-270 -70 LINE",
"-328 -70 LINE",
"-328 -321 LINE SMOOTH",
"-328 -449 OFFCURVE",
"-477 -449 QCURVE SMOOTH",
"-616 -449 OFFCURVE",
"-616 -321 QCURVE SMOOTH",
"-616 -249 LINE SMOOTH",
"-616 -70 OFFCURVE",
"-823 -70 QCURVE SMOOTH",
"-1030 -70 OFFCURVE",
"-1030 -249 QCURVE SMOOTH",
"-1030 -500 LINE",
"-972 -500 LINE",
"-972 -249 LINE SMOOTH",
"-972 -121 OFFCURVE",
"-823 -121 QCURVE",
"-823 -121 LINE"
);
}
);
width = 0;
}
);
note = uni17D2179B;
},
{
glyphname = uni17D2179C;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-489 -203 LINE",
"-489 -323 OFFCURVE",
"-776 -323 QCURVE SMOOTH",
"-812 -323 OFFCURVE",
"-812 -312 QCURVE",
"-812 -312 LINE"
);
},
{
closed = 1;
nodes = (
"-130 -500 OFFCURVE",
"-130 -203 QCURVE SMOOTH",
"-130 -70 LINE",
"-489 -70 LINE",
"-1170 -251 LINE",
"-1170 -317 LINE SMOOTH",
"-1170 -500 OFFCURVE",
"-776 -500 QCURVE",
"-776 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-190 -500 OFFCURVE",
"-190 -209 QCURVE SMOOTH",
"-190 -70 LINE",
"-488 -70 LINE",
"-1110 -260 LINE",
"-1110 -329 LINE SMOOTH",
"-1110 -500 OFFCURVE",
"-776 -500 QCURVE",
"-776 -500 LINE"
);
},
{
closed = 1;
nodes = (
"-488 -209 LINE",
"-488 -335 OFFCURVE",
"-776 -335 QCURVE SMOOTH",
"-812 -335 OFFCURVE",
"-812 -324 QCURVE",
"-812 -324 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-250 -500 OFFCURVE",
"-250 -196 QCURVE SMOOTH",
"-250 -70 LINE",
"-428 -70 LINE",
"-1050 -249 LINE",
"-1050 -321 LINE SMOOTH",
"-1050 -500 OFFCURVE",
"-736 -500 QCURVE",
"-736 -500 LINE"
);
},
{
closed = 1;
nodes = (
"-428 -196 LINE",
"-428 -378 OFFCURVE",
"-736 -378 QCURVE SMOOTH",
"-872 -378 OFFCURVE",
"-872 -326 QCURVE",
"-872 -326 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-280 -500 OFFCURVE",
"-280 -166 QCURVE SMOOTH",
"-280 -70 LINE",
"-398 -70 LINE",
"-1020 -249 LINE",
"-1020 -311 LINE SMOOTH",
"-1020 -500 OFFCURVE",
"-736 -500 QCURVE",
"-736 -500 LINE"
);
},
{
closed = 1;
nodes = (
"-398 -166 LINE",
"-398 -408 OFFCURVE",
"-736 -408 QCURVE SMOOTH",
"-912 -408 OFFCURVE",
"-912 -316 QCURVE",
"-912 -316 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-310 -500 OFFCURVE",
"-310 -136 QCURVE SMOOTH",
"-310 -70 LINE",
"-368 -70 LINE",
"-990 -279 LINE",
"-990 -321 LINE SMOOTH",
"-990 -500 OFFCURVE",
"-736 -500 QCURVE",
"-736 -500 LINE"
);
},
{
closed = 1;
nodes = (
"-368 -136 LINE",
"-368 -442 OFFCURVE",
"-736 -442 QCURVE SMOOTH",
"-932 -442 OFFCURVE",
"-932 -326 QCURVE",
"-932 -326 LINE"
);
}
);
width = 0;
}
);
note = uni17D2179C;
},
{
glyphname = uni17D2179F;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"528 0 LINE",
"600 0 LINE",
"600 218 LINE",
"528 218 LINE",
"528 704 LINE SMOOTH",
"528 772 OFFCURVE",
"428 826 QCURVE SMOOTH",
"328 880 LINE",
"328 932 LINE",
"528 932 LINE",
"528 1150 LINE",
"238 1150 LINE SMOOTH",
"20 1150 OFFCURVE",
"20 962 QCURVE SMOOTH",
"20 827 LINE",
"160 704 LINE",
"160 218 LINE",
"40 218 LINE",
"40 0 LINE",
"160 0 LINE",
"160 -225 LINE SMOOTH",
"160 -289 OFFCURVE",
"50 -289 QCURVE SMOOTH",
"-90 -289 OFFCURVE",
"-90 -225 QCURVE SMOOTH",
"-90 -50 LINE",
"-528 -50 LINE",
"-528 -216 LINE",
"-458 -216 LINE",
"-458 -225 LINE SMOOTH",
"-458 -500 OFFCURVE",
"50 -500 QCURVE SMOOTH",
"528 -500 OFFCURVE",
"528 -225 QCURVE",
"528 -225 LINE"
);
}
);
width = 638;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"498 0 LINE",
"600 0 LINE",
"600 198 LINE",
"498 198 LINE",
"498 704 LINE SMOOTH",
"498 772 OFFCURVE",
"398 826 QCURVE SMOOTH",
"298 880 LINE",
"298 932 LINE",
"498 932 LINE",
"498 1130 LINE",
"238 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 962 QCURVE SMOOTH",
"30 827 LINE",
"190 704 LINE",
"190 198 LINE",
"40 198 LINE",
"40 0 LINE",
"190 0 LINE",
"190 -245 LINE SMOOTH",
"190 -309 OFFCURVE",
"50 -309 QCURVE SMOOTH",
"-90 -309 OFFCURVE",
"-90 -245 QCURVE SMOOTH",
"-90 -70 LINE",
"-498 -70 LINE",
"-498 -236 LINE",
"-398 -236 LINE",
"-398 -245 LINE SMOOTH",
"-398 -500 OFFCURVE",
"50 -500 QCURVE SMOOTH",
"498 -500 OFFCURVE",
"498 -245 QCURVE",
"498 -245 LINE"
);
}
);
width = 638;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"438 0 LINE",
"548 0 LINE",
"548 138 LINE",
"438 138 LINE",
"438 734 LINE SMOOTH",
"438 802 OFFCURVE",
"338 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"250 734 LINE",
"250 138 LINE",
"50 138 LINE",
"50 0 LINE",
"250 0 LINE",
"250 -253 LINE SMOOTH",
"250 -367 OFFCURVE",
"50 -367 QCURVE SMOOTH",
"-150 -367 OFFCURVE",
"-150 -253 QCURVE SMOOTH",
"-150 -70 LINE",
"-450 -70 LINE",
"-450 -185 LINE",
"-338 -185 LINE",
"-338 -253 LINE SMOOTH",
"-338 -500 OFFCURVE",
"50 -500 QCURVE SMOOTH",
"438 -500 OFFCURVE",
"438 -253 QCURVE",
"438 -253 LINE"
);
}
);
width = 638;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"408 0 LINE",
"530 0 LINE",
"530 98 LINE",
"408 98 LINE",
"408 714 LINE SMOOTH",
"408 802 OFFCURVE",
"308 856 QCURVE SMOOTH",
"208 910 LINE",
"208 992 LINE SMOOTH",
"208 1032 OFFCURVE",
"258 1032 QCURVE SMOOTH",
"408 1032 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"243 772 LINE SMOOTH",
"290 744 OFFCURVE",
"290 714 QCURVE SMOOTH",
"290 98 LINE",
"100 98 LINE",
"100 0 LINE",
"290 0 LINE",
"290 -253 LINE SMOOTH",
"290 -403 OFFCURVE",
"50 -403 QCURVE SMOOTH",
"-190 -403 OFFCURVE",
"-190 -253 QCURVE SMOOTH",
"-190 -70 LINE",
"-398 -70 LINE",
"-398 -157 LINE",
"-308 -157 LINE",
"-308 -253 LINE SMOOTH",
"-308 -500 OFFCURVE",
"50 -500 QCURVE SMOOTH",
"408 -500 OFFCURVE",
"408 -253 QCURVE",
"408 -253 LINE"
);
}
);
width = 638;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"530 0 LINE",
"530 58 LINE",
"378 58 LINE",
"378 714 LINE SMOOTH",
"378 768 OFFCURVE",
"268 830 QCURVE SMOOTH",
"158 891 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"258 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 857 LINE",
"238 782 LINE SMOOTH",
"320 737 OFFCURVE",
"320 714 QCURVE SMOOTH",
"320 58 LINE",
"100 58 LINE",
"100 0 LINE",
"320 0 LINE",
"320 -250 LINE SMOOTH",
"320 -442 OFFCURVE",
"50 -442 QCURVE SMOOTH",
"-220 -442 OFFCURVE",
"-220 -250 QCURVE SMOOTH",
"-220 -70 LINE",
"-398 -70 LINE",
"-398 -128 LINE",
"-278 -128 LINE",
"-278 -250 LINE SMOOTH",
"-278 -500 OFFCURVE",
"50 -500 QCURVE SMOOTH",
"378 -500 OFFCURVE",
"378 -250 QCURVE SMOOTH",
"378 0 LINE",
"378 0 LINE"
);
}
);
width = 638;
}
);
note = uni17D2179F;
},
{
glyphname = uni17D217A0;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-872 -337 OFFCURVE",
"-872 -298 QCURVE SMOOTH",
"-872 -70 LINE",
"-1200 -70 LINE",
"-1200 -298 LINE SMOOTH",
"-1200 -500 OFFCURVE",
"-833 -500 QCURVE SMOOTH",
"-526 -500 OFFCURVE",
"-526 -298 QCURVE SMOOTH",
"-526 -272 LINE SMOOTH",
"-526 -233 OFFCURVE",
"-477 -233 QCURVE SMOOTH",
"-428 -233 OFFCURVE",
"-428 -272 QCURVE SMOOTH",
"-428 -500 LINE",
"-100 -500 LINE",
"-100 -272 LINE SMOOTH",
"-100 -70 OFFCURVE",
"-467 -70 QCURVE SMOOTH",
"-774 -70 OFFCURVE",
"-774 -272 QCURVE SMOOTH",
"-774 -298 LINE SMOOTH",
"-774 -337 OFFCURVE",
"-823 -337 QCURVE",
"-823 -337 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-872 -337 OFFCURVE",
"-872 -298 QCURVE SMOOTH",
"-872 -70 LINE",
"-1140 -70 LINE",
"-1140 -298 LINE SMOOTH",
"-1140 -500 OFFCURVE",
"-833 -500 QCURVE SMOOTH",
"-526 -500 OFFCURVE",
"-526 -298 QCURVE SMOOTH",
"-526 -272 LINE SMOOTH",
"-526 -233 OFFCURVE",
"-477 -233 QCURVE SMOOTH",
"-428 -233 OFFCURVE",
"-428 -272 QCURVE SMOOTH",
"-428 -500 LINE",
"-160 -500 LINE",
"-160 -272 LINE SMOOTH",
"-160 -70 OFFCURVE",
"-467 -70 QCURVE SMOOTH",
"-774 -70 OFFCURVE",
"-774 -272 QCURVE SMOOTH",
"-774 -298 LINE SMOOTH",
"-774 -337 OFFCURVE",
"-823 -337 QCURVE",
"-823 -337 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-912 -390 OFFCURVE",
"-912 -297 QCURVE SMOOTH",
"-912 -70 LINE",
"-1080 -70 LINE",
"-1080 -297 LINE SMOOTH",
"-1080 -500 OFFCURVE",
"-823 -500 QCURVE SMOOTH",
"-566 -500 OFFCURVE",
"-566 -297 QCURVE SMOOTH",
"-566 -273 LINE SMOOTH",
"-566 -180 OFFCURVE",
"-477 -180 QCURVE SMOOTH",
"-388 -180 OFFCURVE",
"-388 -273 QCURVE SMOOTH",
"-388 -500 LINE",
"-220 -500 LINE",
"-220 -273 LINE SMOOTH",
"-220 -70 OFFCURVE",
"-477 -70 QCURVE SMOOTH",
"-734 -70 OFFCURVE",
"-734 -273 QCURVE SMOOTH",
"-734 -297 LINE SMOOTH",
"-734 -390 OFFCURVE",
"-823 -390 QCURVE",
"-823 -390 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-952 -420 OFFCURVE",
"-952 -321 QCURVE SMOOTH",
"-952 -70 LINE",
"-1050 -70 LINE",
"-1050 -321 LINE SMOOTH",
"-1050 -500 OFFCURVE",
"-823 -500 QCURVE SMOOTH",
"-606 -500 OFFCURVE",
"-606 -321 QCURVE SMOOTH",
"-606 -249 LINE SMOOTH",
"-606 -150 OFFCURVE",
"-477 -150 QCURVE SMOOTH",
"-348 -150 OFFCURVE",
"-348 -249 QCURVE SMOOTH",
"-348 -500 LINE",
"-250 -500 LINE",
"-250 -249 LINE SMOOTH",
"-250 -70 OFFCURVE",
"-477 -70 QCURVE SMOOTH",
"-704 -70 OFFCURVE",
"-704 -249 QCURVE SMOOTH",
"-704 -321 LINE SMOOTH",
"-704 -420 OFFCURVE",
"-823 -420 QCURVE",
"-823 -420 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-972 -443 OFFCURVE",
"-972 -323 QCURVE SMOOTH",
"-972 -70 LINE",
"-1030 -70 LINE",
"-1030 -323 LINE SMOOTH",
"-1030 -500 OFFCURVE",
"-823 -500 QCURVE SMOOTH",
"-626 -500 OFFCURVE",
"-626 -323 QCURVE SMOOTH",
"-626 -247 LINE SMOOTH",
"-626 -127 OFFCURVE",
"-477 -127 QCURVE SMOOTH",
"-328 -127 OFFCURVE",
"-328 -247 QCURVE SMOOTH",
"-328 -500 LINE",
"-270 -500 LINE",
"-270 -247 LINE SMOOTH",
"-270 -70 OFFCURVE",
"-477 -70 QCURVE SMOOTH",
"-684 -70 OFFCURVE",
"-684 -247 QCURVE SMOOTH",
"-684 -323 LINE SMOOTH",
"-684 -443 OFFCURVE",
"-823 -443 QCURVE",
"-823 -443 LINE"
);
}
);
width = 0;
}
);
note = uni17D217A0;
},
{
glyphname = uni17D217A2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-780 -284 LINE",
"-520 -284 LINE",
"-520 -345 LINE",
"-580 -345 LINE",
"-580 -500 LINE",
"-160 -500 LINE",
"-160 -70 LINE",
"-520 -70 LINE",
"-520 -140 LINE",
"-780 -140 LINE",
"-780 -70 LINE",
"-1140 -70 LINE",
"-1140 -345 LINE",
"-1200 -345 LINE",
"-1200 -500 LINE",
"-780 -500 LINE",
"-780 -500 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-490 -294 LINE",
"-490 -358 LINE",
"-580 -358 LINE",
"-580 -500 LINE",
"-190 -500 LINE",
"-190 -70 LINE",
"-490 -70 LINE",
"-490 -143 LINE",
"-810 -143 LINE",
"-810 -70 LINE",
"-1110 -70 LINE",
"-1110 -358 LINE",
"-1200 -358 LINE",
"-1200 -500 LINE",
"-810 -500 LINE",
"-810 -294 LINE",
"-810 -294 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-430 -285 LINE",
"-430 -392 LINE",
"-530 -392 LINE",
"-530 -500 LINE",
"-250 -500 LINE",
"-250 -70 LINE",
"-430 -70 LINE",
"-430 -177 LINE",
"-870 -177 LINE",
"-870 -70 LINE",
"-1050 -70 LINE",
"-1050 -392 LINE",
"-1150 -392 LINE",
"-1150 -500 LINE",
"-870 -500 LINE",
"-870 -285 LINE",
"-870 -285 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 28 values pushed */\0124 1 2 3 2 133 0 3 8 1 7 1 3 7 103 6 1 1 1 0 96 5 1 0 0 20 0 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 28 values pushed */\0120 3 8 1 7 1 3 7 103 4 1 2 2 18 77 6 1 1 1 0 96 5 1 0 0 20 0 78 \012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 16 values pushed */\0120 0 0 15 0 15 17 17 17 17 17 17 17 9 7 29 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-390 -290 LINE",
"-390 -413 LINE",
"-530 -413 LINE",
"-530 -500 LINE",
"-280 -500 LINE",
"-280 -70 LINE",
"-390 -70 LINE",
"-390 -203 LINE",
"-910 -203 LINE",
"-910 -70 LINE",
"-1020 -70 LINE",
"-1020 -413 LINE",
"-1140 -413 LINE",
"-1140 -500 LINE",
"-910 -500 LINE",
"-910 -290 LINE",
"-910 -290 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-932 -265 LINE",
"-368 -265 LINE",
"-368 -442 LINE",
"-530 -442 LINE",
"-530 -500 LINE",
"-310 -500 LINE",
"-310 -70 LINE",
"-368 -70 LINE",
"-368 -207 LINE",
"-932 -207 LINE",
"-932 -70 LINE",
"-990 -70 LINE",
"-990 -442 LINE",
"-1110 -442 LINE",
"-1110 -500 LINE",
"-932 -500 LINE",
"-932 -500 LINE"
);
}
);
width = 0;
}
);
note = uni17D217A2;
},
{
glyphname = uni17BB.b;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"60 -70 LINE",
"-383 -70 LINE",
"-383 -230 LINE",
"-308 -230 LINE",
"-308 -500 LINE",
"60 -500 LINE",
"60 -500 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BB;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-333 -70 LINE",
"-333 -170 LINE",
"-228 -170 LINE",
"-228 -500 LINE",
"-40 -500 LINE",
"-40 -70 LINE",
"-40 -70 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 15 values pushed */\0123 1 2 0 1 0 2 1 103 0 0 0 20 0 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 17 values pushed */\0120 1 1 2 95 3 1 2 2 18 77 0 0 0 20 0 78 \012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 11 values pushed */\0120 0 0 5 0 5 17 17 4 7 24 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
components = (
{
name = uni17BB;
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BB;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BB.b;
},
{
glyphname = uni17BC.b;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-132 -70 LINE",
"-460 -70 LINE",
"-460 -290 LINE SMOOTH",
"-460 -500 OFFCURVE",
"-60 -500 QCURVE SMOOTH",
"-56 -500 LINE SMOOTH",
"340 -500 OFFCURVE",
"340 -290 QCURVE SMOOTH",
"340 -70 LINE",
"12 -70 LINE",
"12 -290 LINE SMOOTH",
"12 -340 OFFCURVE",
"-60 -340 QCURVE SMOOTH",
"-132 -340 OFFCURVE",
"-132 -290 QCURVE",
"-132 -290 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, 260, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-570 -290 LINE SMOOTH",
"-570 -500 OFFCURVE",
"-290 -500 QCURVE SMOOTH",
"-10 -500 OFFCURVE",
"-10 -290 QCURVE SMOOTH",
"-10 -70 LINE",
"-188 -70 LINE",
"-188 -290 LINE SMOOTH",
"-188 -380 OFFCURVE",
"-290 -380 QCURVE SMOOTH",
"-392 -380 OFFCURVE",
"-392 -290 QCURVE SMOOTH",
"-392 -70 LINE",
"-570 -70 LINE",
"-570 -70 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, 210, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, 190, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BC.b;
},
{
glyphname = uni17BD.b;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-460 -70 LINE",
"-460 -500 LINE",
"-110 -500 LINE",
"-35 -400 LINE",
"40 -500 LINE",
"390 -500 LINE",
"390 -70 LINE",
"62 -70 LINE",
"62 -300 LINE",
"-35 -200 LINE",
"-132 -300 LINE",
"-132 -70 LINE",
"-132 -70 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, 290, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-610 -500 LINE",
"-410 -500 LINE",
"-305 -370 LINE",
"-200 -500 LINE",
"0 -500 LINE",
"0 -70 LINE",
"-178 -70 LINE",
"-178 -360 LINE",
"-305 -230 LINE",
"-432 -360 LINE",
"-432 -70 LINE",
"-610 -70 LINE",
"-610 -70 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */\0129 4 3 2 4 2 0 1 76 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 13 values pushed */\0121 1 0 0 2 95 3 1 2 2 20 2 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 13 values pushed */\0121 1 0 0 18 77 3 1 2 2 20 2 78 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 7 values pushed */\01218 17 20 16 4 7 26 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, 220, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, 210, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BD.b;
},
{
glyphname = uni17B7.a;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1140 1520 OFFCURVE",
"-1040 1490 QCURVE",
"-170 1490 LINE",
"-170 1697 LINE",
"-278 1777 OFFCURVE",
"-450 1844 QCURVE SMOOTH",
"-531 1876 OFFCURVE",
"-672 1910 OFFCURVE",
"-740 1910 QCURVE SMOOTH",
"-959 1910 OFFCURVE",
"-1140 1774 OFFCURVE",
"-1140 1671 QCURVE",
"-1140 1671 LINE"
);
},
{
closed = 1;
nodes = (
"-661 1750 OFFCURVE",
"-498 1718 OFFCURVE",
"-452 1679 QCURVE",
"-860 1679 LINE",
"-860 1697 OFFCURVE",
"-828 1730 OFFCURVE",
"-773 1750 OFFCURVE",
"-740 1750 QCURVE",
"-740 1750 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-1110 1490 OFFCURVE",
"-1010 1490 QCURVE SMOOTH",
"-200 1490 LINE",
"-200 1672 LINE",
"-310 1754 OFFCURVE",
"-450 1822 QCURVE SMOOTH",
"-591 1890 OFFCURVE",
"-740 1890 QCURVE SMOOTH",
"-950 1890 OFFCURVE",
"-1110 1735 OFFCURVE",
"-1110 1645 QCURVE",
"-1110 1645 LINE"
);
},
{
closed = 1;
nodes = (
"-680 1726 OFFCURVE",
"-504 1699 OFFCURVE",
"-452 1654 QCURVE",
"-860 1654 LINE",
"-860 1681 OFFCURVE",
"-790 1726 OFFCURVE",
"-740 1726 QCURVE",
"-740 1726 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1050 1500 OFFCURVE",
"-950 1500 QCURVE SMOOTH",
"-200 1500 LINE",
"-200 1613 LINE",
"-310 1688 OFFCURVE",
"-450 1744 QCURVE SMOOTH",
"-591 1800 OFFCURVE",
"-740 1800 QCURVE SMOOTH",
"-890 1800 OFFCURVE",
"-1050 1688 OFFCURVE",
"-1050 1613 QCURVE",
"-1050 1613 LINE"
);
},
{
closed = 1;
nodes = (
"-680 1703 OFFCURVE",
"-504 1658 OFFCURVE",
"-392 1598 QCURVE",
"-900 1598 LINE",
"-900 1658 OFFCURVE",
"-830 1703 OFFCURVE",
"-740 1703 QCURVE",
"-740 1703 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-1020 1510 OFFCURVE",
"-867 1510 QCURVE SMOOTH",
"-332 1510 LINE SMOOTH",
"-230 1510 OFFCURVE",
"-230 1566 QCURVE SMOOTH",
"-230 1595 LINE SMOOTH",
"-230 1622 OFFCURVE",
"-250 1644 QCURVE SMOOTH",
"-310 1709 OFFCURVE",
"-450 1782 QCURVE SMOOTH",
"-591 1856 OFFCURVE",
"-740 1856 QCURVE SMOOTH",
"-1020 1856 OFFCURVE",
"-1020 1640 QCURVE",
"-1020 1640 LINE"
);
},
{
closed = 1;
nodes = (
"-630 1758 OFFCURVE",
"-517 1708 QCURVE SMOOTH",
"-404 1657 OFFCURVE",
"-352 1595 QCURVE",
"-867 1595 LINE SMOOTH",
"-922 1595 OFFCURVE",
"-922 1640 QCURVE SMOOTH",
"-922 1758 OFFCURVE",
"-740 1758 QCURVE",
"-740 1758 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-990 1510 OFFCURVE",
"-867 1510 QCURVE SMOOTH",
"-332 1510 LINE SMOOTH",
"-260 1510 OFFCURVE",
"-260 1561 QCURVE SMOOTH",
"-260 1591 OFFCURVE",
"-306 1651 QCURVE SMOOTH",
"-340 1695 OFFCURVE",
"-472 1790 OFFCURVE",
"-647 1856 OFFCURVE",
"-740 1856 QCURVE SMOOTH",
"-990 1856 OFFCURVE",
"-990 1640 QCURVE",
"-990 1640 LINE"
);
},
{
closed = 1;
nodes = (
"-652 1788 OFFCURVE",
"-469 1715 OFFCURVE",
"-337 1611 OFFCURVE",
"-322 1568 QCURVE",
"-867 1568 LINE SMOOTH",
"-932 1568 OFFCURVE",
"-932 1640 QCURVE SMOOTH",
"-932 1788 OFFCURVE",
"-740 1788 QCURVE",
"-740 1788 LINE"
);
}
);
width = 0;
}
);
note = uni17B7.a;
},
{
glyphname = uni17B8.a;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-170 1910 LINE",
"-428 1910 LINE",
"-428 1819 LINE",
"-450 1828 LINE SMOOTH",
"-531 1858 OFFCURVE",
"-672 1891 OFFCURVE",
"-740 1891 QCURVE SMOOTH",
"-959 1891 OFFCURVE",
"-1140 1762 OFFCURVE",
"-1140 1663 QCURVE SMOOTH",
"-1140 1518 OFFCURVE",
"-1040 1490 QCURVE",
"-170 1490 LINE",
"-170 1490 LINE"
);
},
{
closed = 1;
nodes = (
"-860 1671 LINE",
"-860 1688 OFFCURVE",
"-828 1719 OFFCURVE",
"-773 1738 OFFCURVE",
"-740 1738 QCURVE SMOOTH",
"-660 1738 OFFCURVE",
"-498 1708 OFFCURVE",
"-452 1671 QCURVE",
"-452 1671 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-680 1694 OFFCURVE",
"-504 1670 OFFCURVE",
"-452 1631 QCURVE",
"-860 1631 LINE",
"-860 1655 OFFCURVE",
"-790 1694 OFFCURVE",
"-740 1694 QCURVE",
"-740 1694 LINE"
);
},
{
closed = 1;
nodes = (
"-423 1765 OFFCURVE",
"-450 1776 QCURVE SMOOTH",
"-591 1835 OFFCURVE",
"-740 1835 QCURVE SMOOTH",
"-950 1835 OFFCURVE",
"-1110 1702 OFFCURVE",
"-1110 1623 QCURVE SMOOTH",
"-1110 1490 OFFCURVE",
"-1010 1490 QCURVE SMOOTH",
"-200 1490 LINE",
"-200 1890 LINE",
"-398 1890 LINE",
"-398 1754 LINE",
"-398 1754 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-680 1680 OFFCURVE",
"-504 1640 OFFCURVE",
"-392 1587 QCURVE",
"-900 1587 LINE",
"-900 1640 OFFCURVE",
"-830 1680 OFFCURVE",
"-740 1680 QCURVE",
"-740 1680 LINE"
);
},
{
closed = 1;
nodes = (
"-200 1800 LINE",
"-338 1800 LINE",
"-338 1672 LINE",
"-391 1696 OFFCURVE",
"-450 1717 QCURVE SMOOTH",
"-591 1767 OFFCURVE",
"-740 1767 QCURVE SMOOTH",
"-890 1767 OFFCURVE",
"-1050 1667 OFFCURVE",
"-1050 1600 QCURVE SMOOTH",
"-1050 1500 OFFCURVE",
"-950 1500 QCURVE SMOOTH",
"-200 1500 LINE",
"-200 1500 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-922 1777 OFFCURVE",
"-740 1777 QCURVE SMOOTH",
"-630 1777 OFFCURVE",
"-507 1719 QCURVE SMOOTH",
"-384 1660 OFFCURVE",
"-332 1597 QCURVE",
"-867 1597 LINE SMOOTH",
"-922 1597 OFFCURVE",
"-922 1643 QCURVE",
"-922 1643 LINE"
);
},
{
closed = 1;
nodes = (
"-379 1751 OFFCURVE",
"-450 1789 QCURVE SMOOTH",
"-591 1864 OFFCURVE",
"-740 1864 QCURVE SMOOTH",
"-1020 1864 OFFCURVE",
"-1020 1643 QCURVE SMOOTH",
"-1020 1510 OFFCURVE",
"-867 1510 QCURVE SMOOTH",
"-332 1510 LINE SMOOTH",
"-230 1510 OFFCURVE",
"-230 1567 QCURVE SMOOTH",
"-230 1908 LINE",
"-328 1908 LINE",
"-328 1714 LINE",
"-328 1714 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-260 1908 LINE",
"-318 1908 LINE",
"-318 1666 LINE",
"-356 1709 OFFCURVE",
"-486 1797 OFFCURVE",
"-653 1856 OFFCURVE",
"-740 1856 QCURVE SMOOTH",
"-990 1856 OFFCURVE",
"-990 1640 QCURVE SMOOTH",
"-990 1510 OFFCURVE",
"-867 1510 QCURVE SMOOTH",
"-332 1510 LINE SMOOTH",
"-260 1510 OFFCURVE",
"-260 1561 QCURVE",
"-260 1561 LINE"
);
},
{
closed = 1;
nodes = (
"-867 1568 LINE SMOOTH",
"-932 1568 OFFCURVE",
"-932 1640 QCURVE SMOOTH",
"-932 1788 OFFCURVE",
"-740 1788 QCURVE SMOOTH",
"-652 1788 OFFCURVE",
"-469 1715 OFFCURVE",
"-337 1611 OFFCURVE",
"-322 1568 QCURVE",
"-322 1568 LINE"
);
}
);
width = 0;
}
);
note = uni17B8.a;
},
{
glyphname = uni17B9.a;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-196 1682 LINE SMOOTH",
"-170 1714 OFFCURVE",
"-170 1762 QCURVE SMOOTH",
"-170 1910 OFFCURVE",
"-402 1910 QCURVE SMOOTH",
"-455 1910 OFFCURVE",
"-549 1878 OFFCURVE",
"-575 1849 QCURVE SMOOTH",
"-605 1813 LINE",
"-676 1824 OFFCURVE",
"-740 1824 QCURVE SMOOTH",
"-980 1824 OFFCURVE",
"-1060 1764 QCURVE SMOOTH",
"-1140 1702 OFFCURVE",
"-1140 1631 QCURVE SMOOTH",
"-1140 1490 OFFCURVE",
"-1040 1490 QCURVE SMOOTH",
"-170 1490 LINE",
"-170 1653 LINE",
"-181 1660 OFFCURVE",
"-205 1672 QCURVE",
"-205 1672 LINE"
);
},
{
closed = 1;
nodes = (
"-396 1758 OFFCURVE",
"-450 1771 QCURVE",
"-458 1774 LINE",
"-454 1785 OFFCURVE",
"-440 1793 QCURVE SMOOTH",
"-422 1801 OFFCURVE",
"-402 1801 QCURVE SMOOTH",
"-344 1801 OFFCURVE",
"-344 1767 QCURVE SMOOTH",
"-344 1743 OFFCURVE",
"-351 1729 QCURVE",
"-351 1729 LINE"
);
},
{
closed = 1;
nodes = (
"-661 1696 OFFCURVE",
"-498 1670 OFFCURVE",
"-452 1639 QCURVE",
"-860 1639 LINE",
"-860 1653 OFFCURVE",
"-828 1679 OFFCURVE",
"-772 1696 OFFCURVE",
"-740 1696 QCURVE",
"-740 1696 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-680 1676 OFFCURVE",
"-504 1654 OFFCURVE",
"-452 1619 QCURVE",
"-860 1619 LINE",
"-860 1640 OFFCURVE",
"-790 1676 OFFCURVE",
"-740 1676 QCURVE",
"-740 1676 LINE"
);
},
{
closed = 1;
nodes = (
"-230 1657 OFFCURVE",
"-226 1662 QCURVE SMOOTH",
"-200 1696 OFFCURVE",
"-200 1747 QCURVE SMOOTH",
"-200 1890 OFFCURVE",
"-402 1890 QCURVE SMOOTH",
"-453 1890 OFFCURVE",
"-548 1859 OFFCURVE",
"-601 1799 OFFCURVE",
"-605 1793 QCURVE",
"-672 1804 OFFCURVE",
"-740 1804 QCURVE SMOOTH",
"-950 1804 OFFCURVE",
"-1110 1683 OFFCURVE",
"-1110 1611 QCURVE SMOOTH",
"-1110 1490 OFFCURVE",
"-1010 1490 QCURVE SMOOTH",
"-200 1490 LINE",
"-200 1633 LINE",
"-217 1643 OFFCURVE",
"-235 1652 QCURVE",
"-235 1652 LINE"
);
},
{
closed = 1;
nodes = (
"-398 1731 OFFCURVE",
"-450 1751 QCURVE SMOOTH",
"-454 1752 OFFCURVE",
"-458 1754 QCURVE",
"-453 1766 OFFCURVE",
"-440 1773 QCURVE SMOOTH",
"-424 1781 OFFCURVE",
"-402 1781 QCURVE SMOOTH",
"-344 1781 OFFCURVE",
"-344 1747 QCURVE SMOOTH",
"-344 1724 OFFCURVE",
"-351 1709 QCURVE",
"-351 1709 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-680 1662 OFFCURVE",
"-504 1626 OFFCURVE",
"-392 1578 QCURVE",
"-900 1578 LINE",
"-900 1626 OFFCURVE",
"-830 1662 OFFCURVE",
"-740 1662 QCURVE",
"-740 1662 LINE"
);
},
{
closed = 1;
nodes = (
"-232 1615 OFFCURVE",
"-226 1621 QCURVE SMOOTH",
"-200 1649 OFFCURVE",
"-200 1680 QCURVE SMOOTH",
"-200 1712 OFFCURVE",
"-255 1769 OFFCURVE",
"-351 1800 OFFCURVE",
"-402 1800 QCURVE SMOOTH",
"-453 1800 OFFCURVE",
"-549 1769 OFFCURVE",
"-576 1741 QCURVE SMOOTH",
"-582 1734 OFFCURVE",
"-587 1728 QCURVE",
"-662 1740 OFFCURVE",
"-740 1740 QCURVE SMOOTH",
"-890 1740 OFFCURVE",
"-1050 1650 OFFCURVE",
"-1050 1590 QCURVE SMOOTH",
"-1050 1500 OFFCURVE",
"-950 1500 QCURVE SMOOTH",
"-200 1500 LINE",
"-200 1590 LINE",
"-218 1601 OFFCURVE",
"-238 1610 QCURVE",
"-238 1610 LINE"
);
},
{
closed = 1;
nodes = (
"-386 1675 OFFCURVE",
"-450 1695 QCURVE SMOOTH",
"-465 1700 OFFCURVE",
"-480 1704 QCURVE",
"-479 1706 OFFCURVE",
"-478 1706 QCURVE",
"-466 1718 OFFCURVE",
"-424 1733 OFFCURVE",
"-402 1733 QCURVE SMOOTH",
"-379 1733 OFFCURVE",
"-338 1718 OFFCURVE",
"-314 1694 OFFCURVE",
"-314 1680 QCURVE SMOOTH",
"-314 1667 OFFCURVE",
"-325 1655 QCURVE SMOOTH",
"-327 1652 OFFCURVE",
"-329 1651 QCURVE",
"-329 1651 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-485 1828 OFFCURVE",
"-420 1828 QCURVE SMOOTH",
"-328 1828 OFFCURVE",
"-328 1753 QCURVE SMOOTH",
"-328 1724 OFFCURVE",
"-341 1707 QCURVE",
"-388 1736 OFFCURVE",
"-450 1767 QCURVE SMOOTH",
"-477 1780 OFFCURVE",
"-504 1791 QCURVE",
"-504 1791 LINE"
);
},
{
closed = 1;
nodes = (
"-230 1688 OFFCURVE",
"-230 1753 QCURVE SMOOTH",
"-230 1908 OFFCURVE",
"-420 1908 QCURVE SMOOTH",
"-563 1908 OFFCURVE",
"-598 1820 QCURVE",
"-668 1836 OFFCURVE",
"-740 1836 QCURVE SMOOTH",
"-1020 1836 OFFCURVE",
"-1020 1632 QCURVE SMOOTH",
"-1020 1510 OFFCURVE",
"-867 1510 QCURVE SMOOTH",
"-332 1510 LINE SMOOTH",
"-230 1510 OFFCURVE",
"-230 1563 QCURVE SMOOTH",
"-230 1590 LINE SMOOTH",
"-230 1616 OFFCURVE",
"-250 1636 QCURVE SMOOTH",
"-256 1643 OFFCURVE",
"-264 1649 QCURVE",
"-264 1649 LINE"
);
},
{
closed = 1;
nodes = (
"-643 1743 OFFCURVE",
"-526 1696 QCURVE SMOOTH",
"-409 1649 OFFCURVE",
"-359 1598 QCURVE",
"-870 1598 LINE SMOOTH",
"-922 1598 OFFCURVE",
"-922 1635 QCURVE SMOOTH",
"-922 1743 OFFCURVE",
"-748 1743 QCURVE",
"-748 1743 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-260 1588 OFFCURVE",
"-300 1644 QCURVE",
"-260 1701 OFFCURVE",
"-260 1768 QCURVE SMOOTH",
"-260 1908 OFFCURVE",
"-420 1908 QCURVE SMOOTH",
"-544 1908 OFFCURVE",
"-572 1827 QCURVE",
"-656 1856 OFFCURVE",
"-740 1856 QCURVE SMOOTH",
"-990 1856 OFFCURVE",
"-990 1640 QCURVE SMOOTH",
"-990 1510 OFFCURVE",
"-867 1510 QCURVE SMOOTH",
"-332 1510 LINE SMOOTH",
"-260 1510 OFFCURVE",
"-260 1561 QCURVE",
"-260 1561 LINE"
);
},
{
closed = 1;
nodes = (
"-318 1850 OFFCURVE",
"-318 1773 QCURVE SMOOTH",
"-318 1728 OFFCURVE",
"-345 1693 QCURVE",
"-414 1759 OFFCURVE",
"-511 1803 QCURVE",
"-496 1850 OFFCURVE",
"-420 1850 QCURVE",
"-420 1850 LINE"
);
},
{
closed = 1;
nodes = (
"-867 1568 LINE SMOOTH",
"-932 1568 OFFCURVE",
"-932 1640 QCURVE SMOOTH",
"-932 1788 OFFCURVE",
"-740 1788 QCURVE SMOOTH",
"-652 1788 OFFCURVE",
"-469 1715 OFFCURVE",
"-337 1611 OFFCURVE",
"-322 1568 QCURVE",
"-322 1568 LINE"
);
}
);
width = 0;
}
);
note = uni17B9.a;
},
{
glyphname = uni17BA.a;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-470 1910 LINE",
"-668 1910 LINE",
"-668 1816 LINE",
"-704 1819 OFFCURVE",
"-740 1819 QCURVE SMOOTH",
"-980 1819 OFFCURVE",
"-1060 1759 QCURVE SMOOTH",
"-1140 1699 OFFCURVE",
"-1140 1629 QCURVE SMOOTH",
"-1140 1490 OFFCURVE",
"-1040 1490 QCURVE SMOOTH",
"-170 1490 LINE",
"-170 1868 LINE",
"-398 1868 LINE",
"-398 1746 LINE",
"-404 1748 OFFCURVE",
"-450 1766 QCURVE SMOOTH",
"-459 1770 OFFCURVE",
"-470 1773 QCURVE",
"-470 1773 LINE"
);
},
{
closed = 1;
nodes = (
"-860 1636 LINE",
"-860 1658 OFFCURVE",
"-789 1692 OFFCURVE",
"-740 1692 QCURVE SMOOTH",
"-660 1692 OFFCURVE",
"-498 1667 OFFCURVE",
"-452 1636 QCURVE",
"-452 1636 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-860 1637 OFFCURVE",
"-790 1672 OFFCURVE",
"-740 1672 QCURVE SMOOTH",
"-680 1672 OFFCURVE",
"-504 1651 OFFCURVE",
"-452 1616 QCURVE",
"-860 1616 LINE",
"-860 1616 LINE"
);
},
{
closed = 1;
nodes = (
"-470 1890 LINE",
"-668 1890 LINE",
"-668 1796 LINE",
"-704 1799 OFFCURVE",
"-740 1799 QCURVE SMOOTH",
"-950 1799 OFFCURVE",
"-1110 1679 OFFCURVE",
"-1110 1609 QCURVE SMOOTH",
"-1110 1490 OFFCURVE",
"-1010 1490 QCURVE SMOOTH",
"-200 1490 LINE",
"-200 1848 LINE",
"-398 1848 LINE",
"-398 1726 LINE",
"-423 1736 OFFCURVE",
"-450 1746 QCURVE SMOOTH",
"-460 1750 OFFCURVE",
"-470 1753 QCURVE",
"-470 1753 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-680 1662 OFFCURVE",
"-504 1626 OFFCURVE",
"-392 1578 QCURVE",
"-900 1578 LINE",
"-900 1626 OFFCURVE",
"-830 1662 OFFCURVE",
"-740 1662 QCURVE",
"-740 1662 LINE"
);
},
{
closed = 1;
nodes = (
"-647 1740 OFFCURVE",
"-740 1740 QCURVE SMOOTH",
"-890 1740 OFFCURVE",
"-1050 1650 OFFCURVE",
"-1050 1590 QCURVE SMOOTH",
"-1050 1500 OFFCURVE",
"-950 1500 QCURVE SMOOTH",
"-200 1500 LINE",
"-200 1770 LINE",
"-338 1770 LINE",
"-338 1655 LINE",
"-378 1670 OFFCURVE",
"-420 1685 QCURVE",
"-420 1800 LINE",
"-558 1800 LINE",
"-558 1723 LINE",
"-558 1723 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-922 1739 OFFCURVE",
"-749 1739 QCURVE SMOOTH",
"-644 1739 OFFCURVE",
"-527 1693 QCURVE SMOOTH",
"-410 1648 OFFCURVE",
"-360 1598 QCURVE",
"-870 1598 LINE SMOOTH",
"-922 1598 OFFCURVE",
"-922 1634 QCURVE",
"-922 1634 LINE"
);
},
{
closed = 1;
nodes = (
"-430 1907 LINE",
"-528 1907 LINE",
"-528 1798 LINE",
"-632 1834 OFFCURVE",
"-740 1834 QCURVE SMOOTH",
"-1020 1834 OFFCURVE",
"-1020 1632 QCURVE SMOOTH",
"-1020 1510 OFFCURVE",
"-867 1510 QCURVE SMOOTH",
"-332 1510 LINE SMOOTH",
"-230 1510 OFFCURVE",
"-230 1563 QCURVE SMOOTH",
"-230 1875 LINE",
"-328 1875 LINE",
"-328 1697 LINE",
"-372 1726 OFFCURVE",
"-430 1755 QCURVE",
"-430 1755 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-260 1908 LINE",
"-318 1908 LINE",
"-318 1666 LINE",
"-361 1714 OFFCURVE",
"-433 1761 QCURVE",
"-433 1907 LINE",
"-491 1907 LINE",
"-491 1793 LINE",
"-614 1856 OFFCURVE",
"-740 1856 QCURVE SMOOTH",
"-990 1856 OFFCURVE",
"-990 1640 QCURVE SMOOTH",
"-990 1510 OFFCURVE",
"-867 1510 QCURVE SMOOTH",
"-332 1510 LINE SMOOTH",
"-260 1510 OFFCURVE",
"-260 1561 QCURVE",
"-260 1561 LINE"
);
},
{
closed = 1;
nodes = (
"-867 1568 LINE SMOOTH",
"-932 1568 OFFCURVE",
"-932 1640 QCURVE SMOOTH",
"-932 1788 OFFCURVE",
"-740 1788 QCURVE SMOOTH",
"-652 1788 OFFCURVE",
"-469 1715 OFFCURVE",
"-337 1611 OFFCURVE",
"-322 1568 QCURVE",
"-322 1568 LINE"
);
}
);
width = 0;
}
);
note = uni17BA.a;
},
{
glyphname = uni17C6.a;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-930 1885 OFFCURVE",
"-930 1685 QCURVE SMOOTH",
"-930 1485 OFFCURVE",
"-650 1485 QCURVE SMOOTH",
"-370 1485 OFFCURVE",
"-370 1685 QCURVE SMOOTH",
"-370 1885 OFFCURVE",
"-650 1885 QCURVE",
"-650 1885 LINE"
);
},
{
closed = 1;
nodes = (
"-595 1725 OFFCURVE",
"-595 1685 QCURVE SMOOTH",
"-595 1645 OFFCURVE",
"-650 1645 QCURVE SMOOTH",
"-705 1645 OFFCURVE",
"-705 1685 QCURVE SMOOTH",
"-705 1725 OFFCURVE",
"-650 1725 QCURVE",
"-650 1725 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-575 1745 OFFCURVE",
"-575 1685 QCURVE SMOOTH",
"-575 1625 OFFCURVE",
"-650 1625 QCURVE SMOOTH",
"-725 1625 OFFCURVE",
"-725 1685 QCURVE SMOOTH",
"-725 1745 OFFCURVE",
"-650 1745 QCURVE",
"-650 1745 LINE"
);
},
{
closed = 1;
nodes = (
"-900 1885 OFFCURVE",
"-900 1685 QCURVE SMOOTH",
"-900 1485 OFFCURVE",
"-650 1485 QCURVE SMOOTH",
"-400 1485 OFFCURVE",
"-400 1685 QCURVE SMOOTH",
"-400 1885 OFFCURVE",
"-650 1885 QCURVE",
"-650 1885 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-627 1710 OFFCURVE",
"-584 1695 OFFCURVE",
"-560 1665 OFFCURVE",
"-560 1650 QCURVE SMOOTH",
"-560 1635 OFFCURVE",
"-583 1605 OFFCURVE",
"-627 1590 OFFCURVE",
"-650 1590 QCURVE SMOOTH",
"-673 1590 OFFCURVE",
"-716 1605 OFFCURVE",
"-740 1635 OFFCURVE",
"-740 1650 QCURVE SMOOTH",
"-740 1665 OFFCURVE",
"-716 1695 OFFCURVE",
"-673 1710 OFFCURVE",
"-650 1710 QCURVE",
"-650 1710 LINE"
);
},
{
closed = 1;
nodes = (
"-707 1800 OFFCURVE",
"-814 1761 OFFCURVE",
"-875 1689 OFFCURVE",
"-875 1650 QCURVE SMOOTH",
"-875 1611 OFFCURVE",
"-815 1539 OFFCURVE",
"-708 1500 OFFCURVE",
"-650 1500 QCURVE SMOOTH",
"-591 1500 OFFCURVE",
"-484 1539 OFFCURVE",
"-425 1611 OFFCURVE",
"-425 1650 QCURVE SMOOTH",
"-425 1689 OFFCURVE",
"-486 1761 OFFCURVE",
"-593 1800 OFFCURVE",
"-650 1800 QCURVE",
"-650 1800 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-624 1777 OFFCURVE",
"-575 1751 OFFCURVE",
"-548 1701 OFFCURVE",
"-548 1675 QCURVE SMOOTH",
"-548 1649 OFFCURVE",
"-574 1599 OFFCURVE",
"-624 1573 OFFCURVE",
"-650 1573 QCURVE SMOOTH",
"-676 1573 OFFCURVE",
"-725 1599 OFFCURVE",
"-752 1649 OFFCURVE",
"-752 1675 QCURVE SMOOTH",
"-752 1701 OFFCURVE",
"-725 1751 OFFCURVE",
"-676 1777 OFFCURVE",
"-650 1777 QCURVE",
"-650 1777 LINE"
);
},
{
closed = 1;
nodes = (
"-701 1875 OFFCURVE",
"-796 1823 OFFCURVE",
"-850 1727 OFFCURVE",
"-850 1675 QCURVE SMOOTH",
"-850 1623 OFFCURVE",
"-797 1527 OFFCURVE",
"-702 1475 OFFCURVE",
"-650 1475 QCURVE SMOOTH",
"-598 1475 OFFCURVE",
"-502 1527 OFFCURVE",
"-450 1623 OFFCURVE",
"-450 1675 QCURVE SMOOTH",
"-450 1727 OFFCURVE",
"-504 1823 OFFCURVE",
"-599 1875 OFFCURVE",
"-650 1875 QCURVE",
"-650 1875 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-702 1875 OFFCURVE",
"-797 1822 OFFCURVE",
"-823 1775 QCURVE SMOOTH",
"-850 1727 OFFCURVE",
"-850 1675 QCURVE SMOOTH",
"-850 1622 OFFCURVE",
"-796 1527 OFFCURVE",
"-750 1501 QCURVE SMOOTH",
"-701 1475 OFFCURVE",
"-650 1475 QCURVE SMOOTH",
"-597 1475 OFFCURVE",
"-502 1528 OFFCURVE",
"-476 1575 QCURVE SMOOTH",
"-450 1624 OFFCURVE",
"-450 1675 QCURVE SMOOTH",
"-450 1728 OFFCURVE",
"-505 1823 OFFCURVE",
"-552 1849 QCURVE SMOOTH",
"-599 1875 OFFCURVE",
"-650 1875 QCURVE",
"-650 1875 LINE"
);
},
{
closed = 1;
nodes = (
"-612 1817 OFFCURVE",
"-545 1780 OFFCURVE",
"-527 1746 QCURVE SMOOTH",
"-508 1712 OFFCURVE",
"-508 1675 QCURVE SMOOTH",
"-508 1637 OFFCURVE",
"-545 1568 OFFCURVE",
"-579 1551 QCURVE SMOOTH",
"-613 1533 OFFCURVE",
"-650 1533 QCURVE SMOOTH",
"-688 1533 OFFCURVE",
"-755 1570 OFFCURVE",
"-773 1604 QCURVE SMOOTH",
"-792 1638 OFFCURVE",
"-792 1675 QCURVE SMOOTH",
"-792 1712 OFFCURVE",
"-753 1781 OFFCURVE",
"-720 1799 QCURVE SMOOTH",
"-686 1817 OFFCURVE",
"-650 1817 QCURVE",
"-650 1817 LINE"
);
}
);
width = 0;
}
);
note = uni17C6.a;
},
{
glyphname = uni17CE.a;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-485 1786 LINE",
"-485 1899 LINE",
"-815 1899 LINE",
"-815 1786 LINE",
"-955 1786 LINE",
"-955 1612 LINE",
"-815 1612 LINE",
"-815 1499 LINE",
"-485 1499 LINE",
"-485 1612 LINE",
"-345 1612 LINE",
"-345 1786 LINE",
"-345 1786 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-515 1899 LINE",
"-785 1899 LINE",
"-785 1786 LINE",
"-925 1786 LINE",
"-925 1612 LINE",
"-785 1612 LINE",
"-785 1499 LINE",
"-515 1499 LINE",
"-515 1612 LINE",
"-375 1612 LINE",
"-375 1786 LINE",
"-515 1786 LINE",
"-515 1786 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-575 1899 LINE",
"-725 1899 LINE",
"-725 1754 LINE",
"-925 1754 LINE",
"-925 1644 LINE",
"-725 1644 LINE",
"-725 1499 LINE",
"-575 1499 LINE",
"-575 1644 LINE",
"-375 1644 LINE",
"-375 1754 LINE",
"-575 1754 LINE",
"-575 1754 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */\0120 5 0 2 5 87 4 1 0 3 1 1 2 0 1 103 0 5 5 2 95 0 2 5 2 79 17 17 17 17 17 16 6 6 28 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-595 1929 LINE",
"-705 1929 LINE",
"-705 1728 LINE",
"-925 1728 LINE",
"-925 1631 LINE",
"-705 1631 LINE",
"-705 1430 LINE",
"-595 1430 LINE",
"-595 1631 LINE",
"-375 1631 LINE",
"-375 1728 LINE",
"-595 1728 LINE",
"-595 1728 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-621 1709 LINE",
"-621 1929 LINE",
"-679 1929 LINE",
"-679 1709 LINE",
"-925 1709 LINE",
"-925 1651 LINE",
"-679 1651 LINE",
"-679 1430 LINE",
"-621 1430 LINE",
"-621 1651 LINE",
"-375 1651 LINE",
"-375 1709 LINE",
"-375 1709 LINE"
);
}
);
width = 0;
}
);
note = uni17CE.a;
},
{
glyphname = uni17D0.a;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-730 1500 OFFCURVE",
"-329 1500 QCURVE SMOOTH",
"190 1500 OFFCURVE",
"190 1900 QCURVE",
"-140 1900 LINE",
"-140 1663 OFFCURVE",
"-329 1663 QCURVE SMOOTH",
"-400 1663 OFFCURVE",
"-400 1687 QCURVE SMOOTH",
"-400 1728 OFFCURVE",
"-329 1728 QCURVE",
"-329 1891 LINE",
"-730 1891 OFFCURVE",
"-730 1687 QCURVE",
"-730 1687 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-700 1500 OFFCURVE",
"-329 1500 QCURVE SMOOTH",
"160 1500 OFFCURVE",
"160 1900 QCURVE",
"-110 1900 LINE",
"-110 1653 OFFCURVE",
"-329 1653 QCURVE SMOOTH",
"-430 1653 OFFCURVE",
"-430 1687 QCURVE SMOOTH",
"-430 1738 OFFCURVE",
"-329 1738 QCURVE",
"-329 1891 LINE",
"-700 1891 OFFCURVE",
"-700 1687 QCURVE",
"-700 1687 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-700 1500 OFFCURVE",
"-309 1500 QCURVE SMOOTH",
"100 1500 OFFCURVE",
"100 1900 QCURVE",
"-50 1900 LINE",
"-50 1630 OFFCURVE",
"-309 1630 QCURVE SMOOTH",
"-550 1630 OFFCURVE",
"-550 1700 QCURVE SMOOTH",
"-550 1760 OFFCURVE",
"-409 1760 QCURVE",
"-409 1890 LINE",
"-700 1890 OFFCURVE",
"-700 1700 QCURVE",
"-700 1700 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-670 1510 OFFCURVE",
"-389 1510 QCURVE SMOOTH",
"70 1510 OFFCURVE",
"70 1910 QCURVE",
"-28 1910 LINE",
"-28 1608 OFFCURVE",
"-389 1608 QCURVE SMOOTH",
"-572 1608 OFFCURVE",
"-572 1694 QCURVE SMOOTH",
"-572 1780 OFFCURVE",
"-436 1780 QCURVE SMOOTH",
"-389 1780 LINE",
"-389 1878 LINE",
"-433 1878 LINE SMOOTH",
"-670 1878 OFFCURVE",
"-670 1694 QCURVE",
"-670 1694 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-640 1588 OFFCURVE",
"-516 1510 OFFCURVE",
"-389 1510 QCURVE SMOOTH",
"-170 1510 OFFCURVE",
"40 1679 OFFCURVE",
"40 1870 QCURVE",
"-18 1870 LINE",
"-18 1708 OFFCURVE",
"-199 1568 OFFCURVE",
"-389 1568 QCURVE SMOOTH",
"-488 1568 OFFCURVE",
"-582 1617 OFFCURVE",
"-582 1674 QCURVE SMOOTH",
"-582 1736 OFFCURVE",
"-510 1790 OFFCURVE",
"-436 1790 QCURVE SMOOTH",
"-389 1790 LINE",
"-389 1848 LINE",
"-433 1848 LINE SMOOTH",
"-538 1848 OFFCURVE",
"-640 1765 OFFCURVE",
"-640 1674 QCURVE",
"-640 1674 LINE"
);
}
);
width = 0;
}
);
note = uni17D0.a;
},
{
glyphname = uni1789.a;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1035 1160 OFFCURVE",
"877 1160 QCURVE SMOOTH",
"762 1160 OFFCURVE",
"650 1036 QCURVE",
"539 1160 OFFCURVE",
"425 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 833 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"478 228 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 833 LINE SMOOTH",
"478 900 OFFCURVE",
"494 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"807 900 QCURVE SMOOTH",
"822 900 OFFCURVE",
"822 833 QCURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 807 LINE SMOOTH",
"1190 932 OFFCURVE",
"1382 932 QCURVE SMOOTH",
"1484 932 OFFCURVE",
"1484 807 QCURVE SMOOTH",
"1484 0 LINE",
"1852 0 LINE",
"1852 807 LINE SMOOTH",
"1852 1160 OFFCURVE",
"1412 1160 QCURVE SMOOTH",
"1250 1160 OFFCURVE",
"1104 1068 QCURVE",
"1104 1068 LINE"
);
}
);
width = 1962;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1035 1130 OFFCURVE",
"877 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"425 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 833 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 833 LINE SMOOTH",
"448 900 OFFCURVE",
"481 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"820 900 QCURVE SMOOTH",
"852 900 OFFCURVE",
"852 833 QCURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 807 LINE SMOOTH",
"1160 932 OFFCURVE",
"1382 932 QCURVE SMOOTH",
"1514 932 OFFCURVE",
"1514 807 QCURVE SMOOTH",
"1514 0 LINE",
"1822 0 LINE",
"1822 807 LINE SMOOTH",
"1822 1130 OFFCURVE",
"1382 1130 QCURVE SMOOTH",
"1218 1130 OFFCURVE",
"1104 1038 QCURVE",
"1104 1038 LINE"
);
}
);
width = 1962;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 853 LINE SMOOTH",
"388 980 OFFCURVE",
"461 980 QCURVE SMOOTH",
"510 980 OFFCURVE",
"591 886 QCURVE SMOOTH",
"618 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"682 855 OFFCURVE",
"709 886 QCURVE SMOOTH",
"791 980 OFFCURVE",
"840 980 QCURVE SMOOTH",
"912 980 OFFCURVE",
"912 853 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 807 LINE SMOOTH",
"1100 992 OFFCURVE",
"1362 992 QCURVE SMOOTH",
"1574 992 OFFCURVE",
"1574 807 QCURVE SMOOTH",
"1574 0 LINE",
"1762 0 LINE",
"1762 807 LINE SMOOTH",
"1762 1130 OFFCURVE",
"1362 1130 QCURVE SMOOTH",
"1170 1130 OFFCURVE",
"1060 1032 QCURVE",
"1001 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 853 QCURVE",
"200 853 LINE"
);
}
);
width = 1962;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 0 LINE",
"1070 0 LINE",
"1070 807 LINE SMOOTH",
"1070 1032 OFFCURVE",
"1342 1032 QCURVE SMOOTH",
"1614 1032 OFFCURVE",
"1614 807 QCURVE SMOOTH",
"1614 0 LINE",
"1732 0 LINE",
"1732 807 LINE SMOOTH",
"1732 1130 OFFCURVE",
"1342 1130 QCURVE SMOOTH",
"1130 1130 OFFCURVE",
"1034 1035 QCURVE",
"982 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 853 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 853 LINE SMOOTH",
"348 1020 OFFCURVE",
"445 1020 QCURVE SMOOTH",
"500 1020 OFFCURVE",
"596 896 QCURVE SMOOTH",
"628 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"672 855 OFFCURVE",
"704 896 QCURVE SMOOTH",
"801 1020 OFFCURVE",
"857 1020 QCURVE SMOOTH",
"952 1020 OFFCURVE",
"952 853 QCURVE",
"952 853 LINE"
);
}
);
width = 1962;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"982 0 LINE",
"1040 0 LINE",
"1040 807 LINE SMOOTH",
"1040 1072 OFFCURVE",
"1342 1072 QCURVE SMOOTH",
"1644 1072 OFFCURVE",
"1644 807 QCURVE SMOOTH",
"1644 0 LINE",
"1702 0 LINE",
"1702 807 LINE SMOOTH",
"1702 1130 OFFCURVE",
"1342 1130 QCURVE SMOOTH",
"1106 1130 OFFCURVE",
"1024 991 QCURVE",
"987 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"763 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"260 1130 OFFCURVE",
"260 853 QCURVE SMOOTH",
"260 238 LINE SMOOTH",
"260 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 58 LINE",
"470 58 LINE SMOOTH",
"318 58 OFFCURVE",
"318 238 QCURVE SMOOTH",
"318 853 LINE SMOOTH",
"318 1072 OFFCURVE",
"445 1072 QCURVE SMOOTH",
"500 1072 OFFCURVE",
"596 954 QCURVE SMOOTH",
"628 915 OFFCURVE",
"650 915 QCURVE SMOOTH",
"673 915 OFFCURVE",
"704 954 QCURVE SMOOTH",
"801 1072 OFFCURVE",
"857 1072 QCURVE SMOOTH",
"982 1072 OFFCURVE",
"982 853 QCURVE",
"982 853 LINE"
);
}
);
width = 1962;
}
);
note = uni1789.a;
},
{
glyphname = uni1794.a;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"478 714 LINE SMOOTH",
"478 763 OFFCURVE",
"348 890 QCURVE",
"348 932 LINE",
"1190 932 LINE",
"1190 1160 LINE",
"258 1160 LINE SMOOTH",
"40 1160 OFFCURVE",
"40 972 QCURVE SMOOTH",
"40 847 LINE",
"110 714 LINE",
"110 323 LINE SMOOTH",
"110 0 OFFCURVE",
"550 0 QCURVE SMOOTH",
"653 0 OFFCURVE",
"822 108 QCURVE",
"822 -120 LINE",
"1190 -120 LINE",
"1190 820 LINE",
"822 820 LINE",
"822 413 LINE SMOOTH",
"822 355 OFFCURVE",
"742 271 OFFCURVE",
"616 228 OFFCURVE",
"550 228 QCURVE SMOOTH",
"478 228 OFFCURVE",
"478 323 QCURVE",
"478 323 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"448 714 LINE SMOOTH",
"448 762 OFFCURVE",
"318 890 QCURVE",
"318 932 LINE",
"1160 932 LINE",
"1160 1130 LINE",
"258 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 972 QCURVE SMOOTH",
"60 847 LINE",
"140 714 LINE",
"140 323 LINE SMOOTH",
"140 0 OFFCURVE",
"550 0 QCURVE SMOOTH",
"683 0 OFFCURVE",
"852 108 QCURVE",
"852 -120 LINE",
"1160 -120 LINE",
"1160 820 LINE",
"852 820 LINE",
"852 413 LINE SMOOTH",
"852 321 OFFCURVE",
"645 198 OFFCURVE",
"550 198 QCURVE SMOOTH",
"448 198 OFFCURVE",
"448 323 QCURVE",
"448 323 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"258 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"200 734 LINE",
"200 323 LINE SMOOTH",
"200 0 OFFCURVE",
"550 0 QCURVE SMOOTH",
"743 0 OFFCURVE",
"912 138 QCURVE",
"912 -120 LINE",
"1100 -120 LINE",
"1100 840 LINE",
"912 840 LINE",
"912 383 LINE SMOOTH",
"912 291 OFFCURVE",
"645 138 OFFCURVE",
"550 138 QCURVE SMOOTH",
"388 138 OFFCURVE",
"388 323 QCURVE SMOOTH",
"388 734 LINE SMOOTH",
"388 782 OFFCURVE",
"258 910 QCURVE",
"258 992 LINE",
"1100 992 LINE",
"1100 1130 LINE",
"1100 1130 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"733 0 OFFCURVE",
"952 158 QCURVE",
"952 -120 LINE",
"1070 -120 LINE",
"1070 840 LINE",
"952 840 LINE",
"952 343 LINE SMOOTH",
"952 271 OFFCURVE",
"675 98 OFFCURVE",
"550 98 QCURVE SMOOTH",
"348 98 OFFCURVE",
"348 323 QCURVE SMOOTH",
"348 714 LINE SMOOTH",
"348 782 OFFCURVE",
"273 846 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"1120 1032 LINE",
"1120 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 867 LINE",
"198 775 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 323 LINE SMOOTH",
"230 0 OFFCURVE",
"550 0 QCURVE",
"550 0 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1040 1072 LINE",
"1040 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 323 LINE SMOOTH",
"260 216 OFFCURVE",
"321 76 OFFCURVE",
"472 0 OFFCURVE",
"603 0 QCURVE SMOOTH",
"719 0 OFFCURVE",
"908 108 OFFCURVE",
"982 226 QCURVE",
"982 -120 LINE",
"1040 -120 LINE",
"1040 840 LINE",
"982 840 LINE",
"982 343 LINE SMOOTH",
"982 314 OFFCURVE",
"875 172 OFFCURVE",
"703 58 OFFCURVE",
"603 58 QCURVE SMOOTH",
"494 58 OFFCURVE",
"370 116 OFFCURVE",
"318 231 OFFCURVE",
"318 323 QCURVE SMOOTH",
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE",
"248 1072 LINE"
);
}
);
width = 1300;
}
);
note = uni1794.a;
},
{
glyphname = uni17D2179A.b;
lastChange = "2020-02-04 08:51:14 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"20 837 LINE",
"100 714 LINE",
"100 -190 LINE SMOOTH",
"100 -500 OFFCURVE",
"578 -500 QCURVE",
"658 -500 LINE",
"658 -260 LINE",
"578 -260 LINE",
"468 -260 OFFCURVE",
"468 -190 QCURVE SMOOTH",
"468 714 LINE SMOOTH",
"468 782 OFFCURVE",
"393 836 QCURVE SMOOTH",
"318 890 LINE",
"318 932 LINE",
"518 932 LINE",
"518 1150 LINE",
"228 1150 LINE SMOOTH",
"20 1150 OFFCURVE",
"20 972 QCURVE",
"20 972 LINE"
);
}
);
width = 578;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"438 714 LINE SMOOTH",
"438 782 OFFCURVE",
"363 836 QCURVE SMOOTH",
"288 890 LINE",
"288 932 LINE",
"488 932 LINE",
"488 1130 LINE",
"228 1130 LINE SMOOTH",
"30 1130 OFFCURVE",
"30 972 QCURVE SMOOTH",
"30 837 LINE",
"130 714 LINE",
"130 -220 LINE SMOOTH",
"130 -500 OFFCURVE",
"578 -500 QCURVE",
"688 -500 LINE",
"688 -290 LINE",
"578 -290 LINE",
"438 -290 OFFCURVE",
"438 -220 QCURVE",
"438 -220 LINE"
);
}
);
width = 578;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 734 LINE SMOOTH",
"388 802 OFFCURVE",
"313 856 QCURVE SMOOTH",
"238 910 LINE",
"238 992 LINE",
"438 992 LINE",
"438 1130 LINE",
"238 1130 LINE SMOOTH",
"60 1130 OFFCURVE",
"60 992 QCURVE SMOOTH",
"60 857 LINE",
"200 734 LINE",
"200 -220 LINE SMOOTH",
"200 -500 OFFCURVE",
"588 -500 QCURVE SMOOTH",
"738 -500 LINE",
"738 -350 LINE",
"588 -350 LINE SMOOTH",
"388 -350 OFFCURVE",
"388 -220 QCURVE",
"388 -220 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"348 714 LINE SMOOTH",
"348 802 OFFCURVE",
"273 856 QCURVE SMOOTH",
"198 910 LINE",
"198 992 LINE SMOOTH",
"198 1032 OFFCURVE",
"248 1032 QCURVE SMOOTH",
"438 1032 LINE",
"438 1130 LINE",
"248 1130 LINE SMOOTH",
"90 1130 OFFCURVE",
"90 992 QCURVE SMOOTH",
"90 857 LINE",
"195 772 LINE SMOOTH",
"230 744 OFFCURVE",
"230 714 QCURVE SMOOTH",
"230 -220 LINE SMOOTH",
"230 -500 OFFCURVE",
"588 -500 QCURVE",
"798 -500 LINE",
"798 -390 LINE",
"588 -390 LINE",
"348 -390 OFFCURVE",
"348 -220 QCURVE",
"348 -220 LINE"
);
}
);
width = 578;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"318 714 LINE SMOOTH",
"318 785 OFFCURVE",
"238 842 QCURVE SMOOTH",
"158 899 LINE",
"158 992 LINE SMOOTH",
"158 1072 OFFCURVE",
"248 1072 QCURVE SMOOTH",
"408 1072 LINE",
"408 1130 LINE",
"248 1130 LINE SMOOTH",
"100 1130 OFFCURVE",
"100 992 QCURVE SMOOTH",
"100 869 LINE",
"200 797 LINE SMOOTH",
"260 754 OFFCURVE",
"260 714 QCURVE SMOOTH",
"260 -250 LINE SMOOTH",
"260 -500 OFFCURVE",
"588 -500 QCURVE",
"828 -500 LINE",
"828 -442 LINE",
"588 -442 LINE",
"318 -442 OFFCURVE",
"318 -250 QCURVE",
"318 -250 LINE"
);
}
);
width = 578;
}
);
note = uni17D2179A.b;
},
{
glyphname = uni17B717CD;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-302 1650 OFFCURVE",
"-243 1650 QCURVE SMOOTH",
"60 1650 OFFCURVE",
"60 1900 QCURVE",
"-207 1900 LINE",
"-207 1830 OFFCURVE",
"-273 1830 QCURVE SMOOTH",
"-493 1830 OFFCURVE",
"-570 1735 QCURVE",
"-652 1760 OFFCURVE",
"-740 1760 QCURVE SMOOTH",
"-1011 1760 OFFCURVE",
"-1090 1675 QCURVE SMOOTH",
"-1170 1588 OFFCURVE",
"-1170 1484 QCURVE SMOOTH",
"-1170 1290 OFFCURVE",
"-1070 1290 QCURVE SMOOTH",
"-170 1290 LINE",
"-170 1520 LINE",
"-236 1573 OFFCURVE",
"-310 1621 QCURVE",
"-310 1621 LINE"
);
},
{
closed = 1;
nodes = (
"-660 1580 OFFCURVE",
"-498 1545 OFFCURVE",
"-452 1500 QCURVE",
"-860 1500 LINE",
"-860 1520 OFFCURVE",
"-828 1557 OFFCURVE",
"-772 1580 OFFCURVE",
"-740 1580 QCURVE",
"-740 1580 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-332 1620 OFFCURVE",
"-273 1620 QCURVE SMOOTH",
"60 1620 OFFCURVE",
"60 1900 QCURVE",
"-207 1900 LINE",
"-207 1800 OFFCURVE",
"-273 1800 QCURVE SMOOTH",
"-495 1800 OFFCURVE",
"-570 1705 QCURVE",
"-654 1730 OFFCURVE",
"-740 1730 QCURVE SMOOTH",
"-950 1730 OFFCURVE",
"-1110 1560 OFFCURVE",
"-1110 1460 QCURVE SMOOTH",
"-1110 1290 OFFCURVE",
"-1010 1290 QCURVE SMOOTH",
"-200 1290 LINE",
"-200 1490 LINE",
"-265 1543 OFFCURVE",
"-340 1591 QCURVE",
"-340 1591 LINE"
);
},
{
closed = 1;
nodes = (
"-680 1550 OFFCURVE",
"-504 1520 OFFCURVE",
"-452 1470 QCURVE",
"-860 1470 LINE",
"-860 1500 OFFCURVE",
"-790 1550 OFFCURVE",
"-740 1550 QCURVE",
"-740 1550 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-330 1550 LINE",
"-357 1574 OFFCURVE",
"-384 1597 QCURVE",
"-372 1620 OFFCURVE",
"-343 1620 QCURVE SMOOTH",
"-100 1620 OFFCURVE",
"-100 1850 QCURVE SMOOTH",
"-100 1900 LINE",
"-247 1900 LINE",
"-247 1750 OFFCURVE",
"-343 1750 QCURVE SMOOTH",
"-456 1750 OFFCURVE",
"-504 1686 QCURVE",
"-534 1706 OFFCURVE",
"-565 1725 QCURVE SMOOTH",
"-691 1800 OFFCURVE",
"-790 1800 QCURVE SMOOTH",
"-890 1800 OFFCURVE",
"-1050 1650 OFFCURVE",
"-1050 1550 QCURVE SMOOTH",
"-1050 1400 OFFCURVE",
"-950 1400 QCURVE SMOOTH",
"-197 1400 LINE",
"-197 1510 LINE",
"-282 1510 OFFCURVE",
"-330 1519 QCURVE",
"-330 1519 LINE"
);
},
{
closed = 1;
nodes = (
"-900 1530 LINE",
"-900 1610 OFFCURVE",
"-830 1670 OFFCURVE",
"-790 1670 QCURVE SMOOTH",
"-730 1670 OFFCURVE",
"-682 1640 QCURVE SMOOTH",
"-638 1612 OFFCURVE",
"-539 1542 QCURVE",
"-539 1536 OFFCURVE",
"-538 1530 QCURVE",
"-538 1530 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-237 1518 LINE",
"-342 1518 OFFCURVE",
"-342 1589 QCURVE SMOOTH",
"-342 1660 OFFCURVE",
"-213 1660 QCURVE SMOOTH",
"0 1660 OFFCURVE",
"0 1840 QCURVE",
"-98 1840 LINE",
"-98 1758 OFFCURVE",
"-213 1758 QCURVE SMOOTH",
"-425 1758 OFFCURVE",
"-447 1623 QCURVE",
"-449 1624 OFFCURVE",
"-450 1625 QCURVE",
"-591 1710 OFFCURVE",
"-740 1710 QCURVE SMOOTH",
"-1020 1710 OFFCURVE",
"-1020 1460 QCURVE SMOOTH",
"-1020 1310 OFFCURVE",
"-867 1310 QCURVE SMOOTH",
"-332 1310 LINE SMOOTH",
"-230 1310 OFFCURVE",
"-230 1375 QCURVE SMOOTH",
"-230 1408 LINE SMOOTH",
"-230 1427 OFFCURVE",
"-237 1443 QCURVE",
"-237 1443 LINE"
);
},
{
closed = 1;
nodes = (
"-630 1612 OFFCURVE",
"-507 1546 QCURVE SMOOTH",
"-384 1480 OFFCURVE",
"-332 1408 QCURVE",
"-867 1408 LINE SMOOTH",
"-922 1408 OFFCURVE",
"-922 1460 QCURVE SMOOTH",
"-922 1612 OFFCURVE",
"-740 1612 QCURVE",
"-740 1612 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-128 1840 LINE",
"-128 1785 OFFCURVE",
"-191 1728 OFFCURVE",
"-243 1728 QCURVE SMOOTH",
"-355 1728 OFFCURVE",
"-447 1668 OFFCURVE",
"-447 1604 QCURVE",
"-444 1572 LINE",
"-452 1578 OFFCURVE",
"-480 1595 QCURVE SMOOTH",
"-620 1680 OFFCURVE",
"-760 1680 QCURVE SMOOTH",
"-1000 1680 OFFCURVE",
"-1000 1460 QCURVE SMOOTH",
"-1000 1340 OFFCURVE",
"-887 1340 QCURVE SMOOTH",
"-362 1340 LINE SMOOTH",
"-260 1340 OFFCURVE",
"-260 1375 QCURVE SMOOTH",
"-260 1391 OFFCURVE",
"-265 1408 QCURVE",
"-260 1408 LINE",
"-267 1498 LINE",
"-372 1498 OFFCURVE",
"-372 1589 QCURVE SMOOTH",
"-372 1632 OFFCURVE",
"-318 1670 OFFCURVE",
"-243 1670 QCURVE SMOOTH",
"-162 1670 OFFCURVE",
"-70 1757 OFFCURVE",
"-70 1840 QCURVE",
"-70 1840 LINE"
);
},
{
closed = 1;
nodes = (
"-887 1398 LINE SMOOTH",
"-942 1398 OFFCURVE",
"-942 1460 QCURVE SMOOTH",
"-942 1622 OFFCURVE",
"-760 1622 QCURVE SMOOTH",
"-660 1622 OFFCURVE",
"-537 1556 QCURVE SMOOTH",
"-416 1491 OFFCURVE",
"-332 1398 QCURVE",
"-332 1398 LINE"
);
}
);
width = 0;
}
);
note = uni17B717CD;
},
{
glyphname = uni17BF.b;
lastChange = "2020-02-04 08:55:20 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"330 1830 LINE",
"102 1830 LINE",
"102 1656 LINE",
"68 1676 OFFCURVE",
"50 1685 QCURVE SMOOTH",
"30 1695 LINE",
"30 1890 LINE",
"-168 1890 LINE",
"-168 1756 LINE",
"-200 1760 OFFCURVE",
"-240 1760 QCURVE SMOOTH",
"-424 1760 OFFCURVE",
"-580 1606 OFFCURVE",
"-580 1490 QCURVE SMOOTH",
"-580 1290 OFFCURVE",
"-480 1290 QCURVE SMOOTH",
"57 1290 LINE",
"110 1255 OFFCURVE",
"110 1110 QCURVE SMOOTH",
"110 -260 LINE SMOOTH",
"110 -320 OFFCURVE",
"0 -320 QCURVE",
"-110 -320 LINE",
"-110 -500 LINE",
"0 -500 LINE",
"478 -500 OFFCURVE",
"478 -260 QCURVE SMOOTH",
"478 1110 LINE SMOOTH",
"478 1282 OFFCURVE",
"330 1361 QCURVE",
"330 1361 LINE"
);
},
{
closed = 1;
nodes = (
"-300 1500 LINE",
"-300 1533 OFFCURVE",
"-268 1580 OFFCURVE",
"-240 1580 QCURVE SMOOTH",
"-160 1580 OFFCURVE",
"2 1545 OFFCURVE",
"48 1500 QCURVE",
"48 1500 LINE"
);
}
);
width = 588;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-300 1500 OFFCURVE",
"-270 1550 OFFCURVE",
"-240 1550 QCURVE SMOOTH",
"-180 1550 OFFCURVE",
"-4 1520 OFFCURVE",
"48 1470 QCURVE",
"-300 1470 LINE",
"-300 1470 LINE"
);
},
{
closed = 1;
nodes = (
"300 1800 LINE",
"102 1800 LINE",
"102 1626 LINE",
"77 1641 OFFCURVE",
"50 1655 QCURVE SMOOTH",
"40 1660 OFFCURVE",
"30 1665 QCURVE",
"30 1860 LINE",
"-168 1860 LINE",
"-168 1726 LINE",
"-204 1730 OFFCURVE",
"-240 1730 QCURVE SMOOTH",
"-410 1730 OFFCURVE",
"-550 1560 OFFCURVE",
"-550 1460 QCURVE SMOOTH",
"-550 1290 OFFCURVE",
"-450 1290 QCURVE SMOOTH",
"57 1290 LINE",
"140 1256 OFFCURVE",
"140 1110 QCURVE SMOOTH",
"140 -260 LINE SMOOTH",
"140 -320 OFFCURVE",
"0 -320 QCURVE",
"-140 -320 LINE",
"-140 -500 LINE",
"0 -500 LINE",
"448 -500 OFFCURVE",
"448 -260 QCURVE SMOOTH",
"448 1110 LINE SMOOTH",
"448 1282 OFFCURVE",
"300 1361 QCURVE",
"300 1361 LINE"
);
}
);
width = 588;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-370 1430 LINE",
"-370 1510 OFFCURVE",
"-350 1570 OFFCURVE",
"-310 1570 QCURVE SMOOTH",
"-280 1570 OFFCURVE",
"-104 1510 OFFCURVE",
"8 1430 QCURVE",
"8 1430 LINE"
);
},
{
closed = 1;
nodes = (
"-150 -360 LINE",
"-150 -500 LINE",
"0 -500 LINE SMOOTH",
"388 -500 OFFCURVE",
"388 -260 QCURVE SMOOTH",
"388 1110 LINE SMOOTH",
"388 1333 OFFCURVE",
"200 1400 QCURVE",
"200 1750 LINE",
"62 1750 LINE",
"62 1558 LINE",
"22 1584 OFFCURVE",
"-20 1608 QCURVE",
"-20 1800 LINE",
"-158 1800 LINE",
"-158 1671 LINE",
"-247 1700 OFFCURVE",
"-310 1700 QCURVE SMOOTH",
"-410 1700 OFFCURVE",
"-520 1550 OFFCURVE",
"-520 1450 QCURVE SMOOTH",
"-520 1300 OFFCURVE",
"-420 1300 QCURVE SMOOTH",
"0 1300 LINE SMOOTH",
"200 1300 OFFCURVE",
"200 1110 QCURVE SMOOTH",
"200 -260 LINE SMOOTH",
"200 -360 OFFCURVE",
"0 -360 QCURVE",
"0 -360 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-342 1612 OFFCURVE",
"-220 1612 QCURVE SMOOTH",
"-140 1612 OFFCURVE",
"-17 1546 QCURVE SMOOTH",
"106 1480 OFFCURVE",
"158 1408 QCURVE",
"-287 1408 LINE SMOOTH",
"-342 1408 OFFCURVE",
"-342 1460 QCURVE",
"-342 1460 LINE"
);
},
{
closed = 1;
nodes = (
"260 1349 OFFCURVE",
"260 1375 QCURVE SMOOTH",
"260 1760 LINE",
"162 1760 LINE",
"162 1541 LINE",
"118 1576 OFFCURVE",
"60 1613 QCURVE",
"60 1800 LINE",
"-38 1800 LINE",
"-38 1665 LINE",
"-142 1710 OFFCURVE",
"-220 1710 QCURVE SMOOTH",
"-440 1710 OFFCURVE",
"-440 1460 QCURVE SMOOTH",
"-440 1310 OFFCURVE",
"-287 1310 QCURVE SMOOTH",
"75 1310 LINE",
"240 1255 OFFCURVE",
"240 1110 QCURVE SMOOTH",
"240 -260 LINE SMOOTH",
"240 -400 OFFCURVE",
"0 -400 QCURVE",
"-240 -400 LINE",
"-240 -500 LINE",
"0 -500 LINE",
"358 -500 OFFCURVE",
"358 -260 QCURVE SMOOTH",
"358 1110 LINE SMOOTH",
"358 1252 OFFCURVE",
"244 1333 QCURVE",
"244 1333 LINE"
);
}
);
width = 588;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"248 1353 OFFCURVE",
"248 1375 QCURVE SMOOTH",
"248 1760 LINE",
"190 1760 LINE",
"190 1466 LINE",
"140 1520 OFFCURVE",
"68 1569 QCURVE",
"68 1790 LINE",
"10 1790 LINE",
"10 1606 LINE",
"-123 1680 OFFCURVE",
"-252 1680 QCURVE SMOOTH",
"-492 1680 OFFCURVE",
"-492 1460 QCURVE SMOOTH",
"-492 1340 OFFCURVE",
"-379 1340 QCURVE SMOOTH",
"106 1340 LINE",
"270 1280 OFFCURVE",
"270 1110 QCURVE SMOOTH",
"270 -260 LINE SMOOTH",
"270 -442 OFFCURVE",
"0 -442 QCURVE",
"-270 -442 LINE",
"-270 -500 LINE",
"0 -500 LINE",
"328 -500 OFFCURVE",
"328 -260 QCURVE SMOOTH",
"328 1110 LINE SMOOTH",
"328 1267 OFFCURVE",
"207 1345 QCURVE",
"207 1345 LINE"
);
},
{
closed = 1;
nodes = (
"-434 1622 OFFCURVE",
"-252 1622 QCURVE SMOOTH",
"-152 1622 OFFCURVE",
"-29 1556 QCURVE SMOOTH",
"92 1491 OFFCURVE",
"176 1398 QCURVE",
"-379 1398 LINE SMOOTH",
"-434 1398 OFFCURVE",
"-434 1460 QCURVE",
"-434 1460 LINE"
);
}
);
width = 588;
}
);
note = uni17BF.b;
},
{
glyphname = uni17C0.b;
lastChange = "2020-02-04 08:58:31 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-110 1800 LINE",
"-478 1800 LINE",
"-478 1300 LINE",
"-170 1300 LINE",
"-109 1350 OFFCURVE",
"20 1350 QCURVE SMOOTH",
"110 1350 OFFCURVE",
"110 1150 QCURVE SMOOTH",
"110 -260 LINE SMOOTH",
"110 -320 OFFCURVE",
"0 -320 QCURVE",
"-110 -320 LINE",
"-110 -500 LINE",
"0 -500 LINE",
"478 -500 OFFCURVE",
"478 -260 QCURVE SMOOTH",
"478 1150 LINE SMOOTH",
"478 1570 OFFCURVE",
"20 1570 QCURVE SMOOTH",
"-46 1570 OFFCURVE",
"-110 1512 QCURVE",
"-110 1512 LINE"
);
}
);
width = 588;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-448 1300 LINE",
"-200 1300 LINE",
"-140 1350 OFFCURVE",
"20 1350 QCURVE SMOOTH",
"140 1350 OFFCURVE",
"140 1150 QCURVE SMOOTH",
"140 -260 LINE SMOOTH",
"140 -320 OFFCURVE",
"0 -320 QCURVE",
"-140 -320 LINE",
"-140 -500 LINE",
"0 -500 LINE",
"448 -500 OFFCURVE",
"448 -260 QCURVE SMOOTH",
"448 1150 LINE SMOOTH",
"448 1540 OFFCURVE",
"20 1540 QCURVE SMOOTH",
"-75 1540 OFFCURVE",
"-140 1482 QCURVE",
"-140 1800 LINE",
"-448 1800 LINE",
"-448 1800 LINE"
);
}
);
width = 588;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-150 -360 LINE",
"-150 -500 LINE",
"0 -500 LINE SMOOTH",
"388 -500 OFFCURVE",
"388 -260 QCURVE SMOOTH",
"388 1150 LINE SMOOTH",
"388 1510 OFFCURVE",
"0 1510 QCURVE SMOOTH",
"-105 1510 OFFCURVE",
"-200 1452 QCURVE",
"-200 1800 LINE",
"-388 1800 LINE",
"-388 1300 LINE",
"-260 1300 LINE",
"-200 1380 OFFCURVE",
"0 1380 QCURVE SMOOTH",
"200 1380 OFFCURVE",
"200 1150 QCURVE SMOOTH",
"200 -260 LINE SMOOTH",
"200 -360 OFFCURVE",
"0 -360 QCURVE",
"0 -360 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-358 1300 LINE",
"-260 1300 LINE",
"-220 1410 OFFCURVE",
"0 1410 QCURVE SMOOTH",
"240 1410 OFFCURVE",
"240 1150 QCURVE SMOOTH",
"240 -260 LINE SMOOTH",
"240 -400 OFFCURVE",
"0 -400 QCURVE",
"-240 -400 LINE",
"-240 -500 LINE",
"0 -500 LINE",
"358 -500 OFFCURVE",
"358 -260 QCURVE SMOOTH",
"358 1150 LINE SMOOTH",
"358 1510 OFFCURVE",
"0 1510 QCURVE SMOOTH",
"-125 1510 OFFCURVE",
"-240 1452 QCURVE",
"-240 1800 LINE",
"-358 1800 LINE",
"-358 1800 LINE"
);
}
);
width = 588;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-270 1800 LINE",
"-328 1800 LINE",
"-328 1300 LINE",
"-290 1300 LINE",
"-249 1452 OFFCURVE",
"0 1452 QCURVE SMOOTH",
"270 1452 OFFCURVE",
"270 1150 QCURVE SMOOTH",
"270 -260 LINE SMOOTH",
"270 -442 OFFCURVE",
"0 -442 QCURVE",
"-270 -442 LINE",
"-270 -500 LINE",
"0 -500 LINE",
"328 -500 OFFCURVE",
"328 -260 QCURVE SMOOTH",
"328 1150 LINE SMOOTH",
"328 1510 OFFCURVE",
"0 1510 QCURVE SMOOTH",
"-185 1510 OFFCURVE",
"-270 1422 QCURVE",
"-270 1422 LINE"
);
}
);
width = 588;
}
);
note = uni17C0.b;
},
{
glyphname = uni17B7.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-820 1477 LINE SMOOTH",
"-820 1290 OFFCURVE",
"-738 1290 QCURVE SMOOTH",
"-30 1290 LINE",
"-30 1520 LINE",
"-100 1610 OFFCURVE",
"-236 1685 QCURVE",
"-352 1760 OFFCURVE",
"-495 1760 QCURVE SMOOTH",
"-672 1760 OFFCURVE",
"-820 1606 OFFCURVE",
"-820 1490 QCURVE",
"-820 1490 LINE"
);
},
{
closed = 1;
nodes = (
"-430 1580 OFFCURVE",
"-296 1545 OFFCURVE",
"-258 1500 QCURVE",
"-594 1500 LINE",
"-594 1531 OFFCURVE",
"-535 1580 OFFCURVE",
"-495 1580 QCURVE",
"-495 1580 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-800 1290 OFFCURVE",
"-718 1290 QCURVE SMOOTH",
"-50 1290 LINE",
"-50 1490 LINE",
"-141 1580 OFFCURVE",
"-256 1655 QCURVE SMOOTH",
"-372 1730 OFFCURVE",
"-495 1730 QCURVE SMOOTH",
"-668 1730 OFFCURVE",
"-800 1560 OFFCURVE",
"-800 1460 QCURVE",
"-800 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-446 1550 OFFCURVE",
"-301 1520 OFFCURVE",
"-258 1470 QCURVE",
"-594 1470 LINE",
"-594 1500 OFFCURVE",
"-536 1550 OFFCURVE",
"-495 1550 QCURVE",
"-495 1550 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-800 1300 OFFCURVE",
"-712 1300 QCURVE SMOOTH",
"-50 1300 LINE",
"-50 1450 LINE",
"-147 1550 OFFCURVE",
"-271 1625 QCURVE SMOOTH",
"-395 1700 OFFCURVE",
"-526 1700 QCURVE SMOOTH",
"-659 1700 OFFCURVE",
"-800 1550 OFFCURVE",
"-800 1450 QCURVE",
"-800 1450 LINE"
);
},
{
closed = 1;
nodes = (
"-474 1570 OFFCURVE",
"-318 1510 OFFCURVE",
"-219 1430 QCURVE",
"-668 1430 LINE",
"-668 1510 OFFCURVE",
"-606 1570 OFFCURVE",
"-526 1570 QCURVE",
"-526 1570 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-775 1310 OFFCURVE",
"-639 1310 QCURVE SMOOTH",
"-165 1310 LINE SMOOTH",
"-75 1310 OFFCURVE",
"-75 1375 QCURVE SMOOTH",
"-75 1408 LINE SMOOTH",
"-75 1440 OFFCURVE",
"-93 1465 QCURVE SMOOTH",
"-146 1540 OFFCURVE",
"-270 1625 QCURVE SMOOTH",
"-395 1710 OFFCURVE",
"-527 1710 QCURVE SMOOTH",
"-775 1710 OFFCURVE",
"-775 1460 QCURVE",
"-775 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-429 1612 OFFCURVE",
"-320 1546 QCURVE SMOOTH",
"-211 1480 OFFCURVE",
"-165 1408 QCURVE",
"-639 1408 LINE SMOOTH",
"-688 1408 OFFCURVE",
"-688 1460 QCURVE SMOOTH",
"-688 1612 OFFCURVE",
"-527 1612 QCURVE",
"-527 1612 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-775 1340 OFFCURVE",
"-668 1340 QCURVE SMOOTH",
"-171 1340 LINE SMOOTH",
"-75 1340 OFFCURVE",
"-75 1375 QCURVE SMOOTH",
"-75 1408 OFFCURVE",
"-94 1435 QCURVE SMOOTH",
"-145 1506 OFFCURVE",
"-283 1595 QCURVE SMOOTH",
"-416 1680 OFFCURVE",
"-548 1680 QCURVE SMOOTH",
"-775 1680 OFFCURVE",
"-775 1460 QCURVE",
"-775 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-454 1622 OFFCURVE",
"-337 1556 QCURVE SMOOTH",
"-223 1492 OFFCURVE",
"-143 1398 QCURVE",
"-668 1398 LINE SMOOTH",
"-694 1398 OFFCURVE",
"-717 1429 OFFCURVE",
"-717 1460 QCURVE SMOOTH",
"-717 1622 OFFCURVE",
"-548 1622 QCURVE",
"-548 1622 LINE"
);
}
);
width = 0;
}
);
note = uni17B7.r;
},
{
glyphname = uni17B8.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-30 1830 LINE",
"-243 1830 LINE",
"-243 1656 LINE",
"-271 1676 OFFCURVE",
"-286 1685 QCURVE SMOOTH",
"-405 1760 OFFCURVE",
"-503 1760 QCURVE SMOOTH",
"-675 1760 OFFCURVE",
"-820 1606 OFFCURVE",
"-820 1490 QCURVE SMOOTH",
"-820 1290 OFFCURVE",
"-738 1290 QCURVE SMOOTH",
"-30 1290 LINE",
"-30 1290 LINE"
);
},
{
closed = 1;
nodes = (
"-430 1580 OFFCURVE",
"-296 1545 OFFCURVE",
"-258 1500 QCURVE",
"-594 1500 LINE",
"-594 1531 OFFCURVE",
"-535 1580 OFFCURVE",
"-495 1580 QCURVE",
"-495 1580 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-446 1550 OFFCURVE",
"-301 1520 OFFCURVE",
"-258 1470 QCURVE",
"-594 1470 LINE",
"-594 1500 OFFCURVE",
"-536 1550 OFFCURVE",
"-495 1550 QCURVE",
"-495 1550 LINE"
);
},
{
closed = 1;
nodes = (
"-234 1641 OFFCURVE",
"-256 1655 QCURVE SMOOTH",
"-372 1730 OFFCURVE",
"-495 1730 QCURVE SMOOTH",
"-668 1730 OFFCURVE",
"-800 1560 OFFCURVE",
"-800 1460 QCURVE SMOOTH",
"-800 1290 OFFCURVE",
"-718 1290 QCURVE SMOOTH",
"-50 1290 LINE",
"-50 1800 LINE",
"-213 1800 LINE",
"-213 1626 LINE",
"-213 1626 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-474 1570 OFFCURVE",
"-318 1510 OFFCURVE",
"-219 1430 QCURVE",
"-668 1430 LINE",
"-668 1510 OFFCURVE",
"-606 1570 OFFCURVE",
"-526 1570 QCURVE",
"-526 1570 LINE"
);
},
{
closed = 1;
nodes = (
"-50 1750 LINE",
"-172 1750 LINE",
"-172 1558 LINE",
"-219 1594 OFFCURVE",
"-271 1625 QCURVE SMOOTH",
"-395 1700 OFFCURVE",
"-526 1700 QCURVE SMOOTH",
"-659 1700 OFFCURVE",
"-800 1550 OFFCURVE",
"-800 1450 QCURVE SMOOTH",
"-800 1300 OFFCURVE",
"-712 1300 QCURVE SMOOTH",
"-50 1300 LINE",
"-50 1300 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-688 1612 OFFCURVE",
"-527 1612 QCURVE SMOOTH",
"-429 1612 OFFCURVE",
"-320 1546 QCURVE SMOOTH",
"-211 1480 OFFCURVE",
"-165 1408 QCURVE",
"-639 1408 LINE SMOOTH",
"-688 1408 OFFCURVE",
"-688 1460 QCURVE",
"-688 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-207 1582 OFFCURVE",
"-270 1625 QCURVE SMOOTH",
"-395 1710 OFFCURVE",
"-527 1710 QCURVE SMOOTH",
"-775 1710 OFFCURVE",
"-775 1460 QCURVE SMOOTH",
"-775 1310 OFFCURVE",
"-639 1310 QCURVE SMOOTH",
"-165 1310 LINE SMOOTH",
"-75 1310 OFFCURVE",
"-75 1375 QCURVE SMOOTH",
"-75 1760 LINE",
"-162 1760 LINE",
"-162 1541 LINE",
"-162 1541 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-133 1760 LINE",
"-133 1466 LINE",
"-194 1538 OFFCURVE",
"-283 1595 QCURVE SMOOTH",
"-416 1680 OFFCURVE",
"-548 1680 QCURVE SMOOTH",
"-775 1680 OFFCURVE",
"-775 1460 QCURVE SMOOTH",
"-775 1340 OFFCURVE",
"-668 1340 QCURVE SMOOTH",
"-171 1340 LINE SMOOTH",
"-75 1340 OFFCURVE",
"-75 1375 QCURVE SMOOTH",
"-75 1760 LINE",
"-75 1760 LINE"
);
},
{
closed = 1;
nodes = (
"-717 1622 OFFCURVE",
"-548 1622 QCURVE SMOOTH",
"-454 1622 OFFCURVE",
"-337 1556 QCURVE SMOOTH",
"-223 1492 OFFCURVE",
"-143 1398 QCURVE",
"-668 1398 LINE SMOOTH",
"-694 1398 OFFCURVE",
"-717 1429 OFFCURVE",
"-717 1460 QCURVE",
"-717 1460 LINE"
);
}
);
width = 0;
}
);
note = uni17B8.r;
},
{
glyphname = uni17B9.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-59 1547 LINE",
"-51 1561 LINE SMOOTH",
"-29 1602 OFFCURVE",
"-29 1659 QCURVE SMOOTH",
"-30 1680 LINE SMOOTH",
"-44 1880 OFFCURVE",
"-216 1880 QCURVE SMOOTH",
"-260 1880 OFFCURVE",
"-338 1835 OFFCURVE",
"-359 1794 QCURVE SMOOTH",
"-384 1744 LINE",
"-438 1760 OFFCURVE",
"-495 1760 QCURVE SMOOTH",
"-672 1760 OFFCURVE",
"-820 1606 OFFCURVE",
"-820 1490 QCURVE SMOOTH",
"-820 1481 LINE SMOOTH",
"-820 1290 OFFCURVE",
"-738 1290 QCURVE SMOOTH",
"-30 1290 LINE",
"-30 1520 LINE",
"-30 1520 LINE"
);
},
{
closed = 1;
nodes = (
"-211 1656 OFFCURVE",
"-256 1685 QCURVE SMOOTH",
"-257 1686 OFFCURVE",
"-260 1688 OFFCURVE",
"-263 1689 QCURVE",
"-258 1706 OFFCURVE",
"-248 1716 QCURVE",
"-234 1727 OFFCURVE",
"-216 1727 QCURVE SMOOTH",
"-169 1727 OFFCURVE",
"-169 1680 QCURVE SMOOTH",
"-169 1649 OFFCURVE",
"-174 1627 QCURVE",
"-174 1627 LINE"
);
},
{
closed = 1;
nodes = (
"-430 1580 OFFCURVE",
"-296 1545 OFFCURVE",
"-258 1500 QCURVE",
"-594 1500 LINE",
"-594 1531 OFFCURVE",
"-535 1580 OFFCURVE",
"-495 1580 QCURVE",
"-495 1580 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-446 1550 OFFCURVE",
"-301 1520 OFFCURVE",
"-258 1470 QCURVE",
"-594 1470 LINE",
"-594 1500 OFFCURVE",
"-536 1550 OFFCURVE",
"-495 1550 QCURVE",
"-495 1550 LINE"
);
},
{
closed = 1;
nodes = (
"-75 1524 OFFCURVE",
"-71 1531 QCURVE SMOOTH",
"-50 1578 OFFCURVE",
"-50 1650 QCURVE SMOOTH",
"-50 1850 OFFCURVE",
"-216 1850 QCURVE SMOOTH",
"-259 1850 OFFCURVE",
"-337 1806 OFFCURVE",
"-380 1722 OFFCURVE",
"-384 1714 QCURVE",
"-439 1730 OFFCURVE",
"-495 1730 QCURVE SMOOTH",
"-668 1730 OFFCURVE",
"-800 1560 OFFCURVE",
"-800 1460 QCURVE SMOOTH",
"-800 1290 OFFCURVE",
"-718 1290 QCURVE SMOOTH",
"-50 1290 LINE",
"-50 1490 LINE",
"-64 1504 OFFCURVE",
"-79 1517 QCURVE",
"-79 1517 LINE"
);
},
{
closed = 1;
nodes = (
"-213 1627 OFFCURVE",
"-256 1655 QCURVE SMOOTH",
"-259 1657 OFFCURVE",
"-263 1659 QCURVE",
"-259 1676 OFFCURVE",
"-248 1686 QCURVE SMOOTH",
"-235 1697 OFFCURVE",
"-216 1697 QCURVE SMOOTH",
"-169 1697 OFFCURVE",
"-169 1650 QCURVE SMOOTH",
"-169 1617 OFFCURVE",
"-174 1597 QCURVE",
"-174 1597 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-474 1570 OFFCURVE",
"-318 1510 OFFCURVE",
"-219 1430 QCURVE",
"-668 1430 LINE",
"-668 1510 OFFCURVE",
"-606 1570 OFFCURVE",
"-526 1570 QCURVE",
"-526 1570 LINE"
);
},
{
closed = 1;
nodes = (
"-78 1491 OFFCURVE",
"-73 1501 QCURVE SMOOTH",
"-50 1548 OFFCURVE",
"-50 1600 QCURVE SMOOTH",
"-50 1652 OFFCURVE",
"-99 1749 OFFCURVE",
"-183 1800 OFFCURVE",
"-228 1800 QCURVE SMOOTH",
"-273 1800 OFFCURVE",
"-358 1749 OFFCURVE",
"-382 1701 QCURVE SMOOTH",
"-387 1690 OFFCURVE",
"-391 1680 QCURVE",
"-458 1700 OFFCURVE",
"-526 1700 QCURVE SMOOTH",
"-659 1700 OFFCURVE",
"-800 1550 OFFCURVE",
"-800 1450 QCURVE SMOOTH",
"-800 1300 OFFCURVE",
"-712 1300 QCURVE SMOOTH",
"-50 1300 LINE",
"-50 1450 LINE",
"-66 1467 OFFCURVE",
"-84 1483 QCURVE",
"-84 1483 LINE"
);
},
{
closed = 1;
nodes = (
"-214 1591 OFFCURVE",
"-271 1625 QCURVE SMOOTH",
"-284 1633 OFFCURVE",
"-297 1640 QCURVE",
"-296 1642 OFFCURVE",
"-295 1644 QCURVE SMOOTH",
"-285 1664 OFFCURVE",
"-248 1687 OFFCURVE",
"-228 1687 QCURVE SMOOTH",
"-208 1687 OFFCURVE",
"-172 1664 OFFCURVE",
"-151 1623 OFFCURVE",
"-151 1600 QCURVE SMOOTH",
"-151 1577 OFFCURVE",
"-160 1557 QCURVE",
"-162 1554 OFFCURVE",
"-164 1551 QCURVE",
"-164 1551 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-301 1700 OFFCURVE",
"-243 1700 QCURVE SMOOTH",
"-162 1700 OFFCURVE",
"-162 1608 QCURVE SMOOTH",
"-162 1573 OFFCURVE",
"-173 1551 QCURVE",
"-215 1587 OFFCURVE",
"-270 1625 QCURVE SMOOTH",
"-294 1641 OFFCURVE",
"-318 1654 QCURVE",
"-318 1654 LINE"
);
},
{
closed = 1;
nodes = (
"-75 1528 OFFCURVE",
"-75 1608 QCURVE SMOOTH",
"-75 1798 OFFCURVE",
"-243 1798 QCURVE SMOOTH",
"-370 1798 OFFCURVE",
"-401 1690 QCURVE",
"-463 1710 OFFCURVE",
"-527 1710 QCURVE SMOOTH",
"-775 1710 OFFCURVE",
"-775 1460 QCURVE SMOOTH",
"-775 1310 OFFCURVE",
"-639 1310 QCURVE SMOOTH",
"-165 1310 LINE SMOOTH",
"-75 1310 OFFCURVE",
"-75 1375 QCURVE SMOOTH",
"-75 1408 LINE SMOOTH",
"-75 1440 OFFCURVE",
"-93 1465 QCURVE SMOOTH",
"-98 1473 OFFCURVE",
"-105 1481 QCURVE",
"-105 1481 LINE"
);
},
{
closed = 1;
nodes = (
"-429 1612 OFFCURVE",
"-320 1546 QCURVE SMOOTH",
"-211 1480 OFFCURVE",
"-165 1408 QCURVE",
"-639 1408 LINE SMOOTH",
"-688 1408 OFFCURVE",
"-688 1460 QCURVE SMOOTH",
"-688 1612 OFFCURVE",
"-527 1612 QCURVE",
"-527 1612 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-75 1517 OFFCURVE",
"-75 1615 QCURVE SMOOTH",
"-75 1785 OFFCURVE",
"-236 1785 QCURVE SMOOTH",
"-378 1785 OFFCURVE",
"-395 1651 QCURVE",
"-473 1680 OFFCURVE",
"-548 1680 QCURVE SMOOTH",
"-775 1680 OFFCURVE",
"-775 1460 QCURVE SMOOTH",
"-775 1340 OFFCURVE",
"-668 1340 QCURVE SMOOTH",
"-171 1340 LINE SMOOTH",
"-75 1340 OFFCURVE",
"-75 1375 QCURVE SMOOTH",
"-75 1408 OFFCURVE",
"-94 1435 QCURVE SMOOTH",
"-103 1449 OFFCURVE",
"-129 1475 QCURVE",
"-129 1475 LINE"
);
},
{
closed = 1;
nodes = (
"-335 1727 OFFCURVE",
"-236 1727 QCURVE SMOOTH",
"-130 1727 OFFCURVE",
"-130 1615 QCURVE SMOOTH",
"-130 1543 OFFCURVE",
"-174 1517 QCURVE",
"-225 1557 OFFCURVE",
"-283 1595 QCURVE SMOOTH",
"-315 1616 OFFCURVE",
"-342 1628 QCURVE",
"-342 1628 LINE"
);
},
{
closed = 1;
nodes = (
"-454 1622 OFFCURVE",
"-337 1556 QCURVE SMOOTH",
"-223 1492 OFFCURVE",
"-143 1398 QCURVE",
"-668 1398 LINE SMOOTH",
"-694 1398 OFFCURVE",
"-717 1429 OFFCURVE",
"-717 1460 QCURVE SMOOTH",
"-717 1622 OFFCURVE",
"-548 1622 QCURVE",
"-548 1622 LINE"
);
}
);
width = 0;
}
);
note = uni17B9.r;
},
{
glyphname = uni17BA.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-273 1695 LINE",
"-273 1890 LINE",
"-436 1890 LINE",
"-436 1756 LINE",
"-461 1760 OFFCURVE",
"-495 1760 QCURVE SMOOTH",
"-672 1760 OFFCURVE",
"-820 1606 OFFCURVE",
"-820 1490 QCURVE SMOOTH",
"-820 1290 OFFCURVE",
"-738 1290 QCURVE SMOOTH",
"-30 1290 LINE",
"-30 1830 LINE",
"-213 1830 LINE",
"-213 1656 LINE",
"-241 1676 OFFCURVE",
"-256 1685 QCURVE",
"-256 1685 LINE"
);
},
{
closed = 1;
nodes = (
"-594 1500 LINE",
"-594 1531 OFFCURVE",
"-535 1580 OFFCURVE",
"-495 1580 QCURVE SMOOTH",
"-430 1580 OFFCURVE",
"-296 1545 OFFCURVE",
"-258 1500 QCURVE",
"-258 1500 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-594 1500 OFFCURVE",
"-536 1550 OFFCURVE",
"-495 1550 QCURVE SMOOTH",
"-446 1550 OFFCURVE",
"-301 1520 OFFCURVE",
"-258 1470 QCURVE",
"-594 1470 LINE",
"-594 1470 LINE"
);
},
{
closed = 1;
nodes = (
"-273 1860 LINE",
"-436 1860 LINE",
"-436 1726 LINE",
"-465 1730 OFFCURVE",
"-495 1730 QCURVE SMOOTH",
"-668 1730 OFFCURVE",
"-800 1560 OFFCURVE",
"-800 1460 QCURVE SMOOTH",
"-800 1290 OFFCURVE",
"-718 1290 QCURVE SMOOTH",
"-50 1290 LINE",
"-50 1800 LINE",
"-213 1800 LINE",
"-213 1626 LINE",
"-234 1641 OFFCURVE",
"-256 1655 QCURVE SMOOTH",
"-264 1660 OFFCURVE",
"-273 1665 QCURVE",
"-273 1665 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-474 1570 OFFCURVE",
"-318 1510 OFFCURVE",
"-219 1430 QCURVE",
"-668 1430 LINE",
"-668 1510 OFFCURVE",
"-606 1570 OFFCURVE",
"-526 1570 QCURVE",
"-526 1570 LINE"
);
},
{
closed = 1;
nodes = (
"-444 1700 OFFCURVE",
"-526 1700 QCURVE SMOOTH",
"-659 1700 OFFCURVE",
"-800 1550 OFFCURVE",
"-800 1450 QCURVE SMOOTH",
"-800 1300 OFFCURVE",
"-712 1300 QCURVE SMOOTH",
"-50 1300 LINE",
"-50 1750 LINE",
"-172 1750 LINE",
"-172 1558 LINE",
"-207 1584 OFFCURVE",
"-244 1608 QCURVE",
"-244 1800 LINE",
"-366 1800 LINE",
"-366 1671 LINE",
"-366 1671 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-688 1612 OFFCURVE",
"-527 1612 QCURVE SMOOTH",
"-429 1612 OFFCURVE",
"-320 1546 QCURVE SMOOTH",
"-211 1480 OFFCURVE",
"-165 1408 QCURVE",
"-639 1408 LINE SMOOTH",
"-688 1408 OFFCURVE",
"-688 1460 QCURVE",
"-688 1460 LINE"
);
},
{
closed = 1;
nodes = (
"-252 1800 LINE",
"-339 1800 LINE",
"-339 1665 LINE",
"-431 1710 OFFCURVE",
"-527 1710 QCURVE SMOOTH",
"-775 1710 OFFCURVE",
"-775 1460 QCURVE SMOOTH",
"-775 1310 OFFCURVE",
"-639 1310 QCURVE SMOOTH",
"-165 1310 LINE SMOOTH",
"-75 1310 OFFCURVE",
"-75 1375 QCURVE SMOOTH",
"-75 1760 LINE",
"-162 1760 LINE",
"-162 1541 LINE",
"-201 1576 OFFCURVE",
"-252 1613 QCURVE",
"-252 1613 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-245 1790 LINE",
"-300 1790 LINE",
"-300 1606 LINE",
"-425 1680 OFFCURVE",
"-548 1680 QCURVE SMOOTH",
"-775 1680 OFFCURVE",
"-775 1460 QCURVE SMOOTH",
"-775 1340 OFFCURVE",
"-668 1340 QCURVE SMOOTH",
"-171 1340 LINE SMOOTH",
"-75 1340 OFFCURVE",
"-75 1375 QCURVE SMOOTH",
"-75 1760 LINE",
"-130 1760 LINE",
"-130 1466 LINE",
"-176 1519 OFFCURVE",
"-245 1569 QCURVE",
"-245 1569 LINE"
);
},
{
closed = 1;
nodes = (
"-720 1622 OFFCURVE",
"-548 1622 QCURVE SMOOTH",
"-454 1622 OFFCURVE",
"-337 1556 QCURVE SMOOTH",
"-223 1492 OFFCURVE",
"-143 1398 QCURVE",
"-668 1398 LINE SMOOTH",
"-720 1398 OFFCURVE",
"-720 1460 QCURVE",
"-720 1460 LINE"
);
}
);
width = 0;
}
);
note = uni17BA.r;
},
{
glyphname = uni17C6.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-654 1785 OFFCURVE",
"-654 1535 QCURVE SMOOTH",
"-654 1285 OFFCURVE",
"-344 1285 QCURVE SMOOTH",
"-34 1285 OFFCURVE",
"-34 1535 QCURVE SMOOTH",
"-34 1785 OFFCURVE",
"-344 1785 QCURVE",
"-344 1785 LINE"
);
},
{
closed = 1;
nodes = (
"-269 1610 OFFCURVE",
"-269 1535 QCURVE SMOOTH",
"-269 1460 OFFCURVE",
"-344 1460 QCURVE SMOOTH",
"-419 1460 OFFCURVE",
"-419 1535 QCURVE SMOOTH",
"-419 1610 OFFCURVE",
"-344 1610 QCURVE",
"-344 1610 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-269 1610 OFFCURVE",
"-269 1535 QCURVE SMOOTH",
"-269 1460 OFFCURVE",
"-344 1460 QCURVE SMOOTH",
"-419 1460 OFFCURVE",
"-419 1535 QCURVE SMOOTH",
"-419 1610 OFFCURVE",
"-344 1610 QCURVE",
"-344 1610 LINE"
);
},
{
closed = 1;
nodes = (
"-594 1785 OFFCURVE",
"-594 1535 QCURVE SMOOTH",
"-594 1285 OFFCURVE",
"-344 1285 QCURVE SMOOTH",
"-94 1285 OFFCURVE",
"-94 1535 QCURVE SMOOTH",
"-94 1785 OFFCURVE",
"-344 1785 QCURVE",
"-344 1785 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-357 1615 OFFCURVE",
"-314 1592 OFFCURVE",
"-290 1548 OFFCURVE",
"-290 1525 QCURVE SMOOTH",
"-290 1502 OFFCURVE",
"-313 1458 OFFCURVE",
"-357 1435 OFFCURVE",
"-380 1435 QCURVE SMOOTH",
"-403 1435 OFFCURVE",
"-446 1458 OFFCURVE",
"-470 1502 OFFCURVE",
"-470 1525 QCURVE SMOOTH",
"-470 1548 OFFCURVE",
"-446 1592 OFFCURVE",
"-403 1615 OFFCURVE",
"-380 1615 QCURVE",
"-380 1615 LINE"
);
},
{
closed = 1;
nodes = (
"-437 1750 OFFCURVE",
"-544 1692 OFFCURVE",
"-605 1584 OFFCURVE",
"-605 1525 QCURVE SMOOTH",
"-605 1466 OFFCURVE",
"-545 1359 OFFCURVE",
"-438 1300 OFFCURVE",
"-380 1300 QCURVE SMOOTH",
"-321 1300 OFFCURVE",
"-214 1359 OFFCURVE",
"-155 1466 OFFCURVE",
"-155 1525 QCURVE SMOOTH",
"-155 1584 OFFCURVE",
"-216 1692 OFFCURVE",
"-323 1750 OFFCURVE",
"-380 1750 QCURVE",
"-380 1750 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-374 1627 OFFCURVE",
"-325 1601 OFFCURVE",
"-298 1551 OFFCURVE",
"-298 1525 QCURVE SMOOTH",
"-298 1499 OFFCURVE",
"-324 1449 OFFCURVE",
"-374 1423 OFFCURVE",
"-400 1423 QCURVE SMOOTH",
"-426 1423 OFFCURVE",
"-475 1449 OFFCURVE",
"-502 1499 OFFCURVE",
"-502 1525 QCURVE SMOOTH",
"-502 1551 OFFCURVE",
"-475 1601 OFFCURVE",
"-426 1627 OFFCURVE",
"-400 1627 QCURVE",
"-400 1627 LINE"
);
},
{
closed = 1;
nodes = (
"-451 1725 OFFCURVE",
"-546 1673 OFFCURVE",
"-600 1577 OFFCURVE",
"-600 1525 QCURVE SMOOTH",
"-600 1473 OFFCURVE",
"-547 1377 OFFCURVE",
"-452 1325 OFFCURVE",
"-400 1325 QCURVE SMOOTH",
"-348 1325 OFFCURVE",
"-252 1377 OFFCURVE",
"-200 1473 OFFCURVE",
"-200 1525 QCURVE SMOOTH",
"-200 1577 OFFCURVE",
"-254 1673 OFFCURVE",
"-349 1725 OFFCURVE",
"-400 1725 QCURVE",
"-400 1725 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-452 1725 OFFCURVE",
"-547 1672 OFFCURVE",
"-573 1625 QCURVE SMOOTH",
"-600 1577 OFFCURVE",
"-600 1525 QCURVE SMOOTH",
"-600 1472 OFFCURVE",
"-546 1377 OFFCURVE",
"-500 1351 QCURVE SMOOTH",
"-454 1325 OFFCURVE",
"-400 1325 QCURVE SMOOTH",
"-347 1325 OFFCURVE",
"-251 1378 OFFCURVE",
"-226 1425 QCURVE SMOOTH",
"-200 1474 OFFCURVE",
"-200 1525 QCURVE SMOOTH",
"-200 1578 OFFCURVE",
"-255 1673 OFFCURVE",
"-302 1699 QCURVE SMOOTH",
"-349 1725 OFFCURVE",
"-400 1725 QCURVE",
"-400 1725 LINE"
);
},
{
closed = 1;
nodes = (
"-362 1667 OFFCURVE",
"-295 1630 OFFCURVE",
"-277 1596 QCURVE SMOOTH",
"-258 1560 OFFCURVE",
"-258 1525 QCURVE SMOOTH",
"-258 1487 OFFCURVE",
"-295 1418 OFFCURVE",
"-329 1401 QCURVE SMOOTH",
"-364 1383 OFFCURVE",
"-400 1383 QCURVE SMOOTH",
"-438 1383 OFFCURVE",
"-505 1420 OFFCURVE",
"-523 1454 QCURVE SMOOTH",
"-542 1490 OFFCURVE",
"-542 1525 QCURVE SMOOTH",
"-542 1562 OFFCURVE",
"-503 1631 OFFCURVE",
"-470 1649 QCURVE SMOOTH",
"-435 1667 OFFCURVE",
"-400 1667 QCURVE",
"-400 1667 LINE"
);
}
);
width = 0;
}
);
note = uni17C6.r;
},
{
glyphname = uni17C9.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-850 1300 LINE",
"-540 1300 LINE",
"-540 1700 LINE",
"-850 1700 LINE",
"-850 1700 LINE"
);
},
{
closed = 1;
nodes = (
"-420 1300 LINE",
"-110 1300 LINE",
"-110 1700 LINE",
"-420 1700 LINE",
"-420 1700 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-540 1300 LINE",
"-540 1700 LINE",
"-790 1700 LINE",
"-790 1300 LINE",
"-790 1300 LINE"
);
},
{
closed = 1;
nodes = (
"-170 1300 LINE",
"-170 1700 LINE",
"-420 1700 LINE",
"-420 1300 LINE",
"-420 1300 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-450 1300 LINE",
"-450 1700 LINE",
"-600 1700 LINE",
"-600 1300 LINE",
"-600 1300 LINE"
);
},
{
closed = 1;
nodes = (
"-140 1300 LINE",
"-140 1700 LINE",
"-290 1700 LINE",
"-290 1300 LINE",
"-290 1300 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */\0122 1 0 1 1 0 87 2 1 0 0 1 95 5 3 4 3 1 0 1 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 7 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-556 1300 LINE",
"-556 1700 LINE",
"-654 1700 LINE",
"-654 1300 LINE",
"-654 1300 LINE"
);
},
{
closed = 1;
nodes = (
"-246 1300 LINE",
"-246 1700 LINE",
"-344 1700 LINE",
"-344 1300 LINE",
"-344 1300 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-634 1300 LINE",
"-576 1300 LINE",
"-576 1700 LINE",
"-634 1700 LINE",
"-634 1700 LINE"
);
},
{
closed = 1;
nodes = (
"-324 1300 LINE",
"-266 1300 LINE",
"-266 1700 LINE",
"-324 1700 LINE",
"-324 1700 LINE"
);
}
);
width = 0;
}
);
note = uni17C9.r;
},
{
glyphname = uni17CD.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-472 1550 OFFCURVE",
"-383 1550 QCURVE SMOOTH",
"-361 1550 LINE SMOOTH",
"40 1550 OFFCURVE",
"40 1858 QCURVE SMOOTH",
"40 1860 LINE",
"-287 1860 LINE",
"-287 1760 OFFCURVE",
"-361 1760 QCURVE SMOOTH",
"-383 1760 LINE SMOOTH",
"-800 1760 OFFCURVE",
"-800 1510 QCURVE SMOOTH",
"-800 1280 OFFCURVE",
"-432 1280 QCURVE",
"-432 1470 LINE",
"-472 1470 OFFCURVE",
"-472 1510 QCURVE",
"-472 1510 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-502 1520 OFFCURVE",
"-383 1520 QCURVE SMOOTH",
"-361 1520 LINE SMOOTH",
"10 1520 OFFCURVE",
"10 1800 QCURVE",
"-257 1800 LINE",
"-257 1700 OFFCURVE",
"-361 1700 QCURVE SMOOTH",
"-383 1700 LINE SMOOTH",
"-770 1700 OFFCURVE",
"-770 1480 QCURVE SMOOTH",
"-770 1280 OFFCURVE",
"-432 1280 QCURVE",
"-432 1440 LINE",
"-502 1440 OFFCURVE",
"-502 1480 QCURVE",
"-502 1480 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-452 1520 OFFCURVE",
"-333 1520 QCURVE SMOOTH",
"0 1520 OFFCURVE",
"0 1800 QCURVE",
"-147 1800 LINE",
"-147 1650 OFFCURVE",
"-333 1650 QCURVE SMOOTH",
"-600 1650 OFFCURVE",
"-600 1455 QCURVE SMOOTH",
"-600 1300 OFFCURVE",
"-357 1300 QCURVE SMOOTH",
"-292 1300 LINE",
"-292 1410 LINE",
"-357 1410 LINE SMOOTH",
"-452 1410 OFFCURVE",
"-452 1455 QCURVE",
"-452 1455 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-542 1540 OFFCURVE",
"-413 1540 QCURVE SMOOTH",
"-281 1540 LINE SMOOTH",
"-30 1540 OFFCURVE",
"-30 1800 QCURVE",
"-128 1800 LINE",
"-128 1638 OFFCURVE",
"-281 1638 QCURVE SMOOTH",
"-413 1638 LINE SMOOTH",
"-650 1638 OFFCURVE",
"-650 1469 QCURVE SMOOTH",
"-650 1300 OFFCURVE",
"-437 1300 QCURVE SMOOTH",
"-372 1300 LINE",
"-372 1398 LINE",
"-437 1398 LINE SMOOTH",
"-542 1398 OFFCURVE",
"-542 1469 QCURVE",
"-542 1469 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-611 1570 OFFCURVE",
"-462 1570 QCURVE SMOOTH",
"-321 1570 LINE SMOOTH",
"-20 1570 OFFCURVE",
"-20 1800 QCURVE",
"-78 1800 LINE",
"-78 1628 OFFCURVE",
"-321 1628 QCURVE SMOOTH",
"-462 1628 LINE SMOOTH",
"-669 1628 OFFCURVE",
"-669 1469 QCURVE SMOOTH",
"-669 1310 OFFCURVE",
"-486 1310 QCURVE SMOOTH",
"-421 1310 LINE",
"-421 1368 LINE",
"-486 1368 LINE SMOOTH",
"-611 1368 OFFCURVE",
"-611 1469 QCURVE",
"-611 1469 LINE"
);
}
);
width = 0;
}
);
note = uni17CD.r;
},
{
glyphname = uni17B717CD.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-551 1580 OFFCURVE",
"-399 1550 OFFCURVE",
"-355 1500 QCURVE",
"-705 1500 LINE",
"-705 1530 OFFCURVE",
"-645 1580 OFFCURVE",
"-602 1580 QCURVE",
"-602 1580 LINE"
);
},
{
closed = 1;
nodes = (
"-221 1650 OFFCURVE",
"-171 1650 QCURVE SMOOTH",
"85 1650 OFFCURVE",
"85 1900 QCURVE",
"-144 1900 LINE",
"-144 1830 OFFCURVE",
"-201 1830 QCURVE SMOOTH",
"-391 1830 OFFCURVE",
"-457 1735 QCURVE",
"-526 1760 OFFCURVE",
"-602 1760 QCURVE SMOOTH",
"-717 1760 OFFCURVE",
"-874 1683 OFFCURVE",
"-950 1560 OFFCURVE",
"-950 1490 QCURVE SMOOTH",
"-950 1481 LINE SMOOTH",
"-950 1290 OFFCURVE",
"-864 1290 QCURVE SMOOTH",
"-108 1290 LINE",
"-108 1520 LINE",
"-162 1571 OFFCURVE",
"-229 1621 QCURVE",
"-229 1621 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-251 1620 OFFCURVE",
"-201 1620 QCURVE SMOOTH",
"85 1620 OFFCURVE",
"85 1900 QCURVE",
"-144 1900 LINE",
"-144 1800 OFFCURVE",
"-201 1800 QCURVE SMOOTH",
"-391 1800 OFFCURVE",
"-457 1705 QCURVE",
"-528 1730 OFFCURVE",
"-602 1730 QCURVE SMOOTH",
"-783 1730 OFFCURVE",
"-920 1560 OFFCURVE",
"-920 1460 QCURVE SMOOTH",
"-920 1290 OFFCURVE",
"-834 1290 QCURVE SMOOTH",
"-138 1290 LINE",
"-138 1490 LINE",
"-194 1543 OFFCURVE",
"-259 1591 QCURVE",
"-259 1591 LINE"
);
},
{
closed = 1;
nodes = (
"-551 1550 OFFCURVE",
"-399 1520 OFFCURVE",
"-355 1470 QCURVE",
"-705 1470 LINE",
"-705 1500 OFFCURVE",
"-645 1550 OFFCURVE",
"-602 1550 QCURVE",
"-602 1550 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-156 1550 LINE",
"-180 1574 OFFCURVE",
"-205 1597 QCURVE",
"-194 1620 OFFCURVE",
"-168 1620 QCURVE SMOOTH",
"50 1620 OFFCURVE",
"50 1850 QCURVE SMOOTH",
"50 1900 LINE",
"-82 1900 LINE",
"-82 1750 OFFCURVE",
"-168 1750 QCURVE SMOOTH",
"-269 1750 OFFCURVE",
"-312 1686 QCURVE",
"-339 1706 OFFCURVE",
"-367 1725 QCURVE SMOOTH",
"-480 1800 OFFCURVE",
"-569 1800 QCURVE SMOOTH",
"-659 1800 OFFCURVE",
"-802 1650 OFFCURVE",
"-802 1550 QCURVE SMOOTH",
"-802 1400 OFFCURVE",
"-712 1400 QCURVE SMOOTH",
"-37 1400 LINE",
"-37 1510 LINE",
"-113 1510 OFFCURVE",
"-156 1519 QCURVE",
"-156 1519 LINE"
);
},
{
closed = 1;
nodes = (
"-667 1530 LINE",
"-667 1610 OFFCURVE",
"-605 1670 OFFCURVE",
"-569 1670 QCURVE SMOOTH",
"-515 1670 OFFCURVE",
"-472 1640 QCURVE SMOOTH",
"-433 1612 OFFCURVE",
"-344 1542 QCURVE",
"-344 1536 OFFCURVE",
"-343 1530 QCURVE",
"-343 1530 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-134 1518 LINE",
"-223 1518 OFFCURVE",
"-223 1589 QCURVE SMOOTH",
"-223 1660 OFFCURVE",
"-113 1660 QCURVE SMOOTH",
"67 1660 OFFCURVE",
"67 1840 QCURVE",
"-16 1840 LINE",
"-16 1758 OFFCURVE",
"-113 1758 QCURVE SMOOTH",
"-293 1758 OFFCURVE",
"-312 1623 QCURVE",
"-313 1624 OFFCURVE",
"-314 1625 QCURVE SMOOTH",
"-434 1710 OFFCURVE",
"-560 1710 QCURVE SMOOTH",
"-797 1710 OFFCURVE",
"-797 1460 QCURVE SMOOTH",
"-797 1310 OFFCURVE",
"-667 1310 QCURVE SMOOTH",
"-214 1310 LINE SMOOTH",
"-128 1310 OFFCURVE",
"-128 1375 QCURVE SMOOTH",
"-128 1408 LINE SMOOTH",
"-128 1427 OFFCURVE",
"-134 1443 QCURVE",
"-134 1443 LINE"
);
},
{
closed = 1;
nodes = (
"-467 1612 OFFCURVE",
"-362 1546 QCURVE SMOOTH",
"-258 1480 OFFCURVE",
"-214 1408 QCURVE",
"-667 1408 LINE SMOOTH",
"-714 1408 OFFCURVE",
"-714 1460 QCURVE SMOOTH",
"-714 1612 OFFCURVE",
"-560 1612 QCURVE",
"-560 1612 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"64 1840 LINE",
"64 1785 OFFCURVE",
"1 1728 OFFCURVE",
"-51 1728 QCURVE SMOOTH",
"-114 1728 OFFCURVE",
"-197 1657 OFFCURVE",
"-232 1606 QCURVE SMOOTH",
"-234 1603 OFFCURVE",
"-242 1592 OFFCURVE",
"-246 1587 QCURVE SMOOTH",
"-249 1584 OFFCURVE",
"-251 1584 QCURVE SMOOTH",
"-252 1584 OFFCURVE",
"-253 1586 QCURVE",
"-252 1572 LINE",
"-260 1578 OFFCURVE",
"-288 1595 QCURVE SMOOTH",
"-359 1639 OFFCURVE",
"-489 1680 OFFCURVE",
"-558 1680 QCURVE SMOOTH",
"-652 1680 OFFCURVE",
"-768 1567 OFFCURVE",
"-768 1460 QCURVE SMOOTH",
"-768 1340 OFFCURVE",
"-655 1340 QCURVE SMOOTH",
"-170 1340 LINE SMOOTH",
"-68 1340 OFFCURVE",
"-68 1375 QCURVE SMOOTH",
"-68 1391 OFFCURVE",
"-73 1408 QCURVE",
"-68 1408 LINE",
"-75 1498 LINE",
"-180 1498 OFFCURVE",
"-180 1589 QCURVE SMOOTH",
"-180 1632 OFFCURVE",
"-126 1670 OFFCURVE",
"-51 1670 QCURVE SMOOTH",
"30 1670 OFFCURVE",
"122 1757 OFFCURVE",
"122 1840 QCURVE",
"122 1840 LINE"
);
},
{
closed = 1;
nodes = (
"-258 1625 LINE",
"-256 1605 OFFCURVE",
"-255 1604 QCURVE",
"-255 1604 LINE"
);
},
{
closed = 1;
nodes = (
"-655 1398 LINE SMOOTH",
"-710 1398 OFFCURVE",
"-710 1460 QCURVE SMOOTH",
"-710 1537 OFFCURVE",
"-623 1622 OFFCURVE",
"-558 1622 QCURVE SMOOTH",
"-509 1622 OFFCURVE",
"-408 1590 OFFCURVE",
"-345 1556 QCURVE SMOOTH",
"-224 1491 OFFCURVE",
"-140 1398 QCURVE",
"-140 1398 LINE"
);
}
);
width = 0;
}
);
note = uni17B717CD.r;
},
{
glyphname = uni17D2178A.n;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1807 -325 LINE SMOOTH",
"-1807 -480 OFFCURVE",
"-1530 -480 QCURVE SMOOTH",
"-1313 -480 LINE",
"-1313 -325 LINE",
"-1459 -325 LINE",
"-1459 -291 LINE SMOOTH",
"-1459 -212 OFFCURVE",
"-1287 -212 QCURVE SMOOTH",
"-1115 -212 OFFCURVE",
"-1115 -291 QCURVE SMOOTH",
"-1115 -480 LINE",
"-767 -480 LINE",
"-767 -291 LINE SMOOTH",
"-767 -50 OFFCURVE",
"-1287 -50 QCURVE SMOOTH",
"-1807 -50 OFFCURVE",
"-1807 -291 QCURVE",
"-1807 -291 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, -640, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, -640, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, -630, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, -640, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2178A.n;
},
{
glyphname = uni17D2178B.n;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1807 -100 LINE",
"-1807 -480 LINE",
"-1447 -480 LINE",
"-1284 -419 LINE",
"-1121 -480 LINE",
"-761 -480 LINE",
"-761 -250 LINE",
"-672 -250 LINE",
"-672 -100 LINE",
"-761 -100 LINE",
"-761 -50 LINE",
"-1121 -50 LINE",
"-1121 -100 LINE",
"-1121 -100 LINE"
);
},
{
closed = 1;
nodes = (
"-1121 -323 LINE",
"-1284 -275 LINE",
"-1447 -323 LINE",
"-1447 -250 LINE",
"-1121 -250 LINE",
"-1121 -250 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17D2178B;
transform = "{1, 0, 0, 1, -640, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2178B;
transform = "{1, 0, 0, 1, -660, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2178B;
transform = "{1, 0, 0, 1, -640, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2178B;
transform = "{1, 0, 0, 1, -640, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2178B.n;
},
{
glyphname = uni17D2178C.n;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-768 -50 LINE",
"-1127 -50 LINE",
"-1288 -130 LINE",
"-1449 -50 LINE",
"-1808 -50 LINE",
"-1808 -225 LINE",
"-1449 -225 LINE",
"-1449 -164 LINE",
"-1288 -228 LINE",
"-1127 -164 LINE",
"-1127 -191 LINE SMOOTH",
"-1127 -252 OFFCURVE",
"-1808 -283 QCURVE",
"-1808 -480 LINE",
"-1439 -480 LINE",
"-1127 -435 LINE",
"-1127 -480 LINE",
"-768 -480 LINE",
"-768 -308 LINE",
"-1127 -308 LINE",
"-1127 -346 LINE",
"-1449 -390 LINE",
"-1449 -346 LINE",
"-768 -260 OFFCURVE",
"-768 -194 QCURVE",
"-768 -194 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17D2178C;
transform = "{1, 0, 0, 1, -640, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2178C;
transform = "{1, 0, 0, 1, -640, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2178C;
transform = "{1, 0, 0, 1, -640, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2178C;
transform = "{1, 0, 0, 1, -630, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2178C.n;
},
{
glyphname = uni17D217A0.n;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1509 -317 OFFCURVE",
"-1509 -278 QCURVE SMOOTH",
"-1509 -50 LINE",
"-1837 -50 LINE",
"-1837 -278 LINE SMOOTH",
"-1837 -480 OFFCURVE",
"-1470 -480 QCURVE SMOOTH",
"-1163 -480 OFFCURVE",
"-1163 -278 QCURVE SMOOTH",
"-1163 -252 LINE SMOOTH",
"-1163 -213 OFFCURVE",
"-1114 -213 QCURVE SMOOTH",
"-1065 -213 OFFCURVE",
"-1065 -252 QCURVE SMOOTH",
"-1065 -480 LINE",
"-737 -480 LINE",
"-737 -252 LINE SMOOTH",
"-737 -50 OFFCURVE",
"-1104 -50 QCURVE SMOOTH",
"-1411 -50 OFFCURVE",
"-1411 -252 QCURVE SMOOTH",
"-1411 -278 LINE SMOOTH",
"-1411 -317 OFFCURVE",
"-1460 -317 QCURVE",
"-1460 -317 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -640, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -650, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2179B;
transform = "{1, 0, 0, 1, -630, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -630, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D217A0.n;
},
{
glyphname = uni17D2178A.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1020 -325 LINE SMOOTH",
"-1020 -480 OFFCURVE",
"-743 -480 QCURVE SMOOTH",
"-526 -480 LINE",
"-526 -325 LINE",
"-672 -325 LINE",
"-672 -291 LINE SMOOTH",
"-672 -212 OFFCURVE",
"-500 -212 QCURVE SMOOTH",
"-328 -212 OFFCURVE",
"-328 -291 QCURVE SMOOTH",
"-328 -480 LINE",
"20 -480 LINE",
"20 -291 LINE SMOOTH",
"20 -50 OFFCURVE",
"-500 -50 QCURVE SMOOTH",
"-1020 -50 OFFCURVE",
"-1020 -291 QCURVE",
"-1020 -291 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, 190, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, 250, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, 280, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, 320, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2178A.r;
},
{
glyphname = uni17D21797.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1117 -300 LINE",
"-1117 -480 LINE",
"-682 -480 LINE",
"-682 -271 LINE SMOOTH",
"-682 -192 OFFCURVE",
"-510 -192 QCURVE SMOOTH",
"-338 -192 OFFCURVE",
"-338 -271 QCURVE SMOOTH",
"-338 -480 LINE",
"10 -480 LINE",
"10 -271 LINE SMOOTH",
"10 -50 OFFCURVE",
"-510 -50 QCURVE SMOOTH",
"-1030 -50 OFFCURVE",
"-1030 -271 QCURVE SMOOTH",
"-1030 -300 LINE",
"-1030 -300 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17D21797;
transform = "{1, 0, 0, 1, 190, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21797;
transform = "{1, 0, 0, 1, 250, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21797;
transform = "{1, 0, 0, 1, 280, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21797;
transform = "{1, 0, 0, 1, 310, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21797.r;
},
{
glyphname = uni17D21798.r;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"57 -50 LINE",
"-286 -50 LINE",
"-286 -166 LINE",
"-950 -166 LINE",
"-950 -377 LINE",
"-286 -377 LINE",
"-286 -480 OFFCURVE",
"-53 -480 QCURVE SMOOTH",
"180 -480 OFFCURVE",
"180 -322 QCURVE SMOOTH",
"180 -166 OFFCURVE",
"57 -166 QCURVE",
"57 -166 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, 200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, 270, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, 250, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21798.r;
},
{
glyphname = uni17BB.n;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-780 -70 LINE",
"-1223 -70 LINE",
"-1223 -230 LINE",
"-1148 -230 LINE",
"-1148 -500 LINE",
"-780 -500 LINE",
"-780 -500 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BB;
transform = "{1, 0, 0, 1, -660, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1143 -70 LINE",
"-1143 -170 LINE",
"-1038 -170 LINE",
"-1038 -500 LINE",
"-850 -500 LINE",
"-850 -70 LINE",
"-850 -70 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 15 values pushed */\0123 1 2 0 1 0 2 1 103 0 0 0 20 0 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 17 values pushed */\0120 1 1 2 95 3 1 2 2 18 77 0 0 0 20 0 78 \012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 11 values pushed */\0120 0 0 5 0 5 17 17 4 7 24 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
components = (
{
name = uni17BB;
transform = "{1, 0, 0, 1, -670, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BB;
transform = "{1, 0, 0, 1, -670, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BB.n;
},
{
glyphname = uni17BC.n;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1252 -70 LINE",
"-1580 -70 LINE",
"-1580 -290 LINE SMOOTH",
"-1580 -500 OFFCURVE",
"-1180 -500 QCURVE SMOOTH",
"-979 -500 OFFCURVE",
"-780 -396 OFFCURVE",
"-780 -290 QCURVE SMOOTH",
"-780 -70 LINE",
"-1108 -70 LINE",
"-1108 -290 LINE SMOOTH",
"-1108 -340 OFFCURVE",
"-1180 -340 QCURVE SMOOTH",
"-1252 -340 OFFCURVE",
"-1252 -290 QCURVE",
"-1252 -290 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, -660, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1450 -290 LINE SMOOTH",
"-1450 -500 OFFCURVE",
"-1150 -500 QCURVE SMOOTH",
"-850 -500 OFFCURVE",
"-850 -290 QCURVE SMOOTH",
"-850 -70 LINE",
"-1028 -70 LINE",
"-1028 -290 LINE SMOOTH",
"-1028 -380 OFFCURVE",
"-1150 -380 QCURVE SMOOTH",
"-1272 -380 OFFCURVE",
"-1272 -290 QCURVE SMOOTH",
"-1272 -70 LINE",
"-1450 -70 LINE",
"-1450 -70 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, -670, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, -670, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BC.n;
},
{
glyphname = uni17BD.n;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1630 -70 LINE",
"-1630 -500 LINE",
"-1280 -500 LINE",
"-1205 -400 LINE",
"-1130 -500 LINE",
"-780 -500 LINE",
"-780 -70 LINE",
"-1108 -70 LINE",
"-1108 -300 LINE",
"-1205 -200 LINE",
"-1302 -300 LINE",
"-1302 -70 LINE",
"-1302 -70 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, -670, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1500 -500 LINE",
"-1300 -500 LINE",
"-1175 -370 LINE",
"-1050 -500 LINE",
"-850 -500 LINE",
"-850 -70 LINE",
"-1028 -70 LINE",
"-1028 -360 LINE",
"-1175 -230 LINE",
"-1322 -360 LINE",
"-1322 -70 LINE",
"-1500 -70 LINE",
"-1500 -70 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */\0129 4 3 2 4 2 0 1 76 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 13 values pushed */\0121 1 0 0 2 95 3 1 2 2 20 2 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 13 values pushed */\0121 1 0 0 18 77 3 1 2 2 20 2 78 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 7 values pushed */\01218 17 20 16 4 7 26 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, -680, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, -670, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BD.n;
},
{
glyphname = uni17BB.n2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17BB;
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17BB;
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-493 -70 LINE",
"-493 -170 LINE",
"-388 -170 LINE",
"-388 -500 LINE",
"-200 -500 LINE",
"-200 -70 LINE",
"-200 -70 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 15 values pushed */\0123 1 2 0 1 0 2 1 103 0 0 0 20 0 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 17 values pushed */\0120 1 1 2 95 3 1 2 2 18 77 0 0 0 20 0 78 \012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 11 values pushed */\0120 0 0 5 0 5 17 17 4 7 24 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
components = (
{
name = uni17BB;
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BB;
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BB.n2;
},
{
glyphname = uni17BC.n2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17BC;
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17BC;
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-800 -290 LINE SMOOTH",
"-800 -500 OFFCURVE",
"-500 -500 QCURVE SMOOTH",
"-200 -500 OFFCURVE",
"-200 -290 QCURVE SMOOTH",
"-200 -70 LINE",
"-378 -70 LINE",
"-378 -290 LINE SMOOTH",
"-378 -380 OFFCURVE",
"-500 -380 QCURVE SMOOTH",
"-622 -380 OFFCURVE",
"-622 -290 QCURVE SMOOTH",
"-622 -70 LINE",
"-800 -70 LINE",
"-800 -70 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BC;
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BC;
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BC.n2;
},
{
glyphname = uni17BD.n2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17BD;
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17BD;
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-850 -500 LINE",
"-650 -500 LINE",
"-525 -370 LINE",
"-400 -500 LINE",
"-200 -500 LINE",
"-200 -70 LINE",
"-378 -70 LINE",
"-378 -360 LINE",
"-525 -230 LINE",
"-672 -360 LINE",
"-672 -70 LINE",
"-850 -70 LINE",
"-850 -70 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */\0129 4 3 2 4 2 0 1 76 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 13 values pushed */\0121 1 0 0 2 95 3 1 2 2 20 2 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 13 values pushed */\0121 1 0 0 18 77 3 1 2 2 20 2 78 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 7 values pushed */\01218 17 20 16 4 7 26 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
components = (
{
name = uni17BD;
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BD;
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BD.n2;
},
{
glyphname = uni17D21798.b;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1223 -70 LINE",
"-1566 -70 LINE",
"-1566 -186 LINE",
"-2230 -186 LINE",
"-2230 -397 LINE",
"-1566 -397 LINE",
"-1566 -500 OFFCURVE",
"-1333 -500 QCURVE SMOOTH",
"-1100 -500 OFFCURVE",
"-1100 -342 QCURVE SMOOTH",
"-1100 -186 OFFCURVE",
"-1223 -186 QCURVE",
"-1223 -186 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, -960, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, -860, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, -900, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, -900, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21798.b;
},
{
glyphname = uni17D217A0.b;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-1972 -337 OFFCURVE",
"-1972 -298 QCURVE SMOOTH",
"-1972 -70 LINE",
"-2300 -70 LINE",
"-2300 -298 LINE SMOOTH",
"-2300 -500 OFFCURVE",
"-1933 -500 QCURVE SMOOTH",
"-1626 -500 OFFCURVE",
"-1626 -298 QCURVE SMOOTH",
"-1626 -272 LINE SMOOTH",
"-1626 -233 OFFCURVE",
"-1577 -233 QCURVE SMOOTH",
"-1528 -233 OFFCURVE",
"-1528 -272 QCURVE SMOOTH",
"-1528 -500 LINE",
"-1200 -500 LINE",
"-1200 -272 LINE SMOOTH",
"-1200 -70 OFFCURVE",
"-1567 -70 QCURVE SMOOTH",
"-1874 -70 OFFCURVE",
"-1874 -272 QCURVE SMOOTH",
"-1874 -298 LINE SMOOTH",
"-1874 -337 OFFCURVE",
"-1923 -337 QCURVE",
"-1923 -337 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -950, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -880, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -850, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -830, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D217A0.b;
},
{
glyphname = uni17D21780.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21780;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21780;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21780;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21780;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21780;
transform = "{1, 0, 0, 1, -250, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21780.left;
},
{
glyphname = uni17D21781.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21781;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21781;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21781;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21781;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21781;
transform = "{1, 0, 0, 1, -250, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21781.left;
},
{
glyphname = uni17D21782.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21782;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21782;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21782;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21782;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21782;
transform = "{1, 0, 0, 1, -250, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21782.left;
},
{
glyphname = uni17D21784.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21784;
transform = "{1, 0, 0, 1, -308, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 8;
},
{
components = (
{
name = uni17D21784;
transform = "{1, 0, 0, 1, -400, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21784;
transform = "{1, 0, 0, 1, -190, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21784;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21784;
transform = "{1, 0, 0, 1, -240, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21784.left;
},
{
glyphname = uni17D21785.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21785;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21785;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21785;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21785;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21785;
transform = "{1, 0, 0, 1, -250, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21785.left;
},
{
glyphname = uni17D21786.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21786;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21786;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21786;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21786;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21786;
transform = "{1, 0, 0, 1, -220, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21786.left;
},
{
glyphname = uni17D21787.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21787;
transform = "{1, 0, 0, 1, -380, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21787;
transform = "{1, 0, 0, 1, -440, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21787;
transform = "{1, 0, 0, 1, -260, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21787;
transform = "{1, 0, 0, 1, -420, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21787;
transform = "{1, 0, 0, 1, -310, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21787.left;
},
{
glyphname = uni17D21789.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21789;
transform = "{1, 0, 0, 1, -328, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21789;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21789;
transform = "{1, 0, 0, 1, -250, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21789;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21789;
transform = "{1, 0, 0, 1, -220, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21789.left;
},
{
glyphname = uni17D21789.a.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21789.a;
transform = "{1, 0, 0, 1, -350, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21789.a;
transform = "{1, 0, 0, 1, -460, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21789.a;
transform = "{1, 0, 0, 1, -50, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21789.a;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21789.a;
transform = "{1, 0, 0, 1, -110, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21789.a.left;
},
{
glyphname = uni17D2178A.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2178A;
transform = "{1, 0, 0, 1, -260, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2178A.left;
},
{
glyphname = uni17D2178B.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D2178B;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D2178B;
transform = "{1, 0, 0, 1, -430, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2178B;
transform = "{1, 0, 0, 1, -210, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2178B;
transform = "{1, 0, 0, 1, -400, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2178B;
transform = "{1, 0, 0, 1, -270, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2178B.left;
},
{
glyphname = uni17D2178C.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D2178C;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D2178C;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2178C;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2178C;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2178C;
transform = "{1, 0, 0, 1, -260, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2178C.left;
},
{
glyphname = uni17D2178E.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D2178E;
transform = "{1, 0, 0, 1, -340, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D2178E;
transform = "{1, 0, 0, 1, -460, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2178E;
transform = "{1, 0, 0, 1, -190, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2178E;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2178E;
transform = "{1, 0, 0, 1, -250, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2178E.left;
},
{
glyphname = uni17D2178F.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D2178F;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D2178F;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2178F;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2178F;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2178F;
transform = "{1, 0, 0, 1, -260, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2178F.left;
},
{
glyphname = uni17D21790.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21790;
transform = "{1, 0, 0, 1, -330, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21790;
transform = "{1, 0, 0, 1, -440, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21790;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21790;
transform = "{1, 0, 0, 1, -370, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21790;
transform = "{1, 0, 0, 1, -252, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21790.left;
},
{
glyphname = uni17D21791.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21791;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21791;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21791;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21791;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21791;
transform = "{1, 0, 0, 1, -260, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21791.left;
},
{
glyphname = uni17D21792.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21792;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21792;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21792;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21792;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21792;
transform = "{1, 0, 0, 1, -260, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21792.left;
},
{
glyphname = uni17D21793.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21793;
transform = "{1, 0, 0, 1, -340, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21793;
transform = "{1, 0, 0, 1, -450, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21793;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21793;
transform = "{1, 0, 0, 1, -440, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21793;
transform = "{1, 0, 0, 1, -260, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21793.left;
},
{
glyphname = uni17D21795.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21795;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21795;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21795;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21795;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21795;
transform = "{1, 0, 0, 1, -260, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21795.left;
},
{
glyphname = uni17D21796.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21796;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21796;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21796;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21796;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21796;
transform = "{1, 0, 0, 1, -260, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21796.left;
},
{
glyphname = uni17D21797.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21797;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21797;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21797;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21797;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21797;
transform = "{1, 0, 0, 1, -210, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21797.left;
},
{
glyphname = uni17D21798.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, -400, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, -440, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, -240, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, -480, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D21798;
transform = "{1, 0, 0, 1, -270, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D21798.left;
},
{
glyphname = uni17D2179B.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D2179B;
transform = "{1, 0, 0, 1, -350, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D2179B;
transform = "{1, 0, 0, 1, -440, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2179B;
transform = "{1, 0, 0, 1, -230, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2179B;
transform = "{1, 0, 0, 1, -390, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2179B;
transform = "{1, 0, 0, 1, -280, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2179B.left;
},
{
glyphname = uni17D2179C.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D2179C;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D2179C;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D2179C;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D2179C;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D2179C;
transform = "{1, 0, 0, 1, -260, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D2179C.left;
},
{
glyphname = uni17D217A0.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -350, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -440, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -230, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -390, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D217A0;
transform = "{1, 0, 0, 1, -280, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D217A0.left;
},
{
glyphname = uni17D217A2.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17D217A2;
transform = "{1, 0, 0, 1, -290, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17D217A2;
transform = "{1, 0, 0, 1, -410, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
components = (
{
name = uni17D217A2;
transform = "{1, 0, 0, 1, -200, 0}";
}
);
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
width = 0;
},
{
components = (
{
name = uni17D217A2;
transform = "{1, 0, 0, 1, -360, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17D217A2;
transform = "{1, 0, 0, 1, -240, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17D217A2.left;
},
{
glyphname = uni1789.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1035 1160 OFFCURVE",
"877 1160 QCURVE SMOOTH",
"762 1160 OFFCURVE",
"650 1036 QCURVE",
"539 1160 OFFCURVE",
"425 1160 QCURVE SMOOTH",
"110 1160 OFFCURVE",
"110 833 QCURVE SMOOTH",
"110 298 LINE SMOOTH",
"110 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"478 228 OFFCURVE",
"478 298 QCURVE SMOOTH",
"478 833 LINE SMOOTH",
"478 900 OFFCURVE",
"494 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"807 900 QCURVE SMOOTH",
"822 900 OFFCURVE",
"822 833 QCURVE SMOOTH",
"822 0 LINE",
"1190 0 LINE",
"1190 807 LINE SMOOTH",
"1190 932 OFFCURVE",
"1382 932 QCURVE SMOOTH",
"1484 932 OFFCURVE",
"1484 807 QCURVE SMOOTH",
"1484 0 LINE",
"1852 0 LINE",
"1852 807 LINE SMOOTH",
"1852 1160 OFFCURVE",
"1412 1160 QCURVE SMOOTH",
"1250 1160 OFFCURVE",
"1104 1068 QCURVE",
"1104 1068 LINE"
);
},
{
closed = 1;
nodes = (
"890 -230 LINE",
"934 -230 OFFCURVE",
"934 -275 QCURVE SMOOTH",
"934 -300 OFFCURVE",
"884 -300 QCURVE SMOOTH",
"743 -300 OFFCURVE",
"510 -90 OFFCURVE",
"262 -90 QCURVE SMOOTH",
"110 -90 LINE",
"110 -330 LINE",
"262 -330 LINE SMOOTH",
"427 -330 OFFCURVE",
"647 -500 OFFCURVE",
"884 -500 QCURVE SMOOTH",
"1302 -500 OFFCURVE",
"1302 -275 QCURVE SMOOTH",
"1302 -50 OFFCURVE",
"890 -50 QCURVE",
"890 -50 LINE"
);
}
);
width = 1962;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1035 1130 OFFCURVE",
"877 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"425 1130 QCURVE SMOOTH",
"140 1130 OFFCURVE",
"140 833 QCURVE SMOOTH",
"140 298 LINE SMOOTH",
"140 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 228 LINE",
"530 228 LINE SMOOTH",
"448 228 OFFCURVE",
"448 298 QCURVE SMOOTH",
"448 833 LINE SMOOTH",
"448 900 OFFCURVE",
"481 900 QCURVE SMOOTH",
"510 900 OFFCURVE",
"591 806 QCURVE SMOOTH",
"618 775 OFFCURVE",
"650 775 QCURVE SMOOTH",
"682 775 OFFCURVE",
"709 806 QCURVE SMOOTH",
"791 900 OFFCURVE",
"820 900 QCURVE SMOOTH",
"852 900 OFFCURVE",
"852 833 QCURVE SMOOTH",
"852 0 LINE",
"1160 0 LINE",
"1160 807 LINE SMOOTH",
"1160 932 OFFCURVE",
"1382 932 QCURVE SMOOTH",
"1514 932 OFFCURVE",
"1514 807 QCURVE SMOOTH",
"1514 0 LINE",
"1822 0 LINE",
"1822 807 LINE SMOOTH",
"1822 1130 OFFCURVE",
"1382 1130 QCURVE SMOOTH",
"1219 1130 OFFCURVE",
"1104 1038 QCURVE",
"1104 1038 LINE"
);
},
{
closed = 1;
nodes = (
"920 -230 LINE",
"994 -230 OFFCURVE",
"994 -275 QCURVE SMOOTH",
"994 -320 OFFCURVE",
"914 -320 QCURVE SMOOTH",
"822 -320 OFFCURVE",
"590 -120 OFFCURVE",
"342 -120 QCURVE SMOOTH",
"140 -120 LINE",
"140 -300 LINE",
"342 -300 LINE SMOOTH",
"507 -300 OFFCURVE",
"727 -500 OFFCURVE",
"914 -500 QCURVE SMOOTH",
"1302 -500 OFFCURVE",
"1302 -275 QCURVE SMOOTH",
"1302 -50 OFFCURVE",
"920 -50 QCURVE",
"920 -50 LINE"
);
}
);
width = 1962;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 238 LINE SMOOTH",
"200 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 168 LINE",
"470 168 LINE SMOOTH",
"388 168 OFFCURVE",
"388 238 QCURVE SMOOTH",
"388 853 LINE SMOOTH",
"388 980 OFFCURVE",
"461 980 QCURVE SMOOTH",
"510 980 OFFCURVE",
"591 886 QCURVE SMOOTH",
"618 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"682 855 OFFCURVE",
"709 886 QCURVE SMOOTH",
"791 980 OFFCURVE",
"840 980 QCURVE SMOOTH",
"912 980 OFFCURVE",
"912 853 QCURVE SMOOTH",
"912 0 LINE",
"1100 0 LINE",
"1100 807 LINE SMOOTH",
"1100 992 OFFCURVE",
"1362 992 QCURVE SMOOTH",
"1574 992 OFFCURVE",
"1574 807 QCURVE SMOOTH",
"1574 0 LINE",
"1762 0 LINE",
"1762 807 LINE SMOOTH",
"1762 1130 OFFCURVE",
"1362 1130 QCURVE SMOOTH",
"1170 1130 OFFCURVE",
"1060 1032 QCURVE",
"1001 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"762 1130 OFFCURVE",
"650 1006 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"200 1130 OFFCURVE",
"200 853 QCURVE",
"200 853 LINE"
);
},
{
closed = 1;
nodes = (
"912 -100 LINE",
"912 -220 LINE",
"1000 -220 LINE SMOOTH",
"1074 -220 OFFCURVE",
"1074 -280 QCURVE SMOOTH",
"1074 -380 OFFCURVE",
"964 -380 QCURVE SMOOTH",
"862 -380 OFFCURVE",
"696 -280 QCURVE SMOOTH",
"530 -180 OFFCURVE",
"322 -180 QCURVE SMOOTH",
"200 -180 LINE",
"200 -300 LINE",
"322 -300 LINE SMOOTH",
"447 -300 OFFCURVE",
"607 -400 QCURVE SMOOTH",
"767 -500 OFFCURVE",
"964 -500 QCURVE SMOOTH",
"1262 -500 OFFCURVE",
"1262 -280 QCURVE SMOOTH",
"1262 -100 OFFCURVE",
"1000 -100 QCURVE",
"1000 -100 LINE"
);
}
);
width = 1962;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"952 0 LINE",
"1070 0 LINE",
"1070 807 LINE SMOOTH",
"1070 1032 OFFCURVE",
"1342 1032 QCURVE SMOOTH",
"1614 1032 OFFCURVE",
"1614 807 QCURVE SMOOTH",
"1614 0 LINE",
"1732 0 LINE",
"1732 807 LINE SMOOTH",
"1732 1130 OFFCURVE",
"1342 1130 QCURVE SMOOTH",
"1131 1130 OFFCURVE",
"1034 1035 QCURVE",
"981 1130 OFFCURVE",
"857 1130 QCURVE SMOOTH",
"763 1130 OFFCURVE",
"650 986 QCURVE",
"539 1130 OFFCURVE",
"445 1130 QCURVE SMOOTH",
"230 1130 OFFCURVE",
"230 853 QCURVE SMOOTH",
"230 238 LINE SMOOTH",
"230 0 OFFCURVE",
"470 0 QCURVE SMOOTH",
"600 0 LINE",
"600 108 LINE",
"470 108 LINE SMOOTH",
"348 108 OFFCURVE",
"348 238 QCURVE SMOOTH",
"348 853 LINE SMOOTH",
"348 1020 OFFCURVE",
"445 1020 QCURVE SMOOTH",
"500 1020 OFFCURVE",
"596 896 QCURVE SMOOTH",
"628 855 OFFCURVE",
"650 855 QCURVE SMOOTH",
"672 855 OFFCURVE",
"704 896 QCURVE SMOOTH",
"801 1020 OFFCURVE",
"857 1020 QCURVE SMOOTH",
"952 1020 OFFCURVE",
"952 853 QCURVE",
"952 853 LINE"
);
},
{
closed = 1;
nodes = (
"882 -100 LINE",
"882 -190 LINE",
"970 -190 LINE SMOOTH",
"1084 -190 OFFCURVE",
"1084 -280 QCURVE SMOOTH",
"1084 -410 OFFCURVE",
"904 -410 QCURVE SMOOTH",
"782 -410 OFFCURVE",
"530 -180 OFFCURVE",
"342 -180 QCURVE SMOOTH",
"200 -180 LINE",
"200 -270 LINE",
"342 -270 LINE SMOOTH",
"507 -270 OFFCURVE",
"717 -500 OFFCURVE",
"904 -500 QCURVE SMOOTH",
"1202 -500 OFFCURVE",
"1202 -280 QCURVE SMOOTH",
"1202 -100 OFFCURVE",
"970 -100 QCURVE",
"970 -100 LINE"
);
}
);
width = 1962;
},
{
components = (
{
name = uni1789.a;
},
{
name = uni17D21789;
transform = "{1, 0, 0, 1, 1430, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 1962;
}
);
note = uni1789.left;
},
{
glyphname = uni17BB.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17BB;
transform = "{1, 0, 0, 1, -660, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17BB;
transform = "{1, 0, 0, 1, -660, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1393 -70 LINE",
"-1393 -170 LINE",
"-1288 -170 LINE",
"-1288 -500 LINE",
"-1100 -500 LINE",
"-1100 -70 LINE",
"-1100 -70 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 15 values pushed */\0123 1 2 0 1 0 2 1 103 0 0 0 20 0 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 17 values pushed */\0120 1 1 2 95 3 1 2 2 18 77 0 0 0 20 0 78 \012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 11 values pushed */\0120 0 0 5 0 5 17 17 4 7 24 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
components = (
{
name = uni17BB;
transform = "{1, 0, 0, 1, -870, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BB;
transform = "{1, 0, 0, 1, -840, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BB.left;
},
{
glyphname = uni17BC.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, -660, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, -660, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1580 -290 LINE SMOOTH",
"-1580 -500 OFFCURVE",
"-1315 -500 QCURVE SMOOTH",
"-1050 -500 OFFCURVE",
"-1050 -290 QCURVE SMOOTH",
"-1050 -70 LINE",
"-1228 -70 LINE",
"-1228 -290 LINE SMOOTH",
"-1228 -380 OFFCURVE",
"-1315 -380 QCURVE SMOOTH",
"-1402 -380 OFFCURVE",
"-1402 -290 QCURVE SMOOTH",
"-1402 -70 LINE",
"-1580 -70 LINE",
"-1580 -70 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, -870, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, -840, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BC.left;
},
{
glyphname = uni17BD.left;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, -660, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, -660, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-1620 -500 LINE",
"-1420 -500 LINE",
"-1335 -373 LINE",
"-1250 -500 LINE",
"-1050 -500 LINE",
"-1050 -70 LINE",
"-1228 -70 LINE",
"-1228 -377 LINE",
"-1335 -250 LINE",
"-1442 -377 LINE",
"-1442 -70 LINE",
"-1620 -70 LINE",
"-1620 -70 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */\0129 4 3 2 4 2 0 1 76 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 13 values pushed */\0121 1 0 0 2 95 3 1 2 2 20 2 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 13 values pushed */\0121 1 0 0 18 77 3 1 2 2 20 2 78 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 7 values pushed */\01218 17 20 16 4 7 26 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, -870, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, -840, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BD.left;
},
{
glyphname = uni17BC.ro;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, 300, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, 90, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-600 -290 LINE SMOOTH",
"-600 -500 OFFCURVE",
"-320 -500 QCURVE SMOOTH",
"-40 -500 OFFCURVE",
"-40 -290 QCURVE SMOOTH",
"-40 -70 LINE",
"-218 -70 LINE",
"-218 -290 LINE SMOOTH",
"-218 -380 OFFCURVE",
"-320 -380 QCURVE SMOOTH",
"-422 -380 OFFCURVE",
"-422 -290 QCURVE SMOOTH",
"-422 -70 LINE",
"-600 -70 LINE",
"-600 -70 LINE"
);
}
);
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, 150, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BC;
transform = "{1, 0, 0, 1, 210, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BC.ro;
},
{
glyphname = uni17BD.ro;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, 360, 0}";
}
);
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, 140, 0}";
}
);
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-630 -500 LINE",
"-430 -500 LINE",
"-325 -370 LINE",
"-220 -500 LINE",
"-20 -500 LINE",
"-20 -70 LINE",
"-198 -70 LINE",
"-198 -360 LINE",
"-325 -230 LINE",
"-452 -360 LINE",
"-452 -70 LINE",
"-630 -70 LINE",
"-630 -70 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */\0129 4 3 2 4 2 0 1 76 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 13 values pushed */\0121 1 0 0 2 95 3 1 2 2 20 2 78 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 13 values pushed */\0121 1 0 0 18 77 3 1 2 2 20 2 78 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 7 values pushed */\01218 17 20 16 4 7 26 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, 200, 0}";
}
);
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
width = 0;
},
{
components = (
{
name = uni17BD;
transform = "{1, 0, 0, 1, 220, 0}";
}
);
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
width = 0;
}
);
note = uni17BD.ro;
},
{
glyphname = uni17B4;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 932 LINE",
"38 932 LINE SMOOTH",
"140 932 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 0 LINE",
"448 0 LINE",
"448 807 LINE SMOOTH",
"448 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 932 LINE",
"38 932 LINE SMOOTH",
"140 932 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 0 LINE",
"448 0 LINE",
"448 807 LINE SMOOTH",
"448 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 992 LINE",
"98 992 LINE SMOOTH",
"200 992 OFFCURVE",
"200 807 QCURVE SMOOTH",
"200 0 LINE",
"388 0 LINE",
"388 807 LINE SMOOTH",
"388 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-240 1130 LINE",
"-240 1032 LINE",
"98 1032 LINE SMOOTH",
"240 1032 OFFCURVE",
"240 807 QCURVE SMOOTH",
"240 0 LINE",
"358 0 LINE",
"358 807 LINE SMOOTH",
"358 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-270 1130 LINE",
"-270 1072 LINE",
"38 1072 LINE SMOOTH",
"270 1072 OFFCURVE",
"270 837 QCURVE SMOOTH",
"270 0 LINE",
"328 0 LINE",
"328 837 LINE SMOOTH",
"328 1130 OFFCURVE",
"38 1130 QCURVE",
"38 1130 LINE"
);
}
);
width = 588;
}
);
note = uni17B4;
unicode = 17B4;
},
{
glyphname = uni17B5;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 932 LINE",
"38 932 LINE SMOOTH",
"140 932 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 0 LINE",
"448 0 LINE",
"448 807 LINE SMOOTH",
"448 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 932 LINE",
"38 932 LINE SMOOTH",
"140 932 OFFCURVE",
"140 807 QCURVE SMOOTH",
"140 0 LINE",
"448 0 LINE",
"448 807 LINE SMOOTH",
"448 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-210 1130 LINE",
"-210 992 LINE",
"98 992 LINE SMOOTH",
"200 992 OFFCURVE",
"200 807 QCURVE SMOOTH",
"200 0 LINE",
"388 0 LINE",
"388 807 LINE SMOOTH",
"388 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-240 1130 LINE",
"-240 1032 LINE",
"98 1032 LINE SMOOTH",
"240 1032 OFFCURVE",
"240 807 QCURVE SMOOTH",
"240 0 LINE",
"358 0 LINE",
"358 807 LINE SMOOTH",
"358 1130 OFFCURVE",
"98 1130 QCURVE",
"98 1130 LINE"
);
}
);
width = 588;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-270 1130 LINE",
"-270 1072 LINE",
"38 1072 LINE SMOOTH",
"270 1072 OFFCURVE",
"270 837 QCURVE SMOOTH",
"270 0 LINE",
"328 0 LINE",
"328 837 LINE SMOOTH",
"328 1130 OFFCURVE",
"38 1130 QCURVE",
"38 1130 LINE"
);
}
);
width = 588;
}
);
note = uni17B5;
unicode = 17B5;
},
{
glyphname = uni17DC;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"866 0 OFFCURVE",
"1130 96 OFFCURVE",
"1277 279 OFFCURVE",
"1277 412 QCURVE SMOOTH",
"1277 496 OFFCURVE",
"1195 621 OFFCURVE",
"1062 711 OFFCURVE",
"902 768 OFFCURVE",
"825 786 QCURVE SMOOTH",
"741 807 OFFCURVE",
"628 844 OFFCURVE",
"575 915 OFFCURVE",
"575 985 QCURVE SMOOTH",
"575 1079 OFFCURVE",
"689 1176 OFFCURVE",
"769 1176 QCURVE SMOOTH",
"839 1176 OFFCURVE",
"923 1139 OFFCURVE",
"923 1104 QCURVE SMOOTH",
"923 1077 OFFCURVE",
"898 1057 OFFCURVE",
"882 1057 QCURVE",
"882 858 LINE",
"927 858 OFFCURVE",
"1056 881 OFFCURVE",
"1181 936 OFFCURVE",
"1265 1032 OFFCURVE",
"1265 1108 QCURVE SMOOTH",
"1265 1188 OFFCURVE",
"1150 1321 OFFCURVE",
"921 1401 OFFCURVE",
"751 1401 QCURVE SMOOTH",
"599 1401 OFFCURVE",
"351 1307 OFFCURVE",
"204 1128 OFFCURVE",
"204 999 QCURVE SMOOTH",
"204 885 OFFCURVE",
"335 713 OFFCURVE",
"544 602 OFFCURVE",
"661 575 QCURVE SMOOTH",
"761 553 OFFCURVE",
"870 500 OFFCURVE",
"909 434 OFFCURVE",
"909 391 QCURVE SMOOTH",
"909 315 OFFCURVE",
"790 225 OFFCURVE",
"687 225 QCURVE SMOOTH",
"612 225 OFFCURVE",
"521 262 OFFCURVE",
"521 295 QCURVE SMOOTH",
"521 352 OFFCURVE",
"581 352 QCURVE",
"581 537 LINE",
"519 537 OFFCURVE",
"386 522 OFFCURVE",
"274 473 OFFCURVE",
"204 379 OFFCURVE",
"204 299 QCURVE SMOOTH",
"204 219 OFFCURVE",
"310 82 OFFCURVE",
"523 0 OFFCURVE",
"687 0 QCURVE",
"687 0 LINE"
);
}
);
width = 1482;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"420 1153 OFFCURVE",
"509 1219 QCURVE SMOOTH",
"597 1284 OFFCURVE",
"775 1284 QCURVE SMOOTH",
"953 1284 OFFCURVE",
"1042 1241 QCURVE SMOOTH",
"1131 1197 OFFCURVE",
"1131 1110 QCURVE SMOOTH",
"1131 1080 OFFCURVE",
"1116 1066 QCURVE SMOOTH",
"1102 1051 OFFCURVE",
"1072 1051 QCURVE SMOOTH",
"1042 1051 OFFCURVE",
"1027 1037 QCURVE SMOOTH",
"1012 1022 OFFCURVE",
"1012 993 QCURVE SMOOTH",
"1012 964 OFFCURVE",
"1027 949 QCURVE SMOOTH",
"1042 934 OFFCURVE",
"1072 934 QCURVE SMOOTH",
"1161 934 OFFCURVE",
"1205 978 QCURVE SMOOTH",
"1250 1022 OFFCURVE",
"1250 1110 QCURVE SMOOTH",
"1250 1255 OFFCURVE",
"1131 1327 QCURVE SMOOTH",
"1012 1400 OFFCURVE",
"775 1400 QCURVE SMOOTH",
"538 1400 OFFCURVE",
"419 1306 QCURVE SMOOTH",
"300 1211 OFFCURVE",
"300 1022 QCURVE SMOOTH",
"301 832 OFFCURVE",
"419 738 QCURVE SMOOTH",
"538 643 OFFCURVE",
"775 643 QCURVE SMOOTH",
"953 643 OFFCURVE",
"1042 577 QCURVE SMOOTH",
"1131 512 OFFCURVE",
"1131 380 QCURVE SMOOTH",
"1131 249 OFFCURVE",
"1042 183 QCURVE SMOOTH",
"953 118 OFFCURVE",
"775 118 QCURVE SMOOTH",
"597 118 OFFCURVE",
"509 161 QCURVE SMOOTH",
"420 205 OFFCURVE",
"420 292 QCURVE SMOOTH",
"420 321 OFFCURVE",
"435 335 QCURVE SMOOTH",
"450 350 OFFCURVE",
"479 350 QCURVE SMOOTH",
"509 350 OFFCURVE",
"524 365 QCURVE SMOOTH",
"539 379 OFFCURVE",
"539 408 QCURVE SMOOTH",
"539 438 OFFCURVE",
"524 453 QCURVE SMOOTH",
"509 468 OFFCURVE",
"479 468 QCURVE SMOOTH",
"390 467 OFFCURVE",
"345 424 QCURVE SMOOTH",
"300 380 OFFCURVE",
"300 293 QCURVE SMOOTH",
"300 146 OFFCURVE",
"419 73 QCURVE SMOOTH",
"538 0 OFFCURVE",
"775 0 QCURVE SMOOTH",
"1012 0 OFFCURVE",
"1131 95 QCURVE SMOOTH",
"1250 190 OFFCURVE",
"1250 379 QCURVE SMOOTH",
"1250 569 OFFCURVE",
"1131 664 QCURVE SMOOTH",
"1012 758 OFFCURVE",
"775 758 QCURVE SMOOTH",
"597 758 OFFCURVE",
"509 824 QCURVE SMOOTH",
"420 890 OFFCURVE",
"420 1022 QCURVE",
"420 1022 LINE"
);
}
);
width = 1550;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"420 1153 OFFCURVE",
"509 1219 QCURVE SMOOTH",
"597 1284 OFFCURVE",
"775 1284 QCURVE SMOOTH",
"953 1284 OFFCURVE",
"1042 1241 QCURVE SMOOTH",
"1131 1197 OFFCURVE",
"1131 1110 QCURVE SMOOTH",
"1131 1080 OFFCURVE",
"1116 1066 QCURVE SMOOTH",
"1102 1051 OFFCURVE",
"1072 1051 QCURVE SMOOTH",
"1042 1051 OFFCURVE",
"1027 1037 QCURVE SMOOTH",
"1012 1022 OFFCURVE",
"1012 993 QCURVE SMOOTH",
"1012 964 OFFCURVE",
"1027 949 QCURVE SMOOTH",
"1042 934 OFFCURVE",
"1072 934 QCURVE SMOOTH",
"1161 934 OFFCURVE",
"1205 978 QCURVE SMOOTH",
"1250 1022 OFFCURVE",
"1250 1110 QCURVE SMOOTH",
"1250 1255 OFFCURVE",
"1131 1327 QCURVE SMOOTH",
"1012 1400 OFFCURVE",
"775 1400 QCURVE SMOOTH",
"538 1400 OFFCURVE",
"419 1306 QCURVE SMOOTH",
"300 1211 OFFCURVE",
"300 1022 QCURVE SMOOTH",
"301 832 OFFCURVE",
"419 738 QCURVE SMOOTH",
"538 643 OFFCURVE",
"775 643 QCURVE SMOOTH",
"953 643 OFFCURVE",
"1042 577 QCURVE SMOOTH",
"1131 512 OFFCURVE",
"1131 380 QCURVE SMOOTH",
"1131 249 OFFCURVE",
"1042 183 QCURVE SMOOTH",
"953 118 OFFCURVE",
"775 118 QCURVE SMOOTH",
"597 118 OFFCURVE",
"509 161 QCURVE SMOOTH",
"420 205 OFFCURVE",
"420 292 QCURVE SMOOTH",
"420 321 OFFCURVE",
"435 335 QCURVE SMOOTH",
"450 350 OFFCURVE",
"479 350 QCURVE SMOOTH",
"509 350 OFFCURVE",
"524 365 QCURVE SMOOTH",
"539 379 OFFCURVE",
"539 408 QCURVE SMOOTH",
"539 438 OFFCURVE",
"524 453 QCURVE SMOOTH",
"509 468 OFFCURVE",
"479 468 QCURVE SMOOTH",
"390 467 OFFCURVE",
"345 424 QCURVE SMOOTH",
"300 380 OFFCURVE",
"300 293 QCURVE SMOOTH",
"300 146 OFFCURVE",
"419 73 QCURVE SMOOTH",
"538 0 OFFCURVE",
"775 0 QCURVE SMOOTH",
"1012 0 OFFCURVE",
"1131 95 QCURVE SMOOTH",
"1250 190 OFFCURVE",
"1250 379 QCURVE SMOOTH",
"1250 569 OFFCURVE",
"1131 664 QCURVE SMOOTH",
"1012 758 OFFCURVE",
"775 758 QCURVE SMOOTH",
"597 758 OFFCURVE",
"509 824 QCURVE SMOOTH",
"420 890 OFFCURVE",
"420 1022 QCURVE",
"420 1022 LINE"
);
}
);
width = 1550;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"420 1153 OFFCURVE",
"509 1219 QCURVE SMOOTH",
"597 1284 OFFCURVE",
"775 1284 QCURVE SMOOTH",
"953 1284 OFFCURVE",
"1042 1241 QCURVE SMOOTH",
"1131 1197 OFFCURVE",
"1131 1110 QCURVE SMOOTH",
"1131 1080 OFFCURVE",
"1116 1066 QCURVE SMOOTH",
"1102 1051 OFFCURVE",
"1072 1051 QCURVE SMOOTH",
"1042 1051 OFFCURVE",
"1027 1037 QCURVE SMOOTH",
"1012 1022 OFFCURVE",
"1012 993 QCURVE SMOOTH",
"1012 964 OFFCURVE",
"1027 949 QCURVE SMOOTH",
"1042 934 OFFCURVE",
"1072 934 QCURVE SMOOTH",
"1161 934 OFFCURVE",
"1205 978 QCURVE SMOOTH",
"1250 1022 OFFCURVE",
"1250 1110 QCURVE SMOOTH",
"1250 1255 OFFCURVE",
"1131 1327 QCURVE SMOOTH",
"1012 1400 OFFCURVE",
"775 1400 QCURVE SMOOTH",
"538 1400 OFFCURVE",
"419 1306 QCURVE SMOOTH",
"300 1211 OFFCURVE",
"300 1022 QCURVE SMOOTH",
"301 832 OFFCURVE",
"419 738 QCURVE SMOOTH",
"538 643 OFFCURVE",
"775 643 QCURVE SMOOTH",
"953 643 OFFCURVE",
"1042 577 QCURVE SMOOTH",
"1131 512 OFFCURVE",
"1131 380 QCURVE SMOOTH",
"1131 249 OFFCURVE",
"1042 183 QCURVE SMOOTH",
"953 118 OFFCURVE",
"775 118 QCURVE SMOOTH",
"597 118 OFFCURVE",
"509 161 QCURVE SMOOTH",
"420 205 OFFCURVE",
"420 292 QCURVE SMOOTH",
"420 321 OFFCURVE",
"435 335 QCURVE SMOOTH",
"450 350 OFFCURVE",
"479 350 QCURVE SMOOTH",
"509 350 OFFCURVE",
"524 365 QCURVE SMOOTH",
"539 379 OFFCURVE",
"539 408 QCURVE SMOOTH",
"539 438 OFFCURVE",
"524 453 QCURVE SMOOTH",
"509 468 OFFCURVE",
"479 468 QCURVE SMOOTH",
"390 467 OFFCURVE",
"345 424 QCURVE SMOOTH",
"300 380 OFFCURVE",
"300 293 QCURVE SMOOTH",
"300 146 OFFCURVE",
"419 73 QCURVE SMOOTH",
"538 0 OFFCURVE",
"775 0 QCURVE SMOOTH",
"1012 0 OFFCURVE",
"1131 95 QCURVE SMOOTH",
"1250 190 OFFCURVE",
"1250 379 QCURVE SMOOTH",
"1250 569 OFFCURVE",
"1131 664 QCURVE SMOOTH",
"1012 758 OFFCURVE",
"775 758 QCURVE SMOOTH",
"597 758 OFFCURVE",
"509 824 QCURVE SMOOTH",
"420 890 OFFCURVE",
"420 1022 QCURVE",
"420 1022 LINE"
);
}
);
width = 1550;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"390 1076 OFFCURVE",
"775 1076 QCURVE SMOOTH",
"1161 1076 OFFCURVE",
"1161 909 QCURVE SMOOTH",
"1161 812 OFFCURVE",
"1042 812 QCURVE",
"1042 765 LINE",
"1220 765 OFFCURVE",
"1220 909 QCURVE SMOOTH",
"1220 1129 OFFCURVE",
"775 1130 QCURVE SMOOTH",
"330 1130 OFFCURVE",
"330 838 QCURVE SMOOTH",
"330 837 LINE SMOOTH",
"331 551 OFFCURVE",
"775 551 QCURVE SMOOTH",
"1161 551 OFFCURVE",
"1161 311 QCURVE SMOOTH",
"1161 47 OFFCURVE",
"775 47 QCURVE SMOOTH",
"390 47 OFFCURVE",
"390 239 QCURVE SMOOTH",
"390 336 OFFCURVE",
"509 336 QCURVE",
"509 383 LINE",
"330 383 OFFCURVE",
"330 239 QCURVE SMOOTH",
"330 1 OFFCURVE",
"775 0 QCURVE SMOOTH",
"1220 0 OFFCURVE",
"1220 310 QCURVE SMOOTH",
"1220 596 OFFCURVE",
"775 596 QCURVE SMOOTH",
"390 596 OFFCURVE",
"390 837 QCURVE",
"390 837 LINE"
);
}
);
width = 1550;
}
);
note = uni17DC;
unicode = 17DC;
},
{
glyphname = uni17DD;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-155 1202 LINE",
"-155 1506 OFFCURVE",
"-650 1506 QCURVE SMOOTH",
"-1145 1506 OFFCURVE",
"-1145 1202 QCURVE",
"-865 1202 LINE",
"-865 1319 OFFCURVE",
"-651 1319 QCURVE SMOOTH",
"-438 1319 OFFCURVE",
"-438 1202 QCURVE",
"-438 1202 LINE"
);
}
);
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-155 1202 LINE",
"-155 1506 OFFCURVE",
"-650 1506 QCURVE SMOOTH",
"-1145 1506 OFFCURVE",
"-1145 1202 QCURVE",
"-865 1202 LINE",
"-865 1319 OFFCURVE",
"-651 1319 QCURVE SMOOTH",
"-438 1319 OFFCURVE",
"-438 1202 QCURVE",
"-438 1202 LINE"
);
}
);
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-155 1232 LINE",
"-155 1476 OFFCURVE",
"-650 1476 QCURVE SMOOTH",
"-1145 1476 OFFCURVE",
"-1145 1232 QCURVE",
"-965 1232 LINE",
"-965 1379 OFFCURVE",
"-651 1379 QCURVE SMOOTH",
"-338 1379 OFFCURVE",
"-338 1232 QCURVE",
"-338 1232 LINE"
);
}
);
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-215 1232 LINE",
"-215 1476 OFFCURVE",
"-650 1476 QCURVE SMOOTH",
"-1085 1476 OFFCURVE",
"-1085 1232 QCURVE",
"-965 1232 LINE",
"-965 1379 OFFCURVE",
"-651 1379 QCURVE SMOOTH",
"-338 1379 OFFCURVE",
"-338 1232 QCURVE",
"-338 1232 LINE"
);
}
);
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-245 1232 LINE",
"-245 1456 OFFCURVE",
"-650 1456 QCURVE SMOOTH",
"-1055 1456 OFFCURVE",
"-1055 1232 QCURVE",
"-997 1232 LINE",
"-997 1398 OFFCURVE",
"-651 1398 QCURVE SMOOTH",
"-303 1398 OFFCURVE",
"-303 1232 QCURVE",
"-303 1232 LINE"
);
}
);
width = 0;
}
);
note = uni17DD;
unicode = 17DD;
},
{
glyphname = uni17F0;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"528 -14 OFFCURVE",
"680 92 OFFCURVE",
"745 260 OFFCURVE",
"745 350 QCURVE SMOOTH",
"745 442 OFFCURVE",
"680 608 OFFCURVE",
"528 715 OFFCURVE",
"399 715 QCURVE SMOOTH",
"270 715 OFFCURVE",
"120 608 OFFCURVE",
"57 442 OFFCURVE",
"57 350 QCURVE SMOOTH",
"57 260 OFFCURVE",
"120 92 OFFCURVE",
"270 -14 OFFCURVE",
"399 -14 QCURVE",
"399 -14 LINE"
);
},
{
closed = 1;
nodes = (
"364 213 OFFCURVE",
"317 289 OFFCURVE",
"317 350 QCURVE SMOOTH",
"317 412 OFFCURVE",
"364 487 OFFCURVE",
"399 487 QCURVE SMOOTH",
"434 487 OFFCURVE",
"479 412 OFFCURVE",
"479 350 QCURVE SMOOTH",
"479 287 OFFCURVE",
"434 213 OFFCURVE",
"399 213 QCURVE",
"399 213 LINE"
);
}
);
width = 802;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"519 -8 OFFCURVE",
"661 92 OFFCURVE",
"724 254 OFFCURVE",
"724 350 QCURVE SMOOTH",
"724 446 OFFCURVE",
"661 608 OFFCURVE",
"519 709 OFFCURVE",
"399 709 QCURVE SMOOTH",
"280 709 OFFCURVE",
"138 608 OFFCURVE",
"75 446 OFFCURVE",
"75 350 QCURVE SMOOTH",
"75 254 OFFCURVE",
"138 92 OFFCURVE",
"280 -8 OFFCURVE",
"399 -8 QCURVE",
"399 -8 LINE"
);
},
{
closed = 1;
nodes = (
"347 170 OFFCURVE",
"290 264 OFFCURVE",
"290 350 QCURVE SMOOTH",
"290 436 OFFCURVE",
"347 530 OFFCURVE",
"399 530 QCURVE SMOOTH",
"450 530 OFFCURVE",
"507 436 OFFCURVE",
"507 350 QCURVE SMOOTH",
"507 262 OFFCURVE",
"450 170 OFFCURVE",
"399 170 QCURVE",
"399 170 LINE"
);
}
);
width = 802;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"550 100 OFFCURVE",
"400 100 QCURVE SMOOTH",
"250 100 OFFCURVE",
"250 350 QCURVE SMOOTH",
"250 600 OFFCURVE",
"400 600 QCURVE SMOOTH",
"550 600 OFFCURVE",
"550 350 QCURVE",
"550 350 LINE"
);
},
{
closed = 1;
nodes = (
"150 0 OFFCURVE",
"400 0 QCURVE SMOOTH",
"650 0 OFFCURVE",
"650 350 QCURVE SMOOTH",
"650 700 OFFCURVE",
"400 700 QCURVE SMOOTH",
"150 700 OFFCURVE",
"150 350 QCURVE",
"150 350 LINE"
);
}
);
width = 800;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"539 6 OFFCURVE",
"668 188 OFFCURVE",
"668 350 QCURVE SMOOTH",
"668 512 OFFCURVE",
"539 694 OFFCURVE",
"397 694 QCURVE SMOOTH",
"258 694 OFFCURVE",
"131 512 OFFCURVE",
"131 350 QCURVE SMOOTH",
"131 188 OFFCURVE",
"258 6 OFFCURVE",
"397 6 QCURVE",
"397 6 LINE"
);
},
{
closed = 1;
nodes = (
"315 82 OFFCURVE",
"229 211 OFFCURVE",
"229 350 QCURVE SMOOTH",
"229 489 OFFCURVE",
"315 618 OFFCURVE",
"397 618 QCURVE SMOOTH",
"483 618 OFFCURVE",
"569 489 OFFCURVE",
"569 350 QCURVE SMOOTH",
"569 211 OFFCURVE",
"483 82 OFFCURVE",
"397 82 QCURVE",
"397 82 LINE"
);
}
);
width = 798;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"640 12 OFFCURVE",
"640 350 QCURVE SMOOTH",
"640 688 OFFCURVE",
"397 688 QCURVE SMOOTH",
"155 688 OFFCURVE",
"155 350 QCURVE SMOOTH",
"155 12 OFFCURVE",
"397 12 QCURVE",
"397 12 LINE"
);
},
{
closed = 1;
nodes = (
"305 66 OFFCURVE",
"208 195 OFFCURVE",
"208 350 QCURVE SMOOTH",
"208 506 OFFCURVE",
"305 635 OFFCURVE",
"397 635 QCURVE SMOOTH",
"491 635 OFFCURVE",
"587 504 OFFCURVE",
"587 350 QCURVE SMOOTH",
"587 195 OFFCURVE",
"491 66 OFFCURVE",
"397 66 QCURVE",
"397 66 LINE"
);
}
);
width = 796;
}
);
note = uni17F0;
unicode = 17F0;
},
{
glyphname = uni17F1;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"290 0 LINE",
"448 451 LINE",
"608 0 LINE",
"874 0 LINE",
"632 700 LINE",
"264 700 LINE",
"24 0 LINE",
"24 0 LINE"
);
}
);
width = 899;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"274 0 LINE",
"446 496 LINE",
"620 0 LINE",
"839 0 LINE",
"598 700 LINE",
"295 700 LINE",
"55 0 LINE",
"55 0 LINE"
);
}
);
width = 894;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"340 700 LINE",
"101 0 LINE",
"205 0 LINE",
"400 565 LINE",
"596 0 LINE",
"701 0 LINE",
"459 700 LINE",
"459 700 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */\0123 1 0 2 1 76 3 1 2 0 2 133 1 1 0 0 19 0 78 0 0 0 6 0 6 18 17 4 7 24 \012CALL[ ]	/* CallFunction */";
};
width = 800;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"212 0 LINE",
"413 594 LINE",
"614 0 LINE",
"714 0 LINE",
"474 700 LINE",
"354 700 LINE",
"112 0 LINE",
"112 0 LINE"
);
}
);
width = 827;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"175 0 LINE",
"386 621 LINE",
"591 0 LINE",
"644 0 LINE",
"407 700 LINE",
"366 700 LINE",
"122 0 LINE",
"122 0 LINE"
);
}
);
width = 768;
}
);
note = uni17F1;
unicode = 17F1;
},
{
glyphname = uni17F2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"309 0 LINE",
"309 700 LINE",
"43 700 LINE",
"43 0 LINE",
"43 0 LINE"
);
}
);
width = 352;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"282 0 LINE",
"282 700 LINE",
"65 700 LINE",
"65 0 LINE",
"65 0 LINE"
);
}
);
width = 348;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"100 700 LINE",
"100 0 LINE",
"200 0 LINE",
"200 700 LINE",
"200 700 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */\0122 1 1 1 0 95 0 0 0 19 0 78 0 0 0 3 0 3 17 3 7 23 \012CALL[ ]	/* CallFunction */";
};
width = 300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"208 0 LINE",
"208 700 LINE",
"110 700 LINE",
"110 0 LINE",
"110 0 LINE"
);
}
);
width = 319;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"175 0 LINE",
"175 700 LINE",
"122 700 LINE",
"122 0 LINE",
"122 0 LINE"
);
}
);
width = 299;
}
);
note = uni17F2;
unicode = 17F2;
},
{
glyphname = uni17F3;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"936 700 LINE",
"784 260 LINE",
"633 700 LINE",
"264 700 LINE",
"45 0 LINE",
"311 0 LINE",
"448 451 LINE",
"608 0 LINE",
"963 0 LINE",
"1120 451 LINE",
"1259 0 LINE",
"1526 0 LINE",
"1305 700 LINE",
"1305 700 LINE"
);
}
);
width = 1570;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"929 700 LINE",
"763 217 LINE",
"597 700 LINE",
"294 700 LINE",
"67 0 LINE",
"286 0 LINE",
"446 496 LINE",
"620 0 LINE",
"909 0 LINE",
"1081 496 LINE",
"1243 0 LINE",
"1462 0 LINE",
"1232 700 LINE",
"1232 700 LINE"
);
}
);
width = 1529;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"339 700 LINE",
"100 0 LINE",
"204 0 LINE",
"399 565 LINE",
"595 0 LINE",
"700 0 LINE",
"895 565 LINE",
"1091 0 LINE",
"1196 0 LINE",
"954 700 LINE",
"835 700 LINE",
"647 151 LINE",
"458 700 LINE",
"458 700 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */\0129 6 1 3 1 0 1 76 5 4 2 0 1 0 133 3 2 2 1 1 19 1 78 0 0 0 12 0 12 18 18 17 18 6 7 26 \012CALL[ ]	/* CallFunction */";
};
width = 1296;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"870 700 LINE",
"676 111 LINE",
"479 700 LINE",
"360 700 LINE",
"129 0 LINE",
"229 0 LINE",
"422 594 LINE",
"618 0 LINE",
"735 0 LINE",
"930 594 LINE",
"1124 0 LINE",
"1225 0 LINE",
"989 700 LINE",
"989 700 LINE"
);
}
);
width = 1380;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"821 700 LINE",
"622 72 LINE",
"417 700 LINE",
"380 700 LINE",
"155 0 LINE",
"208 0 LINE",
"399 621 LINE",
"595 0 LINE",
"644 0 LINE",
"839 621 LINE",
"1032 0 LINE",
"1085 0 LINE",
"857 700 LINE",
"857 700 LINE"
);
}
);
width = 1296;
}
);
note = uni17F3;
unicode = 17F3;
},
{
glyphname = uni17F4;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"634 0 LINE",
"874 700 LINE",
"608 700 LINE",
"450 250 LINE",
"290 700 LINE",
"24 700 LINE",
"266 0 LINE",
"266 0 LINE"
);
}
);
width = 899;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"600 0 LINE",
"839 700 LINE",
"620 700 LINE",
"448 205 LINE",
"274 700 LINE",
"55 700 LINE",
"297 0 LINE",
"297 0 LINE"
);
}
);
width = 894;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"461 0 LINE",
"700 700 LINE",
"596 700 LINE",
"401 135 LINE",
"205 700 LINE",
"100 700 LINE",
"342 0 LINE",
"342 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */\0123 1 2 0 1 76 1 1 0 2 0 133 3 1 2 2 19 2 78 0 0 0 6 0 6 18 17 4 7 24 \012CALL[ ]	/* CallFunction */";
};
width = 800;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"487 0 LINE",
"717 700 LINE",
"618 700 LINE",
"426 106 LINE",
"229 700 LINE",
"129 700 LINE",
"360 0 LINE",
"360 0 LINE"
);
}
);
width = 843;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"429 0 LINE",
"649 700 LINE",
"595 700 LINE",
"405 80 LINE",
"208 700 LINE",
"155 700 LINE",
"376 0 LINE",
"376 0 LINE"
);
}
);
width = 800;
}
);
note = uni17F4;
unicode = 17F4;
},
{
glyphname = uni17F5;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"491 -39 OFFCURVE",
"638 18 OFFCURVE",
"726 127 OFFCURVE",
"726 201 QCURVE SMOOTH",
"726 258 OFFCURVE",
"661 387 OFFCURVE",
"544 473 QCURVE",
"780 700 LINE",
"513 700 LINE",
"399 596 LINE",
"292 700 LINE",
"26 700 LINE",
"253 473 LINE",
"151 387 OFFCURVE",
"73 262 OFFCURVE",
"73 201 QCURVE SMOOTH",
"73 127 OFFCURVE",
"161 18 OFFCURVE",
"311 -39 OFFCURVE",
"401 -39 QCURVE",
"401 -39 LINE"
);
},
{
closed = 1;
nodes = (
"323 233 OFFCURVE",
"360 287 OFFCURVE",
"399 332 QCURVE",
"438 289 OFFCURVE",
"477 231 OFFCURVE",
"477 197 QCURVE SMOOTH",
"477 168 OFFCURVE",
"432 133 OFFCURVE",
"399 131 QCURVE SMOOTH",
"366 131 OFFCURVE",
"323 168 OFFCURVE",
"323 201 QCURVE",
"323 201 LINE"
);
}
);
width = 806;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"528 -25 OFFCURVE",
"686 98 OFFCURVE",
"686 201 QCURVE SMOOTH",
"686 260 OFFCURVE",
"622 395 OFFCURVE",
"520 475 QCURVE",
"749 700 LINE",
"528 700 LINE",
"399 578 LINE",
"276 700 LINE",
"55 700 LINE",
"278 475 LINE",
"184 395 OFFCURVE",
"114 264 OFFCURVE",
"114 201 QCURVE SMOOTH",
"114 98 OFFCURVE",
"274 -25 OFFCURVE",
"401 -25 QCURVE",
"401 -25 LINE"
);
},
{
closed = 1;
nodes = (
"315 236 OFFCURVE",
"356 307 OFFCURVE",
"399 356 QCURVE",
"442 309 OFFCURVE",
"465 273 QCURVE SMOOTH",
"485 239 OFFCURVE",
"485 205 QCURVE SMOOTH",
"485 199 LINE SMOOTH",
"485 162 OFFCURVE",
"434 123 OFFCURVE",
"399 121 QCURVE SMOOTH",
"364 121 OFFCURVE",
"315 164 OFFCURVE",
"315 201 QCURVE",
"315 201 LINE"
);
}
);
width = 804;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"201 1 OFFCURVE",
"401 1 QCURVE SMOOTH",
"601 1 OFFCURVE",
"601 201 QCURVE SMOOTH",
"601 328 OFFCURVE",
"474 474 QCURVE",
"701 701 LINE",
"550 701 LINE",
"400 551 LINE",
"251 700 LINE",
"100 700 LINE",
"326 474 LINE",
"201 328 OFFCURVE",
"201 201 QCURVE",
"201 201 LINE"
);
},
{
closed = 1;
nodes = (
"500 198 LINE SMOOTH",
"500 101 OFFCURVE",
"401 101 QCURVE SMOOTH",
"399 101 LINE SMOOTH",
"301 101 OFFCURVE",
"301 201 QCURVE SMOOTH",
"301 282 OFFCURVE",
"400 397 QCURVE",
"500 283 OFFCURVE",
"500 202 QCURVE",
"500 202 LINE"
);
}
);
width = 800;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"491 6 OFFCURVE",
"586 109 OFFCURVE",
"586 201 QCURVE SMOOTH",
"586 268 OFFCURVE",
"528 406 OFFCURVE",
"459 475 QCURVE",
"668 700 LINE",
"565 700 LINE",
"399 528 LINE",
"237 700 LINE",
"131 700 LINE",
"340 475 LINE",
"272 406 OFFCURVE",
"215 266 OFFCURVE",
"215 201 QCURVE SMOOTH",
"215 6 OFFCURVE",
"401 6 QCURVE",
"401 6 LINE"
);
},
{
closed = 1;
nodes = (
"301 246 OFFCURVE",
"346 352 OFFCURVE",
"399 416 QCURVE",
"453 352 OFFCURVE",
"500 246 OFFCURVE",
"500 201 QCURVE SMOOTH",
"500 152 OFFCURVE",
"440 86 OFFCURVE",
"399 86 QCURVE SMOOTH",
"356 86 OFFCURVE",
"301 156 OFFCURVE",
"301 201 QCURVE",
"301 201 LINE"
);
}
);
width = 800;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"466 12 OFFCURVE",
"552 106 OFFCURVE",
"552 201 QCURVE SMOOTH",
"552 340 OFFCURVE",
"433 473 QCURVE",
"636 700 LINE",
"579 700 LINE",
"399 506 LINE",
"220 700 LINE",
"163 700 LINE",
"364 473 LINE",
"247 336 OFFCURVE",
"247 201 QCURVE SMOOTH",
"247 96 OFFCURVE",
"333 12 OFFCURVE",
"401 12 QCURVE",
"401 12 LINE"
);
},
{
closed = 1;
nodes = (
"300 248 OFFCURVE",
"341 369 OFFCURVE",
"399 434 QCURVE",
"458 365 OFFCURVE",
"499 250 OFFCURVE",
"499 201 QCURVE SMOOTH",
"499 147 OFFCURVE",
"446 66 OFFCURVE",
"399 66 QCURVE SMOOTH",
"349 66 OFFCURVE",
"300 152 OFFCURVE",
"300 201 QCURVE",
"300 201 LINE"
);
}
);
width = 800;
}
);
note = uni17F5;
unicode = 17F5;
},
{
glyphname = uni17F6;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"536 0 LINE",
"292 700 LINE",
"26 700 LINE",
"270 0 LINE",
"270 0 LINE"
);
}
);
width = 550;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"518 0 LINE",
"274 700 LINE",
"55 700 LINE",
"299 0 LINE",
"299 0 LINE"
);
}
);
width = 550;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"100 700 LINE",
"344 0 LINE",
"450 0 LINE",
"209 700 LINE",
"209 700 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */\0122 1 1 0 1 133 0 0 0 19 0 78 0 0 0 3 0 3 17 3 7 23 \012CALL[ ]	/* CallFunction */";
};
width = 550;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"470 0 LINE",
"226 700 LINE",
"126 700 LINE",
"368 0 LINE",
"368 0 LINE"
);
}
);
width = 550;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"452 0 LINE",
"208 700 LINE",
"151 700 LINE",
"395 0 LINE",
"395 0 LINE"
);
}
);
width = 550;
}
);
note = uni17F6;
unicode = 17F6;
},
{
glyphname = uni17F7;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"311 0 LINE",
"485 453 LINE",
"702 0 LINE",
"1073 0 LINE",
"1323 700 LINE",
"1057 700 LINE",
"889 254 LINE",
"680 700 LINE",
"285 700 LINE",
"45 0 LINE",
"45 0 LINE"
);
}
);
width = 1368;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"286 0 LINE",
"466 496 LINE",
"677 0 LINE",
"970 0 LINE",
"1220 700 LINE",
"1001 700 LINE",
"827 213 LINE",
"624 700 LINE",
"307 700 LINE",
"67 0 LINE",
"67 0 LINE"
);
}
);
width = 1288;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"339 700 LINE",
"100 0 LINE",
"204 0 LINE",
"399 565 LINE",
"595 0 LINE",
"700 0 LINE",
"950 700 LINE",
"835 700 LINE",
"647 151 LINE",
"458 700 LINE",
"458 700 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */\0126 1 2 1 0 1 76 4 3 2 0 1 0 133 2 1 1 1 19 1 78 0 0 0 9 0 9 18 17 18 5 7 25 \012CALL[ ]	/* CallFunction */";
};
width = 1050;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"239 0 LINE",
"434 573 LINE",
"622 0 LINE",
"721 0 LINE",
"964 700 LINE",
"864 700 LINE",
"676 143 LINE",
"493 700 LINE",
"379 700 LINE",
"139 0 LINE",
"139 0 LINE"
);
}
);
width = 1103;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"233 0 LINE",
"428 584 LINE",
"606 0 LINE",
"633 0 LINE",
"868 700 LINE",
"811 700 LINE",
"622 135 LINE",
"446 700 LINE",
"416 700 LINE",
"176 0 LINE",
"176 0 LINE"
);
}
);
width = 1044;
}
);
note = uni17F7;
unicode = 17F7;
},
{
glyphname = uni17F8;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"286 0 LINE",
"530 700 LINE",
"264 700 LINE",
"24 0 LINE",
"24 0 LINE"
);
}
);
width = 555;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"268 0 LINE",
"512 700 LINE",
"295 700 LINE",
"55 0 LINE",
"55 0 LINE"
);
}
);
width = 567;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"339 700 LINE",
"100 0 LINE",
"204 0 LINE",
"449 700 LINE",
"449 700 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */\0122 1 1 0 1 133 0 0 0 19 0 78 0 0 0 3 0 3 17 3 7 23 \012CALL[ ]	/* CallFunction */";
};
width = 502;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"216 0 LINE",
"460 700 LINE",
"360 700 LINE",
"120 0 LINE",
"120 0 LINE"
);
}
);
width = 581;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"192 0 LINE",
"436 700 LINE",
"379 700 LINE",
"139 0 LINE",
"139 0 LINE"
);
}
);
width = 575;
}
);
note = uni17F8;
unicode = 17F8;
},
{
glyphname = uni17F9;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"818 -350 OFFCURVE",
"818 -119 QCURVE SMOOTH",
"818 -55 OFFCURVE",
"755 43 OFFCURVE",
"654 100 OFFCURVE",
"599 100 QCURVE SMOOTH",
"362 100 LINE",
"767 391 LINE",
"624 567 LINE",
"40 113 LINE",
"79 -61 LINE",
"454 -61 LINE SMOOTH",
"509 -61 OFFCURVE",
"552 -94 OFFCURVE",
"552 -119 QCURVE SMOOTH",
"552 -141 OFFCURVE",
"511 -168 OFFCURVE",
"458 -178 OFFCURVE",
"439 -178 QCURVE",
"439 -350 LINE",
"439 -350 LINE"
);
}
);
width = 860;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"651 -350 OFFCURVE",
"831 -227 OFFCURVE",
"831 -115 QCURVE SMOOTH",
"831 -18 OFFCURVE",
"696 100 OFFCURVE",
"595 100 QCURVE SMOOTH",
"341 100 LINE",
"763 416 LINE",
"649 567 LINE",
"65 113 LINE",
"104 -45 LINE",
"495 -45 LINE SMOOTH",
"561 -45 OFFCURVE",
"608 -88 OFFCURVE",
"608 -119 QCURVE SMOOTH",
"608 -164 OFFCURVE",
"511 -199 OFFCURVE",
"464 -199 QCURVE",
"464 -350 LINE",
"464 -350 LINE"
);
}
);
width = 897;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"139 0 LINE",
"551 0 LINE SMOOTH",
"751 0 OFFCURVE",
"751 -125 QCURVE SMOOTH",
"751 -251 OFFCURVE",
"551 -251 QCURVE SMOOTH",
"500 -250 LINE",
"500 -350 LINE",
"550 -351 LINE SMOOTH",
"850 -350 OFFCURVE",
"851 -124 QCURVE SMOOTH",
"851 101 OFFCURVE",
"550 101 QCURVE SMOOTH",
"247 100 LINE",
"718 469 LINE",
"684 568 LINE",
"100 112 LINE",
"100 112 LINE"
);
}
);
width = 900;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"669 -344 OFFCURVE",
"835 -231 OFFCURVE",
"835 -111 QCURVE SMOOTH",
"835 -57 OFFCURVE",
"788 41 OFFCURVE",
"673 100 OFFCURVE",
"569 100 QCURVE SMOOTH",
"278 100 LINE",
"737 463 LINE",
"687 541 LINE",
"112 94 LINE",
"139 14 LINE",
"536 14 LINE SMOOTH",
"644 14 OFFCURVE",
"728 -51 OFFCURVE",
"728 -115 QCURVE SMOOTH",
"728 -193 OFFCURVE",
"616 -258 OFFCURVE",
"499 -258 QCURVE",
"499 -344 LINE",
"499 -344 LINE"
);
}
);
width = 950;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"650 -338 OFFCURVE",
"820 -244 OFFCURVE",
"820 -111 QCURVE SMOOTH",
"820 -70 OFFCURVE",
"786 31 OFFCURVE",
"671 100 OFFCURVE",
"548 100 QCURVE SMOOTH",
"247 100 LINE",
"718 469 LINE",
"689 516 LINE",
"122 74 LINE",
"138 47 LINE",
"509 47 LINE SMOOTH",
"646 47 OFFCURVE",
"767 -29 OFFCURVE",
"767 -111 QCURVE SMOOTH",
"767 -199 OFFCURVE",
"650 -289 OFFCURVE",
"499 -289 QCURVE",
"499 -338 LINE",
"499 -338 LINE"
);
}
);
width = 944;
}
);
note = uni17F9;
unicode = 17F9;
},
{
glyphname = uni19E0;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1255 903 OFFCURVE",
"1255 1284 QCURVE SMOOTH",
"1255 1722 LINE SMOOTH",
"1255 2103 OFFCURVE",
"713 2103 QCURVE SMOOTH",
"172 2103 OFFCURVE",
"172 1722 QCURVE SMOOTH",
"172 1284 LINE SMOOTH",
"172 903 OFFCURVE",
"713 903 QCURVE",
"713 903 LINE"
);
},
{
closed = 1;
nodes = (
"543 1133 OFFCURVE",
"543 1284 QCURVE SMOOTH",
"543 1722 LINE SMOOTH",
"543 1874 OFFCURVE",
"713 1874 QCURVE SMOOTH",
"887 1874 OFFCURVE",
"887 1722 QCURVE SMOOTH",
"887 1284 LINE SMOOTH",
"887 1133 OFFCURVE",
"713 1133 QCURVE",
"713 1133 LINE"
);
},
{
closed = 1;
nodes = (
"483 -590 LINE",
"715 -420 LINE",
"946 -590 LINE",
"1257 -590 LINE",
"1257 27 LINE SMOOTH",
"1257 82 OFFCURVE",
"1237 160 OFFCURVE",
"1163 201 OFFCURVE",
"1081 201 QCURVE SMOOTH",
"784 201 LINE",
"784 -29 LINE",
"836 -29 LINE SMOOTH",
"862 -29 OFFCURVE",
"887 -49 OFFCURVE",
"887 -90 QCURVE SMOOTH",
"887 -252 LINE",
"715 -117 LINE",
"543 -254 LINE",
"543 291 LINE SMOOTH",
"543 381 OFFCURVE",
"713 381 QCURVE SMOOTH",
"887 381 OFFCURVE",
"887 291 QCURVE",
"1255 291 LINE",
"1255 872 LINE",
"887 872 LINE",
"887 557 LINE",
"790 610 OFFCURVE",
"606 610 QCURVE SMOOTH",
"172 610 OFFCURVE",
"172 291 QCURVE SMOOTH",
"172 -590 LINE",
"172 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1194 911 OFFCURVE",
"1194 1292 QCURVE SMOOTH",
"1194 1731 LINE SMOOTH",
"1194 2111 OFFCURVE",
"688 2111 QCURVE SMOOTH",
"182 2111 OFFCURVE",
"182 1731 QCURVE SMOOTH",
"182 1292 LINE SMOOTH",
"182 911 OFFCURVE",
"688 911 QCURVE",
"688 911 LINE"
);
},
{
closed = 1;
nodes = (
"481 1104 OFFCURVE",
"481 1292 QCURVE SMOOTH",
"481 1731 LINE SMOOTH",
"481 1919 OFFCURVE",
"688 1919 QCURVE SMOOTH",
"897 1919 OFFCURVE",
"897 1731 QCURVE SMOOTH",
"897 1292 LINE SMOOTH",
"897 1104 OFFCURVE",
"688 1104 QCURVE",
"688 1104 LINE"
);
},
{
closed = 1;
nodes = (
"458 -590 LINE",
"690 -403 LINE",
"921 -590 LINE",
"1196 -590 LINE",
"1196 37 LINE SMOOTH",
"1196 111 OFFCURVE",
"1138 184 OFFCURVE",
"1044 184 QCURVE SMOOTH",
"743 184 LINE",
"743 -8 LINE",
"846 -8 LINE SMOOTH",
"872 -8 OFFCURVE",
"897 -31 OFFCURVE",
"897 -66 QCURVE SMOOTH",
"897 -317 LINE",
"690 -143 LINE",
"481 -319 LINE",
"481 291 LINE SMOOTH",
"481 418 OFFCURVE",
"688 418 QCURVE SMOOTH",
"897 418 OFFCURVE",
"897 291 QCURVE",
"1194 291 LINE",
"1194 872 LINE",
"897 872 LINE",
"897 557 LINE",
"786 610 OFFCURVE",
"622 610 QCURVE SMOOTH",
"182 610 OFFCURVE",
"182 291 QCURVE SMOOTH",
"182 -590 LINE",
"182 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 938 OFFCURVE",
"388 1180 QCURVE SMOOTH",
"388 1620 LINE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1620 QCURVE SMOOTH",
"912 1180 LINE SMOOTH",
"912 938 OFFCURVE",
"650 938 QCURVE",
"650 938 LINE"
);
},
{
closed = 1;
nodes = (
"912 556 LINE",
"784 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 290 QCURVE SMOOTH",
"200 -590 LINE",
"419 -590 LINE",
"651 -380 LINE",
"882 -590 LINE",
"1100 -590 LINE",
"1100 -70 LINE SMOOTH",
"1100 160 OFFCURVE",
"860 160 QCURVE SMOOTH",
"680 160 LINE",
"680 10 LINE",
"860 10 LINE SMOOTH",
"912 10 OFFCURVE",
"912 -70 QCURVE SMOOTH",
"912 -423 LINE",
"651 -185 LINE",
"388 -424 LINE",
"388 290 LINE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 290 QCURVE",
"1100 290 LINE",
"1100 960 LINE",
"1045 960 LINE",
"1100 1047 OFFCURVE",
"1100 1180 QCURVE SMOOTH",
"1100 1620 LINE SMOOTH",
"1100 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1620 QCURVE SMOOTH",
"200 1180 LINE SMOOTH",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"809 800 OFFCURVE",
"912 848 QCURVE",
"912 848 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"830 905 OFFCURVE",
"1043 1096 OFFCURVE",
"1043 1286 QCURVE SMOOTH",
"1043 1724 LINE SMOOTH",
"1043 1915 OFFCURVE",
"830 2105 OFFCURVE",
"628 2105 QCURVE SMOOTH",
"427 2105 OFFCURVE",
"212 1915 OFFCURVE",
"212 1724 QCURVE SMOOTH",
"212 1286 LINE SMOOTH",
"212 1096 OFFCURVE",
"427 905 OFFCURVE",
"628 905 QCURVE",
"628 905 LINE"
);
},
{
closed = 1;
nodes = (
"480 999 OFFCURVE",
"331 1147 OFFCURVE",
"331 1286 QCURVE SMOOTH",
"331 1724 LINE SMOOTH",
"331 1864 OFFCURVE",
"480 2011 OFFCURVE",
"628 2011 QCURVE SMOOTH",
"777 2011 OFFCURVE",
"925 1864 OFFCURVE",
"925 1724 QCURVE SMOOTH",
"925 1286 LINE SMOOTH",
"925 1147 OFFCURVE",
"777 999 OFFCURVE",
"628 999 QCURVE",
"628 999 LINE"
);
},
{
closed = 1;
nodes = (
"359 -590 LINE",
"630 -365 LINE",
"896 -590 LINE",
"1043 -590 LINE",
"1043 45 LINE SMOOTH",
"1043 139 OFFCURVE",
"941 139 QCURVE SMOOTH",
"658 139 LINE",
"658 45 LINE",
"871 45 LINE SMOOTH",
"904 45 OFFCURVE",
"925 12 OFFCURVE",
"925 -20 QCURVE SMOOTH",
"925 -481 LINE",
"630 -233 LINE",
"331 -483 LINE",
"331 291 LINE SMOOTH",
"331 397 OFFCURVE",
"484 516 OFFCURVE",
"632 516 QCURVE SMOOTH",
"925 516 OFFCURVE",
"925 291 QCURVE",
"1043 291 LINE",
"1043 872 LINE",
"925 872 LINE",
"925 522 LINE",
"876 557 OFFCURVE",
"726 610 OFFCURVE",
"632 610 QCURVE SMOOTH",
"431 610 OFFCURVE",
"212 451 OFFCURVE",
"212 291 QCURVE SMOOTH",
"212 -590 LINE",
"212 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"788 885 OFFCURVE",
"991 1075 OFFCURVE",
"991 1266 QCURVE SMOOTH",
"991 1704 LINE SMOOTH",
"991 1894 OFFCURVE",
"788 2085 OFFCURVE",
"608 2085 QCURVE SMOOTH",
"428 2085 OFFCURVE",
"225 1894 OFFCURVE",
"225 1704 QCURVE SMOOTH",
"225 1266 LINE SMOOTH",
"225 1075 OFFCURVE",
"428 885 OFFCURVE",
"608 885 QCURVE",
"608 885 LINE"
);
},
{
closed = 1;
nodes = (
"444 938 OFFCURVE",
"278 1110 OFFCURVE",
"278 1266 QCURVE SMOOTH",
"278 1704 LINE SMOOTH",
"278 1860 OFFCURVE",
"444 2032 OFFCURVE",
"608 2032 QCURVE SMOOTH",
"772 2032 OFFCURVE",
"938 1860 OFFCURVE",
"938 1704 QCURVE SMOOTH",
"938 1266 LINE SMOOTH",
"938 1110 OFFCURVE",
"772 938 OFFCURVE",
"608 938 QCURVE",
"608 938 LINE"
);
},
{
closed = 1;
nodes = (
"303 -590 LINE",
"610 -348 LINE",
"913 -590 LINE",
"991 -590 LINE",
"991 37 LINE SMOOTH",
"991 78 OFFCURVE",
"950 119 OFFCURVE",
"899 119 QCURVE SMOOTH",
"639 119 LINE",
"639 66 LINE",
"884 66 LINE SMOOTH",
"923 66 OFFCURVE",
"938 25 OFFCURVE",
"938 -16 QCURVE SMOOTH",
"938 -541 LINE",
"610 -283 LINE",
"278 -543 LINE",
"278 291 LINE SMOOTH",
"278 416 OFFCURVE",
"452 557 OFFCURVE",
"616 557 QCURVE SMOOTH",
"780 557 OFFCURVE",
"938 428 OFFCURVE",
"938 291 QCURVE",
"991 291 LINE",
"991 872 LINE",
"938 872 LINE",
"938 487 LINE",
"905 532 OFFCURVE",
"737 610 OFFCURVE",
"616 610 QCURVE SMOOTH",
"440 610 OFFCURVE",
"225 451 OFFCURVE",
"225 291 QCURVE SMOOTH",
"225 -590 LINE",
"225 -590 LINE"
);
}
);
width = 1300;
}
);
note = uni19E0;
unicode = 19E0;
},
{
glyphname = uni19E1;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1255 799 OFFCURVE",
"1255 1118 QCURVE SMOOTH",
"1255 1679 LINE SMOOTH",
"1255 1999 OFFCURVE",
"712 1999 QCURVE SMOOTH",
"171 1999 OFFCURVE",
"171 1679 QCURVE SMOOTH",
"171 1559 LINE SMOOTH",
"171 1454 OFFCURVE",
"253 1350 OFFCURVE",
"393 1315 OFFCURVE",
"479 1315 QCURVE SMOOTH",
"712 1315 LINE",
"712 1581 LINE",
"622 1581 LINE SMOOTH",
"563 1581 OFFCURVE",
"542 1634 OFFCURVE",
"542 1661 QCURVE SMOOTH",
"542 1679 LINE SMOOTH",
"542 1769 OFFCURVE",
"712 1769 QCURVE SMOOTH",
"886 1769 OFFCURVE",
"886 1679 QCURVE SMOOTH",
"886 1118 LINE SMOOTH",
"886 1028 OFFCURVE",
"712 1028 QCURVE SMOOTH",
"542 1028 OFFCURVE",
"542 1120 QCURVE",
"171 1120 LINE",
"171 799 OFFCURVE",
"712 799 QCURVE",
"712 799 LINE"
);
},
{
closed = 1;
nodes = (
"1093 -590 LINE",
"1093 610 LINE",
"722 610 LINE",
"716 520 OFFCURVE",
"657 369 OFFCURVE",
"563 274 OFFCURVE",
"503 274 QCURVE SMOOTH",
"460 274 OFFCURVE",
"460 309 QCURVE SMOOTH",
"460 344 OFFCURVE",
"495 344 QCURVE SMOOTH",
"505 344 LINE",
"505 610 LINE",
"425 610 LINE SMOOTH",
"311 610 OFFCURVE",
"169 535 OFFCURVE",
"108 410 OFFCURVE",
"108 332 QCURVE SMOOTH",
"108 233 OFFCURVE",
"214 94 OFFCURVE",
"364 23 OFFCURVE",
"434 23 QCURVE SMOOTH",
"514 23 OFFCURVE",
"616 51 OFFCURVE",
"688 104 OFFCURVE",
"722 139 QCURVE",
"722 -590 LINE",
"722 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1194 799 OFFCURVE",
"1194 1118 QCURVE SMOOTH",
"1194 1679 LINE SMOOTH",
"1194 1999 OFFCURVE",
"688 1999 QCURVE SMOOTH",
"182 1999 OFFCURVE",
"182 1679 QCURVE SMOOTH",
"182 1559 LINE SMOOTH",
"182 1417 OFFCURVE",
"354 1317 OFFCURVE",
"493 1317 QCURVE SMOOTH",
"688 1317 LINE",
"688 1540 LINE",
"579 1540 LINE SMOOTH",
"520 1540 OFFCURVE",
"481 1589 OFFCURVE",
"481 1622 QCURVE SMOOTH",
"481 1679 LINE SMOOTH",
"481 1806 OFFCURVE",
"688 1806 QCURVE SMOOTH",
"897 1806 OFFCURVE",
"897 1679 QCURVE SMOOTH",
"897 1118 LINE SMOOTH",
"897 991 OFFCURVE",
"688 991 QCURVE SMOOTH",
"481 991 OFFCURVE",
"481 1120 QCURVE",
"182 1120 LINE",
"182 799 OFFCURVE",
"688 799 QCURVE",
"688 799 LINE"
);
},
{
closed = 1;
nodes = (
"1056 -590 LINE",
"1056 610 LINE",
"757 610 LINE",
"716 471 OFFCURVE",
"587 301 OFFCURVE",
"493 301 QCURVE SMOOTH",
"432 301 OFFCURVE",
"432 348 QCURVE SMOOTH",
"432 369 OFFCURVE",
"458 395 OFFCURVE",
"483 395 QCURVE SMOOTH",
"501 395 LINE",
"501 610 LINE",
"432 610 LINE SMOOTH",
"286 610 OFFCURVE",
"145 473 OFFCURVE",
"145 362 QCURVE SMOOTH",
"145 281 OFFCURVE",
"231 160 OFFCURVE",
"368 94 OFFCURVE",
"446 94 QCURVE SMOOTH",
"565 94 OFFCURVE",
"704 164 OFFCURVE",
"757 223 QCURVE",
"757 -590 LINE",
"757 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 938 OFFCURVE",
"650 938 QCURVE SMOOTH",
"388 938 OFFCURVE",
"388 1120 QCURVE",
"200 1120 LINE",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1100 800 OFFCURVE",
"1100 1120 QCURVE SMOOTH",
"1100 1680 LINE SMOOTH",
"1100 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1680 QCURVE SMOOTH",
"200 1560 LINE SMOOTH",
"200 1320 OFFCURVE",
"515 1320 QCURVE SMOOTH",
"650 1320 LINE",
"650 1480 LINE",
"515 1480 LINE SMOOTH",
"388 1480 OFFCURVE",
"388 1560 QCURVE SMOOTH",
"388 1680 LINE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1680 QCURVE SMOOTH",
"912 1120 LINE",
"912 1120 LINE"
);
},
{
closed = 1;
nodes = (
"495 472 LINE",
"495 610 LINE",
"442 610 LINE SMOOTH",
"200 610 OFFCURVE",
"200 430 QCURVE SMOOTH",
"200 210 OFFCURVE",
"466 210 QCURVE SMOOTH",
"703 210 OFFCURVE",
"812 356 QCURVE",
"812 -590 LINE",
"1000 -590 LINE",
"1000 610 LINE",
"812 610 LINE",
"728 479 LINE SMOOTH",
"643 348 OFFCURVE",
"466 348 QCURVE SMOOTH",
"388 348 OFFCURVE",
"388 430 QCURVE SMOOTH",
"388 472 OFFCURVE",
"442 472 QCURVE",
"442 472 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"828 799 OFFCURVE",
"1043 961 OFFCURVE",
"1043 1118 QCURVE SMOOTH",
"1043 1679 LINE SMOOTH",
"1043 1999 OFFCURVE",
"626 1999 QCURVE SMOOTH",
"423 1999 OFFCURVE",
"212 1839 OFFCURVE",
"212 1679 QCURVE SMOOTH",
"212 1544 LINE SMOOTH",
"212 1436 OFFCURVE",
"347 1319 OFFCURVE",
"466 1319 QCURVE SMOOTH",
"626 1319 LINE",
"626 1423 LINE",
"466 1423 LINE SMOOTH",
"398 1423 OFFCURVE",
"331 1497 OFFCURVE",
"331 1544 QCURVE SMOOTH",
"331 1679 LINE SMOOTH",
"331 1786 OFFCURVE",
"478 1905 OFFCURVE",
"626 1905 QCURVE SMOOTH",
"775 1905 OFFCURVE",
"923 1786 OFFCURVE",
"923 1679 QCURVE SMOOTH",
"923 1118 LINE SMOOTH",
"923 1012 OFFCURVE",
"775 893 OFFCURVE",
"626 893 QCURVE SMOOTH",
"478 893 OFFCURVE",
"331 1012 OFFCURVE",
"331 1118 QCURVE",
"212 1118 LINE",
"212 963 OFFCURVE",
"425 799 OFFCURVE",
"626 799 QCURVE",
"626 799 LINE"
);
},
{
closed = 1;
nodes = (
"966 -590 LINE",
"966 610 LINE",
"843 610 LINE",
"771 487 OFFCURVE",
"597 317 OFFCURVE",
"484 317 QCURVE SMOOTH",
"411 317 OFFCURVE",
"353 389 OFFCURVE",
"353 426 QCURVE SMOOTH",
"353 457 OFFCURVE",
"409 516 OFFCURVE",
"470 516 QCURVE SMOOTH",
"497 516 LINE",
"497 610 LINE",
"470 610 LINE SMOOTH",
"359 610 OFFCURVE",
"235 516 OFFCURVE",
"235 422 QCURVE SMOOTH",
"235 336 OFFCURVE",
"362 221 OFFCURVE",
"478 221 QCURVE SMOOTH",
"558 221 OFFCURVE",
"695 285 OFFCURVE",
"806 381 OFFCURVE",
"843 434 QCURVE",
"843 -590 LINE",
"843 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"786 799 OFFCURVE",
"989 963 OFFCURVE",
"989 1118 QCURVE SMOOTH",
"989 1679 LINE SMOOTH",
"989 1835 OFFCURVE",
"790 1999 OFFCURVE",
"606 1999 QCURVE SMOOTH",
"424 1999 OFFCURVE",
"225 1839 OFFCURVE",
"225 1679 QCURVE SMOOTH",
"225 1528 LINE SMOOTH",
"225 1432 OFFCURVE",
"340 1319 OFFCURVE",
"422 1319 QCURVE SMOOTH",
"606 1319 LINE",
"606 1372 LINE",
"418 1372 LINE SMOOTH",
"346 1372 OFFCURVE",
"278 1475 OFFCURVE",
"278 1528 QCURVE SMOOTH",
"278 1679 LINE SMOOTH",
"278 1804 OFFCURVE",
"442 1946 OFFCURVE",
"606 1946 QCURVE SMOOTH",
"770 1946 OFFCURVE",
"936 1804 OFFCURVE",
"936 1679 QCURVE SMOOTH",
"936 1118 LINE SMOOTH",
"936 993 OFFCURVE",
"770 852 OFFCURVE",
"606 852 QCURVE SMOOTH",
"442 852 OFFCURVE",
"278 993 OFFCURVE",
"278 1118 QCURVE",
"225 1118 LINE",
"225 963 OFFCURVE",
"430 799 OFFCURVE",
"606 799 QCURVE",
"606 799 LINE"
);
},
{
closed = 1;
nodes = (
"932 -590 LINE",
"932 610 LINE",
"878 610 LINE",
"839 547 OFFCURVE",
"725 399 OFFCURVE",
"577 293 OFFCURVE",
"493 293 QCURVE SMOOTH",
"426 293 OFFCURVE",
"352 340 OFFCURVE",
"321 408 OFFCURVE",
"321 438 QCURVE SMOOTH",
"321 475 OFFCURVE",
"393 557 OFFCURVE",
"481 557 QCURVE SMOOTH",
"499 557 LINE",
"499 610 LINE",
"497 610 LINE SMOOTH",
"383 610 OFFCURVE",
"268 516 OFFCURVE",
"268 436 QCURVE SMOOTH",
"268 340 OFFCURVE",
"397 240 OFFCURVE",
"491 240 QCURVE SMOOTH",
"577 240 OFFCURVE",
"725 330 OFFCURVE",
"839 455 OFFCURVE",
"878 512 QCURVE",
"878 -590 LINE",
"878 -590 LINE"
);
}
);
width = 1300;
}
);
note = uni19E1;
unicode = 19E1;
},
{
glyphname = uni19E2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1742 801 OFFCURVE",
"1742 1200 QCURVE SMOOTH",
"1742 2001 LINE",
"1372 2001 LINE",
"1253 1915 LINE",
"1144 2001 LINE",
"763 2001 LINE",
"763 1401 LINE",
"1173 1401 LINE",
"1173 1630 LINE",
"1144 1630 LINE",
"1144 1741 LINE",
"1253 1659 LINE",
"1372 1741 LINE",
"1372 1200 LINE SMOOTH",
"1372 1030 OFFCURVE",
"1021 1030 QCURVE SMOOTH",
"667 1030 OFFCURVE",
"667 1200 QCURVE SMOOTH",
"667 2126 LINE SMOOTH",
"667 2183 OFFCURVE",
"624 2251 OFFCURVE",
"546 2251 QCURVE SMOOTH",
"196 2251 LINE",
"196 2021 LINE",
"296 2021 LINE",
"296 1200 LINE SMOOTH",
"296 801 OFFCURVE",
"1021 801 QCURVE",
"1021 801 LINE"
);
},
{
closed = 1;
nodes = (
"1370 -590 LINE",
"1370 610 LINE",
"999 610 LINE",
"993 520 OFFCURVE",
"933 369 OFFCURVE",
"839 274 OFFCURVE",
"780 274 QCURVE SMOOTH",
"737 274 OFFCURVE",
"737 309 QCURVE SMOOTH",
"737 344 OFFCURVE",
"771 344 QCURVE SMOOTH",
"782 344 LINE",
"782 610 LINE",
"702 610 LINE SMOOTH",
"587 610 OFFCURVE",
"446 535 OFFCURVE",
"384 410 OFFCURVE",
"384 332 QCURVE SMOOTH",
"384 233 OFFCURVE",
"491 94 OFFCURVE",
"640 23 OFFCURVE",
"710 23 QCURVE SMOOTH",
"790 23 OFFCURVE",
"892 51 OFFCURVE",
"964 104 OFFCURVE",
"999 139 QCURVE",
"999 -590 LINE",
"999 -590 LINE"
);
}
);
width = 1751;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1623 801 OFFCURVE",
"1623 1200 QCURVE SMOOTH",
"1623 2001 LINE",
"1324 2001 LINE",
"1171 1880 LINE",
"1025 2001 LINE",
"718 2001 LINE",
"718 1401 LINE",
"1062 1401 LINE",
"1062 1593 LINE",
"1025 1593 LINE",
"1025 1778 LINE",
"1171 1659 LINE",
"1324 1778 LINE",
"1324 1200 LINE SMOOTH",
"1324 993 OFFCURVE",
"962 993 QCURVE SMOOTH",
"597 993 OFFCURVE",
"597 1200 QCURVE SMOOTH",
"597 2142 LINE SMOOTH",
"597 2193 OFFCURVE",
"554 2251 OFFCURVE",
"487 2251 QCURVE SMOOTH",
"198 2251 LINE",
"198 2058 LINE",
"298 2058 LINE",
"298 1200 LINE SMOOTH",
"298 801 OFFCURVE",
"962 801 QCURVE",
"962 801 LINE"
);
},
{
closed = 1;
nodes = (
"1310 -590 LINE",
"1310 610 LINE",
"1011 610 LINE",
"970 471 OFFCURVE",
"841 301 OFFCURVE",
"747 301 QCURVE SMOOTH",
"685 301 OFFCURVE",
"685 348 QCURVE SMOOTH",
"685 369 OFFCURVE",
"712 395 OFFCURVE",
"737 395 QCURVE SMOOTH",
"755 395 LINE",
"755 610 LINE",
"685 610 LINE SMOOTH",
"540 610 OFFCURVE",
"399 473 OFFCURVE",
"399 362 QCURVE SMOOTH",
"399 281 OFFCURVE",
"485 160 OFFCURVE",
"622 94 OFFCURVE",
"700 94 QCURVE SMOOTH",
"819 94 OFFCURVE",
"958 164 OFFCURVE",
"1011 223 QCURVE",
"1011 -590 LINE",
"1011 -590 LINE"
);
}
);
width = 1708;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1338 2000 LINE",
"1150 2000 LINE",
"940 1826 LINE",
"740 2000 LINE",
"542 2000 LINE",
"542 1400 LINE",
"790 1400 LINE",
"790 1550 LINE",
"740 1550 LINE",
"740 1832 LINE",
"940 1658 LINE",
"1150 1832 LINE",
"1150 1200 LINE SMOOTH",
"1150 938 OFFCURVE",
"769 938 QCURVE SMOOTH",
"388 938 OFFCURVE",
"388 1200 QCURVE SMOOTH",
"388 2100 LINE SMOOTH",
"388 2250 OFFCURVE",
"200 2250 QCURVE SMOOTH",
"100 2250 LINE",
"100 2100 LINE",
"200 2100 LINE",
"200 1200 LINE SMOOTH",
"200 800 OFFCURVE",
"769 800 QCURVE SMOOTH",
"1338 800 OFFCURVE",
"1338 1200 QCURVE",
"1338 1200 LINE"
);
},
{
closed = 1;
nodes = (
"495 472 LINE",
"495 610 LINE",
"442 610 LINE SMOOTH",
"200 610 OFFCURVE",
"200 430 QCURVE SMOOTH",
"200 210 OFFCURVE",
"466 210 QCURVE SMOOTH",
"703 210 OFFCURVE",
"812 356 QCURVE",
"812 -590 LINE",
"1000 -590 LINE",
"1000 610 LINE",
"812 610 LINE",
"728 479 LINE SMOOTH",
"643 348 OFFCURVE",
"466 348 QCURVE SMOOTH",
"388 348 OFFCURVE",
"388 430 QCURVE SMOOTH",
"388 472 OFFCURVE",
"442 472 QCURVE",
"442 472 LINE"
);
}
);
width = 1538;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1068 801 OFFCURVE",
"1334 999 OFFCURVE",
"1334 1200 QCURVE SMOOTH",
"1334 2001 LINE",
"1214 2001 LINE",
"972 1792 LINE",
"732 2001 LINE",
"611 2001 LINE",
"611 1415 LINE",
"786 1415 LINE",
"786 1511 LINE",
"732 1511 LINE",
"732 1882 LINE",
"972 1673 LINE",
"1214 1882 LINE",
"1214 1200 LINE SMOOTH",
"1214 1053 OFFCURVE",
"1017 895 OFFCURVE",
"818 895 QCURVE SMOOTH",
"624 895 OFFCURVE",
"429 1053 OFFCURVE",
"429 1200 QCURVE SMOOTH",
"429 2189 LINE SMOOTH",
"429 2224 OFFCURVE",
"398 2257 OFFCURVE",
"360 2257 QCURVE SMOOTH",
"208 2257 LINE",
"208 2161 LINE",
"308 2161 LINE",
"308 1200 LINE SMOOTH",
"308 1001 OFFCURVE",
"568 801 OFFCURVE",
"818 801 QCURVE",
"818 801 LINE"
);
},
{
closed = 1;
nodes = (
"1183 -590 LINE",
"1183 610 LINE",
"1060 610 LINE",
"988 487 OFFCURVE",
"814 317 OFFCURVE",
"702 317 QCURVE SMOOTH",
"628 317 OFFCURVE",
"570 389 OFFCURVE",
"570 426 QCURVE SMOOTH",
"570 457 OFFCURVE",
"626 516 OFFCURVE",
"687 516 QCURVE SMOOTH",
"714 516 LINE",
"714 610 LINE",
"687 610 LINE SMOOTH",
"577 610 OFFCURVE",
"452 516 OFFCURVE",
"452 422 QCURVE SMOOTH",
"452 336 OFFCURVE",
"579 221 OFFCURVE",
"695 221 QCURVE SMOOTH",
"775 221 OFFCURVE",
"913 285 OFFCURVE",
"1023 381 OFFCURVE",
"1060 434 QCURVE",
"1060 -590 LINE",
"1060 -590 LINE"
);
}
);
width = 1593;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"987 801 OFFCURVE",
"1233 997 OFFCURVE",
"1233 1200 QCURVE SMOOTH",
"1233 2001 LINE",
"1179 2001 LINE",
"901 1759 LINE",
"629 2001 LINE",
"575 2001 LINE",
"575 1432 LINE",
"684 1432 LINE",
"684 1485 LINE",
"629 1485 LINE",
"629 1929 LINE",
"901 1688 LINE",
"1179 1929 LINE",
"1179 1200 LINE SMOOTH",
"1179 1036 OFFCURVE",
"977 854 OFFCURVE",
"774 854 QCURVE SMOOTH",
"573 854 OFFCURVE",
"373 1036 OFFCURVE",
"373 1200 QCURVE SMOOTH",
"373 2214 LINE SMOOTH",
"373 2243 OFFCURVE",
"356 2263 OFFCURVE",
"330 2263 QCURVE SMOOTH",
"221 2263 LINE",
"221 2210 LINE",
"319 2210 LINE",
"319 1200 LINE SMOOTH",
"319 1001 OFFCURVE",
"561 801 OFFCURVE",
"774 801 QCURVE",
"774 801 LINE"
);
},
{
closed = 1;
nodes = (
"1149 -590 LINE",
"1149 610 LINE",
"1095 610 LINE",
"1057 547 OFFCURVE",
"942 399 OFFCURVE",
"794 293 OFFCURVE",
"710 293 QCURVE SMOOTH",
"643 293 OFFCURVE",
"569 340 OFFCURVE",
"538 408 OFFCURVE",
"538 438 QCURVE SMOOTH",
"538 475 OFFCURVE",
"610 557 OFFCURVE",
"698 557 QCURVE SMOOTH",
"717 557 LINE",
"717 610 LINE",
"715 610 LINE SMOOTH",
"600 610 OFFCURVE",
"485 516 OFFCURVE",
"485 436 QCURVE SMOOTH",
"485 340 OFFCURVE",
"614 240 OFFCURVE",
"708 240 QCURVE SMOOTH",
"794 240 OFFCURVE",
"942 330 OFFCURVE",
"1057 455 OFFCURVE",
"1095 512 QCURVE",
"1095 -590 LINE",
"1095 -590 LINE"
);
}
);
width = 1544;
}
);
note = uni19E2;
unicode = 19E2;
},
{
glyphname = uni19E3;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"623 801 LINE",
"623 1030 LINE",
"543 1030 LINE",
"543 1667 LINE SMOOTH",
"543 1772 OFFCURVE",
"651 1772 QCURVE SMOOTH",
"760 1772 OFFCURVE",
"760 1667 QCURVE SMOOTH",
"760 801 LINE",
"1128 801 LINE",
"1128 1667 LINE SMOOTH",
"1128 1772 OFFCURVE",
"1239 1772 QCURVE SMOOTH",
"1348 1772 OFFCURVE",
"1348 1667 QCURVE SMOOTH",
"1348 801 LINE",
"1716 801 LINE",
"1716 1640 LINE SMOOTH",
"1716 2001 OFFCURVE",
"1239 2001 QCURVE SMOOTH",
"1040 2001 OFFCURVE",
"944 1911 QCURVE",
"848 2001 OFFCURVE",
"651 2001 QCURVE SMOOTH",
"172 2001 OFFCURVE",
"172 1651 QCURVE SMOOTH",
"172 801 LINE",
"172 801 LINE"
);
},
{
closed = 1;
nodes = (
"1376 -590 LINE",
"1376 610 LINE",
"1006 610 LINE",
"999 520 OFFCURVE",
"940 369 OFFCURVE",
"846 274 OFFCURVE",
"786 274 QCURVE SMOOTH",
"743 274 OFFCURVE",
"743 309 QCURVE SMOOTH",
"743 344 OFFCURVE",
"778 344 QCURVE SMOOTH",
"788 344 LINE",
"788 610 LINE",
"709 610 LINE SMOOTH",
"594 610 OFFCURVE",
"453 535 OFFCURVE",
"391 410 OFFCURVE",
"391 332 QCURVE SMOOTH",
"391 233 OFFCURVE",
"498 94 OFFCURVE",
"647 23 OFFCURVE",
"717 23 QCURVE SMOOTH",
"797 23 OFFCURVE",
"899 51 OFFCURVE",
"971 104 OFFCURVE",
"1006 139 QCURVE",
"1006 -590 LINE",
"1006 -590 LINE"
);
}
);
width = 1763;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"569 801 LINE",
"569 993 LINE",
"483 993 LINE",
"483 1657 LINE SMOOTH",
"483 1808 OFFCURVE",
"626 1808 QCURVE SMOOTH",
"698 1808 OFFCURVE",
"770 1735 OFFCURVE",
"770 1669 QCURVE SMOOTH",
"770 801 LINE",
"1069 801 LINE",
"1069 1669 LINE SMOOTH",
"1069 1735 OFFCURVE",
"1143 1808 OFFCURVE",
"1214 1808 QCURVE SMOOTH",
"1358 1808 OFFCURVE",
"1358 1657 QCURVE SMOOTH",
"1358 801 LINE",
"1657 801 LINE",
"1657 1640 LINE SMOOTH",
"1657 2001 OFFCURVE",
"1214 2001 QCURVE SMOOTH",
"1016 2001 OFFCURVE",
"919 1911 QCURVE",
"823 2001 OFFCURVE",
"626 2001 QCURVE SMOOTH",
"182 2001 OFFCURVE",
"182 1651 QCURVE SMOOTH",
"182 801 LINE",
"182 801 LINE"
);
},
{
closed = 1;
nodes = (
"1339 -590 LINE",
"1339 610 LINE",
"1040 610 LINE",
"999 471 OFFCURVE",
"870 301 OFFCURVE",
"776 301 QCURVE SMOOTH",
"714 301 OFFCURVE",
"714 348 QCURVE SMOOTH",
"714 369 OFFCURVE",
"741 395 OFFCURVE",
"766 395 QCURVE SMOOTH",
"784 395 LINE",
"784 610 LINE",
"714 610 LINE SMOOTH",
"569 610 OFFCURVE",
"428 473 OFFCURVE",
"428 362 QCURVE SMOOTH",
"428 281 OFFCURVE",
"514 160 OFFCURVE",
"651 94 OFFCURVE",
"729 94 QCURVE SMOOTH",
"848 94 OFFCURVE",
"987 164 OFFCURVE",
"1040 223 QCURVE",
"1040 -590 LINE",
"1040 -590 LINE"
);
}
);
width = 1763;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"976 1640 LINE SMOOTH",
"976 1862 OFFCURVE",
"1176 1862 QCURVE SMOOTH",
"1376 1862 OFFCURVE",
"1376 1640 QCURVE SMOOTH",
"1376 800 LINE",
"1564 800 LINE",
"1564 1640 LINE SMOOTH",
"1564 2000 OFFCURVE",
"1176 2000 QCURVE SMOOTH",
"975 2000 OFFCURVE",
"881 1911 QCURVE",
"787 2000 OFFCURVE",
"588 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1650 QCURVE SMOOTH",
"200 800 LINE",
"488 800 LINE",
"488 938 LINE",
"388 938 LINE",
"388 1640 LINE SMOOTH",
"388 1862 OFFCURVE",
"588 1862 QCURVE SMOOTH",
"788 1862 OFFCURVE",
"788 1640 QCURVE SMOOTH",
"788 800 LINE",
"976 800 LINE",
"976 800 LINE"
);
},
{
closed = 1;
nodes = (
"495 472 LINE",
"495 610 LINE",
"442 610 LINE SMOOTH",
"200 610 OFFCURVE",
"200 430 QCURVE SMOOTH",
"200 210 OFFCURVE",
"466 210 QCURVE SMOOTH",
"703 210 OFFCURVE",
"812 356 QCURVE",
"812 -590 LINE",
"1000 -590 LINE",
"1000 610 LINE",
"812 610 LINE",
"728 479 LINE SMOOTH",
"643 348 OFFCURVE",
"466 348 QCURVE SMOOTH",
"388 348 OFFCURVE",
"388 430 QCURVE SMOOTH",
"388 472 OFFCURVE",
"442 472 QCURVE",
"442 472 LINE"
);
}
);
width = 1764;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"433 801 LINE",
"433 895 LINE",
"333 895 LINE",
"333 1661 LINE SMOOTH",
"333 1907 OFFCURVE",
"566 1907 QCURVE SMOOTH",
"681 1907 OFFCURVE",
"802 1819 OFFCURVE",
"802 1749 QCURVE SMOOTH",
"802 801 LINE",
"921 801 LINE",
"921 1749 LINE SMOOTH",
"921 1819 OFFCURVE",
"1037 1907 OFFCURVE",
"1154 1907 QCURVE SMOOTH",
"1269 1907 OFFCURVE",
"1388 1784 OFFCURVE",
"1388 1671 QCURVE SMOOTH",
"1388 801 LINE",
"1510 801 LINE",
"1510 1671 LINE SMOOTH",
"1510 1835 OFFCURVE",
"1318 2001 OFFCURVE",
"1154 2001 QCURVE SMOOTH",
"955 2001 OFFCURVE",
"859 1911 QCURVE",
"763 2001 OFFCURVE",
"566 2001 QCURVE SMOOTH",
"402 2001 OFFCURVE",
"212 1839 OFFCURVE",
"212 1671 QCURVE SMOOTH",
"212 801 LINE",
"212 801 LINE"
);
},
{
closed = 1;
nodes = (
"1248 -590 LINE",
"1248 610 LINE",
"1125 610 LINE",
"1054 487 OFFCURVE",
"880 317 OFFCURVE",
"767 317 QCURVE SMOOTH",
"693 317 OFFCURVE",
"636 389 OFFCURVE",
"636 426 QCURVE SMOOTH",
"636 457 OFFCURVE",
"691 516 OFFCURVE",
"753 516 QCURVE SMOOTH",
"779 516 LINE",
"779 610 LINE",
"753 610 LINE SMOOTH",
"642 610 OFFCURVE",
"517 516 OFFCURVE",
"517 422 QCURVE SMOOTH",
"517 336 OFFCURVE",
"644 221 OFFCURVE",
"761 221 QCURVE SMOOTH",
"841 221 OFFCURVE",
"978 285 OFFCURVE",
"1089 381 OFFCURVE",
"1125 434 QCURVE",
"1125 -590 LINE",
"1125 -590 LINE"
);
}
);
width = 1763;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"379 801 LINE",
"379 854 LINE",
"278 854 LINE",
"278 1681 LINE SMOOTH",
"278 1808 OFFCURVE",
"415 1948 OFFCURVE",
"547 1948 QCURVE SMOOTH",
"678 1948 OFFCURVE",
"815 1876 OFFCURVE",
"815 1827 QCURVE SMOOTH",
"815 801 LINE",
"868 801 LINE",
"868 1827 LINE SMOOTH",
"868 1876 OFFCURVE",
"1001 1948 OFFCURVE",
"1134 1948 QCURVE SMOOTH",
"1265 1948 OFFCURVE",
"1403 1815 OFFCURVE",
"1403 1702 QCURVE SMOOTH",
"1403 801 LINE",
"1456 801 LINE",
"1456 1702 LINE SMOOTH",
"1456 1851 OFFCURVE",
"1267 2001 OFFCURVE",
"1134 2001 QCURVE SMOOTH",
"936 2001 OFFCURVE",
"839 1911 QCURVE",
"743 2001 OFFCURVE",
"547 2001 QCURVE SMOOTH",
"413 2001 OFFCURVE",
"225 1851 OFFCURVE",
"225 1692 QCURVE SMOOTH",
"225 801 LINE",
"225 801 LINE"
);
},
{
closed = 1;
nodes = (
"1214 -590 LINE",
"1214 610 LINE",
"1161 610 LINE",
"1122 547 OFFCURVE",
"1007 399 OFFCURVE",
"860 293 OFFCURVE",
"776 293 QCURVE SMOOTH",
"708 293 OFFCURVE",
"635 340 OFFCURVE",
"604 408 OFFCURVE",
"604 438 QCURVE SMOOTH",
"604 475 OFFCURVE",
"676 557 OFFCURVE",
"764 557 QCURVE SMOOTH",
"782 557 LINE",
"782 610 LINE",
"780 610 LINE SMOOTH",
"665 610 OFFCURVE",
"551 516 OFFCURVE",
"551 436 QCURVE SMOOTH",
"551 340 OFFCURVE",
"680 240 OFFCURVE",
"774 240 QCURVE SMOOTH",
"860 240 OFFCURVE",
"1007 330 OFFCURVE",
"1122 455 OFFCURVE",
"1161 512 QCURVE",
"1161 -590 LINE",
"1161 -590 LINE"
);
}
);
width = 1763;
}
);
note = uni19E3;
unicode = 19E3;
},
{
glyphname = uni19E4;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1322 801 LINE",
"1392 983 LINE",
"1251 1298 LINE",
"1251 1470 LINE",
"1376 1470 LINE",
"1376 1739 LINE",
"1263 1739 LINE SMOOTH",
"1163 1739 OFFCURVE",
"989 1724 OFFCURVE",
"884 1665 OFFCURVE",
"884 1602 QCURVE SMOOTH",
"884 1249 LINE",
"1062 1030 LINE",
"833 1030 LINE SMOOTH",
"663 1030 OFFCURVE",
"663 1200 QCURVE SMOOTH",
"663 2111 LINE SMOOTH",
"663 2187 OFFCURVE",
"591 2261 OFFCURVE",
"509 2261 QCURVE SMOOTH",
"192 2261 LINE",
"192 2032 LINE",
"292 2032 LINE",
"292 1200 LINE SMOOTH",
"292 801 OFFCURVE",
"833 801 QCURVE",
"833 801 LINE"
);
},
{
closed = 1;
nodes = (
"1187 -590 LINE",
"1187 610 LINE",
"817 610 LINE",
"810 520 OFFCURVE",
"751 369 OFFCURVE",
"657 274 OFFCURVE",
"598 274 QCURVE SMOOTH",
"554 274 OFFCURVE",
"554 309 QCURVE SMOOTH",
"554 344 OFFCURVE",
"589 344 QCURVE SMOOTH",
"600 344 LINE",
"600 610 LINE",
"520 610 LINE SMOOTH",
"405 610 OFFCURVE",
"264 535 OFFCURVE",
"202 410 OFFCURVE",
"202 332 QCURVE SMOOTH",
"202 233 OFFCURVE",
"309 94 OFFCURVE",
"458 23 OFFCURVE",
"528 23 QCURVE SMOOTH",
"608 23 OFFCURVE",
"710 51 OFFCURVE",
"782 104 OFFCURVE",
"817 139 QCURVE",
"817 -590 LINE",
"817 -590 LINE"
);
}
);
width = 1404;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1255 801 LINE",
"1316 965 LINE",
"1148 1298 LINE",
"1148 1522 LINE",
"1306 1522 LINE",
"1306 1739 LINE",
"1161 1739 LINE SMOOTH",
"1073 1739 OFFCURVE",
"933 1718 OFFCURVE",
"851 1661 OFFCURVE",
"851 1602 QCURVE SMOOTH",
"851 1249 LINE",
"1064 993 LINE",
"800 993 LINE SMOOTH",
"593 993 OFFCURVE",
"593 1200 QCURVE SMOOTH",
"593 2111 LINE SMOOTH",
"593 2187 OFFCURVE",
"534 2261 OFFCURVE",
"458 2261 QCURVE SMOOTH",
"194 2261 LINE",
"194 2068 LINE",
"294 2068 LINE",
"294 1200 LINE SMOOTH",
"294 801 OFFCURVE",
"800 801 QCURVE",
"800 801 LINE"
);
},
{
closed = 1;
nodes = (
"1152 -590 LINE",
"1152 610 LINE",
"853 610 LINE",
"812 471 OFFCURVE",
"683 301 OFFCURVE",
"589 301 QCURVE SMOOTH",
"528 301 OFFCURVE",
"528 348 QCURVE SMOOTH",
"528 369 OFFCURVE",
"554 395 OFFCURVE",
"579 395 QCURVE SMOOTH",
"597 395 LINE",
"597 610 LINE",
"528 610 LINE SMOOTH",
"382 610 OFFCURVE",
"241 473 OFFCURVE",
"241 362 QCURVE SMOOTH",
"241 281 OFFCURVE",
"327 160 OFFCURVE",
"464 94 OFFCURVE",
"542 94 QCURVE SMOOTH",
"661 94 OFFCURVE",
"800 164 OFFCURVE",
"853 223 QCURVE",
"853 -590 LINE",
"853 -590 LINE"
);
}
);
width = 1402;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 2110 LINE SMOOTH",
"388 2260 OFFCURVE",
"200 2260 QCURVE SMOOTH",
"100 2260 LINE",
"100 2100 LINE",
"200 2100 LINE",
"200 1200 LINE SMOOTH",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1050 800 LINE",
"1100 938 LINE",
"888 1298 LINE",
"888 1600 LINE",
"1100 1600 LINE",
"1100 1738 LINE",
"900 1738 LINE SMOOTH",
"800 1738 OFFCURVE",
"700 1675 OFFCURVE",
"700 1600 QCURVE SMOOTH",
"700 1248 LINE",
"970 938 LINE",
"650 938 LINE SMOOTH",
"388 938 OFFCURVE",
"388 1200 QCURVE",
"388 1200 LINE"
);
},
{
closed = 1;
nodes = (
"495 472 LINE",
"495 610 LINE",
"442 610 LINE SMOOTH",
"200 610 OFFCURVE",
"200 430 QCURVE SMOOTH",
"200 210 OFFCURVE",
"466 210 QCURVE SMOOTH",
"703 210 OFFCURVE",
"812 356 QCURVE",
"812 -590 LINE",
"1000 -590 LINE",
"1000 610 LINE",
"812 610 LINE",
"728 479 LINE SMOOTH",
"643 348 OFFCURVE",
"466 348 QCURVE SMOOTH",
"388 348 OFFCURVE",
"388 430 QCURVE SMOOTH",
"388 472 OFFCURVE",
"442 472 QCURVE",
"442 472 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1089 801 LINE",
"1136 901 LINE",
"898 1282 LINE",
"898 1645 LINE",
"1142 1645 LINE",
"1142 1739 LINE",
"929 1739 LINE SMOOTH",
"843 1739 OFFCURVE",
"777 1690 OFFCURVE",
"777 1628 QCURVE SMOOTH",
"777 1249 LINE",
"1044 895 LINE",
"724 895 LINE SMOOTH",
"577 895 OFFCURVE",
"429 1053 OFFCURVE",
"429 1200 QCURVE SMOOTH",
"429 2161 LINE SMOOTH",
"429 2214 OFFCURVE",
"394 2261 OFFCURVE",
"349 2261 QCURVE SMOOTH",
"208 2261 LINE",
"208 2165 LINE",
"310 2165 LINE",
"310 1200 LINE SMOOTH",
"310 1001 OFFCURVE",
"523 801 OFFCURVE",
"724 801 QCURVE",
"724 801 LINE"
);
},
{
closed = 1;
nodes = (
"1064 -590 LINE",
"1064 610 LINE",
"941 610 LINE",
"870 487 OFFCURVE",
"695 317 OFFCURVE",
"583 317 QCURVE SMOOTH",
"509 317 OFFCURVE",
"452 389 OFFCURVE",
"452 426 QCURVE SMOOTH",
"452 457 OFFCURVE",
"507 516 OFFCURVE",
"568 516 QCURVE SMOOTH",
"595 516 LINE",
"595 610 LINE",
"568 610 LINE SMOOTH",
"458 610 OFFCURVE",
"333 516 OFFCURVE",
"333 422 QCURVE SMOOTH",
"333 336 OFFCURVE",
"460 221 OFFCURVE",
"577 221 QCURVE SMOOTH",
"657 221 OFFCURVE",
"794 285 OFFCURVE",
"904 381 OFFCURVE",
"941 434 QCURVE",
"941 -590 LINE",
"941 -590 LINE"
);
}
);
width = 1398;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1030 801 LINE",
"1075 864 LINE",
"811 1266 LINE",
"811 1686 LINE",
"1085 1686 LINE",
"1085 1739 LINE",
"860 1739 LINE SMOOTH",
"786 1739 OFFCURVE",
"758 1704 OFFCURVE",
"758 1657 QCURVE SMOOTH",
"758 1249 LINE",
"1018 854 LINE",
"702 854 LINE SMOOTH",
"538 854 OFFCURVE",
"375 1036 OFFCURVE",
"375 1200 QCURVE SMOOTH",
"375 2208 LINE SMOOTH",
"375 2241 OFFCURVE",
"348 2261 OFFCURVE",
"321 2261 QCURVE SMOOTH",
"221 2261 LINE",
"221 2208 LINE",
"321 2208 LINE",
"321 1200 LINE SMOOTH",
"321 1001 OFFCURVE",
"526 801 OFFCURVE",
"702 801 QCURVE",
"702 801 LINE"
);
},
{
closed = 1;
nodes = (
"1030 -590 LINE",
"1030 610 LINE",
"977 610 LINE",
"938 547 OFFCURVE",
"823 399 OFFCURVE",
"676 293 OFFCURVE",
"592 293 QCURVE SMOOTH",
"524 293 OFFCURVE",
"450 340 OFFCURVE",
"420 408 OFFCURVE",
"420 438 QCURVE SMOOTH",
"420 475 OFFCURVE",
"491 557 OFFCURVE",
"579 557 QCURVE SMOOTH",
"598 557 LINE",
"598 610 LINE",
"596 610 LINE SMOOTH",
"481 610 OFFCURVE",
"366 516 OFFCURVE",
"366 436 QCURVE SMOOTH",
"366 340 OFFCURVE",
"495 240 OFFCURVE",
"590 240 QCURVE SMOOTH",
"676 240 OFFCURVE",
"823 330 OFFCURVE",
"938 455 OFFCURVE",
"977 512 QCURVE",
"977 -590 LINE",
"977 -590 LINE"
);
}
);
width = 1396;
}
);
note = uni19E4;
unicode = 19E4;
},
{
glyphname = uni19E5;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1194 803 LINE",
"1265 985 LINE",
"1128 1200 LINE",
"1128 1335 LINE",
"1249 1335 LINE",
"1249 1604 LINE",
"946 1604 LINE SMOOTH",
"845 1604 OFFCURVE",
"757 1518 OFFCURVE",
"757 1403 QCURVE SMOOTH",
"757 1171 LINE",
"915 1032 LINE",
"706 1032 LINE SMOOTH",
"536 1032 OFFCURVE",
"536 1133 QCURVE SMOOTH",
"536 1561 LINE SMOOTH",
"536 1620 OFFCURVE",
"563 1710 OFFCURVE",
"579 1729 QCURVE",
"634 1702 OFFCURVE",
"735 1671 OFFCURVE",
"813 1671 QCURVE SMOOTH",
"1040 1671 OFFCURVE",
"1251 1855 OFFCURVE",
"1251 2011 QCURVE SMOOTH",
"1251 2265 LINE",
"880 2265 LINE",
"880 1968 LINE SMOOTH",
"880 1923 OFFCURVE",
"837 1884 OFFCURVE",
"817 1880 QCURVE SMOOTH",
"808 1878 OFFCURVE",
"796 1878 QCURVE SMOOTH",
"785 1878 OFFCURVE",
"772 1880 QCURVE SMOOTH",
"745 1884 OFFCURVE",
"708 1898 QCURVE",
"725 1925 OFFCURVE",
"753 1989 OFFCURVE",
"753 2048 QCURVE SMOOTH",
"753 2097 OFFCURVE",
"694 2191 OFFCURVE",
"583 2255 OFFCURVE",
"508 2255 QCURVE SMOOTH",
"419 2255 OFFCURVE",
"303 2183 OFFCURVE",
"243 2081 OFFCURVE",
"243 2032 QCURVE SMOOTH",
"243 1966 OFFCURVE",
"278 1901 OFFCURVE",
"303 1868 QCURVE",
"213 1808 OFFCURVE",
"165 1663 OFFCURVE",
"165 1561 QCURVE SMOOTH",
"165 1133 LINE SMOOTH",
"165 803 OFFCURVE",
"706 803 QCURVE",
"706 803 LINE"
);
},
{
closed = 1;
nodes = (
"1087 -590 LINE",
"1087 610 LINE",
"716 610 LINE",
"710 520 OFFCURVE",
"651 369 OFFCURVE",
"557 274 OFFCURVE",
"497 274 QCURVE SMOOTH",
"454 274 OFFCURVE",
"454 309 QCURVE SMOOTH",
"454 344 OFFCURVE",
"489 344 QCURVE SMOOTH",
"499 344 LINE",
"499 610 LINE",
"419 610 LINE SMOOTH",
"305 610 OFFCURVE",
"163 535 OFFCURVE",
"102 410 OFFCURVE",
"102 332 QCURVE SMOOTH",
"102 233 OFFCURVE",
"208 94 OFFCURVE",
"358 23 OFFCURVE",
"428 23 QCURVE SMOOTH",
"508 23 OFFCURVE",
"610 51 OFFCURVE",
"682 104 OFFCURVE",
"716 139 QCURVE",
"716 -590 LINE",
"716 -590 LINE"
);
}
);
width = 1304;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1138 803 LINE",
"1202 967 LINE",
"1036 1200 LINE",
"1036 1386 LINE",
"1192 1386 LINE",
"1192 1604 LINE",
"925 1604 LINE SMOOTH",
"737 1604 OFFCURVE",
"737 1403 QCURVE SMOOTH",
"737 1171 LINE",
"929 995 LINE",
"686 995 LINE SMOOTH",
"479 995 OFFCURVE",
"479 1133 QCURVE SMOOTH",
"479 1599 LINE SMOOTH",
"479 1659 OFFCURVE",
"516 1741 OFFCURVE",
"542 1761 QCURVE",
"606 1733 OFFCURVE",
"723 1700 OFFCURVE",
"800 1700 QCURVE SMOOTH",
"993 1700 OFFCURVE",
"1194 1868 OFFCURVE",
"1194 2011 QCURVE SMOOTH",
"1194 2265 LINE",
"895 2265 LINE",
"895 1985 LINE SMOOTH",
"895 1937 OFFCURVE",
"839 1884 OFFCURVE",
"798 1882 QCURVE SMOOTH",
"790 1881 OFFCURVE",
"782 1881 QCURVE SMOOTH",
"764 1881 OFFCURVE",
"745 1884 QCURVE SMOOTH",
"716 1888 OFFCURVE",
"675 1903 QCURVE",
"696 1929 OFFCURVE",
"725 1991 OFFCURVE",
"725 2044 QCURVE SMOOTH",
"725 2087 OFFCURVE",
"673 2173 OFFCURVE",
"575 2230 OFFCURVE",
"503 2230 QCURVE SMOOTH",
"428 2230 OFFCURVE",
"323 2169 OFFCURVE",
"270 2077 OFFCURVE",
"270 2030 QCURVE SMOOTH",
"270 1976 OFFCURVE",
"301 1913 OFFCURVE",
"325 1884 QCURVE",
"237 1831 OFFCURVE",
"180 1702 OFFCURVE",
"180 1599 QCURVE SMOOTH",
"180 1133 LINE SMOOTH",
"180 803 OFFCURVE",
"686 803 QCURVE",
"686 803 LINE"
);
},
{
closed = 1;
nodes = (
"1054 -590 LINE",
"1054 610 LINE",
"755 610 LINE",
"714 471 OFFCURVE",
"585 301 OFFCURVE",
"491 301 QCURVE SMOOTH",
"430 301 OFFCURVE",
"430 348 QCURVE SMOOTH",
"430 369 OFFCURVE",
"456 395 OFFCURVE",
"481 395 QCURVE SMOOTH",
"499 395 LINE",
"499 610 LINE",
"430 610 LINE SMOOTH",
"284 610 OFFCURVE",
"143 473 OFFCURVE",
"143 362 QCURVE SMOOTH",
"143 281 OFFCURVE",
"229 160 OFFCURVE",
"366 94 OFFCURVE",
"444 94 QCURVE SMOOTH",
"563 94 OFFCURVE",
"702 164 OFFCURVE",
"755 223 QCURVE",
"755 -590 LINE",
"755 -590 LINE"
);
}
);
width = 1304;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 1690 LINE SMOOTH",
"388 1739 OFFCURVE",
"436 1785 OFFCURVE",
"472 1804 QCURVE",
"614 1755 OFFCURVE",
"770 1755 QCURVE SMOOTH",
"928 1755 OFFCURVE",
"1011 1825 QCURVE",
"1100 1886 OFFCURVE",
"1100 2009 QCURVE SMOOTH",
"1100 2370 LINE",
"912 2370 LINE",
"912 2009 LINE SMOOTH",
"912 1959 OFFCURVE",
"840 1893 OFFCURVE",
"770 1893 QCURVE SMOOTH",
"696 1893 OFFCURVE",
"595 1923 QCURVE",
"670 1974 OFFCURVE",
"670 2026 QCURVE SMOOTH",
"670 2170 OFFCURVE",
"480 2170 QCURVE SMOOTH",
"300 2170 OFFCURVE",
"300 2026 QCURVE SMOOTH",
"300 1964 OFFCURVE",
"368 1907 QCURVE",
"347 1900 OFFCURVE",
"325 1890 QCURVE SMOOTH",
"200 1837 OFFCURVE",
"200 1690 QCURVE SMOOTH",
"200 1130 LINE SMOOTH",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1048 800 LINE",
"1100 938 LINE",
"888 1198 LINE",
"888 1462 LINE",
"1100 1462 LINE",
"1100 1600 LINE",
"888 1600 LINE SMOOTH",
"800 1600 OFFCURVE",
"700 1475 OFFCURVE",
"700 1400 QCURVE SMOOTH",
"700 1168 LINE",
"950 938 LINE",
"650 938 LINE SMOOTH",
"388 938 OFFCURVE",
"388 1130 QCURVE",
"388 1130 LINE"
);
},
{
closed = 1;
nodes = (
"495 472 LINE",
"495 610 LINE",
"442 610 LINE SMOOTH",
"200 610 OFFCURVE",
"200 430 QCURVE SMOOTH",
"200 210 OFFCURVE",
"466 210 QCURVE SMOOTH",
"703 210 OFFCURVE",
"812 356 QCURVE",
"812 -590 LINE",
"1000 -590 LINE",
"1000 610 LINE",
"812 610 LINE",
"728 479 LINE SMOOTH",
"643 348 OFFCURVE",
"466 348 QCURVE SMOOTH",
"388 348 OFFCURVE",
"388 430 QCURVE SMOOTH",
"388 472 OFFCURVE",
"442 472 QCURVE",
"442 472 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1013 803 LINE",
"1062 903 LINE",
"825 1233 LINE",
"825 1507 LINE",
"1066 1507 LINE",
"1066 1604 LINE",
"833 1604 LINE SMOOTH",
"763 1604 OFFCURVE",
"702 1524 OFFCURVE",
"702 1462 QCURVE SMOOTH",
"702 1212 LINE",
"958 897 LINE",
"649 897 LINE SMOOTH",
"501 897 OFFCURVE",
"354 1038 OFFCURVE",
"354 1167 QCURVE SMOOTH",
"354 1659 LINE SMOOTH",
"354 1737 OFFCURVE",
"430 1823 OFFCURVE",
"475 1845 QCURVE",
"612 1772 OFFCURVE",
"763 1772 QCURVE SMOOTH",
"841 1772 OFFCURVE",
"980 1829 OFFCURVE",
"1066 1937 OFFCURVE",
"1066 2011 QCURVE SMOOTH",
"1066 2265 LINE",
"946 2265 LINE",
"946 2011 LINE SMOOTH",
"946 1956 OFFCURVE",
"837 1868 OFFCURVE",
"759 1868 QCURVE SMOOTH",
"710 1868 OFFCURVE",
"614 1884 OFFCURVE",
"571 1905 QCURVE",
"591 1925 OFFCURVE",
"616 1970 OFFCURVE",
"616 2003 QCURVE SMOOTH",
"616 2046 OFFCURVE",
"550 2118 OFFCURVE",
"485 2118 QCURVE SMOOTH",
"423 2118 OFFCURVE",
"354 2048 OFFCURVE",
"354 1999 QCURVE SMOOTH",
"354 1950 OFFCURVE",
"391 1913 QCURVE",
"303 1872 OFFCURVE",
"235 1747 OFFCURVE",
"235 1665 QCURVE SMOOTH",
"235 1167 LINE SMOOTH",
"235 987 OFFCURVE",
"448 803 OFFCURVE",
"653 803 QCURVE",
"653 803 LINE"
);
},
{
closed = 1;
nodes = (
"989 -590 LINE",
"989 610 LINE",
"866 610 LINE",
"794 487 OFFCURVE",
"620 317 OFFCURVE",
"507 317 QCURVE SMOOTH",
"434 317 OFFCURVE",
"376 389 OFFCURVE",
"376 426 QCURVE SMOOTH",
"376 457 OFFCURVE",
"432 516 OFFCURVE",
"493 516 QCURVE SMOOTH",
"520 516 LINE",
"520 610 LINE",
"493 610 LINE SMOOTH",
"382 610 OFFCURVE",
"258 516 OFFCURVE",
"258 422 QCURVE SMOOTH",
"258 336 OFFCURVE",
"385 221 OFFCURVE",
"501 221 QCURVE SMOOTH",
"581 221 OFFCURVE",
"718 285 OFFCURVE",
"829 381 OFFCURVE",
"866 434 QCURVE",
"866 -590 LINE",
"866 -590 LINE"
);
}
);
width = 1298;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"975 803 LINE",
"1020 866 LINE",
"755 1268 LINE",
"755 1550 LINE",
"1030 1550 LINE",
"1030 1604 LINE",
"772 1604 LINE SMOOTH",
"723 1604 OFFCURVE",
"702 1569 OFFCURVE",
"702 1522 QCURVE SMOOTH",
"702 1251 LINE",
"962 856 LINE",
"647 856 LINE SMOOTH",
"483 856 OFFCURVE",
"319 1038 OFFCURVE",
"319 1202 QCURVE SMOOTH",
"319 1657 LINE SMOOTH",
"319 1755 OFFCURVE",
"413 1860 OFFCURVE",
"463 1878 QCURVE",
"524 1839 OFFCURVE",
"682 1796 OFFCURVE",
"747 1796 QCURVE SMOOTH",
"813 1796 OFFCURVE",
"944 1851 OFFCURVE",
"1030 1950 OFFCURVE",
"1030 2011 QCURVE SMOOTH",
"1030 2265 LINE",
"977 2265 LINE",
"977 2011 LINE SMOOTH",
"977 1970 OFFCURVE",
"911 1896 OFFCURVE",
"807 1849 OFFCURVE",
"747 1849 QCURVE SMOOTH",
"686 1849 OFFCURVE",
"559 1876 OFFCURVE",
"520 1903 QCURVE",
"536 1915 OFFCURVE",
"555 1946 OFFCURVE",
"555 1972 QCURVE SMOOTH",
"555 1999 OFFCURVE",
"510 2048 OFFCURVE",
"473 2048 QCURVE SMOOTH",
"442 2048 OFFCURVE",
"397 2005 OFFCURVE",
"397 1972 QCURVE SMOOTH",
"397 1954 OFFCURVE",
"409 1929 OFFCURVE",
"422 1915 QCURVE",
"327 1872 OFFCURVE",
"266 1733 OFFCURVE",
"266 1669 QCURVE SMOOTH",
"266 1202 LINE SMOOTH",
"266 1004 OFFCURVE",
"469 803 OFFCURVE",
"653 803 QCURVE",
"653 803 LINE"
);
},
{
closed = 1;
nodes = (
"973 -590 LINE",
"973 610 LINE",
"919 610 LINE",
"880 547 OFFCURVE",
"766 399 OFFCURVE",
"618 293 OFFCURVE",
"534 293 QCURVE SMOOTH",
"467 293 OFFCURVE",
"393 340 OFFCURVE",
"362 408 OFFCURVE",
"362 438 QCURVE SMOOTH",
"362 475 OFFCURVE",
"434 557 OFFCURVE",
"522 557 QCURVE SMOOTH",
"540 557 LINE",
"540 610 LINE",
"538 610 LINE SMOOTH",
"424 610 OFFCURVE",
"309 516 OFFCURVE",
"309 436 QCURVE SMOOTH",
"309 340 OFFCURVE",
"438 240 OFFCURVE",
"532 240 QCURVE SMOOTH",
"618 240 OFFCURVE",
"766 330 OFFCURVE",
"880 455 OFFCURVE",
"919 512 QCURVE",
"919 -590 LINE",
"919 -590 LINE"
);
}
);
width = 1296;
}
);
note = uni19E5;
unicode = 19E5;
},
{
glyphname = uni19E6;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1257 801 OFFCURVE",
"1257 1200 QCURVE SMOOTH",
"1257 1602 LINE SMOOTH",
"1257 1800 OFFCURVE",
"999 2030 OFFCURVE",
"774 2030 QCURVE SMOOTH",
"683 2030 OFFCURVE",
"567 1976 OFFCURVE",
"542 1948 QCURVE",
"542 2263 LINE",
"171 2263 LINE",
"171 1661 LINE",
"542 1661 LINE",
"557 1716 OFFCURVE",
"630 1772 OFFCURVE",
"712 1772 QCURVE SMOOTH",
"796 1772 OFFCURVE",
"886 1683 OFFCURVE",
"886 1602 QCURVE SMOOTH",
"886 1282 LINE SMOOTH",
"886 1194 OFFCURVE",
"800 1092 OFFCURVE",
"712 1092 QCURVE SMOOTH",
"628 1092 OFFCURVE",
"542 1161 OFFCURVE",
"542 1217 QCURVE SMOOTH",
"542 1247 OFFCURVE",
"565 1311 OFFCURVE",
"630 1354 OFFCURVE",
"696 1354 QCURVE SMOOTH",
"763 1354 LINE",
"763 1583 LINE",
"614 1583 LINE SMOOTH",
"393 1583 OFFCURVE",
"171 1378 OFFCURVE",
"171 1210 QCURVE SMOOTH",
"171 1096 OFFCURVE",
"292 911 OFFCURVE",
"532 801 OFFCURVE",
"712 801 QCURVE",
"712 801 LINE"
);
},
{
closed = 1;
nodes = (
"1093 -590 LINE",
"1093 610 LINE",
"722 610 LINE",
"716 520 OFFCURVE",
"657 369 OFFCURVE",
"563 274 OFFCURVE",
"503 274 QCURVE SMOOTH",
"460 274 OFFCURVE",
"460 309 QCURVE SMOOTH",
"460 344 OFFCURVE",
"495 344 QCURVE SMOOTH",
"505 344 LINE",
"505 610 LINE",
"425 610 LINE SMOOTH",
"311 610 OFFCURVE",
"169 535 OFFCURVE",
"108 410 OFFCURVE",
"108 332 QCURVE SMOOTH",
"108 233 OFFCURVE",
"214 94 OFFCURVE",
"364 23 OFFCURVE",
"434 23 QCURVE SMOOTH",
"514 23 OFFCURVE",
"616 51 OFFCURVE",
"688 104 OFFCURVE",
"722 139 QCURVE",
"722 -590 LINE",
"722 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1196 801 OFFCURVE",
"1196 1200 QCURVE SMOOTH",
"1196 1602 LINE SMOOTH",
"1196 1800 OFFCURVE",
"950 2019 OFFCURVE",
"725 2019 QCURVE SMOOTH",
"643 2019 OFFCURVE",
"522 1976 OFFCURVE",
"481 1948 QCURVE",
"481 2263 LINE",
"182 2263 LINE",
"182 1661 LINE",
"481 1661 LINE",
"491 1735 OFFCURVE",
"585 1808 OFFCURVE",
"688 1808 QCURVE SMOOTH",
"790 1808 OFFCURVE",
"897 1702 OFFCURVE",
"897 1602 QCURVE SMOOTH",
"897 1249 LINE SMOOTH",
"897 1145 OFFCURVE",
"792 1032 OFFCURVE",
"688 1032 QCURVE SMOOTH",
"585 1032 OFFCURVE",
"481 1116 OFFCURVE",
"481 1192 QCURVE SMOOTH",
"481 1262 OFFCURVE",
"548 1358 OFFCURVE",
"639 1358 QCURVE SMOOTH",
"739 1358 LINE",
"739 1550 LINE",
"589 1550 LINE SMOOTH",
"387 1550 OFFCURVE",
"182 1358 OFFCURVE",
"182 1188 QCURVE SMOOTH",
"182 1016 OFFCURVE",
"436 801 OFFCURVE",
"688 801 QCURVE",
"688 801 LINE"
);
},
{
closed = 1;
nodes = (
"1056 -590 LINE",
"1056 610 LINE",
"757 610 LINE",
"716 471 OFFCURVE",
"587 301 OFFCURVE",
"493 301 QCURVE SMOOTH",
"432 301 OFFCURVE",
"432 348 QCURVE SMOOTH",
"432 369 OFFCURVE",
"458 395 OFFCURVE",
"483 395 QCURVE SMOOTH",
"501 395 LINE",
"501 610 LINE",
"432 610 LINE SMOOTH",
"286 610 OFFCURVE",
"145 473 OFFCURVE",
"145 362 QCURVE SMOOTH",
"145 281 OFFCURVE",
"231 160 OFFCURVE",
"368 94 OFFCURVE",
"446 94 QCURVE SMOOTH",
"565 94 OFFCURVE",
"704 164 OFFCURVE",
"757 223 QCURVE",
"757 -590 LINE",
"757 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 1660 LINE",
"388 1660 LINE",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1600 QCURVE SMOOTH",
"912 1200 LINE SMOOTH",
"912 938 OFFCURVE",
"650 938 QCURVE SMOOTH",
"388 938 OFFCURVE",
"388 1150 QCURVE SMOOTH",
"388 1362 OFFCURVE",
"550 1362 QCURVE SMOOTH",
"700 1362 LINE",
"700 1500 LINE",
"550 1500 LINE SMOOTH",
"200 1500 OFFCURVE",
"200 1150 QCURVE SMOOTH",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1100 800 OFFCURVE",
"1100 1200 QCURVE SMOOTH",
"1100 1600 LINE SMOOTH",
"1100 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"516 2000 OFFCURVE",
"388 1946 QCURVE",
"388 2350 LINE",
"200 2350 LINE",
"200 2350 LINE"
);
},
{
closed = 1;
nodes = (
"495 472 LINE",
"495 610 LINE",
"442 610 LINE SMOOTH",
"200 610 OFFCURVE",
"200 430 QCURVE SMOOTH",
"200 210 OFFCURVE",
"466 210 QCURVE SMOOTH",
"703 210 OFFCURVE",
"812 356 QCURVE",
"812 -590 LINE",
"1000 -590 LINE",
"1000 610 LINE",
"812 610 LINE",
"728 479 LINE SMOOTH",
"643 348 OFFCURVE",
"466 348 QCURVE SMOOTH",
"388 348 OFFCURVE",
"388 430 QCURVE SMOOTH",
"388 472 OFFCURVE",
"442 472 QCURVE",
"442 472 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"830 801 OFFCURVE",
"1043 1004 OFFCURVE",
"1043 1200 QCURVE SMOOTH",
"1043 1602 LINE SMOOTH",
"1043 2001 OFFCURVE",
"626 2001 QCURVE SMOOTH",
"531 2001 OFFCURVE",
"384 1946 OFFCURVE",
"331 1898 QCURVE",
"331 2263 LINE",
"212 2263 LINE",
"212 1663 LINE",
"331 1663 LINE",
"337 1782 OFFCURVE",
"478 1907 OFFCURVE",
"626 1907 QCURVE SMOOTH",
"775 1907 OFFCURVE",
"923 1749 OFFCURVE",
"923 1602 QCURVE SMOOTH",
"923 1200 LINE SMOOTH",
"923 1053 OFFCURVE",
"775 895 OFFCURVE",
"626 895 QCURVE SMOOTH",
"478 895 OFFCURVE",
"331 1028 OFFCURVE",
"331 1151 QCURVE SMOOTH",
"331 1223 OFFCURVE",
"366 1337 OFFCURVE",
"454 1407 OFFCURVE",
"531 1407 QCURVE SMOOTH",
"679 1407 LINE",
"679 1501 LINE",
"540 1501 LINE SMOOTH",
"368 1501 OFFCURVE",
"212 1325 OFFCURVE",
"212 1151 QCURVE SMOOTH",
"212 981 OFFCURVE",
"421 801 OFFCURVE",
"626 801 QCURVE",
"626 801 LINE"
);
},
{
closed = 1;
nodes = (
"966 -590 LINE",
"966 610 LINE",
"843 610 LINE",
"771 487 OFFCURVE",
"597 317 OFFCURVE",
"484 317 QCURVE SMOOTH",
"411 317 OFFCURVE",
"353 389 OFFCURVE",
"353 426 QCURVE SMOOTH",
"353 457 OFFCURVE",
"409 516 OFFCURVE",
"470 516 QCURVE SMOOTH",
"497 516 LINE",
"497 610 LINE",
"470 610 LINE SMOOTH",
"359 610 OFFCURVE",
"235 516 OFFCURVE",
"235 422 QCURVE SMOOTH",
"235 336 OFFCURVE",
"362 221 OFFCURVE",
"478 221 QCURVE SMOOTH",
"558 221 OFFCURVE",
"695 285 OFFCURVE",
"806 381 OFFCURVE",
"843 434 QCURVE",
"843 -590 LINE",
"843 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"788 801 OFFCURVE",
"989 1006 OFFCURVE",
"989 1200 QCURVE SMOOTH",
"989 1602 LINE SMOOTH",
"989 2001 OFFCURVE",
"606 2001 QCURVE SMOOTH",
"479 2001 OFFCURVE",
"321 1919 OFFCURVE",
"278 1849 QCURVE",
"278 2263 LINE",
"225 2263 LINE",
"225 1665 LINE",
"278 1665 LINE",
"286 1800 OFFCURVE",
"442 1948 OFFCURVE",
"606 1948 QCURVE SMOOTH",
"770 1948 OFFCURVE",
"936 1765 OFFCURVE",
"936 1602 QCURVE SMOOTH",
"936 1200 LINE SMOOTH",
"936 1036 OFFCURVE",
"770 854 OFFCURVE",
"606 854 QCURVE SMOOTH",
"442 854 OFFCURVE",
"276 1012 OFFCURVE",
"276 1151 QCURVE SMOOTH",
"276 1223 OFFCURVE",
"309 1358 OFFCURVE",
"409 1448 OFFCURVE",
"512 1448 QCURVE SMOOTH",
"657 1448 LINE",
"657 1501 LINE",
"532 1501 LINE SMOOTH",
"362 1501 OFFCURVE",
"225 1325 OFFCURVE",
"225 1151 QCURVE SMOOTH",
"225 983 OFFCURVE",
"418 801 OFFCURVE",
"606 801 QCURVE",
"606 801 LINE"
);
},
{
closed = 1;
nodes = (
"932 -590 LINE",
"932 610 LINE",
"878 610 LINE",
"839 547 OFFCURVE",
"725 399 OFFCURVE",
"577 293 OFFCURVE",
"493 293 QCURVE SMOOTH",
"426 293 OFFCURVE",
"352 340 OFFCURVE",
"321 408 OFFCURVE",
"321 438 QCURVE SMOOTH",
"321 475 OFFCURVE",
"393 557 OFFCURVE",
"481 557 QCURVE SMOOTH",
"499 557 LINE",
"499 610 LINE",
"497 610 LINE SMOOTH",
"383 610 OFFCURVE",
"268 516 OFFCURVE",
"268 436 QCURVE SMOOTH",
"268 340 OFFCURVE",
"397 240 OFFCURVE",
"491 240 QCURVE SMOOTH",
"577 240 OFFCURVE",
"725 330 OFFCURVE",
"839 455 OFFCURVE",
"878 512 QCURVE",
"878 -590 LINE",
"878 -590 LINE"
);
}
);
width = 1300;
}
);
note = uni19E6;
unicode = 19E6;
},
{
glyphname = uni19E7;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"614 801 LINE",
"614 1030 LINE",
"543 1030 LINE",
"543 1669 LINE SMOOTH",
"543 1690 OFFCURVE",
"553 1726 OFFCURVE",
"567 1726 QCURVE SMOOTH",
"580 1726 OFFCURVE",
"608 1696 OFFCURVE",
"633 1665 QCURVE SMOOTH",
"657 1634 OFFCURVE",
"688 1634 QCURVE SMOOTH",
"717 1634 OFFCURVE",
"745 1665 QCURVE SMOOTH",
"762 1683 OFFCURVE",
"795 1726 OFFCURVE",
"809 1726 QCURVE SMOOTH",
"834 1726 OFFCURVE",
"834 1669 QCURVE SMOOTH",
"834 1092 LINE SMOOTH",
"834 1018 OFFCURVE",
"926 885 OFFCURVE",
"1108 801 OFFCURVE",
"1243 801 QCURVE SMOOTH",
"1376 801 OFFCURVE",
"1558 883 OFFCURVE",
"1649 1014 OFFCURVE",
"1649 1092 QCURVE SMOOTH",
"1649 2263 LINE",
"1278 2263 LINE",
"1278 1073 LINE SMOOTH",
"1278 1057 OFFCURVE",
"1262 1030 OFFCURVE",
"1241 1030 QCURVE SMOOTH",
"1221 1030 OFFCURVE",
"1204 1057 OFFCURVE",
"1204 1073 QCURVE SMOOTH",
"1204 1624 LINE SMOOTH",
"1204 1772 OFFCURVE",
"1130 1935 OFFCURVE",
"1012 2001 OFFCURVE",
"944 2001 QCURVE SMOOTH",
"856 2001 OFFCURVE",
"741 1939 OFFCURVE",
"688 1876 QCURVE",
"635 1939 OFFCURVE",
"520 2001 OFFCURVE",
"420 2001 QCURVE SMOOTH",
"360 2001 OFFCURVE",
"246 1937 OFFCURVE",
"172 1788 OFFCURVE",
"172 1659 QCURVE SMOOTH",
"172 801 LINE",
"172 801 LINE"
);
},
{
closed = 1;
nodes = (
"1294 -590 LINE",
"1294 610 LINE",
"924 610 LINE",
"917 520 OFFCURVE",
"858 369 OFFCURVE",
"764 274 OFFCURVE",
"704 274 QCURVE SMOOTH",
"661 274 OFFCURVE",
"661 309 QCURVE SMOOTH",
"661 344 OFFCURVE",
"696 344 QCURVE SMOOTH",
"707 344 LINE",
"707 610 LINE",
"627 610 LINE SMOOTH",
"512 610 OFFCURVE",
"371 535 OFFCURVE",
"309 410 OFFCURVE",
"309 332 QCURVE SMOOTH",
"309 233 OFFCURVE",
"416 94 OFFCURVE",
"565 23 OFFCURVE",
"635 23 QCURVE SMOOTH",
"715 23 OFFCURVE",
"817 51 OFFCURVE",
"889 104 OFFCURVE",
"924 139 QCURVE",
"924 -590 LINE",
"924 -590 LINE"
);
}
);
width = 1691;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"590 801 LINE",
"590 993 LINE",
"481 993 LINE",
"481 1692 LINE SMOOTH",
"481 1729 OFFCURVE",
"499 1776 OFFCURVE",
"520 1776 QCURVE SMOOTH",
"536 1776 OFFCURVE",
"577 1739 OFFCURVE",
"608 1702 QCURVE SMOOTH",
"633 1671 OFFCURVE",
"663 1671 QCURVE SMOOTH",
"692 1671 OFFCURVE",
"721 1702 QCURVE SMOOTH",
"747 1731 OFFCURVE",
"788 1776 OFFCURVE",
"807 1776 QCURVE SMOOTH",
"844 1776 OFFCURVE",
"844 1692 QCURVE SMOOTH",
"844 1073 LINE SMOOTH",
"844 956 OFFCURVE",
"1024 801 OFFCURVE",
"1200 801 QCURVE SMOOTH",
"1374 801 OFFCURVE",
"1552 954 OFFCURVE",
"1552 1073 QCURVE SMOOTH",
"1552 2263 LINE",
"1253 2263 LINE",
"1253 1047 LINE SMOOTH",
"1253 1024 OFFCURVE",
"1224 993 OFFCURVE",
"1198 993 QCURVE SMOOTH",
"1173 993 OFFCURVE",
"1145 1024 OFFCURVE",
"1145 1047 QCURVE SMOOTH",
"1145 1663 LINE SMOOTH",
"1145 1841 OFFCURVE",
"1003 2001 OFFCURVE",
"901 2001 QCURVE SMOOTH",
"825 2001 OFFCURVE",
"717 1939 OFFCURVE",
"663 1876 QCURVE",
"610 1939 OFFCURVE",
"504 2001 OFFCURVE",
"420 2001 QCURVE SMOOTH",
"321 2001 OFFCURVE",
"182 1845 OFFCURVE",
"182 1683 QCURVE SMOOTH",
"182 801 LINE",
"182 801 LINE"
);
},
{
closed = 1;
nodes = (
"1257 -590 LINE",
"1257 610 LINE",
"958 610 LINE",
"917 471 OFFCURVE",
"788 301 OFFCURVE",
"694 301 QCURVE SMOOTH",
"633 301 OFFCURVE",
"633 348 QCURVE SMOOTH",
"633 369 OFFCURVE",
"659 395 OFFCURVE",
"684 395 QCURVE SMOOTH",
"702 395 LINE",
"702 610 LINE",
"633 610 LINE SMOOTH",
"487 610 OFFCURVE",
"346 473 OFFCURVE",
"346 362 QCURVE SMOOTH",
"346 281 OFFCURVE",
"432 160 OFFCURVE",
"569 94 OFFCURVE",
"647 94 QCURVE SMOOTH",
"766 94 OFFCURVE",
"905 164 OFFCURVE",
"958 223 QCURVE",
"958 -590 LINE",
"958 -590 LINE"
);
}
);
width = 1654;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1050 1723 LINE SMOOTH",
"1050 1836 OFFCURVE",
"980 1918 QCURVE SMOOTH",
"909 2000 OFFCURVE",
"821 2000 QCURVE SMOOTH",
"731 2000 OFFCURVE",
"625 1876 QCURVE",
"520 2000 OFFCURVE",
"431 2000 QCURVE SMOOTH",
"342 2000 OFFCURVE",
"271 1918 QCURVE SMOOTH",
"200 1836 OFFCURVE",
"200 1723 QCURVE SMOOTH",
"200 800 LINE",
"550 800 LINE",
"550 938 LINE",
"388 938 LINE",
"388 1723 LINE SMOOTH",
"388 1850 OFFCURVE",
"447 1850 QCURVE SMOOTH",
"493 1850 OFFCURVE",
"569 1756 QCURVE SMOOTH",
"595 1725 OFFCURVE",
"625 1725 QCURVE SMOOTH",
"655 1725 OFFCURVE",
"681 1756 QCURVE SMOOTH",
"758 1850 OFFCURVE",
"804 1850 QCURVE SMOOTH",
"862 1850 OFFCURVE",
"862 1723 QCURVE SMOOTH",
"862 938 LINE SMOOTH",
"862 800 OFFCURVE",
"1125 800 QCURVE SMOOTH",
"1400 800 OFFCURVE",
"1400 938 QCURVE SMOOTH",
"1400 2300 LINE",
"1212 2300 LINE",
"1212 938 LINE",
"1050 938 LINE",
"1050 938 LINE"
);
},
{
closed = 1;
nodes = (
"495 472 LINE",
"495 610 LINE",
"442 610 LINE SMOOTH",
"200 610 OFFCURVE",
"200 430 QCURVE SMOOTH",
"200 210 OFFCURVE",
"466 210 QCURVE SMOOTH",
"703 210 OFFCURVE",
"812 356 QCURVE",
"812 -590 LINE",
"1000 -590 LINE",
"1000 610 LINE",
"812 610 LINE",
"728 479 LINE SMOOTH",
"643 348 OFFCURVE",
"466 348 QCURVE SMOOTH",
"388 348 OFFCURVE",
"388 430 QCURVE SMOOTH",
"388 472 OFFCURVE",
"442 472 QCURVE",
"442 472 LINE"
);
}
);
width = 1600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"529 801 LINE",
"529 895 LINE",
"331 895 LINE",
"331 1776 LINE SMOOTH",
"331 1837 OFFCURVE",
"376 1898 OFFCURVE",
"415 1898 QCURVE SMOOTH",
"470 1898 OFFCURVE",
"548 1800 QCURVE SMOOTH",
"570 1772 OFFCURVE",
"603 1772 QCURVE SMOOTH",
"634 1772 OFFCURVE",
"661 1800 QCURVE SMOOTH",
"699 1845 OFFCURVE",
"763 1898 OFFCURVE",
"796 1898 QCURVE SMOOTH",
"835 1898 OFFCURVE",
"876 1835 OFFCURVE",
"876 1778 QCURVE SMOOTH",
"876 997 LINE SMOOTH",
"876 895 OFFCURVE",
"990 801 OFFCURVE",
"1093 801 QCURVE SMOOTH",
"1195 801 OFFCURVE",
"1312 895 OFFCURVE",
"1312 997 QCURVE SMOOTH",
"1312 2263 LINE",
"1191 2263 LINE",
"1191 973 LINE SMOOTH",
"1191 932 OFFCURVE",
"1134 895 OFFCURVE",
"1093 895 QCURVE SMOOTH",
"1056 895 OFFCURVE",
"994 932 OFFCURVE",
"994 973 QCURVE SMOOTH",
"994 1759 LINE SMOOTH",
"994 1866 OFFCURVE",
"898 2001 OFFCURVE",
"814 2001 QCURVE SMOOTH",
"759 2001 OFFCURVE",
"656 1933 OFFCURVE",
"603 1870 QCURVE",
"552 1933 OFFCURVE",
"454 2001 OFFCURVE",
"396 2001 QCURVE SMOOTH",
"306 2001 OFFCURVE",
"212 1870 OFFCURVE",
"212 1767 QCURVE SMOOTH",
"212 801 LINE",
"212 801 LINE"
);
},
{
closed = 1;
nodes = (
"1166 -590 LINE",
"1166 610 LINE",
"1043 610 LINE",
"972 487 OFFCURVE",
"798 317 OFFCURVE",
"685 317 QCURVE SMOOTH",
"611 317 OFFCURVE",
"554 389 OFFCURVE",
"554 426 QCURVE SMOOTH",
"554 457 OFFCURVE",
"609 516 OFFCURVE",
"671 516 QCURVE SMOOTH",
"697 516 LINE",
"697 610 LINE",
"671 610 LINE SMOOTH",
"560 610 OFFCURVE",
"435 516 OFFCURVE",
"435 422 QCURVE SMOOTH",
"435 336 OFFCURVE",
"562 221 OFFCURVE",
"679 221 QCURVE SMOOTH",
"759 221 OFFCURVE",
"896 285 OFFCURVE",
"1007 381 OFFCURVE",
"1043 434 QCURVE",
"1043 -590 LINE",
"1043 -590 LINE"
);
}
);
width = 1564;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"510 801 LINE",
"510 854 LINE",
"278 854 LINE",
"278 1827 LINE SMOOTH",
"278 1886 OFFCURVE",
"338 1948 OFFCURVE",
"385 1948 QCURVE SMOOTH",
"424 1948 OFFCURVE",
"489 1892 OFFCURVE",
"528 1845 QCURVE SMOOTH",
"553 1815 OFFCURVE",
"583 1815 QCURVE SMOOTH",
"614 1815 OFFCURVE",
"641 1845 QCURVE SMOOTH",
"680 1890 OFFCURVE",
"749 1948 OFFCURVE",
"788 1948 QCURVE SMOOTH",
"835 1948 OFFCURVE",
"889 1880 OFFCURVE",
"889 1831 QCURVE SMOOTH",
"889 948 LINE SMOOTH",
"889 870 OFFCURVE",
"985 801 OFFCURVE",
"1056 801 QCURVE SMOOTH",
"1128 801 OFFCURVE",
"1224 870 OFFCURVE",
"1224 948 QCURVE SMOOTH",
"1224 2263 LINE",
"1171 2263 LINE",
"1171 942 LINE SMOOTH",
"1171 891 OFFCURVE",
"1102 854 OFFCURVE",
"1056 854 QCURVE SMOOTH",
"1011 854 OFFCURVE",
"942 891 OFFCURVE",
"942 942 QCURVE SMOOTH",
"942 1794 LINE SMOOTH",
"942 2001 OFFCURVE",
"792 2001 QCURVE SMOOTH",
"739 2001 OFFCURVE",
"637 1927 OFFCURVE",
"583 1864 QCURVE",
"532 1927 OFFCURVE",
"430 2001 OFFCURVE",
"377 2001 QCURVE SMOOTH",
"307 2001 OFFCURVE",
"225 1903 OFFCURVE",
"225 1808 QCURVE SMOOTH",
"225 801 LINE",
"225 801 LINE"
);
},
{
closed = 1;
nodes = (
"1132 -590 LINE",
"1132 610 LINE",
"1079 610 LINE",
"1040 547 OFFCURVE",
"925 399 OFFCURVE",
"778 293 OFFCURVE",
"694 293 QCURVE SMOOTH",
"626 293 OFFCURVE",
"553 340 OFFCURVE",
"522 408 OFFCURVE",
"522 438 QCURVE SMOOTH",
"522 475 OFFCURVE",
"594 557 OFFCURVE",
"682 557 QCURVE SMOOTH",
"700 557 LINE",
"700 610 LINE",
"698 610 LINE SMOOTH",
"583 610 OFFCURVE",
"469 516 OFFCURVE",
"469 436 QCURVE SMOOTH",
"469 340 OFFCURVE",
"598 240 OFFCURVE",
"692 240 QCURVE SMOOTH",
"778 240 OFFCURVE",
"925 330 OFFCURVE",
"1040 455 OFFCURVE",
"1079 512 QCURVE",
"1079 -590 LINE",
"1079 -590 LINE"
);
}
);
width = 1531;
}
);
note = uni19E7;
unicode = 19E7;
},
{
glyphname = uni19E8;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"483 801 LINE",
"714 971 LINE",
"946 801 LINE",
"1257 801 LINE",
"1257 1417 LINE SMOOTH",
"1257 1473 OFFCURVE",
"1236 1550 OFFCURVE",
"1163 1591 OFFCURVE",
"1081 1591 QCURVE SMOOTH",
"784 1591 LINE",
"784 1362 LINE",
"835 1362 LINE SMOOTH",
"862 1362 OFFCURVE",
"886 1341 OFFCURVE",
"886 1300 QCURVE SMOOTH",
"886 1139 LINE",
"714 1274 LINE",
"542 1137 LINE",
"542 1681 LINE SMOOTH",
"542 1772 OFFCURVE",
"712 1772 QCURVE SMOOTH",
"886 1772 OFFCURVE",
"886 1681 QCURVE",
"1255 1681 LINE",
"1255 2263 LINE",
"886 2263 LINE",
"886 1948 LINE",
"790 2001 OFFCURVE",
"606 2001 QCURVE SMOOTH",
"171 2001 OFFCURVE",
"171 1681 QCURVE SMOOTH",
"171 801 LINE",
"171 801 LINE"
);
},
{
closed = 1;
nodes = (
"1093 -590 LINE",
"1093 610 LINE",
"722 610 LINE",
"716 520 OFFCURVE",
"657 369 OFFCURVE",
"563 274 OFFCURVE",
"503 274 QCURVE SMOOTH",
"460 274 OFFCURVE",
"460 309 QCURVE SMOOTH",
"460 344 OFFCURVE",
"495 344 QCURVE SMOOTH",
"505 344 LINE",
"505 610 LINE",
"425 610 LINE SMOOTH",
"311 610 OFFCURVE",
"169 535 OFFCURVE",
"108 410 OFFCURVE",
"108 332 QCURVE SMOOTH",
"108 233 OFFCURVE",
"214 94 OFFCURVE",
"364 23 OFFCURVE",
"434 23 QCURVE SMOOTH",
"514 23 OFFCURVE",
"616 51 OFFCURVE",
"688 104 OFFCURVE",
"722 139 QCURVE",
"722 -590 LINE",
"722 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"458 801 LINE",
"690 987 LINE",
"921 801 LINE",
"1196 801 LINE",
"1196 1427 LINE SMOOTH",
"1196 1501 OFFCURVE",
"1138 1575 OFFCURVE",
"1044 1575 QCURVE SMOOTH",
"743 1575 LINE",
"743 1382 LINE",
"845 1382 LINE SMOOTH",
"872 1382 OFFCURVE",
"897 1360 OFFCURVE",
"897 1325 QCURVE SMOOTH",
"897 1073 LINE",
"690 1247 LINE",
"481 1071 LINE",
"481 1681 LINE SMOOTH",
"481 1808 OFFCURVE",
"688 1808 QCURVE SMOOTH",
"897 1808 OFFCURVE",
"897 1681 QCURVE",
"1194 1681 LINE",
"1194 2263 LINE",
"897 2263 LINE",
"897 1948 LINE",
"786 2001 OFFCURVE",
"622 2001 QCURVE SMOOTH",
"182 2001 OFFCURVE",
"182 1681 QCURVE SMOOTH",
"182 801 LINE",
"182 801 LINE"
);
},
{
closed = 1;
nodes = (
"1056 -590 LINE",
"1056 610 LINE",
"757 610 LINE",
"716 471 OFFCURVE",
"587 301 OFFCURVE",
"493 301 QCURVE SMOOTH",
"432 301 OFFCURVE",
"432 348 QCURVE SMOOTH",
"432 369 OFFCURVE",
"458 395 OFFCURVE",
"483 395 QCURVE SMOOTH",
"501 395 LINE",
"501 610 LINE",
"432 610 LINE SMOOTH",
"286 610 OFFCURVE",
"145 473 OFFCURVE",
"145 362 QCURVE SMOOTH",
"145 281 OFFCURVE",
"231 160 OFFCURVE",
"368 94 OFFCURVE",
"446 94 QCURVE SMOOTH",
"565 94 OFFCURVE",
"704 164 OFFCURVE",
"757 223 QCURVE",
"757 -590 LINE",
"757 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 800 LINE",
"419 800 LINE",
"651 1010 LINE",
"882 800 LINE",
"1100 800 LINE",
"1100 1320 LINE SMOOTH",
"1100 1550 OFFCURVE",
"860 1550 QCURVE SMOOTH",
"680 1550 LINE",
"680 1400 LINE",
"860 1400 LINE SMOOTH",
"912 1400 OFFCURVE",
"912 1320 QCURVE SMOOTH",
"912 967 LINE",
"651 1205 LINE",
"388 966 LINE",
"388 1680 LINE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1680 QCURVE",
"1100 1680 LINE",
"1100 2350 LINE",
"912 2350 LINE",
"912 1946 LINE",
"784 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1680 QCURVE",
"200 1680 LINE"
);
},
{
closed = 1;
nodes = (
"495 472 LINE",
"495 610 LINE",
"442 610 LINE SMOOTH",
"200 610 OFFCURVE",
"200 430 QCURVE SMOOTH",
"200 210 OFFCURVE",
"466 210 QCURVE SMOOTH",
"703 210 OFFCURVE",
"812 356 QCURVE",
"812 -590 LINE",
"1000 -590 LINE",
"1000 610 LINE",
"812 610 LINE",
"728 479 LINE SMOOTH",
"643 348 OFFCURVE",
"466 348 QCURVE SMOOTH",
"388 348 OFFCURVE",
"388 430 QCURVE SMOOTH",
"388 472 OFFCURVE",
"442 472 QCURVE",
"442 472 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"359 801 LINE",
"630 1026 LINE",
"896 801 LINE",
"1043 801 LINE",
"1043 1436 LINE SMOOTH",
"1043 1530 OFFCURVE",
"941 1530 QCURVE SMOOTH",
"658 1530 LINE",
"658 1436 LINE",
"871 1436 LINE SMOOTH",
"904 1436 OFFCURVE",
"925 1403 OFFCURVE",
"925 1370 QCURVE SMOOTH",
"925 909 LINE",
"630 1157 LINE",
"331 907 LINE",
"331 1681 LINE SMOOTH",
"331 1788 OFFCURVE",
"484 1907 OFFCURVE",
"632 1907 QCURVE SMOOTH",
"925 1907 OFFCURVE",
"925 1681 QCURVE",
"1043 1681 LINE",
"1043 2263 LINE",
"925 2263 LINE",
"925 1913 LINE",
"876 1948 OFFCURVE",
"726 2001 OFFCURVE",
"632 2001 QCURVE SMOOTH",
"431 2001 OFFCURVE",
"212 1841 OFFCURVE",
"212 1681 QCURVE SMOOTH",
"212 801 LINE",
"212 801 LINE"
);
},
{
closed = 1;
nodes = (
"966 -590 LINE",
"966 610 LINE",
"843 610 LINE",
"771 487 OFFCURVE",
"597 317 OFFCURVE",
"484 317 QCURVE SMOOTH",
"411 317 OFFCURVE",
"353 389 OFFCURVE",
"353 426 QCURVE SMOOTH",
"353 457 OFFCURVE",
"409 516 OFFCURVE",
"470 516 QCURVE SMOOTH",
"497 516 LINE",
"497 610 LINE",
"470 610 LINE SMOOTH",
"359 610 OFFCURVE",
"235 516 OFFCURVE",
"235 422 QCURVE SMOOTH",
"235 336 OFFCURVE",
"362 221 OFFCURVE",
"478 221 QCURVE SMOOTH",
"558 221 OFFCURVE",
"695 285 OFFCURVE",
"806 381 OFFCURVE",
"843 434 QCURVE",
"843 -590 LINE",
"843 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"303 801 LINE",
"610 1042 LINE",
"913 801 LINE",
"991 801 LINE",
"991 1427 LINE SMOOTH",
"991 1468 OFFCURVE",
"950 1509 OFFCURVE",
"899 1509 QCURVE SMOOTH",
"639 1509 LINE",
"639 1456 LINE",
"884 1456 LINE SMOOTH",
"923 1456 OFFCURVE",
"938 1415 OFFCURVE",
"938 1374 QCURVE SMOOTH",
"938 850 LINE",
"610 1108 LINE",
"278 848 LINE",
"278 1681 LINE SMOOTH",
"278 1806 OFFCURVE",
"452 1948 OFFCURVE",
"616 1948 QCURVE SMOOTH",
"780 1948 OFFCURVE",
"938 1819 OFFCURVE",
"938 1681 QCURVE",
"991 1681 LINE",
"991 2263 LINE",
"938 2263 LINE",
"938 1878 LINE",
"905 1923 OFFCURVE",
"737 2001 OFFCURVE",
"616 2001 QCURVE SMOOTH",
"440 2001 OFFCURVE",
"225 1841 OFFCURVE",
"225 1681 QCURVE SMOOTH",
"225 801 LINE",
"225 801 LINE"
);
},
{
closed = 1;
nodes = (
"932 -590 LINE",
"932 610 LINE",
"878 610 LINE",
"839 547 OFFCURVE",
"725 399 OFFCURVE",
"577 293 OFFCURVE",
"493 293 QCURVE SMOOTH",
"426 293 OFFCURVE",
"352 340 OFFCURVE",
"321 408 OFFCURVE",
"321 438 QCURVE SMOOTH",
"321 475 OFFCURVE",
"393 557 OFFCURVE",
"481 557 QCURVE SMOOTH",
"499 557 LINE",
"499 610 LINE",
"497 610 LINE SMOOTH",
"383 610 OFFCURVE",
"268 516 OFFCURVE",
"268 436 QCURVE SMOOTH",
"268 340 OFFCURVE",
"397 240 OFFCURVE",
"491 240 QCURVE SMOOTH",
"577 240 OFFCURVE",
"725 330 OFFCURVE",
"839 455 OFFCURVE",
"878 512 QCURVE",
"878 -590 LINE",
"878 -590 LINE"
);
}
);
width = 1300;
}
);
note = uni19E8;
unicode = 19E8;
},
{
glyphname = uni19E9;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"985 801 OFFCURVE",
"1234 965 OFFCURVE",
"1234 1094 QCURVE SMOOTH",
"1234 1210 OFFCURVE",
"1077 1331 OFFCURVE",
"888 1331 QCURVE SMOOTH",
"737 1331 LINE",
"737 1165 LINE",
"761 1165 LINE SMOOTH",
"806 1165 OFFCURVE",
"866 1141 OFFCURVE",
"866 1106 QCURVE SMOOTH",
"866 1063 OFFCURVE",
"774 1030 OFFCURVE",
"696 1030 QCURVE SMOOTH",
"626 1030 OFFCURVE",
"542 1065 OFFCURVE",
"542 1100 QCURVE SMOOTH",
"542 1280 LINE SMOOTH",
"542 1341 OFFCURVE",
"616 1393 OFFCURVE",
"667 1393 QCURVE SMOOTH",
"1013 1393 LINE",
"1013 1622 LINE",
"618 1622 LINE SMOOTH",
"587 1622 OFFCURVE",
"538 1651 OFFCURVE",
"538 1692 QCURVE SMOOTH",
"538 1747 OFFCURVE",
"643 1794 OFFCURVE",
"716 1794 QCURVE SMOOTH",
"802 1794 OFFCURVE",
"872 1761 OFFCURVE",
"886 1743 QCURVE",
"1255 1743 LINE",
"1255 2263 LINE",
"886 2263 LINE",
"886 1962 LINE",
"860 1980 OFFCURVE",
"737 2021 OFFCURVE",
"624 2021 QCURVE SMOOTH",
"399 2021 OFFCURVE",
"171 1855 OFFCURVE",
"171 1720 QCURVE SMOOTH",
"171 1638 OFFCURVE",
"251 1538 OFFCURVE",
"346 1516 QCURVE",
"251 1493 OFFCURVE",
"171 1364 OFFCURVE",
"171 1255 QCURVE SMOOTH",
"171 1130 LINE SMOOTH",
"171 983 OFFCURVE",
"442 801 OFFCURVE",
"712 801 QCURVE",
"712 801 LINE"
);
},
{
closed = 1;
nodes = (
"1093 -590 LINE",
"1093 610 LINE",
"722 610 LINE",
"716 520 OFFCURVE",
"657 369 OFFCURVE",
"563 274 OFFCURVE",
"503 274 QCURVE SMOOTH",
"460 274 OFFCURVE",
"460 309 QCURVE SMOOTH",
"460 344 OFFCURVE",
"495 344 QCURVE SMOOTH",
"505 344 LINE",
"505 610 LINE",
"425 610 LINE SMOOTH",
"311 610 OFFCURVE",
"169 535 OFFCURVE",
"108 410 OFFCURVE",
"108 332 QCURVE SMOOTH",
"108 233 OFFCURVE",
"214 94 OFFCURVE",
"364 23 OFFCURVE",
"434 23 QCURVE SMOOTH",
"514 23 OFFCURVE",
"616 51 OFFCURVE",
"688 104 OFFCURVE",
"722 139 QCURVE",
"722 -590 LINE",
"722 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"942 801 OFFCURVE",
"1181 961 OFFCURVE",
"1181 1094 QCURVE SMOOTH",
"1181 1210 OFFCURVE",
"1017 1333 OFFCURVE",
"833 1333 QCURVE SMOOTH",
"702 1333 LINE",
"702 1182 LINE",
"757 1182 LINE SMOOTH",
"815 1182 OFFCURVE",
"884 1145 OFFCURVE",
"884 1104 QCURVE SMOOTH",
"884 1047 OFFCURVE",
"776 993 OFFCURVE",
"677 993 QCURVE SMOOTH",
"583 993 OFFCURVE",
"483 1047 OFFCURVE",
"483 1100 QCURVE SMOOTH",
"483 1298 LINE SMOOTH",
"483 1358 OFFCURVE",
"555 1411 OFFCURVE",
"618 1411 QCURVE SMOOTH",
"989 1411 LINE",
"989 1606 LINE",
"589 1606 LINE SMOOTH",
"536 1606 OFFCURVE",
"479 1647 OFFCURVE",
"479 1696 QCURVE SMOOTH",
"479 1761 OFFCURVE",
"594 1821 OFFCURVE",
"690 1821 QCURVE SMOOTH",
"794 1821 OFFCURVE",
"888 1778 OFFCURVE",
"897 1743 QCURVE",
"1194 1743 LINE",
"1194 2263 LINE",
"897 2263 LINE",
"897 1962 LINE",
"856 1980 OFFCURVE",
"729 2013 OFFCURVE",
"634 2013 QCURVE SMOOTH",
"413 2013 OFFCURVE",
"182 1858 OFFCURVE",
"182 1720 QCURVE SMOOTH",
"182 1636 OFFCURVE",
"266 1534 OFFCURVE",
"342 1513 QCURVE",
"266 1493 OFFCURVE",
"182 1372 OFFCURVE",
"182 1266 QCURVE SMOOTH",
"182 1126 LINE SMOOTH",
"182 973 OFFCURVE",
"436 801 OFFCURVE",
"688 801 QCURVE",
"688 801 LINE"
);
},
{
closed = 1;
nodes = (
"1056 -590 LINE",
"1056 610 LINE",
"757 610 LINE",
"716 471 OFFCURVE",
"587 301 OFFCURVE",
"493 301 QCURVE SMOOTH",
"432 301 OFFCURVE",
"432 348 QCURVE SMOOTH",
"432 369 OFFCURVE",
"458 395 OFFCURVE",
"483 395 QCURVE SMOOTH",
"501 395 LINE",
"501 610 LINE",
"432 610 LINE SMOOTH",
"286 610 OFFCURVE",
"145 473 OFFCURVE",
"145 362 QCURVE SMOOTH",
"145 281 OFFCURVE",
"231 160 OFFCURVE",
"368 94 OFFCURVE",
"446 94 QCURVE SMOOTH",
"565 94 OFFCURVE",
"704 164 OFFCURVE",
"757 223 QCURVE",
"757 -590 LINE",
"757 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 1962 LINE",
"784 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1702 QCURVE",
"239 1559 OFFCURVE",
"338 1515 QCURVE",
"239 1472 OFFCURVE",
"200 1326 QCURVE",
"200 1100 LINE SMOOTH",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1100 800 OFFCURVE",
"1100 1093 QCURVE SMOOTH",
"1100 1326 OFFCURVE",
"750 1326 QCURVE SMOOTH",
"650 1326 LINE",
"650 1198 LINE",
"750 1198 LINE SMOOTH",
"912 1198 OFFCURVE",
"912 1098 QCURVE SMOOTH",
"912 938 OFFCURVE",
"650 938 QCURVE SMOOTH",
"388 938 OFFCURVE",
"388 1100 QCURVE SMOOTH",
"388 1326 LINE SMOOTH",
"388 1442 OFFCURVE",
"650 1442 QCURVE SMOOTH",
"950 1442 LINE",
"950 1580 LINE",
"650 1580 LINE SMOOTH",
"388 1580 OFFCURVE",
"388 1702 QCURVE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1742 QCURVE",
"1100 1742 LINE",
"1100 2310 LINE",
"912 2310 LINE",
"912 2310 LINE"
);
},
{
closed = 1;
nodes = (
"495 472 LINE",
"495 610 LINE",
"442 610 LINE SMOOTH",
"200 610 OFFCURVE",
"200 430 QCURVE SMOOTH",
"200 210 OFFCURVE",
"466 210 QCURVE SMOOTH",
"703 210 OFFCURVE",
"812 356 QCURVE",
"812 -590 LINE",
"1000 -590 LINE",
"1000 610 LINE",
"812 610 LINE",
"728 479 LINE SMOOTH",
"643 348 OFFCURVE",
"466 348 QCURVE SMOOTH",
"388 348 OFFCURVE",
"388 430 QCURVE SMOOTH",
"388 472 OFFCURVE",
"442 472 QCURVE",
"442 472 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"842 801 OFFCURVE",
"1049 963 OFFCURVE",
"1049 1092 QCURVE SMOOTH",
"1049 1210 OFFCURVE",
"879 1313 OFFCURVE",
"731 1313 QCURVE SMOOTH",
"633 1313 LINE",
"633 1223 LINE",
"731 1223 LINE SMOOTH",
"829 1223 OFFCURVE",
"928 1161 OFFCURVE",
"928 1092 QCURVE SMOOTH",
"928 999 OFFCURVE",
"784 895 OFFCURVE",
"633 895 QCURVE SMOOTH",
"485 895 OFFCURVE",
"338 1001 OFFCURVE",
"338 1100 QCURVE SMOOTH",
"338 1329 LINE SMOOTH",
"338 1391 OFFCURVE",
"403 1462 OFFCURVE",
"467 1462 QCURVE SMOOTH",
"932 1462 LINE",
"932 1559 LINE",
"465 1559 LINE SMOOTH",
"401 1559 OFFCURVE",
"334 1645 OFFCURVE",
"334 1702 QCURVE SMOOTH",
"334 1802 OFFCURVE",
"489 1907 OFFCURVE",
"633 1907 QCURVE SMOOTH",
"786 1907 OFFCURVE",
"928 1825 OFFCURVE",
"928 1743 QCURVE",
"1049 1743 LINE",
"1049 2263 LINE",
"928 2263 LINE",
"928 1935 LINE",
"860 1974 OFFCURVE",
"713 2001 OFFCURVE",
"633 2001 QCURVE SMOOTH",
"514 2001 OFFCURVE",
"326 1939 OFFCURVE",
"215 1812 OFFCURVE",
"215 1714 QCURVE SMOOTH",
"215 1628 OFFCURVE",
"291 1534 OFFCURVE",
"321 1509 QCURVE",
"278 1481 OFFCURVE",
"217 1382 OFFCURVE",
"217 1305 QCURVE SMOOTH",
"217 1112 LINE SMOOTH",
"217 954 OFFCURVE",
"430 801 OFFCURVE",
"633 801 QCURVE",
"633 801 LINE"
);
},
{
closed = 1;
nodes = (
"969 -590 LINE",
"969 610 LINE",
"846 610 LINE",
"774 487 OFFCURVE",
"600 317 OFFCURVE",
"487 317 QCURVE SMOOTH",
"414 317 OFFCURVE",
"356 389 OFFCURVE",
"356 426 QCURVE SMOOTH",
"356 457 OFFCURVE",
"412 516 OFFCURVE",
"473 516 QCURVE SMOOTH",
"500 516 LINE",
"500 610 LINE",
"473 610 LINE SMOOTH",
"362 610 OFFCURVE",
"238 516 OFFCURVE",
"238 422 QCURVE SMOOTH",
"238 336 OFFCURVE",
"365 221 OFFCURVE",
"481 221 QCURVE SMOOTH",
"561 221 OFFCURVE",
"698 285 OFFCURVE",
"809 381 OFFCURVE",
"846 434 QCURVE",
"846 -590 LINE",
"846 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"805 801 OFFCURVE",
"995 965 OFFCURVE",
"995 1092 QCURVE SMOOTH",
"995 1169 OFFCURVE",
"919 1257 OFFCURVE",
"792 1292 OFFCURVE",
"712 1292 QCURVE SMOOTH",
"612 1292 LINE",
"612 1239 LINE",
"712 1239 LINE SMOOTH",
"827 1239 OFFCURVE",
"942 1174 OFFCURVE",
"942 1083 QCURVE SMOOTH",
"942 981 OFFCURVE",
"782 854 OFFCURVE",
"612 854 QCURVE SMOOTH",
"448 854 OFFCURVE",
"284 985 OFFCURVE",
"284 1100 QCURVE SMOOTH",
"284 1329 LINE SMOOTH",
"284 1399 OFFCURVE",
"346 1483 OFFCURVE",
"391 1483 QCURVE SMOOTH",
"913 1483 LINE",
"913 1536 LINE",
"385 1536 LINE SMOOTH",
"344 1536 OFFCURVE",
"280 1645 OFFCURVE",
"280 1704 QCURVE SMOOTH",
"280 1821 OFFCURVE",
"456 1948 OFFCURVE",
"612 1948 QCURVE SMOOTH",
"788 1948 OFFCURVE",
"942 1845 OFFCURVE",
"942 1743 QCURVE",
"995 1743 LINE",
"995 2263 LINE",
"942 2263 LINE",
"942 1909 LINE",
"870 1966 OFFCURVE",
"704 2001 OFFCURVE",
"612 2001 QCURVE SMOOTH",
"516 2001 OFFCURVE",
"340 1942 OFFCURVE",
"227 1812 OFFCURVE",
"227 1706 QCURVE SMOOTH",
"227 1649 OFFCURVE",
"258 1573 OFFCURVE",
"293 1526 OFFCURVE",
"301 1509 QCURVE",
"231 1434 OFFCURVE",
"231 1327 QCURVE SMOOTH",
"231 1100 LINE SMOOTH",
"231 950 OFFCURVE",
"434 801 OFFCURVE",
"612 801 QCURVE",
"612 801 LINE"
);
},
{
closed = 1;
nodes = (
"934 -590 LINE",
"934 610 LINE",
"880 610 LINE",
"841 547 OFFCURVE",
"727 399 OFFCURVE",
"579 293 OFFCURVE",
"495 293 QCURVE SMOOTH",
"428 293 OFFCURVE",
"354 340 OFFCURVE",
"323 408 OFFCURVE",
"323 438 QCURVE SMOOTH",
"323 475 OFFCURVE",
"395 557 OFFCURVE",
"483 557 QCURVE SMOOTH",
"501 557 LINE",
"501 610 LINE",
"499 610 LINE SMOOTH",
"385 610 OFFCURVE",
"270 516 OFFCURVE",
"270 436 QCURVE SMOOTH",
"270 340 OFFCURVE",
"399 240 OFFCURVE",
"493 240 QCURVE SMOOTH",
"579 240 OFFCURVE",
"727 330 OFFCURVE",
"841 455 OFFCURVE",
"880 512 QCURVE",
"880 -590 LINE",
"880 -590 LINE"
);
}
);
width = 1300;
}
);
note = uni19E9;
unicode = 19E9;
},
{
glyphname = uni19EA;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1255 801 OFFCURVE",
"1255 1120 QCURVE SMOOTH",
"1255 1681 LINE SMOOTH",
"1255 2001 OFFCURVE",
"713 2001 QCURVE SMOOTH",
"172 2001 OFFCURVE",
"172 1681 QCURVE SMOOTH",
"172 1561 LINE SMOOTH",
"172 1456 OFFCURVE",
"254 1352 OFFCURVE",
"393 1317 OFFCURVE",
"479 1317 QCURVE SMOOTH",
"713 1317 LINE",
"713 1583 LINE",
"623 1583 LINE SMOOTH",
"563 1583 OFFCURVE",
"543 1636 OFFCURVE",
"543 1663 QCURVE SMOOTH",
"543 1681 LINE SMOOTH",
"543 1772 OFFCURVE",
"713 1772 QCURVE SMOOTH",
"887 1772 OFFCURVE",
"887 1681 QCURVE SMOOTH",
"887 1120 LINE SMOOTH",
"887 1030 OFFCURVE",
"713 1030 QCURVE SMOOTH",
"543 1030 OFFCURVE",
"543 1122 QCURVE",
"172 1122 LINE",
"172 801 OFFCURVE",
"713 801 QCURVE",
"713 801 LINE"
);
},
{
closed = 1;
nodes = (
"2554 801 OFFCURVE",
"2554 1182 QCURVE SMOOTH",
"2554 1620 LINE SMOOTH",
"2554 2001 OFFCURVE",
"2011 2001 QCURVE SMOOTH",
"1470 2001 OFFCURVE",
"1470 1620 QCURVE SMOOTH",
"1470 1182 LINE SMOOTH",
"1470 801 OFFCURVE",
"2011 801 QCURVE",
"2011 801 LINE"
);
},
{
closed = 1;
nodes = (
"1841 1030 OFFCURVE",
"1841 1182 QCURVE SMOOTH",
"1841 1620 LINE SMOOTH",
"1841 1772 OFFCURVE",
"2011 1772 QCURVE SMOOTH",
"2185 1772 OFFCURVE",
"2185 1620 QCURVE SMOOTH",
"2185 1182 LINE SMOOTH",
"2185 1030 OFFCURVE",
"2011 1030 QCURVE",
"2011 1030 LINE"
);
},
{
closed = 1;
nodes = (
"1694 -590 LINE",
"1694 610 LINE",
"1323 610 LINE",
"1317 520 OFFCURVE",
"1257 369 OFFCURVE",
"1163 274 OFFCURVE",
"1104 274 QCURVE SMOOTH",
"1061 274 OFFCURVE",
"1061 309 QCURVE SMOOTH",
"1061 344 OFFCURVE",
"1096 344 QCURVE SMOOTH",
"1106 344 LINE",
"1106 610 LINE",
"1026 610 LINE SMOOTH",
"911 610 OFFCURVE",
"770 535 OFFCURVE",
"709 410 OFFCURVE",
"709 332 QCURVE SMOOTH",
"709 233 OFFCURVE",
"815 94 OFFCURVE",
"965 23 OFFCURVE",
"1034 23 QCURVE SMOOTH",
"1114 23 OFFCURVE",
"1216 51 OFFCURVE",
"1288 104 OFFCURVE",
"1323 139 QCURVE",
"1323 -590 LINE",
"1323 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1194 801 OFFCURVE",
"1194 1120 QCURVE SMOOTH",
"1194 1681 LINE SMOOTH",
"1194 2001 OFFCURVE",
"688 2001 QCURVE SMOOTH",
"182 2001 OFFCURVE",
"182 1681 QCURVE SMOOTH",
"182 1561 LINE SMOOTH",
"182 1419 OFFCURVE",
"354 1319 OFFCURVE",
"493 1319 QCURVE SMOOTH",
"688 1319 LINE",
"688 1542 LINE",
"579 1542 LINE SMOOTH",
"520 1542 OFFCURVE",
"481 1591 OFFCURVE",
"481 1624 QCURVE SMOOTH",
"481 1681 LINE SMOOTH",
"481 1808 OFFCURVE",
"688 1808 QCURVE SMOOTH",
"897 1808 OFFCURVE",
"897 1681 QCURVE SMOOTH",
"897 1120 LINE SMOOTH",
"897 993 OFFCURVE",
"688 993 QCURVE SMOOTH",
"481 993 OFFCURVE",
"481 1122 QCURVE",
"182 1122 LINE",
"182 801 OFFCURVE",
"688 801 QCURVE",
"688 801 LINE"
);
},
{
closed = 1;
nodes = (
"2492 801 OFFCURVE",
"2492 1182 QCURVE SMOOTH",
"2492 1620 LINE SMOOTH",
"2492 2001 OFFCURVE",
"1986 2001 QCURVE SMOOTH",
"1480 2001 OFFCURVE",
"1480 1620 QCURVE SMOOTH",
"1480 1182 LINE SMOOTH",
"1480 801 OFFCURVE",
"1986 801 QCURVE",
"1986 801 LINE"
);
},
{
closed = 1;
nodes = (
"1779 993 OFFCURVE",
"1779 1182 QCURVE SMOOTH",
"1779 1620 LINE SMOOTH",
"1779 1808 OFFCURVE",
"1986 1808 QCURVE SMOOTH",
"2195 1808 OFFCURVE",
"2195 1620 QCURVE SMOOTH",
"2195 1182 LINE SMOOTH",
"2195 993 OFFCURVE",
"1986 993 QCURVE",
"1986 993 LINE"
);
},
{
closed = 1;
nodes = (
"1657 -590 LINE",
"1657 610 LINE",
"1358 610 LINE",
"1317 471 OFFCURVE",
"1188 301 OFFCURVE",
"1093 301 QCURVE SMOOTH",
"1032 301 OFFCURVE",
"1032 348 QCURVE SMOOTH",
"1032 369 OFFCURVE",
"1059 395 OFFCURVE",
"1083 395 QCURVE SMOOTH",
"1102 395 LINE",
"1102 610 LINE",
"1032 610 LINE SMOOTH",
"887 610 OFFCURVE",
"745 473 OFFCURVE",
"745 362 QCURVE SMOOTH",
"745 281 OFFCURVE",
"831 160 OFFCURVE",
"968 94 OFFCURVE",
"1046 94 QCURVE SMOOTH",
"1165 94 OFFCURVE",
"1304 164 OFFCURVE",
"1358 223 QCURVE",
"1358 -590 LINE",
"1358 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 938 OFFCURVE",
"650 938 QCURVE SMOOTH",
"388 938 OFFCURVE",
"388 1120 QCURVE",
"200 1120 LINE",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1100 800 OFFCURVE",
"1100 1120 QCURVE SMOOTH",
"1100 1680 LINE SMOOTH",
"1100 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1680 QCURVE SMOOTH",
"200 1560 LINE SMOOTH",
"200 1320 OFFCURVE",
"515 1320 QCURVE SMOOTH",
"650 1320 LINE",
"650 1480 LINE",
"515 1480 LINE SMOOTH",
"388 1480 OFFCURVE",
"388 1560 QCURVE SMOOTH",
"388 1680 LINE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1680 QCURVE SMOOTH",
"912 1120 LINE",
"912 1120 LINE"
);
},
{
closed = 1;
nodes = (
"1688 1620 LINE SMOOTH",
"1688 1862 OFFCURVE",
"1950 1862 QCURVE SMOOTH",
"2212 1862 OFFCURVE",
"2212 1620 QCURVE SMOOTH",
"2212 1180 LINE SMOOTH",
"2212 938 OFFCURVE",
"1950 938 QCURVE SMOOTH",
"1688 938 OFFCURVE",
"1688 1180 QCURVE",
"1688 1180 LINE"
);
},
{
closed = 1;
nodes = (
"1500 1180 LINE SMOOTH",
"1500 800 OFFCURVE",
"1950 800 QCURVE SMOOTH",
"2400 800 OFFCURVE",
"2400 1180 QCURVE SMOOTH",
"2400 1620 LINE SMOOTH",
"2400 2000 OFFCURVE",
"1950 2000 QCURVE SMOOTH",
"1500 2000 OFFCURVE",
"1500 1620 QCURVE",
"1500 1620 LINE"
);
},
{
closed = 1;
nodes = (
"1095 472 LINE",
"1095 610 LINE",
"1042 610 LINE SMOOTH",
"800 610 OFFCURVE",
"800 430 QCURVE SMOOTH",
"800 210 OFFCURVE",
"1066 210 QCURVE SMOOTH",
"1303 210 OFFCURVE",
"1412 356 QCURVE",
"1412 -590 LINE",
"1600 -590 LINE",
"1600 610 LINE",
"1412 610 LINE",
"1328 479 LINE SMOOTH",
"1243 348 OFFCURVE",
"1066 348 QCURVE SMOOTH",
"988 348 OFFCURVE",
"988 430 QCURVE SMOOTH",
"988 472 OFFCURVE",
"1042 472 QCURVE",
"1042 472 LINE"
);
}
);
width = 2600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"831 801 OFFCURVE",
"1046 963 OFFCURVE",
"1046 1120 QCURVE SMOOTH",
"1046 1681 LINE SMOOTH",
"1046 2001 OFFCURVE",
"629 2001 QCURVE SMOOTH",
"426 2001 OFFCURVE",
"215 1841 OFFCURVE",
"215 1681 QCURVE SMOOTH",
"215 1546 LINE SMOOTH",
"215 1438 OFFCURVE",
"350 1321 OFFCURVE",
"469 1321 QCURVE SMOOTH",
"629 1321 LINE",
"629 1425 LINE",
"469 1425 LINE SMOOTH",
"401 1425 OFFCURVE",
"334 1499 OFFCURVE",
"334 1546 QCURVE SMOOTH",
"334 1681 LINE SMOOTH",
"334 1788 OFFCURVE",
"481 1907 OFFCURVE",
"629 1907 QCURVE SMOOTH",
"778 1907 OFFCURVE",
"926 1788 OFFCURVE",
"926 1681 QCURVE SMOOTH",
"926 1120 LINE SMOOTH",
"926 1014 OFFCURVE",
"778 895 OFFCURVE",
"629 895 QCURVE SMOOTH",
"481 895 OFFCURVE",
"334 1014 OFFCURVE",
"334 1120 QCURVE",
"215 1120 LINE",
"215 965 OFFCURVE",
"428 801 OFFCURVE",
"629 801 QCURVE",
"629 801 LINE"
);
},
{
closed = 1;
nodes = (
"2130 801 OFFCURVE",
"2343 991 OFFCURVE",
"2343 1182 QCURVE SMOOTH",
"2343 1620 LINE SMOOTH",
"2343 1810 OFFCURVE",
"2130 2001 OFFCURVE",
"1927 2001 QCURVE SMOOTH",
"1726 2001 OFFCURVE",
"1511 1810 OFFCURVE",
"1511 1620 QCURVE SMOOTH",
"1511 1182 LINE SMOOTH",
"1511 991 OFFCURVE",
"1726 801 OFFCURVE",
"1927 801 QCURVE",
"1927 801 LINE"
);
},
{
closed = 1;
nodes = (
"1780 895 OFFCURVE",
"1630 1042 OFFCURVE",
"1630 1182 QCURVE SMOOTH",
"1630 1620 LINE SMOOTH",
"1630 1759 OFFCURVE",
"1780 1907 OFFCURVE",
"1927 1907 QCURVE SMOOTH",
"2077 1907 OFFCURVE",
"2224 1759 OFFCURVE",
"2224 1620 QCURVE SMOOTH",
"2224 1182 LINE SMOOTH",
"2224 1042 OFFCURVE",
"2077 895 OFFCURVE",
"1927 895 QCURVE",
"1927 895 LINE"
);
},
{
closed = 1;
nodes = (
"1569 -590 LINE",
"1569 610 LINE",
"1446 610 LINE",
"1374 487 OFFCURVE",
"1200 317 OFFCURVE",
"1087 317 QCURVE SMOOTH",
"1014 317 OFFCURVE",
"956 389 OFFCURVE",
"956 426 QCURVE SMOOTH",
"956 457 OFFCURVE",
"1012 516 OFFCURVE",
"1073 516 QCURVE SMOOTH",
"1100 516 LINE",
"1100 610 LINE",
"1073 610 LINE SMOOTH",
"963 610 OFFCURVE",
"838 516 OFFCURVE",
"838 422 QCURVE SMOOTH",
"838 336 OFFCURVE",
"965 221 OFFCURVE",
"1081 221 QCURVE SMOOTH",
"1161 221 OFFCURVE",
"1298 285 OFFCURVE",
"1409 381 OFFCURVE",
"1446 434 QCURVE",
"1446 -590 LINE",
"1446 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"788 801 OFFCURVE",
"991 965 OFFCURVE",
"991 1120 QCURVE SMOOTH",
"991 1681 LINE SMOOTH",
"991 1837 OFFCURVE",
"792 2001 OFFCURVE",
"608 2001 QCURVE SMOOTH",
"426 2001 OFFCURVE",
"227 1841 OFFCURVE",
"227 1681 QCURVE SMOOTH",
"227 1530 LINE SMOOTH",
"227 1434 OFFCURVE",
"342 1321 OFFCURVE",
"424 1321 QCURVE SMOOTH",
"608 1321 LINE",
"608 1374 LINE",
"420 1374 LINE SMOOTH",
"348 1374 OFFCURVE",
"280 1477 OFFCURVE",
"280 1530 QCURVE SMOOTH",
"280 1681 LINE SMOOTH",
"280 1806 OFFCURVE",
"444 1948 OFFCURVE",
"608 1948 QCURVE SMOOTH",
"772 1948 OFFCURVE",
"938 1806 OFFCURVE",
"938 1681 QCURVE SMOOTH",
"938 1120 LINE SMOOTH",
"938 995 OFFCURVE",
"772 854 OFFCURVE",
"608 854 QCURVE SMOOTH",
"444 854 OFFCURVE",
"280 995 OFFCURVE",
"280 1120 QCURVE",
"227 1120 LINE",
"227 965 OFFCURVE",
"432 801 OFFCURVE",
"608 801 QCURVE",
"608 801 LINE"
);
},
{
closed = 1;
nodes = (
"2089 801 OFFCURVE",
"2291 991 OFFCURVE",
"2291 1182 QCURVE SMOOTH",
"2291 1620 LINE SMOOTH",
"2291 1810 OFFCURVE",
"2089 2001 OFFCURVE",
"1908 2001 QCURVE SMOOTH",
"1728 2001 OFFCURVE",
"1525 1810 OFFCURVE",
"1525 1620 QCURVE SMOOTH",
"1525 1182 LINE SMOOTH",
"1525 991 OFFCURVE",
"1728 801 OFFCURVE",
"1908 801 QCURVE",
"1908 801 LINE"
);
},
{
closed = 1;
nodes = (
"1745 854 OFFCURVE",
"1579 1026 OFFCURVE",
"1579 1182 QCURVE SMOOTH",
"1579 1620 LINE SMOOTH",
"1579 1776 OFFCURVE",
"1745 1948 OFFCURVE",
"1908 1948 QCURVE SMOOTH",
"2072 1948 OFFCURVE",
"2238 1776 OFFCURVE",
"2238 1620 QCURVE SMOOTH",
"2238 1182 LINE SMOOTH",
"2238 1026 OFFCURVE",
"2072 854 OFFCURVE",
"1908 854 QCURVE",
"1908 854 LINE"
);
},
{
closed = 1;
nodes = (
"1534 -590 LINE",
"1534 610 LINE",
"1480 610 LINE",
"1441 547 OFFCURVE",
"1327 399 OFFCURVE",
"1179 293 OFFCURVE",
"1095 293 QCURVE SMOOTH",
"1028 293 OFFCURVE",
"954 340 OFFCURVE",
"923 408 OFFCURVE",
"923 438 QCURVE SMOOTH",
"923 475 OFFCURVE",
"995 557 OFFCURVE",
"1083 557 QCURVE SMOOTH",
"1101 557 LINE",
"1101 610 LINE",
"1099 610 LINE SMOOTH",
"985 610 OFFCURVE",
"870 516 OFFCURVE",
"870 436 QCURVE SMOOTH",
"870 340 OFFCURVE",
"999 240 OFFCURVE",
"1093 240 QCURVE SMOOTH",
"1179 240 OFFCURVE",
"1327 330 OFFCURVE",
"1441 455 OFFCURVE",
"1480 512 QCURVE",
"1480 -590 LINE",
"1480 -590 LINE"
);
}
);
width = 2603;
}
);
note = uni19EA;
unicode = 19EA;
},
{
glyphname = uni19EB;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1255 801 OFFCURVE",
"1255 1120 QCURVE SMOOTH",
"1255 1681 LINE SMOOTH",
"1255 2001 OFFCURVE",
"713 2001 QCURVE SMOOTH",
"172 2001 OFFCURVE",
"172 1681 QCURVE SMOOTH",
"172 1561 LINE SMOOTH",
"172 1456 OFFCURVE",
"254 1352 OFFCURVE",
"393 1317 OFFCURVE",
"479 1317 QCURVE SMOOTH",
"713 1317 LINE",
"713 1583 LINE",
"623 1583 LINE SMOOTH",
"563 1583 OFFCURVE",
"543 1636 OFFCURVE",
"543 1663 QCURVE SMOOTH",
"543 1681 LINE SMOOTH",
"543 1772 OFFCURVE",
"713 1772 QCURVE SMOOTH",
"887 1772 OFFCURVE",
"887 1681 QCURVE SMOOTH",
"887 1120 LINE SMOOTH",
"887 1030 OFFCURVE",
"713 1030 QCURVE SMOOTH",
"543 1030 OFFCURVE",
"543 1122 QCURVE",
"172 1122 LINE",
"172 801 OFFCURVE",
"713 801 QCURVE",
"713 801 LINE"
);
},
{
closed = 1;
nodes = (
"2556 801 OFFCURVE",
"2556 1120 QCURVE SMOOTH",
"2556 1681 LINE SMOOTH",
"2556 2001 OFFCURVE",
"2013 2001 QCURVE SMOOTH",
"1472 2001 OFFCURVE",
"1472 1681 QCURVE SMOOTH",
"1472 1561 LINE SMOOTH",
"1472 1456 OFFCURVE",
"1554 1352 OFFCURVE",
"1694 1317 OFFCURVE",
"1780 1317 QCURVE SMOOTH",
"2013 1317 LINE",
"2013 1583 LINE",
"1923 1583 LINE SMOOTH",
"1864 1583 OFFCURVE",
"1843 1636 OFFCURVE",
"1843 1663 QCURVE SMOOTH",
"1843 1681 LINE SMOOTH",
"1843 1772 OFFCURVE",
"2013 1772 QCURVE SMOOTH",
"2187 1772 OFFCURVE",
"2187 1681 QCURVE SMOOTH",
"2187 1120 LINE SMOOTH",
"2187 1030 OFFCURVE",
"2013 1030 QCURVE SMOOTH",
"1843 1030 OFFCURVE",
"1843 1122 QCURVE",
"1472 1122 LINE",
"1472 801 OFFCURVE",
"2013 801 QCURVE",
"2013 801 LINE"
);
},
{
closed = 1;
nodes = (
"1694 -590 LINE",
"1694 610 LINE",
"1323 610 LINE",
"1317 520 OFFCURVE",
"1257 369 OFFCURVE",
"1163 274 OFFCURVE",
"1104 274 QCURVE SMOOTH",
"1061 274 OFFCURVE",
"1061 309 QCURVE SMOOTH",
"1061 344 OFFCURVE",
"1096 344 QCURVE SMOOTH",
"1106 344 LINE",
"1106 610 LINE",
"1026 610 LINE SMOOTH",
"911 610 OFFCURVE",
"770 535 OFFCURVE",
"709 410 OFFCURVE",
"709 332 QCURVE SMOOTH",
"709 233 OFFCURVE",
"815 94 OFFCURVE",
"965 23 OFFCURVE",
"1034 23 QCURVE SMOOTH",
"1114 23 OFFCURVE",
"1216 51 OFFCURVE",
"1288 104 OFFCURVE",
"1323 139 QCURVE",
"1323 -590 LINE",
"1323 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1194 801 OFFCURVE",
"1194 1120 QCURVE SMOOTH",
"1194 1681 LINE SMOOTH",
"1194 2001 OFFCURVE",
"688 2001 QCURVE SMOOTH",
"182 2001 OFFCURVE",
"182 1681 QCURVE SMOOTH",
"182 1561 LINE SMOOTH",
"182 1419 OFFCURVE",
"354 1319 OFFCURVE",
"493 1319 QCURVE SMOOTH",
"688 1319 LINE",
"688 1542 LINE",
"579 1542 LINE SMOOTH",
"520 1542 OFFCURVE",
"481 1591 OFFCURVE",
"481 1624 QCURVE SMOOTH",
"481 1681 LINE SMOOTH",
"481 1808 OFFCURVE",
"688 1808 QCURVE SMOOTH",
"897 1808 OFFCURVE",
"897 1681 QCURVE SMOOTH",
"897 1120 LINE SMOOTH",
"897 993 OFFCURVE",
"688 993 QCURVE SMOOTH",
"481 993 OFFCURVE",
"481 1122 QCURVE",
"182 1122 LINE",
"182 801 OFFCURVE",
"688 801 QCURVE",
"688 801 LINE"
);
},
{
closed = 1;
nodes = (
"2494 801 OFFCURVE",
"2494 1120 QCURVE SMOOTH",
"2494 1681 LINE SMOOTH",
"2494 2001 OFFCURVE",
"1988 2001 QCURVE SMOOTH",
"1482 2001 OFFCURVE",
"1482 1681 QCURVE SMOOTH",
"1482 1561 LINE SMOOTH",
"1482 1419 OFFCURVE",
"1655 1319 OFFCURVE",
"1794 1319 QCURVE SMOOTH",
"1988 1319 LINE",
"1988 1542 LINE",
"1880 1542 LINE SMOOTH",
"1820 1542 OFFCURVE",
"1781 1591 OFFCURVE",
"1781 1624 QCURVE SMOOTH",
"1781 1681 LINE SMOOTH",
"1781 1808 OFFCURVE",
"1988 1808 QCURVE SMOOTH",
"2197 1808 OFFCURVE",
"2197 1681 QCURVE SMOOTH",
"2197 1120 LINE SMOOTH",
"2197 993 OFFCURVE",
"1988 993 QCURVE SMOOTH",
"1781 993 OFFCURVE",
"1781 1122 QCURVE",
"1482 1122 LINE",
"1482 801 OFFCURVE",
"1988 801 QCURVE",
"1988 801 LINE"
);
},
{
closed = 1;
nodes = (
"1657 -590 LINE",
"1657 610 LINE",
"1358 610 LINE",
"1317 471 OFFCURVE",
"1188 301 OFFCURVE",
"1093 301 QCURVE SMOOTH",
"1032 301 OFFCURVE",
"1032 348 QCURVE SMOOTH",
"1032 369 OFFCURVE",
"1059 395 OFFCURVE",
"1083 395 QCURVE SMOOTH",
"1102 395 LINE",
"1102 610 LINE",
"1032 610 LINE SMOOTH",
"887 610 OFFCURVE",
"745 473 OFFCURVE",
"745 362 QCURVE SMOOTH",
"745 281 OFFCURVE",
"831 160 OFFCURVE",
"968 94 OFFCURVE",
"1046 94 QCURVE SMOOTH",
"1165 94 OFFCURVE",
"1304 164 OFFCURVE",
"1358 223 QCURVE",
"1358 -590 LINE",
"1358 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"2212 938 OFFCURVE",
"1950 938 QCURVE SMOOTH",
"1688 938 OFFCURVE",
"1688 1120 QCURVE",
"1500 1120 LINE",
"1500 800 OFFCURVE",
"1950 800 QCURVE SMOOTH",
"2400 800 OFFCURVE",
"2400 1120 QCURVE SMOOTH",
"2400 1680 LINE SMOOTH",
"2400 2000 OFFCURVE",
"1950 2000 QCURVE SMOOTH",
"1500 2000 OFFCURVE",
"1500 1680 QCURVE SMOOTH",
"1500 1560 LINE SMOOTH",
"1500 1320 OFFCURVE",
"1815 1320 QCURVE SMOOTH",
"1950 1320 LINE",
"1950 1480 LINE",
"1815 1480 LINE SMOOTH",
"1688 1480 OFFCURVE",
"1688 1560 QCURVE SMOOTH",
"1688 1680 LINE SMOOTH",
"1688 1862 OFFCURVE",
"1950 1862 QCURVE SMOOTH",
"2212 1862 OFFCURVE",
"2212 1680 QCURVE SMOOTH",
"2212 1120 LINE",
"2212 1120 LINE"
);
},
{
closed = 1;
nodes = (
"912 938 OFFCURVE",
"650 938 QCURVE SMOOTH",
"388 938 OFFCURVE",
"388 1120 QCURVE",
"200 1120 LINE",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1100 800 OFFCURVE",
"1100 1120 QCURVE SMOOTH",
"1100 1680 LINE SMOOTH",
"1100 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1680 QCURVE SMOOTH",
"200 1560 LINE SMOOTH",
"200 1320 OFFCURVE",
"515 1320 QCURVE SMOOTH",
"650 1320 LINE",
"650 1480 LINE",
"515 1480 LINE SMOOTH",
"388 1480 OFFCURVE",
"388 1560 QCURVE SMOOTH",
"388 1680 LINE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1680 QCURVE SMOOTH",
"912 1120 LINE",
"912 1120 LINE"
);
},
{
closed = 1;
nodes = (
"1095 472 LINE",
"1095 610 LINE",
"1042 610 LINE SMOOTH",
"800 610 OFFCURVE",
"800 430 QCURVE SMOOTH",
"800 210 OFFCURVE",
"1066 210 QCURVE SMOOTH",
"1303 210 OFFCURVE",
"1412 356 QCURVE",
"1412 -590 LINE",
"1600 -590 LINE",
"1600 610 LINE",
"1412 610 LINE",
"1328 479 LINE SMOOTH",
"1243 348 OFFCURVE",
"1066 348 QCURVE SMOOTH",
"988 348 OFFCURVE",
"988 430 QCURVE SMOOTH",
"988 472 OFFCURVE",
"1042 472 QCURVE",
"1042 472 LINE"
);
}
);
width = 2600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"828 801 OFFCURVE",
"1043 963 OFFCURVE",
"1043 1120 QCURVE SMOOTH",
"1043 1681 LINE SMOOTH",
"1043 2001 OFFCURVE",
"626 2001 QCURVE SMOOTH",
"423 2001 OFFCURVE",
"212 1841 OFFCURVE",
"212 1681 QCURVE SMOOTH",
"212 1546 LINE SMOOTH",
"212 1438 OFFCURVE",
"347 1321 OFFCURVE",
"466 1321 QCURVE SMOOTH",
"626 1321 LINE",
"626 1425 LINE",
"466 1425 LINE SMOOTH",
"398 1425 OFFCURVE",
"331 1499 OFFCURVE",
"331 1546 QCURVE SMOOTH",
"331 1681 LINE SMOOTH",
"331 1788 OFFCURVE",
"478 1907 OFFCURVE",
"626 1907 QCURVE SMOOTH",
"775 1907 OFFCURVE",
"923 1788 OFFCURVE",
"923 1681 QCURVE SMOOTH",
"923 1120 LINE SMOOTH",
"923 1014 OFFCURVE",
"775 895 OFFCURVE",
"626 895 QCURVE SMOOTH",
"478 895 OFFCURVE",
"331 1014 OFFCURVE",
"331 1120 QCURVE",
"212 1120 LINE",
"212 965 OFFCURVE",
"425 801 OFFCURVE",
"626 801 QCURVE",
"626 801 LINE"
);
},
{
closed = 1;
nodes = (
"2129 801 OFFCURVE",
"2344 963 OFFCURVE",
"2344 1120 QCURVE SMOOTH",
"2344 1681 LINE SMOOTH",
"2344 2001 OFFCURVE",
"1926 2001 QCURVE SMOOTH",
"1723 2001 OFFCURVE",
"1512 1841 OFFCURVE",
"1512 1681 QCURVE SMOOTH",
"1512 1546 LINE SMOOTH",
"1512 1438 OFFCURVE",
"1648 1321 OFFCURVE",
"1766 1321 QCURVE SMOOTH",
"1926 1321 LINE",
"1926 1425 LINE",
"1766 1425 LINE SMOOTH",
"1699 1425 OFFCURVE",
"1631 1499 OFFCURVE",
"1631 1546 QCURVE SMOOTH",
"1631 1681 LINE SMOOTH",
"1631 1788 OFFCURVE",
"1779 1907 OFFCURVE",
"1926 1907 QCURVE SMOOTH",
"2076 1907 OFFCURVE",
"2223 1788 OFFCURVE",
"2223 1681 QCURVE SMOOTH",
"2223 1120 LINE SMOOTH",
"2223 1014 OFFCURVE",
"2076 895 OFFCURVE",
"1926 895 QCURVE SMOOTH",
"1779 895 OFFCURVE",
"1631 1014 OFFCURVE",
"1631 1120 QCURVE",
"1512 1120 LINE",
"1512 965 OFFCURVE",
"1725 801 OFFCURVE",
"1926 801 QCURVE",
"1926 801 LINE"
);
},
{
closed = 1;
nodes = (
"1566 -590 LINE",
"1566 610 LINE",
"1443 610 LINE",
"1371 487 OFFCURVE",
"1197 317 OFFCURVE",
"1084 317 QCURVE SMOOTH",
"1011 317 OFFCURVE",
"953 389 OFFCURVE",
"953 426 QCURVE SMOOTH",
"953 457 OFFCURVE",
"1009 516 OFFCURVE",
"1070 516 QCURVE SMOOTH",
"1097 516 LINE",
"1097 610 LINE",
"1070 610 LINE SMOOTH",
"960 610 OFFCURVE",
"835 516 OFFCURVE",
"835 422 QCURVE SMOOTH",
"835 336 OFFCURVE",
"962 221 OFFCURVE",
"1078 221 QCURVE SMOOTH",
"1158 221 OFFCURVE",
"1295 285 OFFCURVE",
"1406 381 OFFCURVE",
"1443 434 QCURVE",
"1443 -590 LINE",
"1443 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"786 801 OFFCURVE",
"989 965 OFFCURVE",
"989 1120 QCURVE SMOOTH",
"989 1681 LINE SMOOTH",
"989 1837 OFFCURVE",
"790 2001 OFFCURVE",
"606 2001 QCURVE SMOOTH",
"424 2001 OFFCURVE",
"225 1841 OFFCURVE",
"225 1681 QCURVE SMOOTH",
"225 1530 LINE SMOOTH",
"225 1434 OFFCURVE",
"340 1321 OFFCURVE",
"422 1321 QCURVE SMOOTH",
"606 1321 LINE",
"606 1374 LINE",
"418 1374 LINE SMOOTH",
"346 1374 OFFCURVE",
"278 1477 OFFCURVE",
"278 1530 QCURVE SMOOTH",
"278 1681 LINE SMOOTH",
"278 1806 OFFCURVE",
"442 1948 OFFCURVE",
"606 1948 QCURVE SMOOTH",
"770 1948 OFFCURVE",
"936 1806 OFFCURVE",
"936 1681 QCURVE SMOOTH",
"936 1120 LINE SMOOTH",
"936 995 OFFCURVE",
"770 854 OFFCURVE",
"606 854 QCURVE SMOOTH",
"442 854 OFFCURVE",
"278 995 OFFCURVE",
"278 1120 QCURVE",
"225 1120 LINE",
"225 965 OFFCURVE",
"430 801 OFFCURVE",
"606 801 QCURVE",
"606 801 LINE"
);
},
{
closed = 1;
nodes = (
"2087 801 OFFCURVE",
"2289 965 OFFCURVE",
"2289 1120 QCURVE SMOOTH",
"2289 1681 LINE SMOOTH",
"2289 1837 OFFCURVE",
"2091 2001 OFFCURVE",
"1906 2001 QCURVE SMOOTH",
"1724 2001 OFFCURVE",
"1525 1841 OFFCURVE",
"1525 1681 QCURVE SMOOTH",
"1525 1530 LINE SMOOTH",
"1525 1434 OFFCURVE",
"1640 1321 OFFCURVE",
"1722 1321 QCURVE SMOOTH",
"1906 1321 LINE",
"1906 1374 LINE",
"1718 1374 LINE SMOOTH",
"1646 1374 OFFCURVE",
"1579 1477 OFFCURVE",
"1579 1530 QCURVE SMOOTH",
"1579 1681 LINE SMOOTH",
"1579 1806 OFFCURVE",
"1743 1948 OFFCURVE",
"1906 1948 QCURVE SMOOTH",
"2070 1948 OFFCURVE",
"2236 1806 OFFCURVE",
"2236 1681 QCURVE SMOOTH",
"2236 1120 LINE SMOOTH",
"2236 995 OFFCURVE",
"2070 854 OFFCURVE",
"1906 854 QCURVE SMOOTH",
"1743 854 OFFCURVE",
"1579 995 OFFCURVE",
"1579 1120 QCURVE",
"1525 1120 LINE",
"1525 965 OFFCURVE",
"1730 801 OFFCURVE",
"1906 801 QCURVE",
"1906 801 LINE"
);
},
{
closed = 1;
nodes = (
"1532 -590 LINE",
"1532 610 LINE",
"1478 610 LINE",
"1439 547 OFFCURVE",
"1325 399 OFFCURVE",
"1177 293 OFFCURVE",
"1093 293 QCURVE SMOOTH",
"1026 293 OFFCURVE",
"952 340 OFFCURVE",
"921 408 OFFCURVE",
"921 438 QCURVE SMOOTH",
"921 475 OFFCURVE",
"993 557 OFFCURVE",
"1081 557 QCURVE SMOOTH",
"1099 557 LINE",
"1099 610 LINE",
"1097 610 LINE SMOOTH",
"983 610 OFFCURVE",
"868 516 OFFCURVE",
"868 436 QCURVE SMOOTH",
"868 340 OFFCURVE",
"997 240 OFFCURVE",
"1091 240 QCURVE SMOOTH",
"1177 240 OFFCURVE",
"1325 330 OFFCURVE",
"1439 455 OFFCURVE",
"1478 512 QCURVE",
"1478 -590 LINE",
"1478 -590 LINE"
);
}
);
width = 2600;
}
);
note = uni19EB;
unicode = 19EB;
},
{
glyphname = uni19EC;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1255 801 OFFCURVE",
"1255 1120 QCURVE SMOOTH",
"1255 1681 LINE SMOOTH",
"1255 2001 OFFCURVE",
"713 2001 QCURVE SMOOTH",
"172 2001 OFFCURVE",
"172 1681 QCURVE SMOOTH",
"172 1561 LINE SMOOTH",
"172 1456 OFFCURVE",
"254 1352 OFFCURVE",
"393 1317 OFFCURVE",
"479 1317 QCURVE SMOOTH",
"713 1317 LINE",
"713 1583 LINE",
"623 1583 LINE SMOOTH",
"563 1583 OFFCURVE",
"543 1636 OFFCURVE",
"543 1663 QCURVE SMOOTH",
"543 1681 LINE SMOOTH",
"543 1772 OFFCURVE",
"713 1772 QCURVE SMOOTH",
"887 1772 OFFCURVE",
"887 1681 QCURVE SMOOTH",
"887 1120 LINE SMOOTH",
"887 1030 OFFCURVE",
"713 1030 QCURVE SMOOTH",
"543 1030 OFFCURVE",
"543 1122 QCURVE",
"172 1122 LINE",
"172 801 OFFCURVE",
"713 801 QCURVE",
"713 801 LINE"
);
},
{
closed = 1;
nodes = (
"2949 801 OFFCURVE",
"2949 1200 QCURVE SMOOTH",
"2949 2001 LINE",
"2578 2001 LINE",
"2460 1915 LINE",
"2351 2001 LINE",
"1970 2001 LINE",
"1970 1401 LINE",
"2380 1401 LINE",
"2380 1630 LINE",
"2351 1630 LINE",
"2351 1741 LINE",
"2460 1659 LINE",
"2578 1741 LINE",
"2578 1200 LINE SMOOTH",
"2578 1030 OFFCURVE",
"2228 1030 QCURVE SMOOTH",
"1874 1030 OFFCURVE",
"1874 1200 QCURVE SMOOTH",
"1874 2126 LINE SMOOTH",
"1874 2183 OFFCURVE",
"1831 2251 OFFCURVE",
"1753 2251 QCURVE SMOOTH",
"1403 2251 LINE",
"1403 2021 LINE",
"1503 2021 LINE",
"1503 1200 LINE SMOOTH",
"1503 801 OFFCURVE",
"2228 801 QCURVE",
"2228 801 LINE"
);
},
{
closed = 1;
nodes = (
"1821 -590 LINE",
"1821 610 LINE",
"1450 610 LINE",
"1444 520 OFFCURVE",
"1384 369 OFFCURVE",
"1290 274 OFFCURVE",
"1231 274 QCURVE SMOOTH",
"1188 274 OFFCURVE",
"1188 309 QCURVE SMOOTH",
"1188 344 OFFCURVE",
"1223 344 QCURVE SMOOTH",
"1233 344 LINE",
"1233 610 LINE",
"1153 610 LINE SMOOTH",
"1038 610 OFFCURVE",
"897 535 OFFCURVE",
"836 410 OFFCURVE",
"836 332 QCURVE SMOOTH",
"836 233 OFFCURVE",
"942 94 OFFCURVE",
"1092 23 OFFCURVE",
"1161 23 QCURVE SMOOTH",
"1241 23 OFFCURVE",
"1343 51 OFFCURVE",
"1415 104 OFFCURVE",
"1450 139 QCURVE",
"1450 -590 LINE",
"1450 -590 LINE"
);
}
);
width = 3121;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1194 801 OFFCURVE",
"1194 1120 QCURVE SMOOTH",
"1194 1681 LINE SMOOTH",
"1194 2001 OFFCURVE",
"688 2001 QCURVE SMOOTH",
"182 2001 OFFCURVE",
"182 1681 QCURVE SMOOTH",
"182 1561 LINE SMOOTH",
"182 1419 OFFCURVE",
"354 1319 OFFCURVE",
"493 1319 QCURVE SMOOTH",
"688 1319 LINE",
"688 1542 LINE",
"579 1542 LINE SMOOTH",
"520 1542 OFFCURVE",
"481 1591 OFFCURVE",
"481 1624 QCURVE SMOOTH",
"481 1681 LINE SMOOTH",
"481 1808 OFFCURVE",
"688 1808 QCURVE SMOOTH",
"897 1808 OFFCURVE",
"897 1681 QCURVE SMOOTH",
"897 1120 LINE SMOOTH",
"897 993 OFFCURVE",
"688 993 QCURVE SMOOTH",
"481 993 OFFCURVE",
"481 1122 QCURVE",
"182 1122 LINE",
"182 801 OFFCURVE",
"688 801 QCURVE",
"688 801 LINE"
);
},
{
closed = 1;
nodes = (
"2828 801 OFFCURVE",
"2828 1200 QCURVE SMOOTH",
"2828 2001 LINE",
"2529 2001 LINE",
"2375 1880 LINE",
"2230 2001 LINE",
"1923 2001 LINE",
"1923 1401 LINE",
"2267 1401 LINE",
"2267 1593 LINE",
"2230 1593 LINE",
"2230 1778 LINE",
"2375 1659 LINE",
"2529 1778 LINE",
"2529 1200 LINE SMOOTH",
"2529 993 OFFCURVE",
"2167 993 QCURVE SMOOTH",
"1802 993 OFFCURVE",
"1802 1200 QCURVE SMOOTH",
"1802 2142 LINE SMOOTH",
"1802 2193 OFFCURVE",
"1759 2251 OFFCURVE",
"1691 2251 QCURVE SMOOTH",
"1403 2251 LINE",
"1403 2058 LINE",
"1503 2058 LINE",
"1503 1200 LINE SMOOTH",
"1503 801 OFFCURVE",
"2167 801 QCURVE",
"2167 801 LINE"
);
},
{
closed = 1;
nodes = (
"1759 -590 LINE",
"1759 610 LINE",
"1460 610 LINE",
"1419 471 OFFCURVE",
"1290 301 OFFCURVE",
"1196 301 QCURVE SMOOTH",
"1134 301 OFFCURVE",
"1134 348 QCURVE SMOOTH",
"1134 369 OFFCURVE",
"1161 395 OFFCURVE",
"1186 395 QCURVE SMOOTH",
"1204 395 LINE",
"1204 610 LINE",
"1134 610 LINE SMOOTH",
"989 610 OFFCURVE",
"848 473 OFFCURVE",
"848 362 QCURVE SMOOTH",
"848 281 OFFCURVE",
"934 160 OFFCURVE",
"1071 94 OFFCURVE",
"1149 94 QCURVE SMOOTH",
"1267 94 OFFCURVE",
"1407 164 OFFCURVE",
"1460 223 QCURVE",
"1460 -590 LINE",
"1460 -590 LINE"
);
}
);
width = 3012;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 938 OFFCURVE",
"650 938 QCURVE SMOOTH",
"388 938 OFFCURVE",
"388 1120 QCURVE",
"200 1120 LINE",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1100 800 OFFCURVE",
"1100 1120 QCURVE SMOOTH",
"1100 1680 LINE SMOOTH",
"1100 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1680 QCURVE SMOOTH",
"200 1560 LINE SMOOTH",
"200 1320 OFFCURVE",
"515 1320 QCURVE SMOOTH",
"650 1320 LINE",
"650 1480 LINE",
"515 1480 LINE SMOOTH",
"388 1480 OFFCURVE",
"388 1560 QCURVE SMOOTH",
"388 1680 LINE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1680 QCURVE SMOOTH",
"912 1120 LINE",
"912 1120 LINE"
);
},
{
closed = 1;
nodes = (
"2638 2000 LINE",
"2450 2000 LINE",
"2240 1826 LINE",
"2040 2000 LINE",
"1842 2000 LINE",
"1842 1400 LINE",
"2090 1400 LINE",
"2090 1550 LINE",
"2040 1550 LINE",
"2040 1832 LINE",
"2240 1658 LINE",
"2450 1832 LINE",
"2450 1200 LINE SMOOTH",
"2450 938 OFFCURVE",
"2069 938 QCURVE SMOOTH",
"1688 938 OFFCURVE",
"1688 1200 QCURVE SMOOTH",
"1688 2100 LINE SMOOTH",
"1688 2250 OFFCURVE",
"1500 2250 QCURVE SMOOTH",
"1400 2250 LINE",
"1400 2100 LINE",
"1500 2100 LINE",
"1500 1200 LINE SMOOTH",
"1500 800 OFFCURVE",
"2069 800 QCURVE SMOOTH",
"2638 800 OFFCURVE",
"2638 1200 QCURVE",
"2638 1200 LINE"
);
},
{
closed = 1;
nodes = (
"1095 472 LINE",
"1095 610 LINE",
"1042 610 LINE SMOOTH",
"800 610 OFFCURVE",
"800 430 QCURVE SMOOTH",
"800 210 OFFCURVE",
"1066 210 QCURVE SMOOTH",
"1303 210 OFFCURVE",
"1412 356 QCURVE",
"1412 -590 LINE",
"1600 -590 LINE",
"1600 610 LINE",
"1412 610 LINE",
"1328 479 LINE SMOOTH",
"1243 348 OFFCURVE",
"1066 348 QCURVE SMOOTH",
"988 348 OFFCURVE",
"988 430 QCURVE SMOOTH",
"988 472 OFFCURVE",
"1042 472 QCURVE",
"1042 472 LINE"
);
}
);
width = 2838;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"828 801 OFFCURVE",
"1043 963 OFFCURVE",
"1043 1120 QCURVE SMOOTH",
"1043 1681 LINE SMOOTH",
"1043 2001 OFFCURVE",
"626 2001 QCURVE SMOOTH",
"423 2001 OFFCURVE",
"212 1841 OFFCURVE",
"212 1681 QCURVE SMOOTH",
"212 1546 LINE SMOOTH",
"212 1438 OFFCURVE",
"347 1321 OFFCURVE",
"466 1321 QCURVE SMOOTH",
"626 1321 LINE",
"626 1425 LINE",
"466 1425 LINE SMOOTH",
"398 1425 OFFCURVE",
"331 1499 OFFCURVE",
"331 1546 QCURVE SMOOTH",
"331 1681 LINE SMOOTH",
"331 1788 OFFCURVE",
"478 1907 OFFCURVE",
"626 1907 QCURVE SMOOTH",
"775 1907 OFFCURVE",
"923 1788 OFFCURVE",
"923 1681 QCURVE SMOOTH",
"923 1120 LINE SMOOTH",
"923 1014 OFFCURVE",
"775 895 OFFCURVE",
"626 895 QCURVE SMOOTH",
"478 895 OFFCURVE",
"331 1014 OFFCURVE",
"331 1120 QCURVE",
"212 1120 LINE",
"212 965 OFFCURVE",
"425 801 OFFCURVE",
"626 801 QCURVE",
"626 801 LINE"
);
},
{
closed = 1;
nodes = (
"2188 801 OFFCURVE",
"2455 999 OFFCURVE",
"2455 1200 QCURVE SMOOTH",
"2455 2001 LINE",
"2334 2001 LINE",
"2092 1792 LINE",
"1852 2001 LINE",
"1732 2001 LINE",
"1732 1415 LINE",
"1906 1415 LINE",
"1906 1511 LINE",
"1852 1511 LINE",
"1852 1882 LINE",
"2092 1673 LINE",
"2334 1882 LINE",
"2334 1200 LINE SMOOTH",
"2334 1053 OFFCURVE",
"2137 895 OFFCURVE",
"1938 895 QCURVE SMOOTH",
"1744 895 OFFCURVE",
"1549 1053 OFFCURVE",
"1549 1200 QCURVE SMOOTH",
"1549 2189 LINE SMOOTH",
"1549 2224 OFFCURVE",
"1519 2257 OFFCURVE",
"1480 2257 QCURVE SMOOTH",
"1328 2257 LINE",
"1328 2161 LINE",
"1429 2161 LINE",
"1429 1200 LINE SMOOTH",
"1429 1001 OFFCURVE",
"1689 801 OFFCURVE",
"1938 801 QCURVE",
"1938 801 LINE"
);
},
{
closed = 1;
nodes = (
"1596 -590 LINE",
"1596 610 LINE",
"1474 610 LINE",
"1402 487 OFFCURVE",
"1228 317 OFFCURVE",
"1115 317 QCURVE SMOOTH",
"1041 317 OFFCURVE",
"984 389 OFFCURVE",
"984 426 QCURVE SMOOTH",
"984 457 OFFCURVE",
"1039 516 OFFCURVE",
"1101 516 QCURVE SMOOTH",
"1127 516 LINE",
"1127 610 LINE",
"1101 610 LINE SMOOTH",
"990 610 OFFCURVE",
"865 516 OFFCURVE",
"865 422 QCURVE SMOOTH",
"865 336 OFFCURVE",
"992 221 OFFCURVE",
"1109 221 QCURVE SMOOTH",
"1189 221 OFFCURVE",
"1326 285 OFFCURVE",
"1437 381 OFFCURVE",
"1474 434 QCURVE",
"1474 -590 LINE",
"1474 -590 LINE"
);
}
);
width = 2668;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"786 801 OFFCURVE",
"989 965 OFFCURVE",
"989 1120 QCURVE SMOOTH",
"989 1681 LINE SMOOTH",
"989 1837 OFFCURVE",
"790 2001 OFFCURVE",
"606 2001 QCURVE SMOOTH",
"424 2001 OFFCURVE",
"225 1841 OFFCURVE",
"225 1681 QCURVE SMOOTH",
"225 1530 LINE SMOOTH",
"225 1434 OFFCURVE",
"340 1321 OFFCURVE",
"422 1321 QCURVE SMOOTH",
"606 1321 LINE",
"606 1374 LINE",
"418 1374 LINE SMOOTH",
"346 1374 OFFCURVE",
"278 1477 OFFCURVE",
"278 1530 QCURVE SMOOTH",
"278 1681 LINE SMOOTH",
"278 1806 OFFCURVE",
"442 1948 OFFCURVE",
"606 1948 QCURVE SMOOTH",
"770 1948 OFFCURVE",
"936 1806 OFFCURVE",
"936 1681 QCURVE SMOOTH",
"936 1120 LINE SMOOTH",
"936 995 OFFCURVE",
"770 854 OFFCURVE",
"606 854 QCURVE SMOOTH",
"442 854 OFFCURVE",
"278 995 OFFCURVE",
"278 1120 QCURVE",
"225 1120 LINE",
"225 965 OFFCURVE",
"430 801 OFFCURVE",
"606 801 QCURVE",
"606 801 LINE"
);
},
{
closed = 1;
nodes = (
"2025 801 OFFCURVE",
"2271 997 OFFCURVE",
"2271 1200 QCURVE SMOOTH",
"2271 2001 LINE",
"2218 2001 LINE",
"1939 1759 LINE",
"1667 2001 LINE",
"1614 2001 LINE",
"1614 1432 LINE",
"1722 1432 LINE",
"1722 1485 LINE",
"1667 1485 LINE",
"1667 1929 LINE",
"1939 1688 LINE",
"2218 1929 LINE",
"2218 1200 LINE SMOOTH",
"2218 1036 OFFCURVE",
"2015 854 OFFCURVE",
"1812 854 QCURVE SMOOTH",
"1611 854 OFFCURVE",
"1411 1036 OFFCURVE",
"1411 1200 QCURVE SMOOTH",
"1411 2214 LINE SMOOTH",
"1411 2243 OFFCURVE",
"1394 2263 OFFCURVE",
"1368 2263 QCURVE SMOOTH",
"1259 2263 LINE",
"1259 2210 LINE",
"1358 2210 LINE",
"1358 1200 LINE SMOOTH",
"1358 1001 OFFCURVE",
"1599 801 OFFCURVE",
"1812 801 QCURVE",
"1812 801 LINE"
);
},
{
closed = 1;
nodes = (
"1532 -590 LINE",
"1532 610 LINE",
"1478 610 LINE",
"1439 547 OFFCURVE",
"1325 399 OFFCURVE",
"1177 293 OFFCURVE",
"1093 293 QCURVE SMOOTH",
"1026 293 OFFCURVE",
"952 340 OFFCURVE",
"921 408 OFFCURVE",
"921 438 QCURVE SMOOTH",
"921 475 OFFCURVE",
"993 557 OFFCURVE",
"1081 557 QCURVE SMOOTH",
"1099 557 LINE",
"1099 610 LINE",
"1097 610 LINE SMOOTH",
"983 610 OFFCURVE",
"868 516 OFFCURVE",
"868 436 QCURVE SMOOTH",
"868 340 OFFCURVE",
"997 240 OFFCURVE",
"1091 240 QCURVE SMOOTH",
"1177 240 OFFCURVE",
"1325 330 OFFCURVE",
"1439 455 OFFCURVE",
"1478 512 QCURVE",
"1478 -590 LINE",
"1478 -590 LINE"
);
}
);
width = 2496;
}
);
note = uni19EC;
unicode = 19EC;
},
{
glyphname = uni19ED;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1255 801 OFFCURVE",
"1255 1120 QCURVE SMOOTH",
"1255 1681 LINE SMOOTH",
"1255 2001 OFFCURVE",
"713 2001 QCURVE SMOOTH",
"172 2001 OFFCURVE",
"172 1681 QCURVE SMOOTH",
"172 1561 LINE SMOOTH",
"172 1456 OFFCURVE",
"254 1352 OFFCURVE",
"393 1317 OFFCURVE",
"479 1317 QCURVE SMOOTH",
"713 1317 LINE",
"713 1583 LINE",
"623 1583 LINE SMOOTH",
"563 1583 OFFCURVE",
"543 1636 OFFCURVE",
"543 1663 QCURVE SMOOTH",
"543 1681 LINE SMOOTH",
"543 1772 OFFCURVE",
"713 1772 QCURVE SMOOTH",
"887 1772 OFFCURVE",
"887 1681 QCURVE SMOOTH",
"887 1120 LINE SMOOTH",
"887 1030 OFFCURVE",
"713 1030 QCURVE SMOOTH",
"543 1030 OFFCURVE",
"543 1122 QCURVE",
"172 1122 LINE",
"172 801 OFFCURVE",
"713 801 QCURVE",
"713 801 LINE"
);
},
{
closed = 1;
nodes = (
"1921 801 LINE",
"1921 1030 LINE",
"1841 1030 LINE",
"1841 1667 LINE SMOOTH",
"1841 1772 OFFCURVE",
"1950 1772 QCURVE SMOOTH",
"2058 1772 OFFCURVE",
"2058 1667 QCURVE SMOOTH",
"2058 801 LINE",
"2427 801 LINE",
"2427 1667 LINE SMOOTH",
"2427 1772 OFFCURVE",
"2537 1772 QCURVE SMOOTH",
"2646 1772 OFFCURVE",
"2646 1667 QCURVE SMOOTH",
"2646 801 LINE",
"3015 801 LINE",
"3015 1640 LINE SMOOTH",
"3015 2001 OFFCURVE",
"2537 2001 QCURVE SMOOTH",
"2339 2001 OFFCURVE",
"2243 1911 QCURVE",
"2146 2001 OFFCURVE",
"1950 2001 QCURVE SMOOTH",
"1470 2001 OFFCURVE",
"1470 1651 QCURVE SMOOTH",
"1470 801 LINE",
"1470 801 LINE"
);
},
{
closed = 1;
nodes = (
"1905 -590 LINE",
"1905 610 LINE",
"1534 610 LINE",
"1528 520 OFFCURVE",
"1468 369 OFFCURVE",
"1374 274 OFFCURVE",
"1315 274 QCURVE SMOOTH",
"1272 274 OFFCURVE",
"1272 309 QCURVE SMOOTH",
"1272 344 OFFCURVE",
"1307 344 QCURVE SMOOTH",
"1317 344 LINE",
"1317 610 LINE",
"1237 610 LINE SMOOTH",
"1122 610 OFFCURVE",
"981 535 OFFCURVE",
"920 410 OFFCURVE",
"920 332 QCURVE SMOOTH",
"920 233 OFFCURVE",
"1026 94 OFFCURVE",
"1176 23 OFFCURVE",
"1245 23 QCURVE SMOOTH",
"1325 23 OFFCURVE",
"1427 51 OFFCURVE",
"1499 104 OFFCURVE",
"1534 139 QCURVE",
"1534 -590 LINE",
"1534 -590 LINE"
);
}
);
width = 3186;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1194 801 OFFCURVE",
"1194 1120 QCURVE SMOOTH",
"1194 1681 LINE SMOOTH",
"1194 2001 OFFCURVE",
"688 2001 QCURVE SMOOTH",
"182 2001 OFFCURVE",
"182 1681 QCURVE SMOOTH",
"182 1561 LINE SMOOTH",
"182 1419 OFFCURVE",
"354 1319 OFFCURVE",
"493 1319 QCURVE SMOOTH",
"688 1319 LINE",
"688 1542 LINE",
"579 1542 LINE SMOOTH",
"520 1542 OFFCURVE",
"481 1591 OFFCURVE",
"481 1624 QCURVE SMOOTH",
"481 1681 LINE SMOOTH",
"481 1808 OFFCURVE",
"688 1808 QCURVE SMOOTH",
"897 1808 OFFCURVE",
"897 1681 QCURVE SMOOTH",
"897 1120 LINE SMOOTH",
"897 993 OFFCURVE",
"688 993 QCURVE SMOOTH",
"481 993 OFFCURVE",
"481 1122 QCURVE",
"182 1122 LINE",
"182 801 OFFCURVE",
"688 801 QCURVE",
"688 801 LINE"
);
},
{
closed = 1;
nodes = (
"1851 801 LINE",
"1851 993 LINE",
"1765 993 LINE",
"1765 1657 LINE SMOOTH",
"1765 1808 OFFCURVE",
"1908 1808 QCURVE SMOOTH",
"1980 1808 OFFCURVE",
"2052 1735 OFFCURVE",
"2052 1669 QCURVE SMOOTH",
"2052 801 LINE",
"2351 801 LINE",
"2351 1669 LINE SMOOTH",
"2351 1735 OFFCURVE",
"2425 1808 OFFCURVE",
"2496 1808 QCURVE SMOOTH",
"2640 1808 OFFCURVE",
"2640 1657 QCURVE SMOOTH",
"2640 801 LINE",
"2939 801 LINE",
"2939 1640 LINE SMOOTH",
"2939 2001 OFFCURVE",
"2496 2001 QCURVE SMOOTH",
"2298 2001 OFFCURVE",
"2201 1911 QCURVE",
"2105 2001 OFFCURVE",
"1908 2001 QCURVE SMOOTH",
"1464 2001 OFFCURVE",
"1464 1651 QCURVE SMOOTH",
"1464 801 LINE",
"1464 801 LINE"
);
},
{
closed = 1;
nodes = (
"1863 -590 LINE",
"1863 610 LINE",
"1564 610 LINE",
"1523 471 OFFCURVE",
"1394 301 OFFCURVE",
"1300 301 QCURVE SMOOTH",
"1239 301 OFFCURVE",
"1239 348 QCURVE SMOOTH",
"1239 369 OFFCURVE",
"1265 395 OFFCURVE",
"1290 395 QCURVE SMOOTH",
"1308 395 LINE",
"1308 610 LINE",
"1239 610 LINE SMOOTH",
"1093 610 OFFCURVE",
"952 473 OFFCURVE",
"952 362 QCURVE SMOOTH",
"952 281 OFFCURVE",
"1038 160 OFFCURVE",
"1175 94 OFFCURVE",
"1253 94 QCURVE SMOOTH",
"1372 94 OFFCURVE",
"1511 164 OFFCURVE",
"1564 223 QCURVE",
"1564 -590 LINE",
"1564 -590 LINE"
);
}
);
width = 3123;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 938 OFFCURVE",
"650 938 QCURVE SMOOTH",
"388 938 OFFCURVE",
"388 1120 QCURVE",
"200 1120 LINE",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1100 800 OFFCURVE",
"1100 1120 QCURVE SMOOTH",
"1100 1680 LINE SMOOTH",
"1100 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1680 QCURVE SMOOTH",
"200 1560 LINE SMOOTH",
"200 1320 OFFCURVE",
"515 1320 QCURVE SMOOTH",
"650 1320 LINE",
"650 1480 LINE",
"515 1480 LINE SMOOTH",
"388 1480 OFFCURVE",
"388 1560 QCURVE SMOOTH",
"388 1680 LINE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1680 QCURVE SMOOTH",
"912 1120 LINE",
"912 1120 LINE"
);
},
{
closed = 1;
nodes = (
"2276 1640 LINE SMOOTH",
"2276 1862 OFFCURVE",
"2476 1862 QCURVE SMOOTH",
"2676 1862 OFFCURVE",
"2676 1640 QCURVE SMOOTH",
"2676 800 LINE",
"2864 800 LINE",
"2864 1640 LINE SMOOTH",
"2864 2000 OFFCURVE",
"2476 2000 QCURVE SMOOTH",
"2275 2000 OFFCURVE",
"2181 1911 QCURVE",
"2087 2000 OFFCURVE",
"1888 2000 QCURVE SMOOTH",
"1500 2000 OFFCURVE",
"1500 1650 QCURVE SMOOTH",
"1500 800 LINE",
"1788 800 LINE",
"1788 938 LINE",
"1688 938 LINE",
"1688 1640 LINE SMOOTH",
"1688 1862 OFFCURVE",
"1888 1862 QCURVE SMOOTH",
"2088 1862 OFFCURVE",
"2088 1640 QCURVE SMOOTH",
"2088 800 LINE",
"2276 800 LINE",
"2276 800 LINE"
);
},
{
closed = 1;
nodes = (
"1095 472 LINE",
"1095 610 LINE",
"1042 610 LINE SMOOTH",
"800 610 OFFCURVE",
"800 430 QCURVE SMOOTH",
"800 210 OFFCURVE",
"1066 210 QCURVE SMOOTH",
"1303 210 OFFCURVE",
"1412 356 QCURVE",
"1412 -590 LINE",
"1600 -590 LINE",
"1600 610 LINE",
"1412 610 LINE",
"1328 479 LINE SMOOTH",
"1243 348 OFFCURVE",
"1066 348 QCURVE SMOOTH",
"988 348 OFFCURVE",
"988 430 QCURVE SMOOTH",
"988 472 OFFCURVE",
"1042 472 QCURVE",
"1042 472 LINE"
);
}
);
width = 3064;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"828 801 OFFCURVE",
"1043 963 OFFCURVE",
"1043 1120 QCURVE SMOOTH",
"1043 1681 LINE SMOOTH",
"1043 2001 OFFCURVE",
"626 2001 QCURVE SMOOTH",
"423 2001 OFFCURVE",
"212 1841 OFFCURVE",
"212 1681 QCURVE SMOOTH",
"212 1546 LINE SMOOTH",
"212 1438 OFFCURVE",
"347 1321 OFFCURVE",
"466 1321 QCURVE SMOOTH",
"626 1321 LINE",
"626 1425 LINE",
"466 1425 LINE SMOOTH",
"398 1425 OFFCURVE",
"331 1499 OFFCURVE",
"331 1546 QCURVE SMOOTH",
"331 1681 LINE SMOOTH",
"331 1788 OFFCURVE",
"478 1907 OFFCURVE",
"626 1907 QCURVE SMOOTH",
"775 1907 OFFCURVE",
"923 1788 OFFCURVE",
"923 1681 QCURVE SMOOTH",
"923 1120 LINE SMOOTH",
"923 1014 OFFCURVE",
"775 895 OFFCURVE",
"626 895 QCURVE SMOOTH",
"478 895 OFFCURVE",
"331 1014 OFFCURVE",
"331 1120 QCURVE",
"212 1120 LINE",
"212 965 OFFCURVE",
"425 801 OFFCURVE",
"626 801 QCURVE",
"626 801 LINE"
);
},
{
closed = 1;
nodes = (
"1629 801 LINE",
"1629 895 LINE",
"1529 895 LINE",
"1529 1661 LINE SMOOTH",
"1529 1907 OFFCURVE",
"1762 1907 QCURVE SMOOTH",
"1877 1907 OFFCURVE",
"1998 1819 OFFCURVE",
"1998 1749 QCURVE SMOOTH",
"1998 801 LINE",
"2117 801 LINE",
"2117 1749 LINE SMOOTH",
"2117 1819 OFFCURVE",
"2233 1907 OFFCURVE",
"2350 1907 QCURVE SMOOTH",
"2465 1907 OFFCURVE",
"2584 1784 OFFCURVE",
"2584 1671 QCURVE SMOOTH",
"2584 801 LINE",
"2706 801 LINE",
"2706 1671 LINE SMOOTH",
"2706 1835 OFFCURVE",
"2514 2001 OFFCURVE",
"2350 2001 QCURVE SMOOTH",
"2151 2001 OFFCURVE",
"2055 1911 QCURVE",
"1959 2001 OFFCURVE",
"1762 2001 QCURVE SMOOTH",
"1598 2001 OFFCURVE",
"1408 1839 OFFCURVE",
"1408 1671 QCURVE SMOOTH",
"1408 801 LINE",
"1408 801 LINE"
);
},
{
closed = 1;
nodes = (
"1707 -590 LINE",
"1707 610 LINE",
"1584 610 LINE",
"1512 487 OFFCURVE",
"1338 317 OFFCURVE",
"1226 317 QCURVE SMOOTH",
"1152 317 OFFCURVE",
"1095 389 OFFCURVE",
"1095 426 QCURVE SMOOTH",
"1095 457 OFFCURVE",
"1150 516 OFFCURVE",
"1211 516 QCURVE SMOOTH",
"1238 516 LINE",
"1238 610 LINE",
"1211 610 LINE SMOOTH",
"1101 610 OFFCURVE",
"976 516 OFFCURVE",
"976 422 QCURVE SMOOTH",
"976 336 OFFCURVE",
"1103 221 OFFCURVE",
"1220 221 QCURVE SMOOTH",
"1299 221 OFFCURVE",
"1437 285 OFFCURVE",
"1547 381 OFFCURVE",
"1584 434 QCURVE",
"1584 -590 LINE",
"1584 -590 LINE"
);
}
);
width = 2920;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"786 801 OFFCURVE",
"989 965 OFFCURVE",
"989 1120 QCURVE SMOOTH",
"989 1681 LINE SMOOTH",
"989 1837 OFFCURVE",
"790 2001 OFFCURVE",
"606 2001 QCURVE SMOOTH",
"424 2001 OFFCURVE",
"225 1841 OFFCURVE",
"225 1681 QCURVE SMOOTH",
"225 1530 LINE SMOOTH",
"225 1434 OFFCURVE",
"340 1321 OFFCURVE",
"422 1321 QCURVE SMOOTH",
"606 1321 LINE",
"606 1374 LINE",
"418 1374 LINE SMOOTH",
"346 1374 OFFCURVE",
"278 1477 OFFCURVE",
"278 1530 QCURVE SMOOTH",
"278 1681 LINE SMOOTH",
"278 1806 OFFCURVE",
"442 1948 OFFCURVE",
"606 1948 QCURVE SMOOTH",
"770 1948 OFFCURVE",
"936 1806 OFFCURVE",
"936 1681 QCURVE SMOOTH",
"936 1120 LINE SMOOTH",
"936 995 OFFCURVE",
"770 854 OFFCURVE",
"606 854 QCURVE SMOOTH",
"442 854 OFFCURVE",
"278 995 OFFCURVE",
"278 1120 QCURVE",
"225 1120 LINE",
"225 965 OFFCURVE",
"430 801 OFFCURVE",
"606 801 QCURVE",
"606 801 LINE"
);
},
{
closed = 1;
nodes = (
"1513 801 LINE",
"1513 854 LINE",
"1413 854 LINE",
"1413 1681 LINE SMOOTH",
"1413 1808 OFFCURVE",
"1550 1948 OFFCURVE",
"1681 1948 QCURVE SMOOTH",
"1812 1948 OFFCURVE",
"1949 1876 OFFCURVE",
"1949 1827 QCURVE SMOOTH",
"1949 801 LINE",
"2003 801 LINE",
"2003 1827 LINE SMOOTH",
"2003 1876 OFFCURVE",
"2136 1948 OFFCURVE",
"2269 1948 QCURVE SMOOTH",
"2400 1948 OFFCURVE",
"2537 1815 OFFCURVE",
"2537 1702 QCURVE SMOOTH",
"2537 801 LINE",
"2590 801 LINE",
"2590 1702 LINE SMOOTH",
"2590 1851 OFFCURVE",
"2402 2001 OFFCURVE",
"2269 2001 QCURVE SMOOTH",
"2070 2001 OFFCURVE",
"1974 1911 QCURVE",
"1878 2001 OFFCURVE",
"1681 2001 QCURVE SMOOTH",
"1548 2001 OFFCURVE",
"1360 1851 OFFCURVE",
"1360 1692 QCURVE SMOOTH",
"1360 801 LINE",
"1360 801 LINE"
);
},
{
closed = 1;
nodes = (
"1616 -590 LINE",
"1616 610 LINE",
"1562 610 LINE",
"1523 547 OFFCURVE",
"1409 399 OFFCURVE",
"1261 293 OFFCURVE",
"1177 293 QCURVE SMOOTH",
"1110 293 OFFCURVE",
"1036 340 OFFCURVE",
"1005 408 OFFCURVE",
"1005 438 QCURVE SMOOTH",
"1005 475 OFFCURVE",
"1077 557 OFFCURVE",
"1165 557 QCURVE SMOOTH",
"1183 557 LINE",
"1183 610 LINE",
"1181 610 LINE SMOOTH",
"1067 610 OFFCURVE",
"952 516 OFFCURVE",
"952 436 QCURVE SMOOTH",
"952 340 OFFCURVE",
"1081 240 OFFCURVE",
"1175 240 QCURVE SMOOTH",
"1261 240 OFFCURVE",
"1409 330 OFFCURVE",
"1523 455 OFFCURVE",
"1562 512 QCURVE",
"1562 -590 LINE",
"1562 -590 LINE"
);
}
);
width = 2816;
}
);
note = uni19ED;
unicode = 19ED;
},
{
glyphname = uni19EE;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1255 801 OFFCURVE",
"1255 1120 QCURVE SMOOTH",
"1255 1681 LINE SMOOTH",
"1255 2001 OFFCURVE",
"713 2001 QCURVE SMOOTH",
"172 2001 OFFCURVE",
"172 1681 QCURVE SMOOTH",
"172 1561 LINE SMOOTH",
"172 1456 OFFCURVE",
"254 1352 OFFCURVE",
"393 1317 OFFCURVE",
"479 1317 QCURVE SMOOTH",
"713 1317 LINE",
"713 1583 LINE",
"623 1583 LINE SMOOTH",
"563 1583 OFFCURVE",
"543 1636 OFFCURVE",
"543 1663 QCURVE SMOOTH",
"543 1681 LINE SMOOTH",
"543 1772 OFFCURVE",
"713 1772 QCURVE SMOOTH",
"887 1772 OFFCURVE",
"887 1681 QCURVE SMOOTH",
"887 1120 LINE SMOOTH",
"887 1030 OFFCURVE",
"713 1030 QCURVE SMOOTH",
"543 1030 OFFCURVE",
"543 1122 QCURVE",
"172 1122 LINE",
"172 801 OFFCURVE",
"713 801 QCURVE",
"713 801 LINE"
);
},
{
closed = 1;
nodes = (
"2527 801 LINE",
"2597 983 LINE",
"2456 1298 LINE",
"2456 1470 LINE",
"2580 1470 LINE",
"2580 1739 LINE",
"2468 1739 LINE SMOOTH",
"2367 1739 OFFCURVE",
"2193 1724 OFFCURVE",
"2089 1665 OFFCURVE",
"2089 1602 QCURVE SMOOTH",
"2089 1249 LINE",
"2267 1030 LINE",
"2038 1030 LINE SMOOTH",
"1868 1030 OFFCURVE",
"1868 1200 QCURVE SMOOTH",
"1868 2111 LINE SMOOTH",
"1868 2187 OFFCURVE",
"1796 2261 OFFCURVE",
"1714 2261 QCURVE SMOOTH",
"1397 2261 LINE",
"1397 2032 LINE",
"1497 2032 LINE",
"1497 1200 LINE SMOOTH",
"1497 801 OFFCURVE",
"2038 801 QCURVE",
"2038 801 LINE"
);
},
{
closed = 1;
nodes = (
"1810 -590 LINE",
"1810 610 LINE",
"1440 610 LINE",
"1434 520 OFFCURVE",
"1374 369 OFFCURVE",
"1280 274 OFFCURVE",
"1221 274 QCURVE SMOOTH",
"1178 274 OFFCURVE",
"1178 309 QCURVE SMOOTH",
"1178 344 OFFCURVE",
"1212 344 QCURVE SMOOTH",
"1223 344 LINE",
"1223 610 LINE",
"1143 610 LINE SMOOTH",
"1028 610 OFFCURVE",
"887 535 OFFCURVE",
"825 410 OFFCURVE",
"825 332 QCURVE SMOOTH",
"825 233 OFFCURVE",
"932 94 OFFCURVE",
"1081 23 OFFCURVE",
"1151 23 QCURVE SMOOTH",
"1231 23 OFFCURVE",
"1333 51 OFFCURVE",
"1405 104 OFFCURVE",
"1440 139 QCURVE",
"1440 -590 LINE",
"1440 -590 LINE"
);
}
);
width = 2768;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1194 801 OFFCURVE",
"1194 1120 QCURVE SMOOTH",
"1194 1681 LINE SMOOTH",
"1194 2001 OFFCURVE",
"688 2001 QCURVE SMOOTH",
"182 2001 OFFCURVE",
"182 1681 QCURVE SMOOTH",
"182 1561 LINE SMOOTH",
"182 1419 OFFCURVE",
"354 1319 OFFCURVE",
"493 1319 QCURVE SMOOTH",
"688 1319 LINE",
"688 1542 LINE",
"579 1542 LINE SMOOTH",
"520 1542 OFFCURVE",
"481 1591 OFFCURVE",
"481 1624 QCURVE SMOOTH",
"481 1681 LINE SMOOTH",
"481 1808 OFFCURVE",
"688 1808 QCURVE SMOOTH",
"897 1808 OFFCURVE",
"897 1681 QCURVE SMOOTH",
"897 1120 LINE SMOOTH",
"897 993 OFFCURVE",
"688 993 QCURVE SMOOTH",
"481 993 OFFCURVE",
"481 1122 QCURVE",
"182 1122 LINE",
"182 801 OFFCURVE",
"688 801 QCURVE",
"688 801 LINE"
);
},
{
closed = 1;
nodes = (
"2443 801 LINE",
"2504 965 LINE",
"2336 1298 LINE",
"2336 1522 LINE",
"2494 1522 LINE",
"2494 1739 LINE",
"2349 1739 LINE SMOOTH",
"2261 1739 OFFCURVE",
"2121 1718 OFFCURVE",
"2040 1661 OFFCURVE",
"2040 1602 QCURVE SMOOTH",
"2040 1249 LINE",
"2253 993 LINE",
"1988 993 LINE SMOOTH",
"1781 993 OFFCURVE",
"1781 1200 QCURVE SMOOTH",
"1781 2111 LINE SMOOTH",
"1781 2187 OFFCURVE",
"1722 2261 OFFCURVE",
"1646 2261 QCURVE SMOOTH",
"1382 2261 LINE",
"1382 2068 LINE",
"1482 2068 LINE",
"1482 1200 LINE SMOOTH",
"1482 801 OFFCURVE",
"1988 801 QCURVE",
"1988 801 LINE"
);
},
{
closed = 1;
nodes = (
"1736 -590 LINE",
"1736 610 LINE",
"1437 610 LINE",
"1396 471 OFFCURVE",
"1267 301 OFFCURVE",
"1173 301 QCURVE SMOOTH",
"1112 301 OFFCURVE",
"1112 348 QCURVE SMOOTH",
"1112 369 OFFCURVE",
"1138 395 OFFCURVE",
"1163 395 QCURVE SMOOTH",
"1181 395 LINE",
"1181 610 LINE",
"1112 610 LINE SMOOTH",
"966 610 OFFCURVE",
"825 473 OFFCURVE",
"825 362 QCURVE SMOOTH",
"825 281 OFFCURVE",
"911 160 OFFCURVE",
"1048 94 OFFCURVE",
"1126 94 QCURVE SMOOTH",
"1245 94 OFFCURVE",
"1384 164 OFFCURVE",
"1437 223 QCURVE",
"1437 -590 LINE",
"1437 -590 LINE"
);
}
);
width = 2686;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 938 OFFCURVE",
"650 938 QCURVE SMOOTH",
"388 938 OFFCURVE",
"388 1120 QCURVE",
"200 1120 LINE",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1100 800 OFFCURVE",
"1100 1120 QCURVE SMOOTH",
"1100 1680 LINE SMOOTH",
"1100 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1680 QCURVE SMOOTH",
"200 1560 LINE SMOOTH",
"200 1320 OFFCURVE",
"515 1320 QCURVE SMOOTH",
"650 1320 LINE",
"650 1480 LINE",
"515 1480 LINE SMOOTH",
"388 1480 OFFCURVE",
"388 1560 QCURVE SMOOTH",
"388 1680 LINE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1680 QCURVE SMOOTH",
"912 1120 LINE",
"912 1120 LINE"
);
},
{
closed = 1;
nodes = (
"1688 2110 LINE SMOOTH",
"1688 2260 OFFCURVE",
"1500 2260 QCURVE SMOOTH",
"1400 2260 LINE",
"1400 2100 LINE",
"1500 2100 LINE",
"1500 1200 LINE SMOOTH",
"1500 800 OFFCURVE",
"1950 800 QCURVE SMOOTH",
"2350 800 LINE",
"2400 938 LINE",
"2188 1298 LINE",
"2188 1600 LINE",
"2400 1600 LINE",
"2400 1738 LINE",
"2200 1738 LINE SMOOTH",
"2100 1738 OFFCURVE",
"2000 1675 OFFCURVE",
"2000 1600 QCURVE SMOOTH",
"2000 1248 LINE",
"2270 938 LINE",
"1950 938 LINE SMOOTH",
"1688 938 OFFCURVE",
"1688 1200 QCURVE",
"1688 1200 LINE"
);
},
{
closed = 1;
nodes = (
"1095 472 LINE",
"1095 610 LINE",
"1042 610 LINE SMOOTH",
"800 610 OFFCURVE",
"800 430 QCURVE SMOOTH",
"800 210 OFFCURVE",
"1066 210 QCURVE SMOOTH",
"1303 210 OFFCURVE",
"1412 356 QCURVE",
"1412 -590 LINE",
"1600 -590 LINE",
"1600 610 LINE",
"1412 610 LINE",
"1328 479 LINE SMOOTH",
"1243 348 OFFCURVE",
"1066 348 QCURVE SMOOTH",
"988 348 OFFCURVE",
"988 430 QCURVE SMOOTH",
"988 472 OFFCURVE",
"1042 472 QCURVE",
"1042 472 LINE"
);
}
);
width = 2600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"828 801 OFFCURVE",
"1043 963 OFFCURVE",
"1043 1120 QCURVE SMOOTH",
"1043 1681 LINE SMOOTH",
"1043 2001 OFFCURVE",
"626 2001 QCURVE SMOOTH",
"423 2001 OFFCURVE",
"212 1841 OFFCURVE",
"212 1681 QCURVE SMOOTH",
"212 1546 LINE SMOOTH",
"212 1438 OFFCURVE",
"347 1321 OFFCURVE",
"466 1321 QCURVE SMOOTH",
"626 1321 LINE",
"626 1425 LINE",
"466 1425 LINE SMOOTH",
"398 1425 OFFCURVE",
"331 1499 OFFCURVE",
"331 1546 QCURVE SMOOTH",
"331 1681 LINE SMOOTH",
"331 1788 OFFCURVE",
"478 1907 OFFCURVE",
"626 1907 QCURVE SMOOTH",
"775 1907 OFFCURVE",
"923 1788 OFFCURVE",
"923 1681 QCURVE SMOOTH",
"923 1120 LINE SMOOTH",
"923 1014 OFFCURVE",
"775 895 OFFCURVE",
"626 895 QCURVE SMOOTH",
"478 895 OFFCURVE",
"331 1014 OFFCURVE",
"331 1120 QCURVE",
"212 1120 LINE",
"212 965 OFFCURVE",
"425 801 OFFCURVE",
"626 801 QCURVE",
"626 801 LINE"
);
},
{
closed = 1;
nodes = (
"2190 801 LINE",
"2237 901 LINE",
"2000 1282 LINE",
"2000 1645 LINE",
"2244 1645 LINE",
"2244 1739 LINE",
"2031 1739 LINE SMOOTH",
"1945 1739 OFFCURVE",
"1879 1690 OFFCURVE",
"1879 1628 QCURVE SMOOTH",
"1879 1249 LINE",
"2145 895 LINE",
"1826 895 LINE SMOOTH",
"1678 895 OFFCURVE",
"1531 1053 OFFCURVE",
"1531 1200 QCURVE SMOOTH",
"1531 2161 LINE SMOOTH",
"1531 2214 OFFCURVE",
"1496 2261 OFFCURVE",
"1451 2261 QCURVE SMOOTH",
"1310 2261 LINE",
"1310 2165 LINE",
"1412 2165 LINE",
"1412 1200 LINE SMOOTH",
"1412 1001 OFFCURVE",
"1625 801 OFFCURVE",
"1826 801 QCURVE",
"1826 801 LINE"
);
},
{
closed = 1;
nodes = (
"1531 -590 LINE",
"1531 610 LINE",
"1408 610 LINE",
"1336 487 OFFCURVE",
"1162 317 OFFCURVE",
"1050 317 QCURVE SMOOTH",
"976 317 OFFCURVE",
"919 389 OFFCURVE",
"919 426 QCURVE SMOOTH",
"919 457 OFFCURVE",
"974 516 OFFCURVE",
"1035 516 QCURVE SMOOTH",
"1062 516 LINE",
"1062 610 LINE",
"1035 610 LINE SMOOTH",
"925 610 OFFCURVE",
"800 516 OFFCURVE",
"800 422 QCURVE SMOOTH",
"800 336 OFFCURVE",
"927 221 OFFCURVE",
"1043 221 QCURVE SMOOTH",
"1123 221 OFFCURVE",
"1261 285 OFFCURVE",
"1371 381 OFFCURVE",
"1408 434 QCURVE",
"1408 -590 LINE",
"1408 -590 LINE"
);
}
);
width = 2457;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"786 801 OFFCURVE",
"989 965 OFFCURVE",
"989 1120 QCURVE SMOOTH",
"989 1681 LINE SMOOTH",
"989 1837 OFFCURVE",
"790 2001 OFFCURVE",
"606 2001 QCURVE SMOOTH",
"424 2001 OFFCURVE",
"225 1841 OFFCURVE",
"225 1681 QCURVE SMOOTH",
"225 1530 LINE SMOOTH",
"225 1434 OFFCURVE",
"340 1321 OFFCURVE",
"422 1321 QCURVE SMOOTH",
"606 1321 LINE",
"606 1374 LINE",
"418 1374 LINE SMOOTH",
"346 1374 OFFCURVE",
"278 1477 OFFCURVE",
"278 1530 QCURVE SMOOTH",
"278 1681 LINE SMOOTH",
"278 1806 OFFCURVE",
"442 1948 OFFCURVE",
"606 1948 QCURVE SMOOTH",
"770 1948 OFFCURVE",
"936 1806 OFFCURVE",
"936 1681 QCURVE SMOOTH",
"936 1120 LINE SMOOTH",
"936 995 OFFCURVE",
"770 854 OFFCURVE",
"606 854 QCURVE SMOOTH",
"442 854 OFFCURVE",
"278 995 OFFCURVE",
"278 1120 QCURVE",
"225 1120 LINE",
"225 965 OFFCURVE",
"430 801 OFFCURVE",
"606 801 QCURVE",
"606 801 LINE"
);
},
{
closed = 1;
nodes = (
"2072 801 LINE",
"2117 864 LINE",
"1853 1266 LINE",
"1853 1686 LINE",
"2128 1686 LINE",
"2128 1739 LINE",
"1902 1739 LINE SMOOTH",
"1829 1739 OFFCURVE",
"1800 1704 OFFCURVE",
"1800 1657 QCURVE SMOOTH",
"1800 1249 LINE",
"2060 854 LINE",
"1745 854 LINE SMOOTH",
"1581 854 OFFCURVE",
"1417 1036 OFFCURVE",
"1417 1200 QCURVE SMOOTH",
"1417 2208 LINE SMOOTH",
"1417 2241 OFFCURVE",
"1390 2261 OFFCURVE",
"1364 2261 QCURVE SMOOTH",
"1263 2261 LINE",
"1263 2208 LINE",
"1364 2208 LINE",
"1364 1200 LINE SMOOTH",
"1364 1001 OFFCURVE",
"1568 801 OFFCURVE",
"1745 801 QCURVE",
"1745 801 LINE"
);
},
{
closed = 1;
nodes = (
"1444 -590 LINE",
"1444 610 LINE",
"1390 610 LINE",
"1351 547 OFFCURVE",
"1237 399 OFFCURVE",
"1089 293 OFFCURVE",
"1005 293 QCURVE SMOOTH",
"938 293 OFFCURVE",
"864 340 OFFCURVE",
"833 408 OFFCURVE",
"833 438 QCURVE SMOOTH",
"833 475 OFFCURVE",
"905 557 OFFCURVE",
"993 557 QCURVE SMOOTH",
"1011 557 LINE",
"1011 610 LINE",
"1009 610 LINE SMOOTH",
"895 610 OFFCURVE",
"780 516 OFFCURVE",
"780 436 QCURVE SMOOTH",
"780 340 OFFCURVE",
"909 240 OFFCURVE",
"1003 240 QCURVE SMOOTH",
"1089 240 OFFCURVE",
"1237 330 OFFCURVE",
"1351 455 OFFCURVE",
"1390 512 QCURVE",
"1390 -590 LINE",
"1390 -590 LINE"
);
}
);
width = 2353;
}
);
note = uni19EE;
unicode = 19EE;
},
{
glyphname = uni19EF;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1255 801 OFFCURVE",
"1255 1120 QCURVE SMOOTH",
"1255 1681 LINE SMOOTH",
"1255 2001 OFFCURVE",
"713 2001 QCURVE SMOOTH",
"172 2001 OFFCURVE",
"172 1681 QCURVE SMOOTH",
"172 1561 LINE SMOOTH",
"172 1456 OFFCURVE",
"254 1352 OFFCURVE",
"393 1317 OFFCURVE",
"479 1317 QCURVE SMOOTH",
"713 1317 LINE",
"713 1583 LINE",
"623 1583 LINE SMOOTH",
"563 1583 OFFCURVE",
"543 1636 OFFCURVE",
"543 1663 QCURVE SMOOTH",
"543 1681 LINE SMOOTH",
"543 1772 OFFCURVE",
"713 1772 QCURVE SMOOTH",
"887 1772 OFFCURVE",
"887 1681 QCURVE SMOOTH",
"887 1120 LINE SMOOTH",
"887 1030 OFFCURVE",
"713 1030 QCURVE SMOOTH",
"543 1030 OFFCURVE",
"543 1122 QCURVE",
"172 1122 LINE",
"172 801 OFFCURVE",
"713 801 QCURVE",
"713 801 LINE"
);
},
{
closed = 1;
nodes = (
"2519 801 LINE",
"2591 983 LINE",
"2453 1198 LINE",
"2453 1333 LINE",
"2574 1333 LINE",
"2574 1602 LINE",
"2271 1602 LINE SMOOTH",
"2171 1602 OFFCURVE",
"2083 1516 OFFCURVE",
"2083 1401 QCURVE SMOOTH",
"2083 1169 LINE",
"2240 1030 LINE",
"2032 1030 LINE SMOOTH",
"1862 1030 OFFCURVE",
"1862 1130 QCURVE SMOOTH",
"1862 1559 LINE SMOOTH",
"1862 1618 OFFCURVE",
"1888 1708 OFFCURVE",
"1905 1726 QCURVE",
"1960 1700 OFFCURVE",
"2060 1669 OFFCURVE",
"2138 1669 QCURVE SMOOTH",
"2365 1669 OFFCURVE",
"2576 1853 OFFCURVE",
"2576 2009 QCURVE SMOOTH",
"2576 2263 LINE",
"2206 2263 LINE",
"2206 1966 LINE SMOOTH",
"2206 1921 OFFCURVE",
"2163 1882 OFFCURVE",
"2142 1878 QCURVE SMOOTH",
"2133 1876 OFFCURVE",
"2122 1876 QCURVE SMOOTH",
"2111 1876 OFFCURVE",
"2097 1878 QCURVE SMOOTH",
"2070 1882 OFFCURVE",
"2034 1896 QCURVE",
"2050 1923 OFFCURVE",
"2079 1987 OFFCURVE",
"2079 2046 QCURVE SMOOTH",
"2079 2095 OFFCURVE",
"2019 2189 OFFCURVE",
"1909 2253 OFFCURVE",
"1833 2253 QCURVE SMOOTH",
"1745 2253 OFFCURVE",
"1628 2181 OFFCURVE",
"1569 2079 OFFCURVE",
"1569 2030 QCURVE SMOOTH",
"1569 1964 OFFCURVE",
"1604 1898 OFFCURVE",
"1628 1866 QCURVE",
"1538 1806 OFFCURVE",
"1491 1661 OFFCURVE",
"1491 1559 QCURVE SMOOTH",
"1491 1130 LINE SMOOTH",
"1491 801 OFFCURVE",
"2032 801 QCURVE",
"2032 801 LINE"
);
},
{
closed = 1;
nodes = (
"1810 -590 LINE",
"1810 610 LINE",
"1440 610 LINE",
"1434 520 OFFCURVE",
"1374 369 OFFCURVE",
"1280 274 OFFCURVE",
"1221 274 QCURVE SMOOTH",
"1178 274 OFFCURVE",
"1178 309 QCURVE SMOOTH",
"1178 344 OFFCURVE",
"1212 344 QCURVE SMOOTH",
"1223 344 LINE",
"1223 610 LINE",
"1143 610 LINE SMOOTH",
"1028 610 OFFCURVE",
"887 535 OFFCURVE",
"825 410 OFFCURVE",
"825 332 QCURVE SMOOTH",
"825 233 OFFCURVE",
"932 94 OFFCURVE",
"1081 23 OFFCURVE",
"1151 23 QCURVE SMOOTH",
"1231 23 OFFCURVE",
"1333 51 OFFCURVE",
"1405 104 OFFCURVE",
"1440 139 QCURVE",
"1440 -590 LINE",
"1440 -590 LINE"
);
}
);
width = 2615;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1194 801 OFFCURVE",
"1194 1120 QCURVE SMOOTH",
"1194 1681 LINE SMOOTH",
"1194 2001 OFFCURVE",
"688 2001 QCURVE SMOOTH",
"182 2001 OFFCURVE",
"182 1681 QCURVE SMOOTH",
"182 1561 LINE SMOOTH",
"182 1419 OFFCURVE",
"354 1319 OFFCURVE",
"493 1319 QCURVE SMOOTH",
"688 1319 LINE",
"688 1542 LINE",
"579 1542 LINE SMOOTH",
"520 1542 OFFCURVE",
"481 1591 OFFCURVE",
"481 1624 QCURVE SMOOTH",
"481 1681 LINE SMOOTH",
"481 1808 OFFCURVE",
"688 1808 QCURVE SMOOTH",
"897 1808 OFFCURVE",
"897 1681 QCURVE SMOOTH",
"897 1120 LINE SMOOTH",
"897 993 OFFCURVE",
"688 993 QCURVE SMOOTH",
"481 993 OFFCURVE",
"481 1122 QCURVE",
"182 1122 LINE",
"182 801 OFFCURVE",
"688 801 QCURVE",
"688 801 LINE"
);
},
{
closed = 1;
nodes = (
"2443 801 LINE",
"2506 965 LINE",
"2341 1198 LINE",
"2341 1384 LINE",
"2496 1384 LINE",
"2496 1602 LINE",
"2230 1602 LINE SMOOTH",
"2042 1602 OFFCURVE",
"2042 1401 QCURVE SMOOTH",
"2042 1169 LINE",
"2234 993 LINE",
"1990 993 LINE SMOOTH",
"1784 993 OFFCURVE",
"1784 1130 QCURVE SMOOTH",
"1784 1597 LINE SMOOTH",
"1784 1657 OFFCURVE",
"1820 1739 OFFCURVE",
"1847 1759 QCURVE",
"1911 1731 OFFCURVE",
"2027 1698 OFFCURVE",
"2105 1698 QCURVE SMOOTH",
"2298 1698 OFFCURVE",
"2498 1866 OFFCURVE",
"2498 2009 QCURVE SMOOTH",
"2498 2263 LINE",
"2199 2263 LINE",
"2199 1982 LINE SMOOTH",
"2199 1935 OFFCURVE",
"2144 1882 OFFCURVE",
"2103 1880 QCURVE SMOOTH",
"2095 1879 OFFCURVE",
"2086 1879 QCURVE SMOOTH",
"2068 1879 OFFCURVE",
"2050 1882 QCURVE SMOOTH",
"2021 1886 OFFCURVE",
"1980 1901 QCURVE",
"2001 1927 OFFCURVE",
"2029 1989 OFFCURVE",
"2029 2042 QCURVE SMOOTH",
"2029 2085 OFFCURVE",
"1978 2171 OFFCURVE",
"1880 2228 OFFCURVE",
"1808 2228 QCURVE SMOOTH",
"1732 2228 OFFCURVE",
"1628 2167 OFFCURVE",
"1575 2075 OFFCURVE",
"1575 2028 QCURVE SMOOTH",
"1575 1974 OFFCURVE",
"1605 1911 OFFCURVE",
"1630 1882 QCURVE",
"1542 1829 OFFCURVE",
"1485 1700 OFFCURVE",
"1485 1597 QCURVE SMOOTH",
"1485 1130 LINE SMOOTH",
"1485 801 OFFCURVE",
"1990 801 QCURVE",
"1990 801 LINE"
);
},
{
closed = 1;
nodes = (
"1736 -590 LINE",
"1736 610 LINE",
"1437 610 LINE",
"1396 471 OFFCURVE",
"1267 301 OFFCURVE",
"1173 301 QCURVE SMOOTH",
"1112 301 OFFCURVE",
"1112 348 QCURVE SMOOTH",
"1112 369 OFFCURVE",
"1138 395 OFFCURVE",
"1163 395 QCURVE SMOOTH",
"1181 395 LINE",
"1181 610 LINE",
"1112 610 LINE SMOOTH",
"966 610 OFFCURVE",
"825 473 OFFCURVE",
"825 362 QCURVE SMOOTH",
"825 281 OFFCURVE",
"911 160 OFFCURVE",
"1048 94 OFFCURVE",
"1126 94 QCURVE SMOOTH",
"1245 94 OFFCURVE",
"1384 164 OFFCURVE",
"1437 223 QCURVE",
"1437 -590 LINE",
"1437 -590 LINE"
);
}
);
width = 2609;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 938 OFFCURVE",
"650 938 QCURVE SMOOTH",
"388 938 OFFCURVE",
"388 1120 QCURVE",
"200 1120 LINE",
"200 800 OFFCURVE",
"650 800 QCURVE SMOOTH",
"1100 800 OFFCURVE",
"1100 1120 QCURVE SMOOTH",
"1100 1680 LINE SMOOTH",
"1100 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1680 QCURVE SMOOTH",
"200 1560 LINE SMOOTH",
"200 1320 OFFCURVE",
"515 1320 QCURVE SMOOTH",
"650 1320 LINE",
"650 1480 LINE",
"515 1480 LINE SMOOTH",
"388 1480 OFFCURVE",
"388 1560 QCURVE SMOOTH",
"388 1680 LINE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1680 QCURVE SMOOTH",
"912 1120 LINE",
"912 1120 LINE"
);
},
{
closed = 1;
nodes = (
"1688 1690 LINE SMOOTH",
"1688 1739 OFFCURVE",
"1736 1785 OFFCURVE",
"1772 1804 QCURVE",
"1914 1755 OFFCURVE",
"2070 1755 QCURVE SMOOTH",
"2228 1755 OFFCURVE",
"2311 1825 QCURVE",
"2400 1886 OFFCURVE",
"2400 2009 QCURVE SMOOTH",
"2400 2370 LINE",
"2212 2370 LINE",
"2212 2009 LINE SMOOTH",
"2212 1959 OFFCURVE",
"2140 1893 OFFCURVE",
"2070 1893 QCURVE SMOOTH",
"1996 1893 OFFCURVE",
"1895 1923 QCURVE",
"1970 1974 OFFCURVE",
"1970 2026 QCURVE SMOOTH",
"1970 2170 OFFCURVE",
"1780 2170 QCURVE SMOOTH",
"1600 2170 OFFCURVE",
"1600 2026 QCURVE SMOOTH",
"1600 1964 OFFCURVE",
"1668 1907 QCURVE",
"1647 1900 OFFCURVE",
"1625 1890 QCURVE SMOOTH",
"1500 1837 OFFCURVE",
"1500 1690 QCURVE SMOOTH",
"1500 1130 LINE SMOOTH",
"1500 800 OFFCURVE",
"1950 800 QCURVE SMOOTH",
"2348 800 LINE",
"2400 938 LINE",
"2188 1198 LINE",
"2188 1462 LINE",
"2400 1462 LINE",
"2400 1600 LINE",
"2188 1600 LINE SMOOTH",
"2100 1600 OFFCURVE",
"2000 1475 OFFCURVE",
"2000 1400 QCURVE SMOOTH",
"2000 1168 LINE",
"2250 938 LINE",
"1950 938 LINE SMOOTH",
"1688 938 OFFCURVE",
"1688 1130 QCURVE",
"1688 1130 LINE"
);
},
{
closed = 1;
nodes = (
"1095 472 LINE",
"1095 610 LINE",
"1042 610 LINE SMOOTH",
"800 610 OFFCURVE",
"800 430 QCURVE SMOOTH",
"800 210 OFFCURVE",
"1066 210 QCURVE SMOOTH",
"1303 210 OFFCURVE",
"1412 356 QCURVE",
"1412 -590 LINE",
"1600 -590 LINE",
"1600 610 LINE",
"1412 610 LINE",
"1328 479 LINE SMOOTH",
"1243 348 OFFCURVE",
"1066 348 QCURVE SMOOTH",
"988 348 OFFCURVE",
"988 430 QCURVE SMOOTH",
"988 472 OFFCURVE",
"1042 472 QCURVE",
"1042 472 LINE"
);
}
);
width = 2600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"828 801 OFFCURVE",
"1043 963 OFFCURVE",
"1043 1120 QCURVE SMOOTH",
"1043 1681 LINE SMOOTH",
"1043 2001 OFFCURVE",
"626 2001 QCURVE SMOOTH",
"423 2001 OFFCURVE",
"212 1841 OFFCURVE",
"212 1681 QCURVE SMOOTH",
"212 1546 LINE SMOOTH",
"212 1438 OFFCURVE",
"347 1321 OFFCURVE",
"466 1321 QCURVE SMOOTH",
"626 1321 LINE",
"626 1425 LINE",
"466 1425 LINE SMOOTH",
"398 1425 OFFCURVE",
"331 1499 OFFCURVE",
"331 1546 QCURVE SMOOTH",
"331 1681 LINE SMOOTH",
"331 1788 OFFCURVE",
"478 1907 OFFCURVE",
"626 1907 QCURVE SMOOTH",
"775 1907 OFFCURVE",
"923 1788 OFFCURVE",
"923 1681 QCURVE SMOOTH",
"923 1120 LINE SMOOTH",
"923 1014 OFFCURVE",
"775 895 OFFCURVE",
"626 895 QCURVE SMOOTH",
"478 895 OFFCURVE",
"331 1014 OFFCURVE",
"331 1120 QCURVE",
"212 1120 LINE",
"212 965 OFFCURVE",
"425 801 OFFCURVE",
"626 801 QCURVE",
"626 801 LINE"
);
},
{
closed = 1;
nodes = (
"2186 801 LINE",
"2235 901 LINE",
"1998 1231 LINE",
"1998 1505 LINE",
"2240 1505 LINE",
"2240 1602 LINE",
"2006 1602 LINE SMOOTH",
"1936 1602 OFFCURVE",
"1875 1522 OFFCURVE",
"1875 1460 QCURVE SMOOTH",
"1875 1210 LINE",
"2131 895 LINE",
"1822 895 LINE SMOOTH",
"1674 895 OFFCURVE",
"1527 1036 OFFCURVE",
"1527 1165 QCURVE SMOOTH",
"1527 1657 LINE SMOOTH",
"1527 1735 OFFCURVE",
"1603 1821 OFFCURVE",
"1648 1843 QCURVE",
"1785 1769 OFFCURVE",
"1936 1769 QCURVE SMOOTH",
"2014 1769 OFFCURVE",
"2154 1827 OFFCURVE",
"2240 1935 OFFCURVE",
"2240 2009 QCURVE SMOOTH",
"2240 2263 LINE",
"2119 2263 LINE",
"2119 2009 LINE SMOOTH",
"2119 1954 OFFCURVE",
"2010 1866 OFFCURVE",
"1932 1866 QCURVE SMOOTH",
"1883 1866 OFFCURVE",
"1787 1882 OFFCURVE",
"1744 1903 QCURVE",
"1764 1923 OFFCURVE",
"1789 1968 OFFCURVE",
"1789 2001 QCURVE SMOOTH",
"1789 2044 OFFCURVE",
"1723 2116 OFFCURVE",
"1658 2116 QCURVE SMOOTH",
"1596 2116 OFFCURVE",
"1527 2046 OFFCURVE",
"1527 1997 QCURVE SMOOTH",
"1527 1948 OFFCURVE",
"1564 1911 QCURVE",
"1476 1870 OFFCURVE",
"1408 1745 OFFCURVE",
"1408 1663 QCURVE SMOOTH",
"1408 1165 LINE SMOOTH",
"1408 985 OFFCURVE",
"1621 801 OFFCURVE",
"1826 801 QCURVE",
"1826 801 LINE"
);
},
{
closed = 1;
nodes = (
"1531 -590 LINE",
"1531 610 LINE",
"1408 610 LINE",
"1336 487 OFFCURVE",
"1162 317 OFFCURVE",
"1050 317 QCURVE SMOOTH",
"976 317 OFFCURVE",
"919 389 OFFCURVE",
"919 426 QCURVE SMOOTH",
"919 457 OFFCURVE",
"974 516 OFFCURVE",
"1035 516 QCURVE SMOOTH",
"1062 516 LINE",
"1062 610 LINE",
"1035 610 LINE SMOOTH",
"925 610 OFFCURVE",
"800 516 OFFCURVE",
"800 422 QCURVE SMOOTH",
"800 336 OFFCURVE",
"927 221 OFFCURVE",
"1043 221 QCURVE SMOOTH",
"1123 221 OFFCURVE",
"1261 285 OFFCURVE",
"1371 381 OFFCURVE",
"1408 434 QCURVE",
"1408 -590 LINE",
"1408 -590 LINE"
);
}
);
width = 2576;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"786 801 OFFCURVE",
"989 965 OFFCURVE",
"989 1120 QCURVE SMOOTH",
"989 1681 LINE SMOOTH",
"989 1837 OFFCURVE",
"790 2001 OFFCURVE",
"606 2001 QCURVE SMOOTH",
"424 2001 OFFCURVE",
"225 1841 OFFCURVE",
"225 1681 QCURVE SMOOTH",
"225 1530 LINE SMOOTH",
"225 1434 OFFCURVE",
"340 1321 OFFCURVE",
"422 1321 QCURVE SMOOTH",
"606 1321 LINE",
"606 1374 LINE",
"418 1374 LINE SMOOTH",
"346 1374 OFFCURVE",
"278 1477 OFFCURVE",
"278 1530 QCURVE SMOOTH",
"278 1681 LINE SMOOTH",
"278 1806 OFFCURVE",
"442 1948 OFFCURVE",
"606 1948 QCURVE SMOOTH",
"770 1948 OFFCURVE",
"936 1806 OFFCURVE",
"936 1681 QCURVE SMOOTH",
"936 1120 LINE SMOOTH",
"936 995 OFFCURVE",
"770 854 OFFCURVE",
"606 854 QCURVE SMOOTH",
"442 854 OFFCURVE",
"278 995 OFFCURVE",
"278 1120 QCURVE",
"225 1120 LINE",
"225 965 OFFCURVE",
"430 801 OFFCURVE",
"606 801 QCURVE",
"606 801 LINE"
);
},
{
closed = 1;
nodes = (
"2048 801 LINE",
"2093 864 LINE",
"1829 1266 LINE",
"1829 1548 LINE",
"2103 1548 LINE",
"2103 1602 LINE",
"1845 1602 LINE SMOOTH",
"1796 1602 OFFCURVE",
"1775 1567 OFFCURVE",
"1775 1520 QCURVE SMOOTH",
"1775 1249 LINE",
"2035 854 LINE",
"1720 854 LINE SMOOTH",
"1556 854 OFFCURVE",
"1392 1036 OFFCURVE",
"1392 1200 QCURVE SMOOTH",
"1392 1655 LINE SMOOTH",
"1392 1753 OFFCURVE",
"1487 1858 OFFCURVE",
"1536 1876 QCURVE",
"1597 1837 OFFCURVE",
"1755 1794 OFFCURVE",
"1820 1794 QCURVE SMOOTH",
"1886 1794 OFFCURVE",
"2017 1849 OFFCURVE",
"2103 1948 OFFCURVE",
"2103 2009 QCURVE SMOOTH",
"2103 2263 LINE",
"2050 2263 LINE",
"2050 2009 LINE SMOOTH",
"2050 1968 OFFCURVE",
"1984 1894 OFFCURVE",
"1880 1847 OFFCURVE",
"1820 1847 QCURVE SMOOTH",
"1759 1847 OFFCURVE",
"1632 1874 OFFCURVE",
"1593 1901 QCURVE",
"1609 1913 OFFCURVE",
"1628 1944 OFFCURVE",
"1628 1970 QCURVE SMOOTH",
"1628 1997 OFFCURVE",
"1583 2046 OFFCURVE",
"1546 2046 QCURVE SMOOTH",
"1515 2046 OFFCURVE",
"1470 2003 OFFCURVE",
"1470 1970 QCURVE SMOOTH",
"1470 1952 OFFCURVE",
"1482 1927 OFFCURVE",
"1495 1913 QCURVE",
"1401 1870 OFFCURVE",
"1339 1731 OFFCURVE",
"1339 1667 QCURVE SMOOTH",
"1339 1200 LINE SMOOTH",
"1339 1001 OFFCURVE",
"1542 801 OFFCURVE",
"1726 801 QCURVE",
"1726 801 LINE"
);
},
{
closed = 1;
nodes = (
"1444 -590 LINE",
"1444 610 LINE",
"1390 610 LINE",
"1351 547 OFFCURVE",
"1237 399 OFFCURVE",
"1089 293 OFFCURVE",
"1005 293 QCURVE SMOOTH",
"938 293 OFFCURVE",
"864 340 OFFCURVE",
"833 408 OFFCURVE",
"833 438 QCURVE SMOOTH",
"833 475 OFFCURVE",
"905 557 OFFCURVE",
"993 557 QCURVE SMOOTH",
"1011 557 LINE",
"1011 610 LINE",
"1009 610 LINE SMOOTH",
"895 610 OFFCURVE",
"780 516 OFFCURVE",
"780 436 QCURVE SMOOTH",
"780 340 OFFCURVE",
"909 240 OFFCURVE",
"1003 240 QCURVE SMOOTH",
"1089 240 OFFCURVE",
"1237 330 OFFCURVE",
"1351 455 OFFCURVE",
"1390 512 QCURVE",
"1390 -590 LINE",
"1390 -590 LINE"
);
}
);
width = 2553;
}
);
note = uni19EF;
unicode = 19EF;
},
{
glyphname = uni19F0;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"485 903 LINE",
"717 1073 LINE",
"948 903 LINE",
"1259 903 LINE",
"1259 1520 LINE SMOOTH",
"1259 1575 OFFCURVE",
"1239 1653 OFFCURVE",
"1165 1694 OFFCURVE",
"1083 1694 QCURVE SMOOTH",
"786 1694 LINE",
"786 1464 LINE",
"838 1464 LINE SMOOTH",
"864 1464 OFFCURVE",
"889 1444 OFFCURVE",
"889 1403 QCURVE SMOOTH",
"889 1241 LINE",
"717 1376 LINE",
"545 1239 LINE",
"545 1784 LINE SMOOTH",
"545 1874 OFFCURVE",
"715 1874 QCURVE SMOOTH",
"889 1874 OFFCURVE",
"889 1784 QCURVE",
"1257 1784 LINE",
"1257 2365 LINE",
"889 2365 LINE",
"889 2050 LINE",
"792 2103 OFFCURVE",
"608 2103 QCURVE SMOOTH",
"174 2103 OFFCURVE",
"174 1784 QCURVE SMOOTH",
"174 903 LINE",
"174 903 LINE"
);
},
{
closed = 1;
nodes = (
"485 -590 LINE",
"717 -420 LINE",
"948 -590 LINE",
"1259 -590 LINE",
"1259 27 LINE SMOOTH",
"1259 82 OFFCURVE",
"1239 160 OFFCURVE",
"1165 201 OFFCURVE",
"1083 201 QCURVE SMOOTH",
"786 201 LINE",
"786 -29 LINE",
"838 -29 LINE SMOOTH",
"864 -29 OFFCURVE",
"889 -49 OFFCURVE",
"889 -90 QCURVE SMOOTH",
"889 -252 LINE",
"717 -117 LINE",
"545 -254 LINE",
"545 291 LINE SMOOTH",
"545 381 OFFCURVE",
"715 381 QCURVE SMOOTH",
"889 381 OFFCURVE",
"889 291 QCURVE",
"1257 291 LINE",
"1257 872 LINE",
"889 872 LINE",
"889 557 LINE",
"792 610 OFFCURVE",
"608 610 QCURVE SMOOTH",
"174 610 OFFCURVE",
"174 291 QCURVE SMOOTH",
"174 -590 LINE",
"174 -590 LINE"
);
}
);
width = 1306;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"460 903 LINE",
"692 1090 LINE",
"923 903 LINE",
"1198 903 LINE",
"1198 1530 LINE SMOOTH",
"1198 1604 OFFCURVE",
"1140 1677 OFFCURVE",
"1046 1677 QCURVE SMOOTH",
"745 1677 LINE",
"745 1485 LINE",
"848 1485 LINE SMOOTH",
"874 1485 OFFCURVE",
"899 1462 OFFCURVE",
"899 1427 QCURVE SMOOTH",
"899 1176 LINE",
"692 1350 LINE",
"483 1174 LINE",
"483 1784 LINE SMOOTH",
"483 1911 OFFCURVE",
"690 1911 QCURVE SMOOTH",
"899 1911 OFFCURVE",
"899 1784 QCURVE",
"1196 1784 LINE",
"1196 2365 LINE",
"899 2365 LINE",
"899 2050 LINE",
"788 2103 OFFCURVE",
"624 2103 QCURVE SMOOTH",
"184 2103 OFFCURVE",
"184 1784 QCURVE SMOOTH",
"184 903 LINE",
"184 903 LINE"
);
},
{
closed = 1;
nodes = (
"460 -590 LINE",
"692 -403 LINE",
"923 -590 LINE",
"1198 -590 LINE",
"1198 37 LINE SMOOTH",
"1198 111 OFFCURVE",
"1140 184 OFFCURVE",
"1046 184 QCURVE SMOOTH",
"745 184 LINE",
"745 -8 LINE",
"848 -8 LINE SMOOTH",
"874 -8 OFFCURVE",
"899 -31 OFFCURVE",
"899 -66 QCURVE SMOOTH",
"899 -317 LINE",
"692 -143 LINE",
"483 -319 LINE",
"483 291 LINE SMOOTH",
"483 418 OFFCURVE",
"690 418 QCURVE SMOOTH",
"899 418 OFFCURVE",
"899 291 QCURVE",
"1196 291 LINE",
"1196 872 LINE",
"899 872 LINE",
"899 557 LINE",
"788 610 OFFCURVE",
"624 610 QCURVE SMOOTH",
"184 610 OFFCURVE",
"184 291 QCURVE SMOOTH",
"184 -590 LINE",
"184 -590 LINE"
);
}
);
width = 1304;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1100 1320 LINE SMOOTH",
"1100 1550 OFFCURVE",
"860 1550 QCURVE SMOOTH",
"680 1550 LINE",
"680 1400 LINE",
"860 1400 LINE SMOOTH",
"912 1400 OFFCURVE",
"912 1320 QCURVE SMOOTH",
"912 967 LINE",
"651 1205 LINE",
"388 966 LINE",
"388 1680 LINE SMOOTH",
"388 1862 OFFCURVE",
"650 1862 QCURVE SMOOTH",
"912 1862 OFFCURVE",
"912 1680 QCURVE",
"1100 1680 LINE",
"1100 2350 LINE",
"912 2350 LINE",
"912 1946 LINE",
"784 2000 OFFCURVE",
"650 2000 QCURVE SMOOTH",
"200 2000 OFFCURVE",
"200 1680 QCURVE SMOOTH",
"200 800 LINE",
"419 800 LINE",
"651 1010 LINE",
"882 800 LINE",
"912 800 LINE",
"912 556 LINE",
"784 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 290 QCURVE SMOOTH",
"200 -590 LINE",
"419 -590 LINE",
"651 -380 LINE",
"882 -590 LINE",
"1100 -590 LINE",
"1100 -70 LINE SMOOTH",
"1100 160 OFFCURVE",
"860 160 QCURVE SMOOTH",
"680 160 LINE",
"680 10 LINE",
"860 10 LINE SMOOTH",
"912 10 OFFCURVE",
"912 -70 QCURVE SMOOTH",
"912 -423 LINE",
"651 -185 LINE",
"388 -424 LINE",
"388 290 LINE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 290 QCURVE",
"1100 290 LINE",
"1100 290 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"359 903 LINE",
"630 1128 LINE",
"896 903 LINE",
"1043 903 LINE",
"1043 1538 LINE SMOOTH",
"1043 1632 OFFCURVE",
"941 1632 QCURVE SMOOTH",
"658 1632 LINE",
"658 1538 LINE",
"871 1538 LINE SMOOTH",
"904 1538 OFFCURVE",
"925 1505 OFFCURVE",
"925 1473 QCURVE SMOOTH",
"925 1012 LINE",
"630 1260 LINE",
"331 1010 LINE",
"331 1784 LINE SMOOTH",
"331 1890 OFFCURVE",
"484 2009 OFFCURVE",
"632 2009 QCURVE SMOOTH",
"925 2009 OFFCURVE",
"925 1784 QCURVE",
"1043 1784 LINE",
"1043 2365 LINE",
"925 2365 LINE",
"925 2015 LINE",
"876 2050 OFFCURVE",
"726 2103 OFFCURVE",
"632 2103 QCURVE SMOOTH",
"431 2103 OFFCURVE",
"212 1944 OFFCURVE",
"212 1784 QCURVE SMOOTH",
"212 903 LINE",
"212 903 LINE"
);
},
{
closed = 1;
nodes = (
"359 -590 LINE",
"630 -365 LINE",
"896 -590 LINE",
"1043 -590 LINE",
"1043 45 LINE SMOOTH",
"1043 139 OFFCURVE",
"941 139 QCURVE SMOOTH",
"658 139 LINE",
"658 45 LINE",
"871 45 LINE SMOOTH",
"904 45 OFFCURVE",
"925 12 OFFCURVE",
"925 -20 QCURVE SMOOTH",
"925 -481 LINE",
"630 -233 LINE",
"331 -483 LINE",
"331 291 LINE SMOOTH",
"331 397 OFFCURVE",
"484 516 OFFCURVE",
"632 516 QCURVE SMOOTH",
"925 516 OFFCURVE",
"925 291 QCURVE",
"1043 291 LINE",
"1043 872 LINE",
"925 872 LINE",
"925 522 LINE",
"876 557 OFFCURVE",
"726 610 OFFCURVE",
"632 610 QCURVE SMOOTH",
"431 610 OFFCURVE",
"212 451 OFFCURVE",
"212 291 QCURVE SMOOTH",
"212 -590 LINE",
"212 -590 LINE"
);
}
);
width = 1298;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"303 903 LINE",
"610 1145 LINE",
"913 903 LINE",
"991 903 LINE",
"991 1530 LINE SMOOTH",
"991 1571 OFFCURVE",
"950 1612 OFFCURVE",
"899 1612 QCURVE SMOOTH",
"639 1612 LINE",
"639 1559 LINE",
"884 1559 LINE SMOOTH",
"923 1559 OFFCURVE",
"938 1518 OFFCURVE",
"938 1477 QCURVE SMOOTH",
"938 952 LINE",
"610 1210 LINE",
"278 950 LINE",
"278 1784 LINE SMOOTH",
"278 1909 OFFCURVE",
"452 2050 OFFCURVE",
"616 2050 QCURVE SMOOTH",
"780 2050 OFFCURVE",
"938 1921 OFFCURVE",
"938 1784 QCURVE",
"991 1784 LINE",
"991 2365 LINE",
"938 2365 LINE",
"938 1980 LINE",
"905 2025 OFFCURVE",
"737 2103 OFFCURVE",
"616 2103 QCURVE SMOOTH",
"440 2103 OFFCURVE",
"225 1944 OFFCURVE",
"225 1784 QCURVE SMOOTH",
"225 903 LINE",
"225 903 LINE"
);
},
{
closed = 1;
nodes = (
"303 -590 LINE",
"610 -348 LINE",
"913 -590 LINE",
"991 -590 LINE",
"991 37 LINE SMOOTH",
"991 78 OFFCURVE",
"950 119 OFFCURVE",
"899 119 QCURVE SMOOTH",
"639 119 LINE",
"639 66 LINE",
"884 66 LINE SMOOTH",
"923 66 OFFCURVE",
"938 25 OFFCURVE",
"938 -16 QCURVE SMOOTH",
"938 -541 LINE",
"610 -283 LINE",
"278 -543 LINE",
"278 291 LINE SMOOTH",
"278 416 OFFCURVE",
"452 557 OFFCURVE",
"616 557 QCURVE SMOOTH",
"780 557 OFFCURVE",
"938 428 OFFCURVE",
"938 291 QCURVE",
"991 291 LINE",
"991 872 LINE",
"938 872 LINE",
"938 487 LINE",
"905 532 OFFCURVE",
"737 610 OFFCURVE",
"616 610 QCURVE SMOOTH",
"440 610 OFFCURVE",
"225 451 OFFCURVE",
"225 291 QCURVE SMOOTH",
"225 -590 LINE",
"225 -590 LINE"
);
}
);
width = 1298;
}
);
note = uni19F0;
unicode = 19F0;
},
{
glyphname = uni19F1;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1093 801 LINE",
"1093 2001 LINE",
"722 2001 LINE",
"716 1911 OFFCURVE",
"657 1759 OFFCURVE",
"563 1665 OFFCURVE",
"503 1665 QCURVE SMOOTH",
"460 1665 OFFCURVE",
"460 1700 QCURVE SMOOTH",
"460 1735 OFFCURVE",
"495 1735 QCURVE SMOOTH",
"505 1735 LINE",
"505 2001 LINE",
"425 2001 LINE SMOOTH",
"311 2001 OFFCURVE",
"169 1925 OFFCURVE",
"108 1800 OFFCURVE",
"108 1722 QCURVE SMOOTH",
"108 1624 OFFCURVE",
"214 1485 OFFCURVE",
"364 1413 OFFCURVE",
"434 1413 QCURVE SMOOTH",
"514 1413 OFFCURVE",
"616 1442 OFFCURVE",
"688 1495 OFFCURVE",
"722 1530 QCURVE",
"722 801 LINE",
"722 801 LINE"
);
},
{
closed = 1;
nodes = (
"1255 -590 OFFCURVE",
"1255 -270 QCURVE SMOOTH",
"1255 291 LINE SMOOTH",
"1255 610 OFFCURVE",
"712 610 QCURVE SMOOTH",
"171 610 OFFCURVE",
"171 291 QCURVE SMOOTH",
"171 170 LINE SMOOTH",
"171 66 OFFCURVE",
"253 -39 OFFCURVE",
"393 -74 OFFCURVE",
"479 -74 QCURVE SMOOTH",
"712 -74 LINE",
"712 193 LINE",
"622 193 LINE SMOOTH",
"563 193 OFFCURVE",
"542 246 OFFCURVE",
"542 272 QCURVE SMOOTH",
"542 291 LINE SMOOTH",
"542 381 OFFCURVE",
"712 381 QCURVE SMOOTH",
"886 381 OFFCURVE",
"886 291 QCURVE SMOOTH",
"886 -270 LINE SMOOTH",
"886 -360 OFFCURVE",
"712 -360 QCURVE SMOOTH",
"542 -360 OFFCURVE",
"542 -268 QCURVE",
"171 -268 LINE",
"171 -590 OFFCURVE",
"712 -590 QCURVE",
"712 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1056 801 LINE",
"1056 2001 LINE",
"757 2001 LINE",
"716 1862 OFFCURVE",
"587 1692 OFFCURVE",
"493 1692 QCURVE SMOOTH",
"432 1692 OFFCURVE",
"432 1739 QCURVE SMOOTH",
"432 1759 OFFCURVE",
"458 1786 OFFCURVE",
"483 1786 QCURVE SMOOTH",
"501 1786 LINE",
"501 2001 LINE",
"432 2001 LINE SMOOTH",
"286 2001 OFFCURVE",
"145 1864 OFFCURVE",
"145 1753 QCURVE SMOOTH",
"145 1671 OFFCURVE",
"231 1550 OFFCURVE",
"368 1485 OFFCURVE",
"446 1485 QCURVE SMOOTH",
"565 1485 OFFCURVE",
"704 1554 OFFCURVE",
"757 1614 QCURVE",
"757 801 LINE",
"757 801 LINE"
);
},
{
closed = 1;
nodes = (
"1194 -590 OFFCURVE",
"1194 -270 QCURVE SMOOTH",
"1194 291 LINE SMOOTH",
"1194 610 OFFCURVE",
"688 610 QCURVE SMOOTH",
"182 610 OFFCURVE",
"182 291 QCURVE SMOOTH",
"182 170 LINE SMOOTH",
"182 29 OFFCURVE",
"354 -72 OFFCURVE",
"493 -72 QCURVE SMOOTH",
"688 -72 LINE",
"688 152 LINE",
"579 152 LINE SMOOTH",
"520 152 OFFCURVE",
"481 201 OFFCURVE",
"481 233 QCURVE SMOOTH",
"481 291 LINE SMOOTH",
"481 418 OFFCURVE",
"688 418 QCURVE SMOOTH",
"897 418 OFFCURVE",
"897 291 QCURVE SMOOTH",
"897 -270 LINE SMOOTH",
"897 -397 OFFCURVE",
"688 -397 QCURVE SMOOTH",
"481 -397 OFFCURVE",
"481 -268 QCURVE",
"182 -268 LINE",
"182 -590 OFFCURVE",
"688 -590 QCURVE",
"688 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 -452 OFFCURVE",
"650 -452 QCURVE SMOOTH",
"388 -452 OFFCURVE",
"388 -270 QCURVE",
"200 -270 LINE",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1100 -590 OFFCURVE",
"1100 -270 QCURVE SMOOTH",
"1100 290 LINE SMOOTH",
"1100 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 290 QCURVE SMOOTH",
"200 170 LINE SMOOTH",
"200 -70 OFFCURVE",
"515 -70 QCURVE SMOOTH",
"650 -70 LINE",
"650 90 LINE",
"515 90 LINE SMOOTH",
"388 90 OFFCURVE",
"388 170 QCURVE SMOOTH",
"388 290 LINE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 290 QCURVE SMOOTH",
"912 -270 LINE",
"912 -270 LINE"
);
},
{
closed = 1;
nodes = (
"495 1862 LINE",
"495 2000 LINE",
"442 2000 LINE SMOOTH",
"200 2000 OFFCURVE",
"200 1820 QCURVE SMOOTH",
"200 1600 OFFCURVE",
"466 1600 QCURVE SMOOTH",
"703 1600 OFFCURVE",
"812 1746 QCURVE",
"812 800 LINE",
"1000 800 LINE",
"1000 2000 LINE",
"812 2000 LINE",
"728 1869 LINE SMOOTH",
"643 1738 OFFCURVE",
"466 1738 QCURVE SMOOTH",
"388 1738 OFFCURVE",
"388 1820 QCURVE SMOOTH",
"388 1862 OFFCURVE",
"442 1862 QCURVE",
"442 1862 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"966 801 LINE",
"966 2001 LINE",
"843 2001 LINE",
"771 1878 OFFCURVE",
"597 1708 OFFCURVE",
"484 1708 QCURVE SMOOTH",
"411 1708 OFFCURVE",
"353 1780 OFFCURVE",
"353 1817 QCURVE SMOOTH",
"353 1847 OFFCURVE",
"409 1907 OFFCURVE",
"470 1907 QCURVE SMOOTH",
"497 1907 LINE",
"497 2001 LINE",
"470 2001 LINE SMOOTH",
"359 2001 OFFCURVE",
"235 1907 OFFCURVE",
"235 1812 QCURVE SMOOTH",
"235 1726 OFFCURVE",
"362 1612 OFFCURVE",
"478 1612 QCURVE SMOOTH",
"558 1612 OFFCURVE",
"695 1675 OFFCURVE",
"806 1772 OFFCURVE",
"843 1825 QCURVE",
"843 801 LINE",
"843 801 LINE"
);
},
{
closed = 1;
nodes = (
"828 -590 OFFCURVE",
"1043 -428 OFFCURVE",
"1043 -270 QCURVE SMOOTH",
"1043 291 LINE SMOOTH",
"1043 610 OFFCURVE",
"626 610 QCURVE SMOOTH",
"423 610 OFFCURVE",
"212 451 OFFCURVE",
"212 291 QCURVE SMOOTH",
"212 156 LINE SMOOTH",
"212 47 OFFCURVE",
"347 -70 OFFCURVE",
"466 -70 QCURVE SMOOTH",
"626 -70 LINE",
"626 35 LINE",
"466 35 LINE SMOOTH",
"398 35 OFFCURVE",
"331 109 OFFCURVE",
"331 156 QCURVE SMOOTH",
"331 291 LINE SMOOTH",
"331 397 OFFCURVE",
"478 516 OFFCURVE",
"626 516 QCURVE SMOOTH",
"775 516 OFFCURVE",
"923 397 OFFCURVE",
"923 291 QCURVE SMOOTH",
"923 -270 LINE SMOOTH",
"923 -377 OFFCURVE",
"775 -496 OFFCURVE",
"626 -496 QCURVE SMOOTH",
"478 -496 OFFCURVE",
"331 -377 OFFCURVE",
"331 -270 QCURVE",
"212 -270 LINE",
"212 -426 OFFCURVE",
"425 -590 OFFCURVE",
"626 -590 QCURVE",
"626 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"932 801 LINE",
"932 2001 LINE",
"878 2001 LINE",
"839 1937 OFFCURVE",
"725 1790 OFFCURVE",
"577 1683 OFFCURVE",
"493 1683 QCURVE SMOOTH",
"426 1683 OFFCURVE",
"352 1731 OFFCURVE",
"321 1798 OFFCURVE",
"321 1829 QCURVE SMOOTH",
"321 1866 OFFCURVE",
"393 1948 OFFCURVE",
"481 1948 QCURVE SMOOTH",
"499 1948 LINE",
"499 2001 LINE",
"497 2001 LINE SMOOTH",
"383 2001 OFFCURVE",
"268 1907 OFFCURVE",
"268 1827 QCURVE SMOOTH",
"268 1731 OFFCURVE",
"397 1630 OFFCURVE",
"491 1630 QCURVE SMOOTH",
"577 1630 OFFCURVE",
"725 1720 OFFCURVE",
"839 1845 OFFCURVE",
"878 1903 QCURVE",
"878 801 LINE",
"878 801 LINE"
);
},
{
closed = 1;
nodes = (
"786 -590 OFFCURVE",
"989 -426 OFFCURVE",
"989 -270 QCURVE SMOOTH",
"989 291 LINE SMOOTH",
"989 446 OFFCURVE",
"790 610 OFFCURVE",
"606 610 QCURVE SMOOTH",
"424 610 OFFCURVE",
"225 451 OFFCURVE",
"225 291 QCURVE SMOOTH",
"225 139 LINE SMOOTH",
"225 43 OFFCURVE",
"340 -70 OFFCURVE",
"422 -70 QCURVE SMOOTH",
"606 -70 LINE",
"606 -16 LINE",
"418 -16 LINE SMOOTH",
"346 -16 OFFCURVE",
"278 86 OFFCURVE",
"278 139 QCURVE SMOOTH",
"278 291 LINE SMOOTH",
"278 416 OFFCURVE",
"442 557 OFFCURVE",
"606 557 QCURVE SMOOTH",
"770 557 OFFCURVE",
"936 416 OFFCURVE",
"936 291 QCURVE SMOOTH",
"936 -270 LINE SMOOTH",
"936 -395 OFFCURVE",
"770 -537 OFFCURVE",
"606 -537 QCURVE SMOOTH",
"442 -537 OFFCURVE",
"278 -395 OFFCURVE",
"278 -270 QCURVE",
"225 -270 LINE",
"225 -426 OFFCURVE",
"430 -590 OFFCURVE",
"606 -590 QCURVE",
"606 -590 LINE"
);
}
);
width = 1300;
}
);
note = uni19F1;
unicode = 19F1;
},
{
glyphname = uni19F2;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1229 903 LINE",
"1229 2103 LINE",
"858 2103 LINE",
"852 2013 OFFCURVE",
"792 1862 OFFCURVE",
"698 1767 OFFCURVE",
"639 1767 QCURVE SMOOTH",
"596 1767 OFFCURVE",
"596 1802 QCURVE SMOOTH",
"596 1837 OFFCURVE",
"631 1837 QCURVE SMOOTH",
"641 1837 LINE",
"641 2103 LINE",
"561 2103 LINE SMOOTH",
"446 2103 OFFCURVE",
"305 2028 OFFCURVE",
"244 1903 OFFCURVE",
"244 1825 QCURVE SMOOTH",
"244 1726 OFFCURVE",
"350 1587 OFFCURVE",
"500 1516 OFFCURVE",
"569 1516 QCURVE SMOOTH",
"649 1516 OFFCURVE",
"752 1544 OFFCURVE",
"823 1597 OFFCURVE",
"858 1632 QCURVE",
"858 903 LINE",
"858 903 LINE"
);
},
{
closed = 1;
nodes = (
"1763 -590 OFFCURVE",
"1763 -190 QCURVE SMOOTH",
"1763 610 LINE",
"1393 610 LINE",
"1274 524 LINE",
"1165 610 LINE",
"784 610 LINE",
"784 10 LINE",
"1194 10 LINE",
"1194 240 LINE",
"1165 240 LINE",
"1165 350 LINE",
"1274 268 LINE",
"1393 350 LINE",
"1393 -190 LINE SMOOTH",
"1393 -360 OFFCURVE",
"1042 -360 QCURVE SMOOTH",
"688 -360 OFFCURVE",
"688 -190 QCURVE SMOOTH",
"688 735 LINE SMOOTH",
"688 793 OFFCURVE",
"645 860 OFFCURVE",
"567 860 QCURVE SMOOTH",
"217 860 LINE",
"217 631 LINE",
"317 631 LINE",
"317 -190 LINE SMOOTH",
"317 -590 OFFCURVE",
"1042 -590 QCURVE",
"1042 -590 LINE"
);
}
);
width = 1792;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1177 903 LINE",
"1177 2103 LINE",
"878 2103 LINE",
"837 1964 OFFCURVE",
"708 1794 OFFCURVE",
"613 1794 QCURVE SMOOTH",
"552 1794 OFFCURVE",
"552 1841 QCURVE SMOOTH",
"552 1862 OFFCURVE",
"579 1888 OFFCURVE",
"603 1888 QCURVE SMOOTH",
"622 1888 LINE",
"622 2103 LINE",
"552 2103 LINE SMOOTH",
"407 2103 OFFCURVE",
"265 1966 OFFCURVE",
"265 1855 QCURVE SMOOTH",
"265 1774 OFFCURVE",
"351 1653 OFFCURVE",
"489 1587 OFFCURVE",
"566 1587 QCURVE SMOOTH",
"685 1587 OFFCURVE",
"824 1657 OFFCURVE",
"878 1716 QCURVE",
"878 903 LINE",
"878 903 LINE"
);
},
{
closed = 1;
nodes = (
"1635 -590 OFFCURVE",
"1635 -190 QCURVE SMOOTH",
"1635 610 LINE",
"1336 610 LINE",
"1183 489 LINE",
"1037 610 LINE",
"730 610 LINE",
"730 10 LINE",
"1074 10 LINE",
"1074 203 LINE",
"1037 203 LINE",
"1037 387 LINE",
"1183 268 LINE",
"1336 387 LINE",
"1336 -190 LINE SMOOTH",
"1336 -397 OFFCURVE",
"974 -397 QCURVE SMOOTH",
"609 -397 OFFCURVE",
"609 -190 QCURVE SMOOTH",
"609 752 LINE SMOOTH",
"609 803 OFFCURVE",
"566 860 OFFCURVE",
"499 860 QCURVE SMOOTH",
"210 860 LINE",
"210 668 LINE",
"310 668 LINE",
"310 -190 LINE SMOOTH",
"310 -590 OFFCURVE",
"974 -590 QCURVE",
"974 -590 LINE"
);
}
);
width = 1732;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1338 610 LINE",
"1150 610 LINE",
"940 436 LINE",
"740 610 LINE",
"542 610 LINE",
"542 10 LINE",
"790 10 LINE",
"790 160 LINE",
"740 160 LINE",
"740 442 LINE",
"940 268 LINE",
"1150 442 LINE",
"1150 -190 LINE SMOOTH",
"1150 -452 OFFCURVE",
"769 -452 QCURVE SMOOTH",
"388 -452 OFFCURVE",
"388 -190 QCURVE SMOOTH",
"388 710 LINE SMOOTH",
"388 860 OFFCURVE",
"200 860 QCURVE SMOOTH",
"100 860 LINE",
"100 710 LINE",
"200 710 LINE",
"200 -190 LINE SMOOTH",
"200 -590 OFFCURVE",
"769 -590 QCURVE SMOOTH",
"1338 -590 OFFCURVE",
"1338 -190 QCURVE",
"1338 -190 LINE"
);
},
{
closed = 1;
nodes = (
"495 1862 LINE",
"495 2000 LINE",
"442 2000 LINE SMOOTH",
"200 2000 OFFCURVE",
"200 1820 QCURVE SMOOTH",
"200 1600 OFFCURVE",
"466 1600 QCURVE SMOOTH",
"703 1600 OFFCURVE",
"812 1746 QCURVE",
"812 800 LINE",
"1000 800 LINE",
"1000 2000 LINE",
"812 2000 LINE",
"728 1869 LINE SMOOTH",
"643 1738 OFFCURVE",
"466 1738 QCURVE SMOOTH",
"388 1738 OFFCURVE",
"388 1820 QCURVE SMOOTH",
"388 1862 OFFCURVE",
"442 1862 QCURVE",
"442 1862 LINE"
);
}
);
width = 1538;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1064 903 LINE",
"1064 2103 LINE",
"941 2103 LINE",
"870 1980 OFFCURVE",
"695 1810 OFFCURVE",
"583 1810 QCURVE SMOOTH",
"509 1810 OFFCURVE",
"452 1882 OFFCURVE",
"452 1919 QCURVE SMOOTH",
"452 1950 OFFCURVE",
"507 2009 OFFCURVE",
"568 2009 QCURVE SMOOTH",
"595 2009 LINE",
"595 2103 LINE",
"568 2103 LINE SMOOTH",
"458 2103 OFFCURVE",
"333 2009 OFFCURVE",
"333 1915 QCURVE SMOOTH",
"333 1829 OFFCURVE",
"460 1714 OFFCURVE",
"577 1714 QCURVE SMOOTH",
"657 1714 OFFCURVE",
"794 1778 OFFCURVE",
"904 1874 OFFCURVE",
"941 1927 QCURVE",
"941 903 LINE",
"941 903 LINE"
);
},
{
closed = 1;
nodes = (
"1068 -590 OFFCURVE",
"1334 -391 OFFCURVE",
"1334 -190 QCURVE SMOOTH",
"1334 610 LINE",
"1214 610 LINE",
"972 401 LINE",
"732 610 LINE",
"611 610 LINE",
"611 25 LINE",
"786 25 LINE",
"786 121 LINE",
"732 121 LINE",
"732 492 LINE",
"972 283 LINE",
"1214 492 LINE",
"1214 -190 LINE SMOOTH",
"1214 -338 OFFCURVE",
"1017 -496 OFFCURVE",
"818 -496 QCURVE SMOOTH",
"624 -496 OFFCURVE",
"429 -338 OFFCURVE",
"429 -190 QCURVE SMOOTH",
"429 799 LINE SMOOTH",
"429 834 OFFCURVE",
"398 866 OFFCURVE",
"360 866 QCURVE SMOOTH",
"208 866 LINE",
"208 770 LINE",
"308 770 LINE",
"308 -190 LINE SMOOTH",
"308 -389 OFFCURVE",
"568 -590 OFFCURVE",
"818 -590 QCURVE",
"818 -590 LINE"
);
}
);
width = 1593;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1030 903 LINE",
"1030 2103 LINE",
"977 2103 LINE",
"938 2040 OFFCURVE",
"823 1892 OFFCURVE",
"676 1786 OFFCURVE",
"592 1786 QCURVE SMOOTH",
"524 1786 OFFCURVE",
"450 1833 OFFCURVE",
"420 1901 OFFCURVE",
"420 1931 QCURVE SMOOTH",
"420 1968 OFFCURVE",
"491 2050 OFFCURVE",
"579 2050 QCURVE SMOOTH",
"598 2050 LINE",
"598 2103 LINE",
"596 2103 LINE SMOOTH",
"481 2103 OFFCURVE",
"366 2009 OFFCURVE",
"366 1929 QCURVE SMOOTH",
"366 1833 OFFCURVE",
"495 1733 OFFCURVE",
"590 1733 QCURVE SMOOTH",
"676 1733 OFFCURVE",
"823 1823 OFFCURVE",
"938 1948 OFFCURVE",
"977 2005 QCURVE",
"977 903 LINE",
"977 903 LINE"
);
},
{
closed = 1;
nodes = (
"987 -590 OFFCURVE",
"1233 -393 OFFCURVE",
"1233 -190 QCURVE SMOOTH",
"1233 610 LINE",
"1179 610 LINE",
"901 369 LINE",
"629 610 LINE",
"575 610 LINE",
"575 41 LINE",
"684 41 LINE",
"684 94 LINE",
"629 94 LINE",
"629 539 LINE",
"901 297 LINE",
"1179 539 LINE",
"1179 -190 LINE SMOOTH",
"1179 -354 OFFCURVE",
"977 -537 OFFCURVE",
"774 -537 QCURVE SMOOTH",
"573 -537 OFFCURVE",
"373 -354 OFFCURVE",
"373 -190 QCURVE SMOOTH",
"373 823 LINE SMOOTH",
"373 852 OFFCURVE",
"356 872 OFFCURVE",
"330 872 QCURVE SMOOTH",
"221 872 LINE",
"221 819 LINE",
"319 819 LINE",
"319 -190 LINE SMOOTH",
"319 -389 OFFCURVE",
"561 -590 OFFCURVE",
"774 -590 QCURVE",
"774 -590 LINE"
);
}
);
width = 1544;
}
);
note = uni19F2;
unicode = 19F2;
},
{
glyphname = uni19F3;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1171 801 LINE",
"1171 2001 LINE",
"801 2001 LINE",
"795 1911 OFFCURVE",
"735 1759 OFFCURVE",
"641 1665 OFFCURVE",
"582 1665 QCURVE SMOOTH",
"539 1665 OFFCURVE",
"539 1700 QCURVE SMOOTH",
"539 1735 OFFCURVE",
"573 1735 QCURVE SMOOTH",
"584 1735 LINE",
"584 2001 LINE",
"504 2001 LINE SMOOTH",
"389 2001 OFFCURVE",
"248 1925 OFFCURVE",
"186 1800 OFFCURVE",
"186 1722 QCURVE SMOOTH",
"186 1624 OFFCURVE",
"293 1485 OFFCURVE",
"442 1413 OFFCURVE",
"512 1413 QCURVE SMOOTH",
"592 1413 OFFCURVE",
"694 1442 OFFCURVE",
"766 1495 OFFCURVE",
"801 1530 QCURVE",
"801 801 LINE",
"801 801 LINE"
);
},
{
closed = 1;
nodes = (
"623 -590 LINE",
"623 -360 LINE",
"543 -360 LINE",
"543 276 LINE SMOOTH",
"543 381 OFFCURVE",
"651 381 QCURVE SMOOTH",
"760 381 OFFCURVE",
"760 276 QCURVE SMOOTH",
"760 -590 LINE",
"1128 -590 LINE",
"1128 276 LINE SMOOTH",
"1128 381 OFFCURVE",
"1239 381 QCURVE SMOOTH",
"1348 381 OFFCURVE",
"1348 276 QCURVE SMOOTH",
"1348 -590 LINE",
"1716 -590 LINE",
"1716 250 LINE SMOOTH",
"1716 610 OFFCURVE",
"1239 610 QCURVE SMOOTH",
"1040 610 OFFCURVE",
"944 520 QCURVE",
"848 610 OFFCURVE",
"651 610 QCURVE SMOOTH",
"172 610 OFFCURVE",
"172 260 QCURVE SMOOTH",
"172 -590 LINE",
"172 -590 LINE"
);
}
);
width = 1763;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1159 801 LINE",
"1159 2001 LINE",
"860 2001 LINE",
"819 1862 OFFCURVE",
"690 1692 OFFCURVE",
"596 1692 QCURVE SMOOTH",
"534 1692 OFFCURVE",
"534 1739 QCURVE SMOOTH",
"534 1759 OFFCURVE",
"561 1786 OFFCURVE",
"585 1786 QCURVE SMOOTH",
"604 1786 LINE",
"604 2001 LINE",
"534 2001 LINE SMOOTH",
"389 2001 OFFCURVE",
"248 1864 OFFCURVE",
"248 1753 QCURVE SMOOTH",
"248 1671 OFFCURVE",
"334 1550 OFFCURVE",
"471 1485 OFFCURVE",
"549 1485 QCURVE SMOOTH",
"667 1485 OFFCURVE",
"807 1554 OFFCURVE",
"860 1614 QCURVE",
"860 801 LINE",
"860 801 LINE"
);
},
{
closed = 1;
nodes = (
"569 -590 LINE",
"569 -397 LINE",
"483 -397 LINE",
"483 266 LINE SMOOTH",
"483 418 OFFCURVE",
"626 418 QCURVE SMOOTH",
"698 418 OFFCURVE",
"770 344 OFFCURVE",
"770 279 QCURVE SMOOTH",
"770 -590 LINE",
"1069 -590 LINE",
"1069 279 LINE SMOOTH",
"1069 344 OFFCURVE",
"1143 418 OFFCURVE",
"1214 418 QCURVE SMOOTH",
"1358 418 OFFCURVE",
"1358 266 QCURVE SMOOTH",
"1358 -590 LINE",
"1657 -590 LINE",
"1657 250 LINE SMOOTH",
"1657 610 OFFCURVE",
"1214 610 QCURVE SMOOTH",
"1016 610 OFFCURVE",
"919 520 QCURVE",
"823 610 OFFCURVE",
"626 610 QCURVE SMOOTH",
"182 610 OFFCURVE",
"182 260 QCURVE SMOOTH",
"182 -590 LINE",
"182 -590 LINE"
);
}
);
width = 1763;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"976 250 LINE SMOOTH",
"976 472 OFFCURVE",
"1176 472 QCURVE SMOOTH",
"1376 472 OFFCURVE",
"1376 250 QCURVE SMOOTH",
"1376 -590 LINE",
"1564 -590 LINE",
"1564 250 LINE SMOOTH",
"1564 610 OFFCURVE",
"1176 610 QCURVE SMOOTH",
"975 610 OFFCURVE",
"881 521 QCURVE",
"787 610 OFFCURVE",
"588 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 260 QCURVE SMOOTH",
"200 -590 LINE",
"488 -590 LINE",
"488 -452 LINE",
"388 -452 LINE",
"388 250 LINE SMOOTH",
"388 472 OFFCURVE",
"588 472 QCURVE SMOOTH",
"788 472 OFFCURVE",
"788 250 QCURVE SMOOTH",
"788 -590 LINE",
"976 -590 LINE",
"976 -590 LINE"
);
},
{
closed = 1;
nodes = (
"495 1862 LINE",
"495 2000 LINE",
"442 2000 LINE SMOOTH",
"200 2000 OFFCURVE",
"200 1820 QCURVE SMOOTH",
"200 1600 OFFCURVE",
"466 1600 QCURVE SMOOTH",
"703 1600 OFFCURVE",
"812 1746 QCURVE",
"812 800 LINE",
"1000 800 LINE",
"1000 2000 LINE",
"812 2000 LINE",
"728 1869 LINE SMOOTH",
"643 1738 OFFCURVE",
"466 1738 QCURVE SMOOTH",
"388 1738 OFFCURVE",
"388 1820 QCURVE SMOOTH",
"388 1862 OFFCURVE",
"442 1862 QCURVE",
"442 1862 LINE"
);
}
);
width = 1764;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1105 801 LINE",
"1105 2001 LINE",
"982 2001 LINE",
"910 1878 OFFCURVE",
"736 1708 OFFCURVE",
"624 1708 QCURVE SMOOTH",
"550 1708 OFFCURVE",
"493 1780 OFFCURVE",
"493 1817 QCURVE SMOOTH",
"493 1847 OFFCURVE",
"548 1907 OFFCURVE",
"609 1907 QCURVE SMOOTH",
"636 1907 LINE",
"636 2001 LINE",
"609 2001 LINE SMOOTH",
"499 2001 OFFCURVE",
"374 1907 OFFCURVE",
"374 1812 QCURVE SMOOTH",
"374 1726 OFFCURVE",
"501 1612 OFFCURVE",
"618 1612 QCURVE SMOOTH",
"697 1612 OFFCURVE",
"835 1675 OFFCURVE",
"945 1772 OFFCURVE",
"982 1825 QCURVE",
"982 801 LINE",
"982 801 LINE"
);
},
{
closed = 1;
nodes = (
"433 -590 LINE",
"433 -496 LINE",
"333 -496 LINE",
"333 270 LINE SMOOTH",
"333 516 OFFCURVE",
"566 516 QCURVE SMOOTH",
"681 516 OFFCURVE",
"802 428 OFFCURVE",
"802 358 QCURVE SMOOTH",
"802 -590 LINE",
"921 -590 LINE",
"921 358 LINE SMOOTH",
"921 428 OFFCURVE",
"1037 516 OFFCURVE",
"1154 516 QCURVE SMOOTH",
"1269 516 OFFCURVE",
"1388 393 OFFCURVE",
"1388 281 QCURVE SMOOTH",
"1388 -590 LINE",
"1510 -590 LINE",
"1510 281 LINE SMOOTH",
"1510 444 OFFCURVE",
"1318 610 OFFCURVE",
"1154 610 QCURVE SMOOTH",
"955 610 OFFCURVE",
"859 520 QCURVE",
"763 610 OFFCURVE",
"566 610 QCURVE SMOOTH",
"402 610 OFFCURVE",
"212 449 OFFCURVE",
"212 281 QCURVE SMOOTH",
"212 -590 LINE",
"212 -590 LINE"
);
}
);
width = 1763;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1071 801 LINE",
"1071 2001 LINE",
"1018 2001 LINE",
"979 1937 OFFCURVE",
"864 1790 OFFCURVE",
"717 1683 OFFCURVE",
"633 1683 QCURVE SMOOTH",
"565 1683 OFFCURVE",
"491 1731 OFFCURVE",
"461 1798 OFFCURVE",
"461 1829 QCURVE SMOOTH",
"461 1866 OFFCURVE",
"532 1948 OFFCURVE",
"620 1948 QCURVE SMOOTH",
"639 1948 LINE",
"639 2001 LINE",
"637 2001 LINE SMOOTH",
"522 2001 OFFCURVE",
"407 1907 OFFCURVE",
"407 1827 QCURVE SMOOTH",
"407 1731 OFFCURVE",
"536 1630 OFFCURVE",
"631 1630 QCURVE SMOOTH",
"717 1630 OFFCURVE",
"864 1720 OFFCURVE",
"979 1845 OFFCURVE",
"1018 1903 QCURVE",
"1018 801 LINE",
"1018 801 LINE"
);
},
{
closed = 1;
nodes = (
"379 -590 LINE",
"379 -537 LINE",
"278 -537 LINE",
"278 291 LINE SMOOTH",
"278 418 OFFCURVE",
"415 557 OFFCURVE",
"547 557 QCURVE SMOOTH",
"678 557 OFFCURVE",
"815 485 OFFCURVE",
"815 436 QCURVE SMOOTH",
"815 -590 LINE",
"868 -590 LINE",
"868 436 LINE SMOOTH",
"868 485 OFFCURVE",
"1001 557 OFFCURVE",
"1134 557 QCURVE SMOOTH",
"1265 557 OFFCURVE",
"1403 424 OFFCURVE",
"1403 311 QCURVE SMOOTH",
"1403 -590 LINE",
"1456 -590 LINE",
"1456 311 LINE SMOOTH",
"1456 461 OFFCURVE",
"1267 610 OFFCURVE",
"1134 610 QCURVE SMOOTH",
"936 610 OFFCURVE",
"839 520 QCURVE",
"743 610 OFFCURVE",
"547 610 QCURVE SMOOTH",
"413 610 OFFCURVE",
"225 461 OFFCURVE",
"225 301 QCURVE SMOOTH",
"225 -590 LINE",
"225 -590 LINE"
);
}
);
width = 1763;
}
);
note = uni19F3;
unicode = 19F3;
},
{
glyphname = uni19F4;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1195 903 LINE",
"1195 2103 LINE",
"825 2103 LINE",
"818 2013 OFFCURVE",
"759 1862 OFFCURVE",
"665 1767 OFFCURVE",
"606 1767 QCURVE SMOOTH",
"562 1767 OFFCURVE",
"562 1802 QCURVE SMOOTH",
"562 1837 OFFCURVE",
"597 1837 QCURVE SMOOTH",
"608 1837 LINE",
"608 2103 LINE",
"528 2103 LINE SMOOTH",
"413 2103 OFFCURVE",
"272 2028 OFFCURVE",
"210 1903 OFFCURVE",
"210 1825 QCURVE SMOOTH",
"210 1726 OFFCURVE",
"317 1587 OFFCURVE",
"466 1516 OFFCURVE",
"536 1516 QCURVE SMOOTH",
"616 1516 OFFCURVE",
"718 1544 OFFCURVE",
"790 1597 OFFCURVE",
"825 1632 QCURVE",
"825 903 LINE",
"825 903 LINE"
);
},
{
closed = 1;
nodes = (
"1330 -590 LINE",
"1400 -408 LINE",
"1259 -92 LINE",
"1259 80 LINE",
"1384 80 LINE",
"1384 348 LINE",
"1271 348 LINE SMOOTH",
"1171 348 OFFCURVE",
"997 334 OFFCURVE",
"892 274 OFFCURVE",
"892 211 QCURVE SMOOTH",
"892 -141 LINE",
"1070 -360 LINE",
"841 -360 LINE SMOOTH",
"671 -360 OFFCURVE",
"671 -190 QCURVE SMOOTH",
"671 721 LINE SMOOTH",
"671 797 OFFCURVE",
"599 870 OFFCURVE",
"517 870 QCURVE SMOOTH",
"200 870 LINE",
"200 641 LINE",
"300 641 LINE",
"300 -190 LINE SMOOTH",
"300 -590 OFFCURVE",
"841 -590 QCURVE",
"841 -590 LINE"
);
}
);
width = 1421;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1158 903 LINE",
"1158 2103 LINE",
"859 2103 LINE",
"818 1964 OFFCURVE",
"689 1794 OFFCURVE",
"595 1794 QCURVE SMOOTH",
"534 1794 OFFCURVE",
"534 1841 QCURVE SMOOTH",
"534 1862 OFFCURVE",
"560 1888 OFFCURVE",
"585 1888 QCURVE SMOOTH",
"603 1888 LINE",
"603 2103 LINE",
"534 2103 LINE SMOOTH",
"388 2103 OFFCURVE",
"247 1966 OFFCURVE",
"247 1855 QCURVE SMOOTH",
"247 1774 OFFCURVE",
"333 1653 OFFCURVE",
"470 1587 OFFCURVE",
"548 1587 QCURVE SMOOTH",
"667 1587 OFFCURVE",
"806 1657 OFFCURVE",
"859 1716 QCURVE",
"859 903 LINE",
"859 903 LINE"
);
},
{
closed = 1;
nodes = (
"1261 -590 LINE",
"1322 -426 LINE",
"1154 -92 LINE",
"1154 131 LINE",
"1312 131 LINE",
"1312 348 LINE",
"1167 348 LINE SMOOTH",
"1079 348 OFFCURVE",
"939 328 OFFCURVE",
"857 270 OFFCURVE",
"857 211 QCURVE SMOOTH",
"857 -141 LINE",
"1070 -397 LINE",
"806 -397 LINE SMOOTH",
"599 -397 OFFCURVE",
"599 -190 QCURVE SMOOTH",
"599 721 LINE SMOOTH",
"599 797 OFFCURVE",
"540 870 OFFCURVE",
"464 870 QCURVE SMOOTH",
"200 870 LINE",
"200 678 LINE",
"300 678 LINE",
"300 -190 LINE SMOOTH",
"300 -590 OFFCURVE",
"806 -590 QCURVE",
"806 -590 LINE"
);
}
);
width = 1413;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"388 720 LINE SMOOTH",
"388 870 OFFCURVE",
"200 870 QCURVE SMOOTH",
"100 870 LINE",
"100 710 LINE",
"200 710 LINE",
"200 -190 LINE SMOOTH",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1050 -590 LINE",
"1100 -452 LINE",
"888 -92 LINE",
"888 210 LINE",
"1100 210 LINE",
"1100 348 LINE",
"900 348 LINE SMOOTH",
"800 348 OFFCURVE",
"700 285 OFFCURVE",
"700 210 QCURVE SMOOTH",
"700 -142 LINE",
"970 -452 LINE",
"650 -452 LINE SMOOTH",
"388 -452 OFFCURVE",
"388 -190 QCURVE",
"388 -190 LINE"
);
},
{
closed = 1;
nodes = (
"495 1862 LINE",
"495 2000 LINE",
"442 2000 LINE SMOOTH",
"200 2000 OFFCURVE",
"200 1820 QCURVE SMOOTH",
"200 1600 OFFCURVE",
"466 1600 QCURVE SMOOTH",
"703 1600 OFFCURVE",
"812 1746 QCURVE",
"812 800 LINE",
"1000 800 LINE",
"1000 2000 LINE",
"812 2000 LINE",
"728 1869 LINE SMOOTH",
"643 1738 OFFCURVE",
"466 1738 QCURVE SMOOTH",
"388 1738 OFFCURVE",
"388 1820 QCURVE SMOOTH",
"388 1862 OFFCURVE",
"442 1862 QCURVE",
"442 1862 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1044 903 LINE",
"1044 2103 LINE",
"921 2103 LINE",
"849 1980 OFFCURVE",
"675 1810 OFFCURVE",
"562 1810 QCURVE SMOOTH",
"489 1810 OFFCURVE",
"431 1882 OFFCURVE",
"431 1919 QCURVE SMOOTH",
"431 1950 OFFCURVE",
"487 2009 OFFCURVE",
"548 2009 QCURVE SMOOTH",
"575 2009 LINE",
"575 2103 LINE",
"548 2103 LINE SMOOTH",
"437 2103 OFFCURVE",
"312 2009 OFFCURVE",
"312 1915 QCURVE SMOOTH",
"312 1829 OFFCURVE",
"439 1714 OFFCURVE",
"556 1714 QCURVE SMOOTH",
"636 1714 OFFCURVE",
"773 1778 OFFCURVE",
"884 1874 OFFCURVE",
"921 1927 QCURVE",
"921 903 LINE",
"921 903 LINE"
);
},
{
closed = 1;
nodes = (
"1089 -590 LINE",
"1136 -489 LINE",
"898 -109 LINE",
"898 254 LINE",
"1142 254 LINE",
"1142 348 LINE",
"929 348 LINE SMOOTH",
"843 348 OFFCURVE",
"777 299 OFFCURVE",
"777 238 QCURVE SMOOTH",
"777 -141 LINE",
"1044 -496 LINE",
"724 -496 LINE SMOOTH",
"577 -496 OFFCURVE",
"429 -338 OFFCURVE",
"429 -190 QCURVE SMOOTH",
"429 770 LINE SMOOTH",
"429 823 OFFCURVE",
"394 870 OFFCURVE",
"349 870 QCURVE SMOOTH",
"208 870 LINE",
"208 774 LINE",
"310 774 LINE",
"310 -190 LINE SMOOTH",
"310 -389 OFFCURVE",
"523 -590 OFFCURVE",
"724 -590 QCURVE",
"724 -590 LINE"
);
}
);
width = 1398;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"989 903 LINE",
"989 2103 LINE",
"936 2103 LINE",
"897 2040 OFFCURVE",
"782 1892 OFFCURVE",
"635 1786 OFFCURVE",
"551 1786 QCURVE SMOOTH",
"483 1786 OFFCURVE",
"409 1833 OFFCURVE",
"379 1901 OFFCURVE",
"379 1931 QCURVE SMOOTH",
"379 1968 OFFCURVE",
"450 2050 OFFCURVE",
"538 2050 QCURVE SMOOTH",
"557 2050 LINE",
"557 2103 LINE",
"555 2103 LINE SMOOTH",
"440 2103 OFFCURVE",
"325 2009 OFFCURVE",
"325 1929 QCURVE SMOOTH",
"325 1833 OFFCURVE",
"454 1733 OFFCURVE",
"549 1733 QCURVE SMOOTH",
"635 1733 OFFCURVE",
"782 1823 OFFCURVE",
"897 1948 OFFCURVE",
"936 2005 QCURVE",
"936 903 LINE",
"936 903 LINE"
);
},
{
closed = 1;
nodes = (
"1030 -590 LINE",
"1075 -526 LINE",
"811 -125 LINE",
"811 295 LINE",
"1085 295 LINE",
"1085 348 LINE",
"860 348 LINE SMOOTH",
"786 348 OFFCURVE",
"758 313 OFFCURVE",
"758 266 QCURVE SMOOTH",
"758 -141 LINE",
"1018 -537 LINE",
"702 -537 LINE SMOOTH",
"538 -537 OFFCURVE",
"375 -354 OFFCURVE",
"375 -190 QCURVE SMOOTH",
"375 817 LINE SMOOTH",
"375 850 OFFCURVE",
"348 870 OFFCURVE",
"321 870 QCURVE SMOOTH",
"221 870 LINE",
"221 817 LINE",
"321 817 LINE",
"321 -190 LINE SMOOTH",
"321 -389 OFFCURVE",
"526 -590 OFFCURVE",
"702 -590 QCURVE",
"702 -590 LINE"
);
}
);
width = 1396;
}
);
note = uni19F4;
unicode = 19F4;
},
{
glyphname = uni19F5;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1093 903 LINE",
"1093 2103 LINE",
"722 2103 LINE",
"716 2013 OFFCURVE",
"657 1862 OFFCURVE",
"563 1767 OFFCURVE",
"503 1767 QCURVE SMOOTH",
"460 1767 OFFCURVE",
"460 1802 QCURVE SMOOTH",
"460 1837 OFFCURVE",
"495 1837 QCURVE SMOOTH",
"505 1837 LINE",
"505 2103 LINE",
"425 2103 LINE SMOOTH",
"311 2103 OFFCURVE",
"169 2028 OFFCURVE",
"108 1903 OFFCURVE",
"108 1825 QCURVE SMOOTH",
"108 1726 OFFCURVE",
"214 1587 OFFCURVE",
"364 1516 OFFCURVE",
"434 1516 QCURVE SMOOTH",
"514 1516 OFFCURVE",
"616 1544 OFFCURVE",
"688 1597 OFFCURVE",
"722 1632 QCURVE",
"722 903 LINE",
"722 903 LINE"
);
},
{
closed = 1;
nodes = (
"1200 -590 LINE",
"1271 -408 LINE",
"1134 -193 LINE",
"1134 -57 LINE",
"1255 -57 LINE",
"1255 211 LINE",
"952 211 LINE SMOOTH",
"851 211 OFFCURVE",
"763 125 OFFCURVE",
"763 10 QCURVE SMOOTH",
"763 -221 LINE",
"921 -360 LINE",
"712 -360 LINE SMOOTH",
"542 -360 OFFCURVE",
"542 -260 QCURVE SMOOTH",
"542 168 LINE SMOOTH",
"542 227 OFFCURVE",
"569 317 OFFCURVE",
"585 336 QCURVE",
"640 309 OFFCURVE",
"741 279 OFFCURVE",
"819 279 QCURVE SMOOTH",
"1046 279 OFFCURVE",
"1257 463 OFFCURVE",
"1257 618 QCURVE SMOOTH",
"1257 872 LINE",
"886 872 LINE",
"886 575 LINE SMOOTH",
"886 530 OFFCURVE",
"843 492 OFFCURVE",
"823 487 QCURVE SMOOTH",
"814 485 OFFCURVE",
"804 485 QCURVE SMOOTH",
"792 485 OFFCURVE",
"778 488 QCURVE SMOOTH",
"751 492 OFFCURVE",
"714 506 QCURVE",
"731 532 OFFCURVE",
"759 596 OFFCURVE",
"759 655 QCURVE SMOOTH",
"759 705 OFFCURVE",
"700 799 OFFCURVE",
"589 862 OFFCURVE",
"514 862 QCURVE SMOOTH",
"425 862 OFFCURVE",
"309 791 OFFCURVE",
"249 688 OFFCURVE",
"249 639 QCURVE SMOOTH",
"249 573 OFFCURVE",
"284 508 OFFCURVE",
"309 475 QCURVE",
"219 416 OFFCURVE",
"171 270 OFFCURVE",
"171 168 QCURVE SMOOTH",
"171 -260 LINE SMOOTH",
"171 -590 OFFCURVE",
"712 -590 QCURVE",
"712 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1056 903 LINE",
"1056 2103 LINE",
"757 2103 LINE",
"716 1964 OFFCURVE",
"587 1794 OFFCURVE",
"493 1794 QCURVE SMOOTH",
"432 1794 OFFCURVE",
"432 1841 QCURVE SMOOTH",
"432 1862 OFFCURVE",
"458 1888 OFFCURVE",
"483 1888 QCURVE SMOOTH",
"501 1888 LINE",
"501 2103 LINE",
"432 2103 LINE SMOOTH",
"286 2103 OFFCURVE",
"145 1966 OFFCURVE",
"145 1855 QCURVE SMOOTH",
"145 1774 OFFCURVE",
"231 1653 OFFCURVE",
"368 1587 OFFCURVE",
"446 1587 QCURVE SMOOTH",
"565 1587 OFFCURVE",
"704 1657 OFFCURVE",
"757 1716 QCURVE",
"757 903 LINE",
"757 903 LINE"
);
},
{
closed = 1;
nodes = (
"1140 -590 LINE",
"1204 -426 LINE",
"1038 -193 LINE",
"1038 -6 LINE",
"1194 -6 LINE",
"1194 211 LINE",
"927 211 LINE SMOOTH",
"739 211 OFFCURVE",
"739 10 QCURVE SMOOTH",
"739 -221 LINE",
"931 -397 LINE",
"688 -397 LINE SMOOTH",
"481 -397 OFFCURVE",
"481 -260 QCURVE SMOOTH",
"481 207 LINE SMOOTH",
"481 266 OFFCURVE",
"518 348 OFFCURVE",
"544 369 QCURVE",
"608 340 OFFCURVE",
"725 307 OFFCURVE",
"802 307 QCURVE SMOOTH",
"995 307 OFFCURVE",
"1196 475 OFFCURVE",
"1196 618 QCURVE SMOOTH",
"1196 872 LINE",
"897 872 LINE",
"897 592 LINE SMOOTH",
"897 545 OFFCURVE",
"841 492 OFFCURVE",
"800 489 QCURVE SMOOTH",
"793 488 OFFCURVE",
"785 488 QCURVE SMOOTH",
"767 488 OFFCURVE",
"747 492 QCURVE SMOOTH",
"718 496 OFFCURVE",
"677 510 QCURVE",
"698 537 OFFCURVE",
"727 598 OFFCURVE",
"727 651 QCURVE SMOOTH",
"727 694 OFFCURVE",
"675 780 OFFCURVE",
"577 838 OFFCURVE",
"505 838 QCURVE SMOOTH",
"430 838 OFFCURVE",
"325 776 OFFCURVE",
"272 684 OFFCURVE",
"272 637 QCURVE SMOOTH",
"272 584 OFFCURVE",
"303 520 OFFCURVE",
"327 492 QCURVE",
"239 438 OFFCURVE",
"182 309 OFFCURVE",
"182 207 QCURVE SMOOTH",
"182 -260 LINE SMOOTH",
"182 -590 OFFCURVE",
"688 -590 QCURVE",
"688 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1000 2000 LINE",
"812 2000 LINE",
"728 1869 LINE SMOOTH",
"643 1738 OFFCURVE",
"466 1738 QCURVE SMOOTH",
"388 1738 OFFCURVE",
"388 1820 QCURVE SMOOTH",
"388 1862 OFFCURVE",
"442 1862 QCURVE SMOOTH",
"495 1862 LINE",
"495 2000 LINE",
"442 2000 LINE SMOOTH",
"200 2000 OFFCURVE",
"200 1820 QCURVE SMOOTH",
"200 1600 OFFCURVE",
"466 1600 QCURVE SMOOTH",
"703 1600 OFFCURVE",
"812 1746 QCURVE",
"812 800 LINE",
"912 800 LINE",
"912 619 LINE SMOOTH",
"912 569 OFFCURVE",
"840 503 OFFCURVE",
"770 503 QCURVE SMOOTH",
"696 503 OFFCURVE",
"595 533 QCURVE",
"670 584 OFFCURVE",
"670 636 QCURVE SMOOTH",
"670 780 OFFCURVE",
"480 780 QCURVE SMOOTH",
"300 780 OFFCURVE",
"300 636 QCURVE SMOOTH",
"300 574 OFFCURVE",
"368 517 QCURVE",
"347 510 OFFCURVE",
"325 500 QCURVE SMOOTH",
"200 447 OFFCURVE",
"200 300 QCURVE SMOOTH",
"200 -260 LINE SMOOTH",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1048 -590 LINE",
"1100 -452 LINE",
"888 -192 LINE",
"888 72 LINE",
"1100 72 LINE",
"1100 210 LINE",
"888 210 LINE SMOOTH",
"800 210 OFFCURVE",
"700 85 OFFCURVE",
"700 10 QCURVE SMOOTH",
"700 -222 LINE",
"950 -452 LINE",
"650 -452 LINE SMOOTH",
"388 -452 OFFCURVE",
"388 -260 QCURVE SMOOTH",
"388 300 LINE SMOOTH",
"388 349 OFFCURVE",
"436 395 OFFCURVE",
"472 414 QCURVE",
"614 365 OFFCURVE",
"770 365 QCURVE SMOOTH",
"928 365 OFFCURVE",
"1011 435 QCURVE",
"1100 496 OFFCURVE",
"1100 619 QCURVE SMOOTH",
"1100 980 LINE",
"1000 980 LINE",
"1000 980 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"966 903 LINE",
"966 2103 LINE",
"843 2103 LINE",
"771 1980 OFFCURVE",
"597 1810 OFFCURVE",
"484 1810 QCURVE SMOOTH",
"411 1810 OFFCURVE",
"353 1882 OFFCURVE",
"353 1919 QCURVE SMOOTH",
"353 1950 OFFCURVE",
"409 2009 OFFCURVE",
"470 2009 QCURVE SMOOTH",
"497 2009 LINE",
"497 2103 LINE",
"470 2103 LINE SMOOTH",
"359 2103 OFFCURVE",
"235 2009 OFFCURVE",
"235 1915 QCURVE SMOOTH",
"235 1829 OFFCURVE",
"362 1714 OFFCURVE",
"478 1714 QCURVE SMOOTH",
"558 1714 OFFCURVE",
"695 1778 OFFCURVE",
"806 1874 OFFCURVE",
"843 1927 QCURVE",
"843 903 LINE",
"843 903 LINE"
);
},
{
closed = 1;
nodes = (
"990 -590 LINE",
"1039 -489 LINE",
"802 -160 LINE",
"802 115 LINE",
"1043 115 LINE",
"1043 211 LINE",
"810 211 LINE SMOOTH",
"740 211 OFFCURVE",
"679 131 OFFCURVE",
"679 70 QCURVE SMOOTH",
"679 -180 LINE",
"935 -496 LINE",
"626 -496 LINE SMOOTH",
"478 -496 OFFCURVE",
"331 -354 OFFCURVE",
"331 -225 QCURVE SMOOTH",
"331 266 LINE SMOOTH",
"331 344 OFFCURVE",
"407 430 OFFCURVE",
"452 453 QCURVE",
"589 379 OFFCURVE",
"740 379 QCURVE SMOOTH",
"818 379 OFFCURVE",
"957 436 OFFCURVE",
"1043 545 OFFCURVE",
"1043 618 QCURVE SMOOTH",
"1043 872 LINE",
"923 872 LINE",
"923 618 LINE SMOOTH",
"923 563 OFFCURVE",
"814 475 OFFCURVE",
"736 475 QCURVE SMOOTH",
"687 475 OFFCURVE",
"591 492 OFFCURVE",
"548 512 QCURVE",
"568 532 OFFCURVE",
"593 578 OFFCURVE",
"593 610 QCURVE SMOOTH",
"593 653 OFFCURVE",
"527 725 OFFCURVE",
"462 725 QCURVE SMOOTH",
"400 725 OFFCURVE",
"331 655 OFFCURVE",
"331 606 QCURVE SMOOTH",
"331 557 OFFCURVE",
"368 520 QCURVE",
"280 479 OFFCURVE",
"212 354 OFFCURVE",
"212 272 QCURVE SMOOTH",
"212 -225 LINE SMOOTH",
"212 -406 OFFCURVE",
"425 -590 OFFCURVE",
"630 -590 QCURVE",
"630 -590 LINE"
);
}
);
width = 1257;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"932 903 LINE",
"932 2103 LINE",
"878 2103 LINE",
"839 2040 OFFCURVE",
"725 1892 OFFCURVE",
"577 1786 OFFCURVE",
"493 1786 QCURVE SMOOTH",
"426 1786 OFFCURVE",
"352 1833 OFFCURVE",
"321 1901 OFFCURVE",
"321 1931 QCURVE SMOOTH",
"321 1968 OFFCURVE",
"393 2050 OFFCURVE",
"481 2050 QCURVE SMOOTH",
"499 2050 LINE",
"499 2103 LINE",
"497 2103 LINE SMOOTH",
"383 2103 OFFCURVE",
"268 2009 OFFCURVE",
"268 1929 QCURVE SMOOTH",
"268 1833 OFFCURVE",
"397 1733 OFFCURVE",
"491 1733 QCURVE SMOOTH",
"577 1733 OFFCURVE",
"725 1823 OFFCURVE",
"839 1948 OFFCURVE",
"878 2005 QCURVE",
"878 903 LINE",
"878 903 LINE"
);
},
{
closed = 1;
nodes = (
"934 -590 LINE",
"979 -526 LINE",
"714 -125 LINE",
"714 158 LINE",
"989 158 LINE",
"989 211 LINE",
"731 211 LINE SMOOTH",
"682 211 OFFCURVE",
"661 176 OFFCURVE",
"661 129 QCURVE SMOOTH",
"661 -141 LINE",
"921 -537 LINE",
"606 -537 LINE SMOOTH",
"442 -537 OFFCURVE",
"278 -354 OFFCURVE",
"278 -190 QCURVE SMOOTH",
"278 264 LINE SMOOTH",
"278 362 OFFCURVE",
"372 467 OFFCURVE",
"422 485 QCURVE",
"483 446 OFFCURVE",
"641 403 OFFCURVE",
"706 403 QCURVE SMOOTH",
"772 403 OFFCURVE",
"903 459 OFFCURVE",
"989 557 OFFCURVE",
"989 618 QCURVE SMOOTH",
"989 872 LINE",
"936 872 LINE",
"936 618 LINE SMOOTH",
"936 578 OFFCURVE",
"870 504 OFFCURVE",
"766 457 OFFCURVE",
"706 457 QCURVE SMOOTH",
"645 457 OFFCURVE",
"518 483 OFFCURVE",
"479 510 QCURVE",
"495 522 OFFCURVE",
"514 553 OFFCURVE",
"514 580 QCURVE SMOOTH",
"514 606 OFFCURVE",
"469 655 OFFCURVE",
"432 655 QCURVE SMOOTH",
"401 655 OFFCURVE",
"356 612 OFFCURVE",
"356 580 QCURVE SMOOTH",
"356 561 OFFCURVE",
"368 537 OFFCURVE",
"381 522 QCURVE",
"286 479 OFFCURVE",
"225 340 OFFCURVE",
"225 276 QCURVE SMOOTH",
"225 -190 LINE SMOOTH",
"225 -389 OFFCURVE",
"428 -590 OFFCURVE",
"612 -590 QCURVE",
"612 -590 LINE"
);
}
);
width = 1214;
}
);
note = uni19F5;
unicode = 19F5;
},
{
glyphname = uni19F6;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1093 903 LINE",
"1093 2103 LINE",
"722 2103 LINE",
"716 2013 OFFCURVE",
"657 1862 OFFCURVE",
"563 1767 OFFCURVE",
"503 1767 QCURVE SMOOTH",
"460 1767 OFFCURVE",
"460 1802 QCURVE SMOOTH",
"460 1837 OFFCURVE",
"495 1837 QCURVE SMOOTH",
"505 1837 LINE",
"505 2103 LINE",
"425 2103 LINE SMOOTH",
"311 2103 OFFCURVE",
"169 2028 OFFCURVE",
"108 1903 OFFCURVE",
"108 1825 QCURVE SMOOTH",
"108 1726 OFFCURVE",
"214 1587 OFFCURVE",
"364 1516 OFFCURVE",
"434 1516 QCURVE SMOOTH",
"514 1516 OFFCURVE",
"616 1544 OFFCURVE",
"688 1597 OFFCURVE",
"722 1632 QCURVE",
"722 903 LINE",
"722 903 LINE"
);
},
{
closed = 1;
nodes = (
"1257 -590 OFFCURVE",
"1257 -190 QCURVE SMOOTH",
"1257 211 LINE SMOOTH",
"1257 410 OFFCURVE",
"999 639 OFFCURVE",
"774 639 QCURVE SMOOTH",
"683 639 OFFCURVE",
"567 586 OFFCURVE",
"542 557 QCURVE",
"542 872 LINE",
"171 872 LINE",
"171 270 LINE",
"542 270 LINE",
"557 326 OFFCURVE",
"630 381 OFFCURVE",
"712 381 QCURVE SMOOTH",
"796 381 OFFCURVE",
"886 293 OFFCURVE",
"886 211 QCURVE SMOOTH",
"886 -109 LINE SMOOTH",
"886 -197 OFFCURVE",
"800 -299 OFFCURVE",
"712 -299 QCURVE SMOOTH",
"628 -299 OFFCURVE",
"542 -229 OFFCURVE",
"542 -174 QCURVE SMOOTH",
"542 -143 OFFCURVE",
"565 -80 OFFCURVE",
"630 -37 OFFCURVE",
"696 -37 QCURVE SMOOTH",
"763 -37 LINE",
"763 193 LINE",
"614 193 LINE SMOOTH",
"393 193 OFFCURVE",
"171 -12 OFFCURVE",
"171 -180 QCURVE SMOOTH",
"171 -295 OFFCURVE",
"292 -479 OFFCURVE",
"532 -590 OFFCURVE",
"712 -590 QCURVE",
"712 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1056 903 LINE",
"1056 2103 LINE",
"757 2103 LINE",
"716 1964 OFFCURVE",
"587 1794 OFFCURVE",
"493 1794 QCURVE SMOOTH",
"432 1794 OFFCURVE",
"432 1841 QCURVE SMOOTH",
"432 1862 OFFCURVE",
"458 1888 OFFCURVE",
"483 1888 QCURVE SMOOTH",
"501 1888 LINE",
"501 2103 LINE",
"432 2103 LINE SMOOTH",
"286 2103 OFFCURVE",
"145 1966 OFFCURVE",
"145 1855 QCURVE SMOOTH",
"145 1774 OFFCURVE",
"231 1653 OFFCURVE",
"368 1587 OFFCURVE",
"446 1587 QCURVE SMOOTH",
"565 1587 OFFCURVE",
"704 1657 OFFCURVE",
"757 1716 QCURVE",
"757 903 LINE",
"757 903 LINE"
);
},
{
closed = 1;
nodes = (
"1196 -590 OFFCURVE",
"1196 -190 QCURVE SMOOTH",
"1196 211 LINE SMOOTH",
"1196 410 OFFCURVE",
"950 629 OFFCURVE",
"725 629 QCURVE SMOOTH",
"643 629 OFFCURVE",
"522 586 OFFCURVE",
"481 557 QCURVE",
"481 872 LINE",
"182 872 LINE",
"182 270 LINE",
"481 270 LINE",
"491 344 OFFCURVE",
"585 418 OFFCURVE",
"688 418 QCURVE SMOOTH",
"790 418 OFFCURVE",
"897 311 OFFCURVE",
"897 211 QCURVE SMOOTH",
"897 -141 LINE SMOOTH",
"897 -246 OFFCURVE",
"792 -358 OFFCURVE",
"688 -358 QCURVE SMOOTH",
"585 -358 OFFCURVE",
"481 -274 OFFCURVE",
"481 -199 QCURVE SMOOTH",
"481 -129 OFFCURVE",
"548 -33 OFFCURVE",
"639 -33 QCURVE SMOOTH",
"739 -33 LINE",
"739 160 LINE",
"589 160 LINE SMOOTH",
"387 160 OFFCURVE",
"182 -33 OFFCURVE",
"182 -203 QCURVE SMOOTH",
"182 -375 OFFCURVE",
"436 -590 OFFCURVE",
"688 -590 QCURVE",
"688 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"200 270 LINE",
"388 270 LINE",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 210 QCURVE SMOOTH",
"912 -190 LINE SMOOTH",
"912 -452 OFFCURVE",
"650 -452 QCURVE SMOOTH",
"388 -452 OFFCURVE",
"388 -240 QCURVE SMOOTH",
"388 -28 OFFCURVE",
"550 -28 QCURVE SMOOTH",
"700 -28 LINE",
"700 110 LINE",
"550 110 LINE SMOOTH",
"200 110 OFFCURVE",
"200 -240 QCURVE SMOOTH",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1100 -590 OFFCURVE",
"1100 -190 QCURVE SMOOTH",
"1100 210 LINE SMOOTH",
"1100 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"516 610 OFFCURVE",
"388 556 QCURVE",
"388 960 LINE",
"200 960 LINE",
"200 960 LINE"
);
},
{
closed = 1;
nodes = (
"495 1862 LINE",
"495 2000 LINE",
"442 2000 LINE SMOOTH",
"200 2000 OFFCURVE",
"200 1820 QCURVE SMOOTH",
"200 1600 OFFCURVE",
"466 1600 QCURVE SMOOTH",
"703 1600 OFFCURVE",
"812 1746 QCURVE",
"812 800 LINE",
"1000 800 LINE",
"1000 2000 LINE",
"812 2000 LINE",
"728 1869 LINE SMOOTH",
"643 1738 OFFCURVE",
"466 1738 QCURVE SMOOTH",
"388 1738 OFFCURVE",
"388 1820 QCURVE SMOOTH",
"388 1862 OFFCURVE",
"442 1862 QCURVE",
"442 1862 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"966 903 LINE",
"966 2103 LINE",
"843 2103 LINE",
"771 1980 OFFCURVE",
"597 1810 OFFCURVE",
"484 1810 QCURVE SMOOTH",
"411 1810 OFFCURVE",
"353 1882 OFFCURVE",
"353 1919 QCURVE SMOOTH",
"353 1950 OFFCURVE",
"409 2009 OFFCURVE",
"470 2009 QCURVE SMOOTH",
"497 2009 LINE",
"497 2103 LINE",
"470 2103 LINE SMOOTH",
"359 2103 OFFCURVE",
"235 2009 OFFCURVE",
"235 1915 QCURVE SMOOTH",
"235 1829 OFFCURVE",
"362 1714 OFFCURVE",
"478 1714 QCURVE SMOOTH",
"558 1714 OFFCURVE",
"695 1778 OFFCURVE",
"806 1874 OFFCURVE",
"843 1927 QCURVE",
"843 903 LINE",
"843 903 LINE"
);
},
{
closed = 1;
nodes = (
"830 -590 OFFCURVE",
"1043 -387 OFFCURVE",
"1043 -190 QCURVE SMOOTH",
"1043 211 LINE SMOOTH",
"1043 610 OFFCURVE",
"626 610 QCURVE SMOOTH",
"531 610 OFFCURVE",
"384 555 OFFCURVE",
"331 508 QCURVE",
"331 872 LINE",
"212 872 LINE",
"212 272 LINE",
"331 272 LINE",
"337 391 OFFCURVE",
"478 516 OFFCURVE",
"626 516 QCURVE SMOOTH",
"775 516 OFFCURVE",
"923 358 OFFCURVE",
"923 211 QCURVE SMOOTH",
"923 -190 LINE SMOOTH",
"923 -338 OFFCURVE",
"775 -496 OFFCURVE",
"626 -496 QCURVE SMOOTH",
"478 -496 OFFCURVE",
"331 -362 OFFCURVE",
"331 -240 QCURVE SMOOTH",
"331 -168 OFFCURVE",
"366 -53 OFFCURVE",
"454 16 OFFCURVE",
"531 16 QCURVE SMOOTH",
"679 16 LINE",
"679 111 LINE",
"540 111 LINE SMOOTH",
"368 111 OFFCURVE",
"212 -66 OFFCURVE",
"212 -240 QCURVE SMOOTH",
"212 -410 OFFCURVE",
"421 -590 OFFCURVE",
"626 -590 QCURVE",
"626 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"932 903 LINE",
"932 2103 LINE",
"878 2103 LINE",
"839 2040 OFFCURVE",
"725 1892 OFFCURVE",
"577 1786 OFFCURVE",
"493 1786 QCURVE SMOOTH",
"426 1786 OFFCURVE",
"352 1833 OFFCURVE",
"321 1901 OFFCURVE",
"321 1931 QCURVE SMOOTH",
"321 1968 OFFCURVE",
"393 2050 OFFCURVE",
"481 2050 QCURVE SMOOTH",
"499 2050 LINE",
"499 2103 LINE",
"497 2103 LINE SMOOTH",
"383 2103 OFFCURVE",
"268 2009 OFFCURVE",
"268 1929 QCURVE SMOOTH",
"268 1833 OFFCURVE",
"397 1733 OFFCURVE",
"491 1733 QCURVE SMOOTH",
"577 1733 OFFCURVE",
"725 1823 OFFCURVE",
"839 1948 OFFCURVE",
"878 2005 QCURVE",
"878 903 LINE",
"878 903 LINE"
);
},
{
closed = 1;
nodes = (
"788 -590 OFFCURVE",
"989 -385 OFFCURVE",
"989 -190 QCURVE SMOOTH",
"989 211 LINE SMOOTH",
"989 610 OFFCURVE",
"606 610 QCURVE SMOOTH",
"479 610 OFFCURVE",
"321 528 OFFCURVE",
"278 459 QCURVE",
"278 872 LINE",
"225 872 LINE",
"225 274 LINE",
"278 274 LINE",
"286 410 OFFCURVE",
"442 557 OFFCURVE",
"606 557 QCURVE SMOOTH",
"770 557 OFFCURVE",
"936 375 OFFCURVE",
"936 211 QCURVE SMOOTH",
"936 -190 LINE SMOOTH",
"936 -354 OFFCURVE",
"770 -537 OFFCURVE",
"606 -537 QCURVE SMOOTH",
"442 -537 OFFCURVE",
"276 -379 OFFCURVE",
"276 -240 QCURVE SMOOTH",
"276 -168 OFFCURVE",
"309 -33 OFFCURVE",
"409 57 OFFCURVE",
"512 57 QCURVE SMOOTH",
"657 57 LINE",
"657 111 LINE",
"532 111 LINE SMOOTH",
"362 111 OFFCURVE",
"225 -66 OFFCURVE",
"225 -240 QCURVE SMOOTH",
"225 -408 OFFCURVE",
"418 -590 OFFCURVE",
"606 -590 QCURVE",
"606 -590 LINE"
);
}
);
width = 1300;
}
);
note = uni19F6;
unicode = 19F6;
},
{
glyphname = uni19F7;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1093 903 LINE",
"1093 2103 LINE",
"722 2103 LINE",
"716 2013 OFFCURVE",
"657 1862 OFFCURVE",
"563 1767 OFFCURVE",
"503 1767 QCURVE SMOOTH",
"460 1767 OFFCURVE",
"460 1802 QCURVE SMOOTH",
"460 1837 OFFCURVE",
"495 1837 QCURVE SMOOTH",
"505 1837 LINE",
"505 2103 LINE",
"425 2103 LINE SMOOTH",
"311 2103 OFFCURVE",
"169 2028 OFFCURVE",
"108 1903 OFFCURVE",
"108 1825 QCURVE SMOOTH",
"108 1726 OFFCURVE",
"214 1587 OFFCURVE",
"364 1516 OFFCURVE",
"434 1516 QCURVE SMOOTH",
"514 1516 OFFCURVE",
"616 1544 OFFCURVE",
"688 1597 OFFCURVE",
"722 1632 QCURVE",
"722 903 LINE",
"722 903 LINE"
);
},
{
closed = 1;
nodes = (
"614 -590 LINE",
"614 -360 LINE",
"542 -360 LINE",
"542 279 LINE SMOOTH",
"542 299 OFFCURVE",
"552 336 OFFCURVE",
"567 336 QCURVE SMOOTH",
"579 336 OFFCURVE",
"608 305 OFFCURVE",
"632 274 QCURVE SMOOTH",
"657 244 OFFCURVE",
"688 244 QCURVE SMOOTH",
"716 244 OFFCURVE",
"745 274 QCURVE SMOOTH",
"761 293 OFFCURVE",
"794 336 OFFCURVE",
"808 336 QCURVE SMOOTH",
"833 336 OFFCURVE",
"833 279 QCURVE SMOOTH",
"833 -299 LINE SMOOTH",
"833 -373 OFFCURVE",
"925 -506 OFFCURVE",
"1107 -590 OFFCURVE",
"1243 -590 QCURVE SMOOTH",
"1376 -590 OFFCURVE",
"1558 -508 OFFCURVE",
"1648 -377 OFFCURVE",
"1648 -299 QCURVE SMOOTH",
"1648 872 LINE",
"1277 872 LINE",
"1277 -317 LINE SMOOTH",
"1277 -334 OFFCURVE",
"1261 -360 OFFCURVE",
"1241 -360 QCURVE SMOOTH",
"1220 -360 OFFCURVE",
"1204 -334 OFFCURVE",
"1204 -317 QCURVE SMOOTH",
"1204 233 LINE SMOOTH",
"1204 381 OFFCURVE",
"1130 545 OFFCURVE",
"1011 610 OFFCURVE",
"944 610 QCURVE SMOOTH",
"856 610 OFFCURVE",
"741 549 OFFCURVE",
"688 485 QCURVE",
"634 549 OFFCURVE",
"520 610 OFFCURVE",
"419 610 QCURVE SMOOTH",
"360 610 OFFCURVE",
"245 547 OFFCURVE",
"171 397 OFFCURVE",
"171 268 QCURVE SMOOTH",
"171 -590 LINE",
"171 -590 LINE"
);
}
);
width = 1691;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1056 903 LINE",
"1056 2103 LINE",
"757 2103 LINE",
"716 1964 OFFCURVE",
"587 1794 OFFCURVE",
"493 1794 QCURVE SMOOTH",
"432 1794 OFFCURVE",
"432 1841 QCURVE SMOOTH",
"432 1862 OFFCURVE",
"458 1888 OFFCURVE",
"483 1888 QCURVE SMOOTH",
"501 1888 LINE",
"501 2103 LINE",
"432 2103 LINE SMOOTH",
"286 2103 OFFCURVE",
"145 1966 OFFCURVE",
"145 1855 QCURVE SMOOTH",
"145 1774 OFFCURVE",
"231 1653 OFFCURVE",
"368 1587 OFFCURVE",
"446 1587 QCURVE SMOOTH",
"565 1587 OFFCURVE",
"704 1657 OFFCURVE",
"757 1716 QCURVE",
"757 903 LINE",
"757 903 LINE"
);
},
{
closed = 1;
nodes = (
"589 -590 LINE",
"589 -397 LINE",
"481 -397 LINE",
"481 301 LINE SMOOTH",
"481 338 OFFCURVE",
"499 385 OFFCURVE",
"520 385 QCURVE SMOOTH",
"536 385 OFFCURVE",
"577 348 OFFCURVE",
"608 311 QCURVE SMOOTH",
"632 281 OFFCURVE",
"663 281 QCURVE SMOOTH",
"692 281 OFFCURVE",
"720 311 QCURVE SMOOTH",
"747 340 OFFCURVE",
"788 385 OFFCURVE",
"807 385 QCURVE SMOOTH",
"843 385 OFFCURVE",
"843 301 QCURVE SMOOTH",
"843 -317 LINE SMOOTH",
"843 -434 OFFCURVE",
"1024 -590 OFFCURVE",
"1200 -590 QCURVE SMOOTH",
"1374 -590 OFFCURVE",
"1552 -436 OFFCURVE",
"1552 -317 QCURVE SMOOTH",
"1552 872 LINE",
"1253 872 LINE",
"1253 -344 LINE SMOOTH",
"1253 -367 OFFCURVE",
"1224 -397 OFFCURVE",
"1198 -397 QCURVE SMOOTH",
"1173 -397 OFFCURVE",
"1144 -367 OFFCURVE",
"1144 -344 QCURVE SMOOTH",
"1144 272 LINE SMOOTH",
"1144 451 OFFCURVE",
"1003 610 OFFCURVE",
"901 610 QCURVE SMOOTH",
"825 610 OFFCURVE",
"716 549 OFFCURVE",
"663 485 QCURVE",
"610 549 OFFCURVE",
"503 610 OFFCURVE",
"419 610 QCURVE SMOOTH",
"321 610 OFFCURVE",
"182 455 OFFCURVE",
"182 293 QCURVE SMOOTH",
"182 -590 LINE",
"182 -590 LINE"
);
}
);
width = 1654;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1050 333 LINE SMOOTH",
"1050 446 OFFCURVE",
"980 528 QCURVE SMOOTH",
"909 610 OFFCURVE",
"821 610 QCURVE SMOOTH",
"731 610 OFFCURVE",
"625 486 QCURVE",
"520 610 OFFCURVE",
"431 610 QCURVE SMOOTH",
"342 610 OFFCURVE",
"271 528 QCURVE SMOOTH",
"200 446 OFFCURVE",
"200 333 QCURVE SMOOTH",
"200 -590 LINE",
"550 -590 LINE",
"550 -452 LINE",
"388 -452 LINE",
"388 333 LINE SMOOTH",
"388 460 OFFCURVE",
"447 460 QCURVE SMOOTH",
"493 460 OFFCURVE",
"569 366 QCURVE SMOOTH",
"595 335 OFFCURVE",
"625 335 QCURVE SMOOTH",
"655 335 OFFCURVE",
"681 366 QCURVE SMOOTH",
"758 460 OFFCURVE",
"804 460 QCURVE SMOOTH",
"862 460 OFFCURVE",
"862 333 QCURVE SMOOTH",
"862 -452 LINE SMOOTH",
"862 -590 OFFCURVE",
"1125 -590 QCURVE SMOOTH",
"1400 -590 OFFCURVE",
"1400 -452 QCURVE SMOOTH",
"1400 910 LINE",
"1212 910 LINE",
"1212 -452 LINE",
"1050 -452 LINE",
"1050 -452 LINE"
);
},
{
closed = 1;
nodes = (
"495 1862 LINE",
"495 2000 LINE",
"442 2000 LINE SMOOTH",
"200 2000 OFFCURVE",
"200 1820 QCURVE SMOOTH",
"200 1600 OFFCURVE",
"466 1600 QCURVE SMOOTH",
"703 1600 OFFCURVE",
"812 1746 QCURVE",
"812 800 LINE",
"1000 800 LINE",
"1000 2000 LINE",
"812 2000 LINE",
"728 1869 LINE SMOOTH",
"643 1738 OFFCURVE",
"466 1738 QCURVE SMOOTH",
"388 1738 OFFCURVE",
"388 1820 QCURVE SMOOTH",
"388 1862 OFFCURVE",
"442 1862 QCURVE",
"442 1862 LINE"
);
}
);
width = 1600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"966 903 LINE",
"966 2103 LINE",
"843 2103 LINE",
"771 1980 OFFCURVE",
"597 1810 OFFCURVE",
"484 1810 QCURVE SMOOTH",
"411 1810 OFFCURVE",
"353 1882 OFFCURVE",
"353 1919 QCURVE SMOOTH",
"353 1950 OFFCURVE",
"409 2009 OFFCURVE",
"470 2009 QCURVE SMOOTH",
"497 2009 LINE",
"497 2103 LINE",
"470 2103 LINE SMOOTH",
"359 2103 OFFCURVE",
"235 2009 OFFCURVE",
"235 1915 QCURVE SMOOTH",
"235 1829 OFFCURVE",
"362 1714 OFFCURVE",
"478 1714 QCURVE SMOOTH",
"558 1714 OFFCURVE",
"695 1778 OFFCURVE",
"806 1874 OFFCURVE",
"843 1927 QCURVE",
"843 903 LINE",
"843 903 LINE"
);
},
{
closed = 1;
nodes = (
"529 -590 LINE",
"529 -496 LINE",
"331 -496 LINE",
"331 385 LINE SMOOTH",
"331 446 OFFCURVE",
"376 508 OFFCURVE",
"415 508 QCURVE SMOOTH",
"470 508 OFFCURVE",
"548 410 QCURVE SMOOTH",
"570 381 OFFCURVE",
"603 381 QCURVE SMOOTH",
"634 381 OFFCURVE",
"661 410 QCURVE SMOOTH",
"699 455 OFFCURVE",
"763 508 OFFCURVE",
"796 508 QCURVE SMOOTH",
"835 508 OFFCURVE",
"876 444 OFFCURVE",
"876 387 QCURVE SMOOTH",
"876 -393 LINE SMOOTH",
"876 -496 OFFCURVE",
"990 -590 OFFCURVE",
"1093 -590 QCURVE SMOOTH",
"1195 -590 OFFCURVE",
"1312 -496 OFFCURVE",
"1312 -393 QCURVE SMOOTH",
"1312 872 LINE",
"1191 872 LINE",
"1191 -418 LINE SMOOTH",
"1191 -459 OFFCURVE",
"1134 -496 OFFCURVE",
"1093 -496 QCURVE SMOOTH",
"1056 -496 OFFCURVE",
"994 -459 OFFCURVE",
"994 -418 QCURVE SMOOTH",
"994 369 LINE SMOOTH",
"994 475 OFFCURVE",
"898 610 OFFCURVE",
"814 610 QCURVE SMOOTH",
"759 610 OFFCURVE",
"656 543 OFFCURVE",
"603 479 QCURVE",
"552 543 OFFCURVE",
"454 610 OFFCURVE",
"396 610 QCURVE SMOOTH",
"306 610 OFFCURVE",
"212 479 OFFCURVE",
"212 377 QCURVE SMOOTH",
"212 -590 LINE",
"212 -590 LINE"
);
}
);
width = 1564;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"932 903 LINE",
"932 2103 LINE",
"878 2103 LINE",
"839 2040 OFFCURVE",
"725 1892 OFFCURVE",
"577 1786 OFFCURVE",
"493 1786 QCURVE SMOOTH",
"426 1786 OFFCURVE",
"352 1833 OFFCURVE",
"321 1901 OFFCURVE",
"321 1931 QCURVE SMOOTH",
"321 1968 OFFCURVE",
"393 2050 OFFCURVE",
"481 2050 QCURVE SMOOTH",
"499 2050 LINE",
"499 2103 LINE",
"497 2103 LINE SMOOTH",
"383 2103 OFFCURVE",
"268 2009 OFFCURVE",
"268 1929 QCURVE SMOOTH",
"268 1833 OFFCURVE",
"397 1733 OFFCURVE",
"491 1733 QCURVE SMOOTH",
"577 1733 OFFCURVE",
"725 1823 OFFCURVE",
"839 1948 OFFCURVE",
"878 2005 QCURVE",
"878 903 LINE",
"878 903 LINE"
);
},
{
closed = 1;
nodes = (
"510 -590 LINE",
"510 -537 LINE",
"278 -537 LINE",
"278 436 LINE SMOOTH",
"278 496 OFFCURVE",
"338 557 OFFCURVE",
"385 557 QCURVE SMOOTH",
"424 557 OFFCURVE",
"489 502 OFFCURVE",
"528 455 QCURVE SMOOTH",
"553 424 OFFCURVE",
"583 424 QCURVE SMOOTH",
"614 424 OFFCURVE",
"641 455 QCURVE SMOOTH",
"680 500 OFFCURVE",
"749 557 OFFCURVE",
"788 557 QCURVE SMOOTH",
"835 557 OFFCURVE",
"889 489 OFFCURVE",
"889 440 QCURVE SMOOTH",
"889 -442 LINE SMOOTH",
"889 -520 OFFCURVE",
"985 -590 OFFCURVE",
"1056 -590 QCURVE SMOOTH",
"1128 -590 OFFCURVE",
"1224 -520 OFFCURVE",
"1224 -442 QCURVE SMOOTH",
"1224 872 LINE",
"1171 872 LINE",
"1171 -449 LINE SMOOTH",
"1171 -500 OFFCURVE",
"1102 -537 OFFCURVE",
"1056 -537 QCURVE SMOOTH",
"1011 -537 OFFCURVE",
"942 -500 OFFCURVE",
"942 -449 QCURVE SMOOTH",
"942 403 LINE SMOOTH",
"942 610 OFFCURVE",
"792 610 QCURVE SMOOTH",
"739 610 OFFCURVE",
"637 537 OFFCURVE",
"583 473 QCURVE",
"532 537 OFFCURVE",
"430 610 OFFCURVE",
"377 610 QCURVE SMOOTH",
"307 610 OFFCURVE",
"225 512 OFFCURVE",
"225 418 QCURVE SMOOTH",
"225 -590 LINE",
"225 -590 LINE"
);
}
);
width = 1531;
}
);
note = uni19F7;
unicode = 19F7;
},
{
glyphname = uni19F8;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1093 903 LINE",
"1093 2103 LINE",
"722 2103 LINE",
"716 2013 OFFCURVE",
"657 1862 OFFCURVE",
"563 1767 OFFCURVE",
"503 1767 QCURVE SMOOTH",
"460 1767 OFFCURVE",
"460 1802 QCURVE SMOOTH",
"460 1837 OFFCURVE",
"495 1837 QCURVE SMOOTH",
"505 1837 LINE",
"505 2103 LINE",
"425 2103 LINE SMOOTH",
"311 2103 OFFCURVE",
"169 2028 OFFCURVE",
"108 1903 OFFCURVE",
"108 1825 QCURVE SMOOTH",
"108 1726 OFFCURVE",
"214 1587 OFFCURVE",
"364 1516 OFFCURVE",
"434 1516 QCURVE SMOOTH",
"514 1516 OFFCURVE",
"616 1544 OFFCURVE",
"688 1597 OFFCURVE",
"722 1632 QCURVE",
"722 903 LINE",
"722 903 LINE"
);
},
{
closed = 1;
nodes = (
"483 -590 LINE",
"714 -420 LINE",
"946 -590 LINE",
"1257 -590 LINE",
"1257 27 LINE SMOOTH",
"1257 82 OFFCURVE",
"1236 160 OFFCURVE",
"1163 201 OFFCURVE",
"1081 201 QCURVE SMOOTH",
"784 201 LINE",
"784 -29 LINE",
"835 -29 LINE SMOOTH",
"862 -29 OFFCURVE",
"886 -49 OFFCURVE",
"886 -90 QCURVE SMOOTH",
"886 -252 LINE",
"714 -117 LINE",
"542 -254 LINE",
"542 291 LINE SMOOTH",
"542 381 OFFCURVE",
"712 381 QCURVE SMOOTH",
"886 381 OFFCURVE",
"886 291 QCURVE",
"1255 291 LINE",
"1255 872 LINE",
"886 872 LINE",
"886 557 LINE",
"790 610 OFFCURVE",
"606 610 QCURVE SMOOTH",
"171 610 OFFCURVE",
"171 291 QCURVE SMOOTH",
"171 -590 LINE",
"171 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1056 903 LINE",
"1056 2103 LINE",
"757 2103 LINE",
"716 1964 OFFCURVE",
"587 1794 OFFCURVE",
"493 1794 QCURVE SMOOTH",
"432 1794 OFFCURVE",
"432 1841 QCURVE SMOOTH",
"432 1862 OFFCURVE",
"458 1888 OFFCURVE",
"483 1888 QCURVE SMOOTH",
"501 1888 LINE",
"501 2103 LINE",
"432 2103 LINE SMOOTH",
"286 2103 OFFCURVE",
"145 1966 OFFCURVE",
"145 1855 QCURVE SMOOTH",
"145 1774 OFFCURVE",
"231 1653 OFFCURVE",
"368 1587 OFFCURVE",
"446 1587 QCURVE SMOOTH",
"565 1587 OFFCURVE",
"704 1657 OFFCURVE",
"757 1716 QCURVE",
"757 903 LINE",
"757 903 LINE"
);
},
{
closed = 1;
nodes = (
"458 -590 LINE",
"690 -403 LINE",
"921 -590 LINE",
"1196 -590 LINE",
"1196 37 LINE SMOOTH",
"1196 111 OFFCURVE",
"1138 184 OFFCURVE",
"1044 184 QCURVE SMOOTH",
"743 184 LINE",
"743 -8 LINE",
"845 -8 LINE SMOOTH",
"872 -8 OFFCURVE",
"897 -31 OFFCURVE",
"897 -66 QCURVE SMOOTH",
"897 -317 LINE",
"690 -143 LINE",
"481 -319 LINE",
"481 291 LINE SMOOTH",
"481 418 OFFCURVE",
"688 418 QCURVE SMOOTH",
"897 418 OFFCURVE",
"897 291 QCURVE",
"1194 291 LINE",
"1194 872 LINE",
"897 872 LINE",
"897 557 LINE",
"786 610 OFFCURVE",
"622 610 QCURVE SMOOTH",
"182 610 OFFCURVE",
"182 291 QCURVE SMOOTH",
"182 -590 LINE",
"182 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1000 2000 LINE",
"812 2000 LINE",
"728 1869 LINE SMOOTH",
"643 1738 OFFCURVE",
"466 1738 QCURVE SMOOTH",
"388 1738 OFFCURVE",
"388 1820 QCURVE SMOOTH",
"388 1862 OFFCURVE",
"442 1862 QCURVE SMOOTH",
"495 1862 LINE",
"495 2000 LINE",
"442 2000 LINE SMOOTH",
"200 2000 OFFCURVE",
"200 1820 QCURVE SMOOTH",
"200 1600 OFFCURVE",
"466 1600 QCURVE SMOOTH",
"703 1600 OFFCURVE",
"812 1746 QCURVE",
"812 800 LINE",
"912 800 LINE",
"912 556 LINE",
"784 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 290 QCURVE SMOOTH",
"200 -590 LINE",
"419 -590 LINE",
"651 -380 LINE",
"882 -590 LINE",
"1100 -590 LINE",
"1100 -70 LINE SMOOTH",
"1100 160 OFFCURVE",
"860 160 QCURVE SMOOTH",
"680 160 LINE",
"680 10 LINE",
"860 10 LINE SMOOTH",
"912 10 OFFCURVE",
"912 -70 QCURVE SMOOTH",
"912 -423 LINE",
"651 -185 LINE",
"388 -424 LINE",
"388 290 LINE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 290 QCURVE",
"1100 290 LINE",
"1100 960 LINE",
"1000 960 LINE",
"1000 960 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"966 903 LINE",
"966 2103 LINE",
"843 2103 LINE",
"771 1980 OFFCURVE",
"597 1810 OFFCURVE",
"484 1810 QCURVE SMOOTH",
"411 1810 OFFCURVE",
"353 1882 OFFCURVE",
"353 1919 QCURVE SMOOTH",
"353 1950 OFFCURVE",
"409 2009 OFFCURVE",
"470 2009 QCURVE SMOOTH",
"497 2009 LINE",
"497 2103 LINE",
"470 2103 LINE SMOOTH",
"359 2103 OFFCURVE",
"235 2009 OFFCURVE",
"235 1915 QCURVE SMOOTH",
"235 1829 OFFCURVE",
"362 1714 OFFCURVE",
"478 1714 QCURVE SMOOTH",
"558 1714 OFFCURVE",
"695 1778 OFFCURVE",
"806 1874 OFFCURVE",
"843 1927 QCURVE",
"843 903 LINE",
"843 903 LINE"
);
},
{
closed = 1;
nodes = (
"359 -590 LINE",
"630 -365 LINE",
"896 -590 LINE",
"1043 -590 LINE",
"1043 45 LINE SMOOTH",
"1043 139 OFFCURVE",
"941 139 QCURVE SMOOTH",
"658 139 LINE",
"658 45 LINE",
"871 45 LINE SMOOTH",
"904 45 OFFCURVE",
"925 12 OFFCURVE",
"925 -20 QCURVE SMOOTH",
"925 -481 LINE",
"630 -233 LINE",
"331 -483 LINE",
"331 291 LINE SMOOTH",
"331 397 OFFCURVE",
"484 516 OFFCURVE",
"632 516 QCURVE SMOOTH",
"925 516 OFFCURVE",
"925 291 QCURVE",
"1043 291 LINE",
"1043 872 LINE",
"925 872 LINE",
"925 522 LINE",
"876 557 OFFCURVE",
"726 610 OFFCURVE",
"632 610 QCURVE SMOOTH",
"431 610 OFFCURVE",
"212 451 OFFCURVE",
"212 291 QCURVE SMOOTH",
"212 -590 LINE",
"212 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"932 903 LINE",
"932 2103 LINE",
"878 2103 LINE",
"839 2040 OFFCURVE",
"725 1892 OFFCURVE",
"577 1786 OFFCURVE",
"493 1786 QCURVE SMOOTH",
"426 1786 OFFCURVE",
"352 1833 OFFCURVE",
"321 1901 OFFCURVE",
"321 1931 QCURVE SMOOTH",
"321 1968 OFFCURVE",
"393 2050 OFFCURVE",
"481 2050 QCURVE SMOOTH",
"499 2050 LINE",
"499 2103 LINE",
"497 2103 LINE SMOOTH",
"383 2103 OFFCURVE",
"268 2009 OFFCURVE",
"268 1929 QCURVE SMOOTH",
"268 1833 OFFCURVE",
"397 1733 OFFCURVE",
"491 1733 QCURVE SMOOTH",
"577 1733 OFFCURVE",
"725 1823 OFFCURVE",
"839 1948 OFFCURVE",
"878 2005 QCURVE",
"878 903 LINE",
"878 903 LINE"
);
},
{
closed = 1;
nodes = (
"303 -590 LINE",
"610 -348 LINE",
"913 -590 LINE",
"991 -590 LINE",
"991 37 LINE SMOOTH",
"991 78 OFFCURVE",
"950 119 OFFCURVE",
"899 119 QCURVE SMOOTH",
"639 119 LINE",
"639 66 LINE",
"884 66 LINE SMOOTH",
"923 66 OFFCURVE",
"938 25 OFFCURVE",
"938 -16 QCURVE SMOOTH",
"938 -541 LINE",
"610 -283 LINE",
"278 -543 LINE",
"278 291 LINE SMOOTH",
"278 416 OFFCURVE",
"452 557 OFFCURVE",
"616 557 QCURVE SMOOTH",
"780 557 OFFCURVE",
"938 428 OFFCURVE",
"938 291 QCURVE",
"991 291 LINE",
"991 872 LINE",
"938 872 LINE",
"938 487 LINE",
"905 532 OFFCURVE",
"737 610 OFFCURVE",
"616 610 QCURVE SMOOTH",
"440 610 OFFCURVE",
"225 451 OFFCURVE",
"225 291 QCURVE SMOOTH",
"225 -590 LINE",
"225 -590 LINE"
);
}
);
width = 1300;
}
);
note = uni19F8;
unicode = 19F8;
},
{
glyphname = uni19F9;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1093 903 LINE",
"1093 2103 LINE",
"722 2103 LINE",
"716 2013 OFFCURVE",
"657 1862 OFFCURVE",
"563 1767 OFFCURVE",
"503 1767 QCURVE SMOOTH",
"460 1767 OFFCURVE",
"460 1802 QCURVE SMOOTH",
"460 1837 OFFCURVE",
"495 1837 QCURVE SMOOTH",
"505 1837 LINE",
"505 2103 LINE",
"425 2103 LINE SMOOTH",
"311 2103 OFFCURVE",
"169 2028 OFFCURVE",
"108 1903 OFFCURVE",
"108 1825 QCURVE SMOOTH",
"108 1726 OFFCURVE",
"214 1587 OFFCURVE",
"364 1516 OFFCURVE",
"434 1516 QCURVE SMOOTH",
"514 1516 OFFCURVE",
"616 1544 OFFCURVE",
"688 1597 OFFCURVE",
"722 1632 QCURVE",
"722 903 LINE",
"722 903 LINE"
);
},
{
closed = 1;
nodes = (
"985 -590 OFFCURVE",
"1234 -426 OFFCURVE",
"1234 -297 QCURVE SMOOTH",
"1234 -180 OFFCURVE",
"1077 -59 OFFCURVE",
"888 -59 QCURVE SMOOTH",
"737 -59 LINE",
"737 -225 LINE",
"761 -225 LINE SMOOTH",
"806 -225 OFFCURVE",
"866 -250 OFFCURVE",
"866 -285 QCURVE SMOOTH",
"866 -328 OFFCURVE",
"774 -360 OFFCURVE",
"696 -360 QCURVE SMOOTH",
"626 -360 OFFCURVE",
"542 -326 OFFCURVE",
"542 -291 QCURVE SMOOTH",
"542 -111 LINE SMOOTH",
"542 -49 OFFCURVE",
"616 2 OFFCURVE",
"667 2 QCURVE SMOOTH",
"1013 2 LINE",
"1013 231 LINE",
"618 231 LINE SMOOTH",
"587 231 OFFCURVE",
"538 260 OFFCURVE",
"538 301 QCURVE SMOOTH",
"538 356 OFFCURVE",
"643 403 OFFCURVE",
"716 403 QCURVE SMOOTH",
"802 403 OFFCURVE",
"872 371 OFFCURVE",
"886 352 QCURVE",
"1255 352 LINE",
"1255 872 LINE",
"886 872 LINE",
"886 571 LINE",
"860 590 OFFCURVE",
"737 631 OFFCURVE",
"624 631 QCURVE SMOOTH",
"399 631 OFFCURVE",
"171 465 OFFCURVE",
"171 330 QCURVE SMOOTH",
"171 248 OFFCURVE",
"251 147 OFFCURVE",
"346 125 QCURVE",
"251 102 OFFCURVE",
"171 -27 OFFCURVE",
"171 -135 QCURVE SMOOTH",
"171 -260 LINE SMOOTH",
"171 -408 OFFCURVE",
"442 -590 OFFCURVE",
"712 -590 QCURVE",
"712 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1056 903 LINE",
"1056 2103 LINE",
"757 2103 LINE",
"716 1964 OFFCURVE",
"587 1794 OFFCURVE",
"493 1794 QCURVE SMOOTH",
"432 1794 OFFCURVE",
"432 1841 QCURVE SMOOTH",
"432 1862 OFFCURVE",
"458 1888 OFFCURVE",
"483 1888 QCURVE SMOOTH",
"501 1888 LINE",
"501 2103 LINE",
"432 2103 LINE SMOOTH",
"286 2103 OFFCURVE",
"145 1966 OFFCURVE",
"145 1855 QCURVE SMOOTH",
"145 1774 OFFCURVE",
"231 1653 OFFCURVE",
"368 1587 OFFCURVE",
"446 1587 QCURVE SMOOTH",
"565 1587 OFFCURVE",
"704 1657 OFFCURVE",
"757 1716 QCURVE",
"757 903 LINE",
"757 903 LINE"
);
},
{
closed = 1;
nodes = (
"942 -590 OFFCURVE",
"1181 -430 OFFCURVE",
"1181 -297 QCURVE SMOOTH",
"1181 -180 OFFCURVE",
"1017 -57 OFFCURVE",
"833 -57 QCURVE SMOOTH",
"702 -57 LINE",
"702 -209 LINE",
"757 -209 LINE SMOOTH",
"815 -209 OFFCURVE",
"884 -246 OFFCURVE",
"884 -287 QCURVE SMOOTH",
"884 -344 OFFCURVE",
"776 -397 OFFCURVE",
"677 -397 QCURVE SMOOTH",
"583 -397 OFFCURVE",
"483 -344 OFFCURVE",
"483 -291 QCURVE SMOOTH",
"483 -92 LINE SMOOTH",
"483 -33 OFFCURVE",
"555 20 OFFCURVE",
"618 20 QCURVE SMOOTH",
"989 20 LINE",
"989 215 LINE",
"589 215 LINE SMOOTH",
"536 215 OFFCURVE",
"479 256 OFFCURVE",
"479 305 QCURVE SMOOTH",
"479 371 OFFCURVE",
"594 430 OFFCURVE",
"690 430 QCURVE SMOOTH",
"794 430 OFFCURVE",
"888 387 OFFCURVE",
"897 352 QCURVE",
"1194 352 LINE",
"1194 872 LINE",
"897 872 LINE",
"897 571 LINE",
"856 590 OFFCURVE",
"729 623 OFFCURVE",
"634 623 QCURVE SMOOTH",
"413 623 OFFCURVE",
"182 467 OFFCURVE",
"182 330 QCURVE SMOOTH",
"182 246 OFFCURVE",
"266 143 OFFCURVE",
"342 123 QCURVE",
"266 102 OFFCURVE",
"182 -18 OFFCURVE",
"182 -125 QCURVE SMOOTH",
"182 -264 LINE SMOOTH",
"182 -418 OFFCURVE",
"436 -590 OFFCURVE",
"688 -590 QCURVE",
"688 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"1000 2000 LINE",
"812 2000 LINE",
"728 1869 LINE SMOOTH",
"643 1738 OFFCURVE",
"466 1738 QCURVE SMOOTH",
"388 1738 OFFCURVE",
"388 1820 QCURVE SMOOTH",
"388 1862 OFFCURVE",
"442 1862 QCURVE SMOOTH",
"495 1862 LINE",
"495 2000 LINE",
"442 2000 LINE SMOOTH",
"200 2000 OFFCURVE",
"200 1820 QCURVE SMOOTH",
"200 1600 OFFCURVE",
"466 1600 QCURVE SMOOTH",
"703 1600 OFFCURVE",
"812 1746 QCURVE",
"812 800 LINE",
"912 800 LINE",
"912 572 LINE",
"784 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 312 QCURVE",
"239 169 OFFCURVE",
"338 125 QCURVE",
"239 82 OFFCURVE",
"200 -64 QCURVE",
"200 -290 LINE SMOOTH",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1100 -590 OFFCURVE",
"1100 -297 QCURVE SMOOTH",
"1100 -64 OFFCURVE",
"750 -64 QCURVE SMOOTH",
"650 -64 LINE",
"650 -192 LINE",
"750 -192 LINE SMOOTH",
"912 -192 OFFCURVE",
"912 -292 QCURVE SMOOTH",
"912 -452 OFFCURVE",
"650 -452 QCURVE SMOOTH",
"388 -452 OFFCURVE",
"388 -290 QCURVE SMOOTH",
"388 -64 LINE SMOOTH",
"388 52 OFFCURVE",
"650 52 QCURVE SMOOTH",
"950 52 LINE",
"950 190 LINE",
"650 190 LINE SMOOTH",
"388 190 OFFCURVE",
"388 312 QCURVE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 352 QCURVE",
"1100 352 LINE",
"1100 920 LINE",
"1000 920 LINE",
"1000 920 LINE"
);
}
);
width = 1300;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"966 903 LINE",
"966 2103 LINE",
"843 2103 LINE",
"771 1980 OFFCURVE",
"597 1810 OFFCURVE",
"484 1810 QCURVE SMOOTH",
"411 1810 OFFCURVE",
"353 1882 OFFCURVE",
"353 1919 QCURVE SMOOTH",
"353 1950 OFFCURVE",
"409 2009 OFFCURVE",
"470 2009 QCURVE SMOOTH",
"497 2009 LINE",
"497 2103 LINE",
"470 2103 LINE SMOOTH",
"359 2103 OFFCURVE",
"235 2009 OFFCURVE",
"235 1915 QCURVE SMOOTH",
"235 1829 OFFCURVE",
"362 1714 OFFCURVE",
"478 1714 QCURVE SMOOTH",
"558 1714 OFFCURVE",
"695 1778 OFFCURVE",
"806 1874 OFFCURVE",
"843 1927 QCURVE",
"843 903 LINE",
"843 903 LINE"
);
},
{
closed = 1;
nodes = (
"839 -590 OFFCURVE",
"1046 -428 OFFCURVE",
"1046 -299 QCURVE SMOOTH",
"1046 -180 OFFCURVE",
"876 -78 OFFCURVE",
"728 -78 QCURVE SMOOTH",
"630 -78 LINE",
"630 -168 LINE",
"728 -168 LINE SMOOTH",
"826 -168 OFFCURVE",
"925 -229 OFFCURVE",
"925 -299 QCURVE SMOOTH",
"925 -391 OFFCURVE",
"781 -496 OFFCURVE",
"630 -496 QCURVE SMOOTH",
"482 -496 OFFCURVE",
"335 -389 OFFCURVE",
"335 -291 QCURVE SMOOTH",
"335 -61 LINE SMOOTH",
"335 0 OFFCURVE",
"400 72 OFFCURVE",
"464 72 QCURVE SMOOTH",
"929 72 LINE",
"929 168 LINE",
"462 168 LINE SMOOTH",
"398 168 OFFCURVE",
"331 254 OFFCURVE",
"331 311 QCURVE SMOOTH",
"331 412 OFFCURVE",
"486 516 OFFCURVE",
"630 516 QCURVE SMOOTH",
"783 516 OFFCURVE",
"925 434 OFFCURVE",
"925 352 QCURVE",
"1046 352 LINE",
"1046 872 LINE",
"925 872 LINE",
"925 545 LINE",
"857 584 OFFCURVE",
"710 610 OFFCURVE",
"630 610 QCURVE SMOOTH",
"511 610 OFFCURVE",
"323 549 OFFCURVE",
"212 422 OFFCURVE",
"212 324 QCURVE SMOOTH",
"212 238 OFFCURVE",
"288 143 OFFCURVE",
"318 119 QCURVE",
"275 90 OFFCURVE",
"214 -8 OFFCURVE",
"214 -86 QCURVE SMOOTH",
"214 -279 LINE SMOOTH",
"214 -436 OFFCURVE",
"427 -590 OFFCURVE",
"630 -590 QCURVE",
"630 -590 LINE"
);
}
);
width = 1300;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"932 903 LINE",
"932 2103 LINE",
"878 2103 LINE",
"839 2040 OFFCURVE",
"725 1892 OFFCURVE",
"577 1786 OFFCURVE",
"493 1786 QCURVE SMOOTH",
"426 1786 OFFCURVE",
"352 1833 OFFCURVE",
"321 1901 OFFCURVE",
"321 1931 QCURVE SMOOTH",
"321 1968 OFFCURVE",
"393 2050 OFFCURVE",
"481 2050 QCURVE SMOOTH",
"499 2050 LINE",
"499 2103 LINE",
"497 2103 LINE SMOOTH",
"383 2103 OFFCURVE",
"268 2009 OFFCURVE",
"268 1929 QCURVE SMOOTH",
"268 1833 OFFCURVE",
"397 1733 OFFCURVE",
"491 1733 QCURVE SMOOTH",
"577 1733 OFFCURVE",
"725 1823 OFFCURVE",
"839 1948 OFFCURVE",
"878 2005 QCURVE",
"878 903 LINE",
"878 903 LINE"
);
},
{
closed = 1;
nodes = (
"803 -590 OFFCURVE",
"993 -426 OFFCURVE",
"993 -299 QCURVE SMOOTH",
"993 -221 OFFCURVE",
"917 -133 OFFCURVE",
"790 -98 OFFCURVE",
"710 -98 QCURVE SMOOTH",
"610 -98 LINE",
"610 -152 LINE",
"710 -152 LINE SMOOTH",
"825 -152 OFFCURVE",
"940 -217 OFFCURVE",
"940 -307 QCURVE SMOOTH",
"940 -410 OFFCURVE",
"780 -537 OFFCURVE",
"610 -537 QCURVE SMOOTH",
"446 -537 OFFCURVE",
"282 -406 OFFCURVE",
"282 -291 QCURVE SMOOTH",
"282 -61 LINE SMOOTH",
"282 8 OFFCURVE",
"344 92 OFFCURVE",
"389 92 QCURVE SMOOTH",
"911 92 LINE",
"911 145 LINE",
"383 145 LINE SMOOTH",
"342 145 OFFCURVE",
"278 254 OFFCURVE",
"278 313 QCURVE SMOOTH",
"278 430 OFFCURVE",
"454 557 OFFCURVE",
"610 557 QCURVE SMOOTH",
"786 557 OFFCURVE",
"940 455 OFFCURVE",
"940 352 QCURVE",
"993 352 LINE",
"993 872 LINE",
"940 872 LINE",
"940 518 LINE",
"868 575 OFFCURVE",
"702 610 OFFCURVE",
"610 610 QCURVE SMOOTH",
"514 610 OFFCURVE",
"338 551 OFFCURVE",
"225 422 OFFCURVE",
"225 315 QCURVE SMOOTH",
"225 258 OFFCURVE",
"256 182 OFFCURVE",
"291 135 OFFCURVE",
"299 119 QCURVE",
"229 43 OFFCURVE",
"229 -63 QCURVE SMOOTH",
"229 -291 LINE SMOOTH",
"229 -440 OFFCURVE",
"432 -590 OFFCURVE",
"610 -590 QCURVE",
"610 -590 LINE"
);
}
);
width = 1300;
}
);
note = uni19F9;
unicode = 19F9;
},
{
glyphname = uni19FA;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1694 801 LINE",
"1694 2001 LINE",
"1323 2001 LINE",
"1317 1911 OFFCURVE",
"1257 1759 OFFCURVE",
"1163 1665 OFFCURVE",
"1104 1665 QCURVE SMOOTH",
"1061 1665 OFFCURVE",
"1061 1700 QCURVE SMOOTH",
"1061 1735 OFFCURVE",
"1096 1735 QCURVE SMOOTH",
"1106 1735 LINE",
"1106 2001 LINE",
"1026 2001 LINE SMOOTH",
"911 2001 OFFCURVE",
"770 1925 OFFCURVE",
"709 1800 OFFCURVE",
"709 1722 QCURVE SMOOTH",
"709 1624 OFFCURVE",
"815 1485 OFFCURVE",
"965 1413 OFFCURVE",
"1034 1413 QCURVE SMOOTH",
"1114 1413 OFFCURVE",
"1216 1442 OFFCURVE",
"1288 1495 OFFCURVE",
"1323 1530 QCURVE",
"1323 801 LINE",
"1323 801 LINE"
);
},
{
closed = 1;
nodes = (
"2554 -590 OFFCURVE",
"2554 -209 QCURVE SMOOTH",
"2554 229 LINE SMOOTH",
"2554 610 OFFCURVE",
"2011 610 QCURVE SMOOTH",
"1470 610 OFFCURVE",
"1470 229 QCURVE SMOOTH",
"1470 -209 LINE SMOOTH",
"1470 -590 OFFCURVE",
"2011 -590 QCURVE",
"2011 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1841 -360 OFFCURVE",
"1841 -209 QCURVE SMOOTH",
"1841 229 LINE SMOOTH",
"1841 381 OFFCURVE",
"2011 381 QCURVE SMOOTH",
"2185 381 OFFCURVE",
"2185 229 QCURVE SMOOTH",
"2185 -209 LINE SMOOTH",
"2185 -360 OFFCURVE",
"2011 -360 QCURVE",
"2011 -360 LINE"
);
},
{
closed = 1;
nodes = (
"1255 -590 OFFCURVE",
"1255 -270 QCURVE SMOOTH",
"1255 291 LINE SMOOTH",
"1255 610 OFFCURVE",
"713 610 QCURVE SMOOTH",
"172 610 OFFCURVE",
"172 291 QCURVE SMOOTH",
"172 170 LINE SMOOTH",
"172 66 OFFCURVE",
"254 -39 OFFCURVE",
"393 -74 OFFCURVE",
"479 -74 QCURVE SMOOTH",
"713 -74 LINE",
"713 193 LINE",
"623 193 LINE SMOOTH",
"563 193 OFFCURVE",
"543 246 OFFCURVE",
"543 272 QCURVE SMOOTH",
"543 291 LINE SMOOTH",
"543 381 OFFCURVE",
"713 381 QCURVE SMOOTH",
"887 381 OFFCURVE",
"887 291 QCURVE SMOOTH",
"887 -270 LINE SMOOTH",
"887 -360 OFFCURVE",
"713 -360 QCURVE SMOOTH",
"543 -360 OFFCURVE",
"543 -268 QCURVE",
"172 -268 LINE",
"172 -590 OFFCURVE",
"713 -590 QCURVE",
"713 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1657 801 LINE",
"1657 2001 LINE",
"1358 2001 LINE",
"1317 1862 OFFCURVE",
"1188 1692 OFFCURVE",
"1093 1692 QCURVE SMOOTH",
"1032 1692 OFFCURVE",
"1032 1739 QCURVE SMOOTH",
"1032 1759 OFFCURVE",
"1059 1786 OFFCURVE",
"1083 1786 QCURVE SMOOTH",
"1102 1786 LINE",
"1102 2001 LINE",
"1032 2001 LINE SMOOTH",
"887 2001 OFFCURVE",
"745 1864 OFFCURVE",
"745 1753 QCURVE SMOOTH",
"745 1671 OFFCURVE",
"831 1550 OFFCURVE",
"968 1485 OFFCURVE",
"1046 1485 QCURVE SMOOTH",
"1165 1485 OFFCURVE",
"1304 1554 OFFCURVE",
"1358 1614 QCURVE",
"1358 801 LINE",
"1358 801 LINE"
);
},
{
closed = 1;
nodes = (
"2492 -590 OFFCURVE",
"2492 -209 QCURVE SMOOTH",
"2492 229 LINE SMOOTH",
"2492 610 OFFCURVE",
"1986 610 QCURVE SMOOTH",
"1480 610 OFFCURVE",
"1480 229 QCURVE SMOOTH",
"1480 -209 LINE SMOOTH",
"1480 -590 OFFCURVE",
"1986 -590 QCURVE",
"1986 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1779 -397 OFFCURVE",
"1779 -209 QCURVE SMOOTH",
"1779 229 LINE SMOOTH",
"1779 418 OFFCURVE",
"1986 418 QCURVE SMOOTH",
"2195 418 OFFCURVE",
"2195 229 QCURVE SMOOTH",
"2195 -209 LINE SMOOTH",
"2195 -397 OFFCURVE",
"1986 -397 QCURVE",
"1986 -397 LINE"
);
},
{
closed = 1;
nodes = (
"1194 -590 OFFCURVE",
"1194 -270 QCURVE SMOOTH",
"1194 291 LINE SMOOTH",
"1194 610 OFFCURVE",
"688 610 QCURVE SMOOTH",
"182 610 OFFCURVE",
"182 291 QCURVE SMOOTH",
"182 170 LINE SMOOTH",
"182 29 OFFCURVE",
"354 -72 OFFCURVE",
"493 -72 QCURVE SMOOTH",
"688 -72 LINE",
"688 152 LINE",
"579 152 LINE SMOOTH",
"520 152 OFFCURVE",
"481 201 OFFCURVE",
"481 233 QCURVE SMOOTH",
"481 291 LINE SMOOTH",
"481 418 OFFCURVE",
"688 418 QCURVE SMOOTH",
"897 418 OFFCURVE",
"897 291 QCURVE SMOOTH",
"897 -270 LINE SMOOTH",
"897 -397 OFFCURVE",
"688 -397 QCURVE SMOOTH",
"481 -397 OFFCURVE",
"481 -268 QCURVE",
"182 -268 LINE",
"182 -590 OFFCURVE",
"688 -590 QCURVE",
"688 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 -452 OFFCURVE",
"650 -452 QCURVE SMOOTH",
"388 -452 OFFCURVE",
"388 -270 QCURVE",
"200 -270 LINE",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1100 -590 OFFCURVE",
"1100 -270 QCURVE SMOOTH",
"1100 290 LINE SMOOTH",
"1100 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 290 QCURVE SMOOTH",
"200 170 LINE SMOOTH",
"200 -70 OFFCURVE",
"515 -70 QCURVE SMOOTH",
"650 -70 LINE",
"650 90 LINE",
"515 90 LINE SMOOTH",
"388 90 OFFCURVE",
"388 170 QCURVE SMOOTH",
"388 290 LINE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 290 QCURVE SMOOTH",
"912 -270 LINE",
"912 -270 LINE"
);
},
{
closed = 1;
nodes = (
"1688 230 LINE SMOOTH",
"1688 472 OFFCURVE",
"1950 472 QCURVE SMOOTH",
"2212 472 OFFCURVE",
"2212 230 QCURVE SMOOTH",
"2212 -210 LINE SMOOTH",
"2212 -452 OFFCURVE",
"1950 -452 QCURVE SMOOTH",
"1688 -452 OFFCURVE",
"1688 -210 QCURVE",
"1688 -210 LINE"
);
},
{
closed = 1;
nodes = (
"1500 -210 LINE SMOOTH",
"1500 -590 OFFCURVE",
"1950 -590 QCURVE SMOOTH",
"2400 -590 OFFCURVE",
"2400 -210 QCURVE SMOOTH",
"2400 230 LINE SMOOTH",
"2400 610 OFFCURVE",
"1950 610 QCURVE SMOOTH",
"1500 610 OFFCURVE",
"1500 230 QCURVE",
"1500 230 LINE"
);
},
{
closed = 1;
nodes = (
"1095 1862 LINE",
"1095 2000 LINE",
"1042 2000 LINE SMOOTH",
"800 2000 OFFCURVE",
"800 1820 QCURVE SMOOTH",
"800 1600 OFFCURVE",
"1066 1600 QCURVE SMOOTH",
"1303 1600 OFFCURVE",
"1412 1746 QCURVE",
"1412 800 LINE",
"1600 800 LINE",
"1600 2000 LINE",
"1412 2000 LINE",
"1328 1869 LINE SMOOTH",
"1243 1738 OFFCURVE",
"1066 1738 QCURVE SMOOTH",
"988 1738 OFFCURVE",
"988 1820 QCURVE SMOOTH",
"988 1862 OFFCURVE",
"1042 1862 QCURVE",
"1042 1862 LINE"
);
}
);
width = 2600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1566 852 LINE",
"1566 2052 LINE",
"1443 2052 LINE",
"1371 1929 OFFCURVE",
"1197 1759 OFFCURVE",
"1084 1759 QCURVE SMOOTH",
"1011 1759 OFFCURVE",
"953 1831 OFFCURVE",
"953 1868 QCURVE SMOOTH",
"953 1898 OFFCURVE",
"1009 1958 OFFCURVE",
"1070 1958 QCURVE SMOOTH",
"1097 1958 LINE",
"1097 2052 LINE",
"1070 2052 LINE SMOOTH",
"960 2052 OFFCURVE",
"835 1958 OFFCURVE",
"835 1864 QCURVE SMOOTH",
"835 1778 OFFCURVE",
"962 1663 OFFCURVE",
"1078 1663 QCURVE SMOOTH",
"1158 1663 OFFCURVE",
"1295 1726 OFFCURVE",
"1406 1823 OFFCURVE",
"1443 1876 QCURVE",
"1443 852 LINE",
"1443 852 LINE"
);
},
{
closed = 1;
nodes = (
"2129 -590 OFFCURVE",
"2342 -399 OFFCURVE",
"2342 -209 QCURVE SMOOTH",
"2342 229 LINE SMOOTH",
"2342 420 OFFCURVE",
"2129 610 OFFCURVE",
"1926 610 QCURVE SMOOTH",
"1725 610 OFFCURVE",
"1510 420 OFFCURVE",
"1510 229 QCURVE SMOOTH",
"1510 -209 LINE SMOOTH",
"1510 -399 OFFCURVE",
"1725 -590 OFFCURVE",
"1926 -590 QCURVE",
"1926 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1779 -496 OFFCURVE",
"1629 -348 OFFCURVE",
"1629 -209 QCURVE SMOOTH",
"1629 229 LINE SMOOTH",
"1629 369 OFFCURVE",
"1779 516 OFFCURVE",
"1926 516 QCURVE SMOOTH",
"2076 516 OFFCURVE",
"2223 369 OFFCURVE",
"2223 229 QCURVE SMOOTH",
"2223 -209 LINE SMOOTH",
"2223 -348 OFFCURVE",
"2076 -496 OFFCURVE",
"1926 -496 QCURVE",
"1926 -496 LINE"
);
},
{
closed = 1;
nodes = (
"828 -590 OFFCURVE",
"1043 -428 OFFCURVE",
"1043 -270 QCURVE SMOOTH",
"1043 291 LINE SMOOTH",
"1043 610 OFFCURVE",
"626 610 QCURVE SMOOTH",
"423 610 OFFCURVE",
"212 451 OFFCURVE",
"212 291 QCURVE SMOOTH",
"212 156 LINE SMOOTH",
"212 47 OFFCURVE",
"347 -70 OFFCURVE",
"466 -70 QCURVE SMOOTH",
"626 -70 LINE",
"626 35 LINE",
"466 35 LINE SMOOTH",
"398 35 OFFCURVE",
"331 109 OFFCURVE",
"331 156 QCURVE SMOOTH",
"331 291 LINE SMOOTH",
"331 397 OFFCURVE",
"478 516 OFFCURVE",
"626 516 QCURVE SMOOTH",
"775 516 OFFCURVE",
"923 397 OFFCURVE",
"923 291 QCURVE SMOOTH",
"923 -270 LINE SMOOTH",
"923 -377 OFFCURVE",
"775 -496 OFFCURVE",
"626 -496 QCURVE SMOOTH",
"478 -496 OFFCURVE",
"331 -377 OFFCURVE",
"331 -270 QCURVE",
"212 -270 LINE",
"212 -426 OFFCURVE",
"425 -590 OFFCURVE",
"626 -590 QCURVE",
"626 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1532 903 LINE",
"1532 2103 LINE",
"1478 2103 LINE",
"1439 2040 OFFCURVE",
"1325 1892 OFFCURVE",
"1177 1786 OFFCURVE",
"1093 1786 QCURVE SMOOTH",
"1026 1786 OFFCURVE",
"952 1833 OFFCURVE",
"921 1901 OFFCURVE",
"921 1931 QCURVE SMOOTH",
"921 1968 OFFCURVE",
"993 2050 OFFCURVE",
"1081 2050 QCURVE SMOOTH",
"1099 2050 LINE",
"1099 2103 LINE",
"1097 2103 LINE SMOOTH",
"983 2103 OFFCURVE",
"868 2009 OFFCURVE",
"868 1929 QCURVE SMOOTH",
"868 1833 OFFCURVE",
"997 1733 OFFCURVE",
"1091 1733 QCURVE SMOOTH",
"1177 1733 OFFCURVE",
"1325 1823 OFFCURVE",
"1439 1948 OFFCURVE",
"1478 2005 QCURVE",
"1478 903 LINE",
"1478 903 LINE"
);
},
{
closed = 1;
nodes = (
"2087 -590 OFFCURVE",
"2289 -399 OFFCURVE",
"2289 -209 QCURVE SMOOTH",
"2289 229 LINE SMOOTH",
"2289 420 OFFCURVE",
"2087 610 OFFCURVE",
"1906 610 QCURVE SMOOTH",
"1726 610 OFFCURVE",
"1523 420 OFFCURVE",
"1523 229 QCURVE SMOOTH",
"1523 -209 LINE SMOOTH",
"1523 -399 OFFCURVE",
"1726 -590 OFFCURVE",
"1906 -590 QCURVE",
"1906 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1743 -537 OFFCURVE",
"1577 -365 OFFCURVE",
"1577 -209 QCURVE SMOOTH",
"1577 229 LINE SMOOTH",
"1577 385 OFFCURVE",
"1743 557 OFFCURVE",
"1906 557 QCURVE SMOOTH",
"2070 557 OFFCURVE",
"2236 385 OFFCURVE",
"2236 229 QCURVE SMOOTH",
"2236 -209 LINE SMOOTH",
"2236 -365 OFFCURVE",
"2070 -537 OFFCURVE",
"1906 -537 QCURVE",
"1906 -537 LINE"
);
},
{
closed = 1;
nodes = (
"786 -590 OFFCURVE",
"989 -426 OFFCURVE",
"989 -270 QCURVE SMOOTH",
"989 291 LINE SMOOTH",
"989 446 OFFCURVE",
"790 610 OFFCURVE",
"606 610 QCURVE SMOOTH",
"424 610 OFFCURVE",
"225 451 OFFCURVE",
"225 291 QCURVE SMOOTH",
"225 139 LINE SMOOTH",
"225 43 OFFCURVE",
"340 -70 OFFCURVE",
"422 -70 QCURVE SMOOTH",
"606 -70 LINE",
"606 -16 LINE",
"418 -16 LINE SMOOTH",
"346 -16 OFFCURVE",
"278 86 OFFCURVE",
"278 139 QCURVE SMOOTH",
"278 291 LINE SMOOTH",
"278 416 OFFCURVE",
"442 557 OFFCURVE",
"606 557 QCURVE SMOOTH",
"770 557 OFFCURVE",
"936 416 OFFCURVE",
"936 291 QCURVE SMOOTH",
"936 -270 LINE SMOOTH",
"936 -395 OFFCURVE",
"770 -537 OFFCURVE",
"606 -537 QCURVE SMOOTH",
"442 -537 OFFCURVE",
"278 -395 OFFCURVE",
"278 -270 QCURVE",
"225 -270 LINE",
"225 -426 OFFCURVE",
"430 -590 OFFCURVE",
"606 -590 QCURVE",
"606 -590 LINE"
);
}
);
width = 2600;
}
);
note = uni19FA;
unicode = 19FA;
},
{
glyphname = uni19FB;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1694 801 LINE",
"1694 2001 LINE",
"1323 2001 LINE",
"1317 1911 OFFCURVE",
"1257 1759 OFFCURVE",
"1163 1665 OFFCURVE",
"1104 1665 QCURVE SMOOTH",
"1061 1665 OFFCURVE",
"1061 1700 QCURVE SMOOTH",
"1061 1735 OFFCURVE",
"1096 1735 QCURVE SMOOTH",
"1106 1735 LINE",
"1106 2001 LINE",
"1026 2001 LINE SMOOTH",
"911 2001 OFFCURVE",
"770 1925 OFFCURVE",
"709 1800 OFFCURVE",
"709 1722 QCURVE SMOOTH",
"709 1624 OFFCURVE",
"815 1485 OFFCURVE",
"965 1413 OFFCURVE",
"1034 1413 QCURVE SMOOTH",
"1114 1413 OFFCURVE",
"1216 1442 OFFCURVE",
"1288 1495 OFFCURVE",
"1323 1530 QCURVE",
"1323 801 LINE",
"1323 801 LINE"
);
},
{
closed = 1;
nodes = (
"2556 -590 OFFCURVE",
"2556 -270 QCURVE SMOOTH",
"2556 291 LINE SMOOTH",
"2556 610 OFFCURVE",
"2013 610 QCURVE SMOOTH",
"1472 610 OFFCURVE",
"1472 291 QCURVE SMOOTH",
"1472 170 LINE SMOOTH",
"1472 66 OFFCURVE",
"1554 -39 OFFCURVE",
"1694 -74 OFFCURVE",
"1780 -74 QCURVE SMOOTH",
"2013 -74 LINE",
"2013 193 LINE",
"1923 193 LINE SMOOTH",
"1864 193 OFFCURVE",
"1843 246 OFFCURVE",
"1843 272 QCURVE SMOOTH",
"1843 291 LINE SMOOTH",
"1843 381 OFFCURVE",
"2013 381 QCURVE SMOOTH",
"2187 381 OFFCURVE",
"2187 291 QCURVE SMOOTH",
"2187 -270 LINE SMOOTH",
"2187 -360 OFFCURVE",
"2013 -360 QCURVE SMOOTH",
"1843 -360 OFFCURVE",
"1843 -268 QCURVE",
"1472 -268 LINE",
"1472 -590 OFFCURVE",
"2013 -590 QCURVE",
"2013 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1255 -590 OFFCURVE",
"1255 -270 QCURVE SMOOTH",
"1255 291 LINE SMOOTH",
"1255 610 OFFCURVE",
"713 610 QCURVE SMOOTH",
"172 610 OFFCURVE",
"172 291 QCURVE SMOOTH",
"172 170 LINE SMOOTH",
"172 66 OFFCURVE",
"254 -39 OFFCURVE",
"393 -74 OFFCURVE",
"479 -74 QCURVE SMOOTH",
"713 -74 LINE",
"713 193 LINE",
"623 193 LINE SMOOTH",
"563 193 OFFCURVE",
"543 246 OFFCURVE",
"543 272 QCURVE SMOOTH",
"543 291 LINE SMOOTH",
"543 381 OFFCURVE",
"713 381 QCURVE SMOOTH",
"887 381 OFFCURVE",
"887 291 QCURVE SMOOTH",
"887 -270 LINE SMOOTH",
"887 -360 OFFCURVE",
"713 -360 QCURVE SMOOTH",
"543 -360 OFFCURVE",
"543 -268 QCURVE",
"172 -268 LINE",
"172 -590 OFFCURVE",
"713 -590 QCURVE",
"713 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1657 801 LINE",
"1657 2001 LINE",
"1358 2001 LINE",
"1317 1862 OFFCURVE",
"1188 1692 OFFCURVE",
"1093 1692 QCURVE SMOOTH",
"1032 1692 OFFCURVE",
"1032 1739 QCURVE SMOOTH",
"1032 1759 OFFCURVE",
"1059 1786 OFFCURVE",
"1083 1786 QCURVE SMOOTH",
"1102 1786 LINE",
"1102 2001 LINE",
"1032 2001 LINE SMOOTH",
"887 2001 OFFCURVE",
"745 1864 OFFCURVE",
"745 1753 QCURVE SMOOTH",
"745 1671 OFFCURVE",
"831 1550 OFFCURVE",
"968 1485 OFFCURVE",
"1046 1485 QCURVE SMOOTH",
"1165 1485 OFFCURVE",
"1304 1554 OFFCURVE",
"1358 1614 QCURVE",
"1358 801 LINE",
"1358 801 LINE"
);
},
{
closed = 1;
nodes = (
"2494 -590 OFFCURVE",
"2494 -270 QCURVE SMOOTH",
"2494 291 LINE SMOOTH",
"2494 610 OFFCURVE",
"1988 610 QCURVE SMOOTH",
"1482 610 OFFCURVE",
"1482 291 QCURVE SMOOTH",
"1482 170 LINE SMOOTH",
"1482 29 OFFCURVE",
"1655 -72 OFFCURVE",
"1794 -72 QCURVE SMOOTH",
"1988 -72 LINE",
"1988 152 LINE",
"1880 152 LINE SMOOTH",
"1820 152 OFFCURVE",
"1781 201 OFFCURVE",
"1781 233 QCURVE SMOOTH",
"1781 291 LINE SMOOTH",
"1781 418 OFFCURVE",
"1988 418 QCURVE SMOOTH",
"2197 418 OFFCURVE",
"2197 291 QCURVE SMOOTH",
"2197 -270 LINE SMOOTH",
"2197 -397 OFFCURVE",
"1988 -397 QCURVE SMOOTH",
"1781 -397 OFFCURVE",
"1781 -268 QCURVE",
"1482 -268 LINE",
"1482 -590 OFFCURVE",
"1988 -590 QCURVE",
"1988 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1194 -590 OFFCURVE",
"1194 -270 QCURVE SMOOTH",
"1194 291 LINE SMOOTH",
"1194 610 OFFCURVE",
"688 610 QCURVE SMOOTH",
"182 610 OFFCURVE",
"182 291 QCURVE SMOOTH",
"182 170 LINE SMOOTH",
"182 29 OFFCURVE",
"354 -72 OFFCURVE",
"493 -72 QCURVE SMOOTH",
"688 -72 LINE",
"688 152 LINE",
"579 152 LINE SMOOTH",
"520 152 OFFCURVE",
"481 201 OFFCURVE",
"481 233 QCURVE SMOOTH",
"481 291 LINE SMOOTH",
"481 418 OFFCURVE",
"688 418 QCURVE SMOOTH",
"897 418 OFFCURVE",
"897 291 QCURVE SMOOTH",
"897 -270 LINE SMOOTH",
"897 -397 OFFCURVE",
"688 -397 QCURVE SMOOTH",
"481 -397 OFFCURVE",
"481 -268 QCURVE",
"182 -268 LINE",
"182 -590 OFFCURVE",
"688 -590 QCURVE",
"688 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"2212 -452 OFFCURVE",
"1950 -452 QCURVE SMOOTH",
"1688 -452 OFFCURVE",
"1688 -270 QCURVE",
"1500 -270 LINE",
"1500 -590 OFFCURVE",
"1950 -590 QCURVE SMOOTH",
"2400 -590 OFFCURVE",
"2400 -270 QCURVE SMOOTH",
"2400 290 LINE SMOOTH",
"2400 610 OFFCURVE",
"1950 610 QCURVE SMOOTH",
"1500 610 OFFCURVE",
"1500 290 QCURVE SMOOTH",
"1500 170 LINE SMOOTH",
"1500 -70 OFFCURVE",
"1815 -70 QCURVE SMOOTH",
"1950 -70 LINE",
"1950 90 LINE",
"1815 90 LINE SMOOTH",
"1688 90 OFFCURVE",
"1688 170 QCURVE SMOOTH",
"1688 290 LINE SMOOTH",
"1688 472 OFFCURVE",
"1950 472 QCURVE SMOOTH",
"2212 472 OFFCURVE",
"2212 290 QCURVE SMOOTH",
"2212 -270 LINE",
"2212 -270 LINE"
);
},
{
closed = 1;
nodes = (
"912 -452 OFFCURVE",
"650 -452 QCURVE SMOOTH",
"388 -452 OFFCURVE",
"388 -270 QCURVE",
"200 -270 LINE",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1100 -590 OFFCURVE",
"1100 -270 QCURVE SMOOTH",
"1100 290 LINE SMOOTH",
"1100 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 290 QCURVE SMOOTH",
"200 170 LINE SMOOTH",
"200 -70 OFFCURVE",
"515 -70 QCURVE SMOOTH",
"650 -70 LINE",
"650 90 LINE",
"515 90 LINE SMOOTH",
"388 90 OFFCURVE",
"388 170 QCURVE SMOOTH",
"388 290 LINE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 290 QCURVE SMOOTH",
"912 -270 LINE",
"912 -270 LINE"
);
},
{
closed = 1;
nodes = (
"1095 1862 LINE",
"1095 2000 LINE",
"1042 2000 LINE SMOOTH",
"800 2000 OFFCURVE",
"800 1820 QCURVE SMOOTH",
"800 1600 OFFCURVE",
"1066 1600 QCURVE SMOOTH",
"1303 1600 OFFCURVE",
"1412 1746 QCURVE",
"1412 800 LINE",
"1600 800 LINE",
"1600 2000 LINE",
"1412 2000 LINE",
"1328 1869 LINE SMOOTH",
"1243 1738 OFFCURVE",
"1066 1738 QCURVE SMOOTH",
"988 1738 OFFCURVE",
"988 1820 QCURVE SMOOTH",
"988 1862 OFFCURVE",
"1042 1862 QCURVE",
"1042 1862 LINE"
);
}
);
width = 2600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1566 852 LINE",
"1566 2052 LINE",
"1443 2052 LINE",
"1371 1929 OFFCURVE",
"1197 1759 OFFCURVE",
"1084 1759 QCURVE SMOOTH",
"1011 1759 OFFCURVE",
"953 1831 OFFCURVE",
"953 1868 QCURVE SMOOTH",
"953 1898 OFFCURVE",
"1009 1958 OFFCURVE",
"1070 1958 QCURVE SMOOTH",
"1097 1958 LINE",
"1097 2052 LINE",
"1070 2052 LINE SMOOTH",
"960 2052 OFFCURVE",
"835 1958 OFFCURVE",
"835 1864 QCURVE SMOOTH",
"835 1778 OFFCURVE",
"962 1663 OFFCURVE",
"1078 1663 QCURVE SMOOTH",
"1158 1663 OFFCURVE",
"1295 1726 OFFCURVE",
"1406 1823 OFFCURVE",
"1443 1876 QCURVE",
"1443 852 LINE",
"1443 852 LINE"
);
},
{
closed = 1;
nodes = (
"2129 -590 OFFCURVE",
"2344 -428 OFFCURVE",
"2344 -270 QCURVE SMOOTH",
"2344 291 LINE SMOOTH",
"2344 610 OFFCURVE",
"1926 610 QCURVE SMOOTH",
"1723 610 OFFCURVE",
"1512 451 OFFCURVE",
"1512 291 QCURVE SMOOTH",
"1512 156 LINE SMOOTH",
"1512 47 OFFCURVE",
"1648 -70 OFFCURVE",
"1766 -70 QCURVE SMOOTH",
"1926 -70 LINE",
"1926 35 LINE",
"1766 35 LINE SMOOTH",
"1699 35 OFFCURVE",
"1631 109 OFFCURVE",
"1631 156 QCURVE SMOOTH",
"1631 291 LINE SMOOTH",
"1631 397 OFFCURVE",
"1779 516 OFFCURVE",
"1926 516 QCURVE SMOOTH",
"2076 516 OFFCURVE",
"2223 397 OFFCURVE",
"2223 291 QCURVE SMOOTH",
"2223 -270 LINE SMOOTH",
"2223 -377 OFFCURVE",
"2076 -496 OFFCURVE",
"1926 -496 QCURVE SMOOTH",
"1779 -496 OFFCURVE",
"1631 -377 OFFCURVE",
"1631 -270 QCURVE",
"1512 -270 LINE",
"1512 -426 OFFCURVE",
"1725 -590 OFFCURVE",
"1926 -590 QCURVE",
"1926 -590 LINE"
);
},
{
closed = 1;
nodes = (
"828 -590 OFFCURVE",
"1043 -428 OFFCURVE",
"1043 -270 QCURVE SMOOTH",
"1043 291 LINE SMOOTH",
"1043 610 OFFCURVE",
"626 610 QCURVE SMOOTH",
"423 610 OFFCURVE",
"212 451 OFFCURVE",
"212 291 QCURVE SMOOTH",
"212 156 LINE SMOOTH",
"212 47 OFFCURVE",
"347 -70 OFFCURVE",
"466 -70 QCURVE SMOOTH",
"626 -70 LINE",
"626 35 LINE",
"466 35 LINE SMOOTH",
"398 35 OFFCURVE",
"331 109 OFFCURVE",
"331 156 QCURVE SMOOTH",
"331 291 LINE SMOOTH",
"331 397 OFFCURVE",
"478 516 OFFCURVE",
"626 516 QCURVE SMOOTH",
"775 516 OFFCURVE",
"923 397 OFFCURVE",
"923 291 QCURVE SMOOTH",
"923 -270 LINE SMOOTH",
"923 -377 OFFCURVE",
"775 -496 OFFCURVE",
"626 -496 QCURVE SMOOTH",
"478 -496 OFFCURVE",
"331 -377 OFFCURVE",
"331 -270 QCURVE",
"212 -270 LINE",
"212 -426 OFFCURVE",
"425 -590 OFFCURVE",
"626 -590 QCURVE",
"626 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1532 903 LINE",
"1532 2103 LINE",
"1478 2103 LINE",
"1439 2040 OFFCURVE",
"1325 1892 OFFCURVE",
"1177 1786 OFFCURVE",
"1093 1786 QCURVE SMOOTH",
"1026 1786 OFFCURVE",
"952 1833 OFFCURVE",
"921 1901 OFFCURVE",
"921 1931 QCURVE SMOOTH",
"921 1968 OFFCURVE",
"993 2050 OFFCURVE",
"1081 2050 QCURVE SMOOTH",
"1099 2050 LINE",
"1099 2103 LINE",
"1097 2103 LINE SMOOTH",
"983 2103 OFFCURVE",
"868 2009 OFFCURVE",
"868 1929 QCURVE SMOOTH",
"868 1833 OFFCURVE",
"997 1733 OFFCURVE",
"1091 1733 QCURVE SMOOTH",
"1177 1733 OFFCURVE",
"1325 1823 OFFCURVE",
"1439 1948 OFFCURVE",
"1478 2005 QCURVE",
"1478 903 LINE",
"1478 903 LINE"
);
},
{
closed = 1;
nodes = (
"2087 -590 OFFCURVE",
"2289 -426 OFFCURVE",
"2289 -270 QCURVE SMOOTH",
"2289 291 LINE SMOOTH",
"2289 446 OFFCURVE",
"2091 610 OFFCURVE",
"1906 610 QCURVE SMOOTH",
"1724 610 OFFCURVE",
"1525 451 OFFCURVE",
"1525 291 QCURVE SMOOTH",
"1525 139 LINE SMOOTH",
"1525 43 OFFCURVE",
"1640 -70 OFFCURVE",
"1722 -70 QCURVE SMOOTH",
"1906 -70 LINE",
"1906 -16 LINE",
"1718 -16 LINE SMOOTH",
"1646 -16 OFFCURVE",
"1579 86 OFFCURVE",
"1579 139 QCURVE SMOOTH",
"1579 291 LINE SMOOTH",
"1579 416 OFFCURVE",
"1743 557 OFFCURVE",
"1906 557 QCURVE SMOOTH",
"2070 557 OFFCURVE",
"2236 416 OFFCURVE",
"2236 291 QCURVE SMOOTH",
"2236 -270 LINE SMOOTH",
"2236 -395 OFFCURVE",
"2070 -537 OFFCURVE",
"1906 -537 QCURVE SMOOTH",
"1743 -537 OFFCURVE",
"1579 -395 OFFCURVE",
"1579 -270 QCURVE",
"1525 -270 LINE",
"1525 -426 OFFCURVE",
"1730 -590 OFFCURVE",
"1906 -590 QCURVE",
"1906 -590 LINE"
);
},
{
closed = 1;
nodes = (
"786 -590 OFFCURVE",
"989 -426 OFFCURVE",
"989 -270 QCURVE SMOOTH",
"989 291 LINE SMOOTH",
"989 446 OFFCURVE",
"790 610 OFFCURVE",
"606 610 QCURVE SMOOTH",
"424 610 OFFCURVE",
"225 451 OFFCURVE",
"225 291 QCURVE SMOOTH",
"225 139 LINE SMOOTH",
"225 43 OFFCURVE",
"340 -70 OFFCURVE",
"422 -70 QCURVE SMOOTH",
"606 -70 LINE",
"606 -16 LINE",
"418 -16 LINE SMOOTH",
"346 -16 OFFCURVE",
"278 86 OFFCURVE",
"278 139 QCURVE SMOOTH",
"278 291 LINE SMOOTH",
"278 416 OFFCURVE",
"442 557 OFFCURVE",
"606 557 QCURVE SMOOTH",
"770 557 OFFCURVE",
"936 416 OFFCURVE",
"936 291 QCURVE SMOOTH",
"936 -270 LINE SMOOTH",
"936 -395 OFFCURVE",
"770 -537 OFFCURVE",
"606 -537 QCURVE SMOOTH",
"442 -537 OFFCURVE",
"278 -395 OFFCURVE",
"278 -270 QCURVE",
"225 -270 LINE",
"225 -426 OFFCURVE",
"430 -590 OFFCURVE",
"606 -590 QCURVE",
"606 -590 LINE"
);
}
);
width = 2600;
}
);
note = uni19FB;
unicode = 19FB;
},
{
glyphname = uni19FC;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1694 924 LINE",
"1694 2124 LINE",
"1323 2124 LINE",
"1317 2034 OFFCURVE",
"1257 1882 OFFCURVE",
"1163 1788 OFFCURVE",
"1104 1788 QCURVE SMOOTH",
"1061 1788 OFFCURVE",
"1061 1823 QCURVE SMOOTH",
"1061 1858 OFFCURVE",
"1096 1858 QCURVE SMOOTH",
"1106 1858 LINE",
"1106 2124 LINE",
"1026 2124 LINE SMOOTH",
"911 2124 OFFCURVE",
"770 2048 OFFCURVE",
"709 1923 OFFCURVE",
"709 1845 QCURVE SMOOTH",
"709 1747 OFFCURVE",
"815 1608 OFFCURVE",
"965 1536 OFFCURVE",
"1034 1536 QCURVE SMOOTH",
"1114 1536 OFFCURVE",
"1216 1565 OFFCURVE",
"1288 1618 OFFCURVE",
"1323 1653 QCURVE",
"1323 924 LINE",
"1323 924 LINE"
);
},
{
closed = 1;
nodes = (
"1255 -590 OFFCURVE",
"1255 -270 QCURVE SMOOTH",
"1255 291 LINE SMOOTH",
"1255 610 OFFCURVE",
"713 610 QCURVE SMOOTH",
"172 610 OFFCURVE",
"172 291 QCURVE SMOOTH",
"172 170 LINE SMOOTH",
"172 66 OFFCURVE",
"254 -39 OFFCURVE",
"393 -74 OFFCURVE",
"479 -74 QCURVE SMOOTH",
"713 -74 LINE",
"713 193 LINE",
"623 193 LINE SMOOTH",
"563 193 OFFCURVE",
"543 246 OFFCURVE",
"543 272 QCURVE SMOOTH",
"543 291 LINE SMOOTH",
"543 381 OFFCURVE",
"713 381 QCURVE SMOOTH",
"887 381 OFFCURVE",
"887 291 QCURVE SMOOTH",
"887 -270 LINE SMOOTH",
"887 -360 OFFCURVE",
"713 -360 QCURVE SMOOTH",
"543 -360 OFFCURVE",
"543 -268 QCURVE",
"172 -268 LINE",
"172 -590 OFFCURVE",
"713 -590 QCURVE",
"713 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2947 -590 OFFCURVE",
"2947 -190 QCURVE SMOOTH",
"2947 610 LINE",
"2576 610 LINE",
"2458 524 LINE",
"2349 610 LINE",
"1968 610 LINE",
"1968 10 LINE",
"2378 10 LINE",
"2378 240 LINE",
"2349 240 LINE",
"2349 350 LINE",
"2458 268 LINE",
"2576 350 LINE",
"2576 -190 LINE SMOOTH",
"2576 -360 OFFCURVE",
"2226 -360 QCURVE SMOOTH",
"1872 -360 OFFCURVE",
"1872 -190 QCURVE SMOOTH",
"1872 735 LINE SMOOTH",
"1872 793 OFFCURVE",
"1829 860 OFFCURVE",
"1751 860 QCURVE SMOOTH",
"1401 860 LINE",
"1401 631 LINE",
"1501 631 LINE",
"1501 -190 LINE SMOOTH",
"1501 -590 OFFCURVE",
"2226 -590 QCURVE",
"2226 -590 LINE"
);
}
);
width = 2963;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1628 932 LINE",
"1628 2132 LINE",
"1329 2132 LINE",
"1288 1993 OFFCURVE",
"1159 1823 OFFCURVE",
"1065 1823 QCURVE SMOOTH",
"1003 1823 OFFCURVE",
"1003 1870 QCURVE SMOOTH",
"1003 1890 OFFCURVE",
"1030 1917 OFFCURVE",
"1054 1917 QCURVE SMOOTH",
"1073 1917 LINE",
"1073 2132 LINE",
"1003 2132 LINE SMOOTH",
"858 2132 OFFCURVE",
"717 1995 OFFCURVE",
"717 1884 QCURVE SMOOTH",
"717 1802 OFFCURVE",
"803 1681 OFFCURVE",
"940 1616 OFFCURVE",
"1018 1616 QCURVE SMOOTH",
"1136 1616 OFFCURVE",
"1276 1686 OFFCURVE",
"1329 1745 QCURVE",
"1329 932 LINE",
"1329 932 LINE"
);
},
{
closed = 1;
nodes = (
"1194 -590 OFFCURVE",
"1194 -270 QCURVE SMOOTH",
"1194 291 LINE SMOOTH",
"1194 610 OFFCURVE",
"688 610 QCURVE SMOOTH",
"182 610 OFFCURVE",
"182 291 QCURVE SMOOTH",
"182 170 LINE SMOOTH",
"182 29 OFFCURVE",
"354 -72 OFFCURVE",
"493 -72 QCURVE SMOOTH",
"688 -72 LINE",
"688 152 LINE",
"579 152 LINE SMOOTH",
"520 152 OFFCURVE",
"481 201 OFFCURVE",
"481 233 QCURVE SMOOTH",
"481 291 LINE SMOOTH",
"481 418 OFFCURVE",
"688 418 QCURVE SMOOTH",
"897 418 OFFCURVE",
"897 291 QCURVE SMOOTH",
"897 -270 LINE SMOOTH",
"897 -397 OFFCURVE",
"688 -397 QCURVE SMOOTH",
"481 -397 OFFCURVE",
"481 -268 QCURVE",
"182 -268 LINE",
"182 -590 OFFCURVE",
"688 -590 QCURVE",
"688 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2826 -590 OFFCURVE",
"2826 -190 QCURVE SMOOTH",
"2826 610 LINE",
"2527 610 LINE",
"2373 489 LINE",
"2228 610 LINE",
"1921 610 LINE",
"1921 10 LINE",
"2265 10 LINE",
"2265 203 LINE",
"2228 203 LINE",
"2228 387 LINE",
"2373 268 LINE",
"2527 387 LINE",
"2527 -190 LINE SMOOTH",
"2527 -397 OFFCURVE",
"2164 -397 QCURVE SMOOTH",
"1800 -397 OFFCURVE",
"1800 -190 QCURVE SMOOTH",
"1800 752 LINE SMOOTH",
"1800 803 OFFCURVE",
"1757 860 OFFCURVE",
"1689 860 QCURVE SMOOTH",
"1401 860 LINE",
"1401 668 LINE",
"1501 668 LINE",
"1501 -190 LINE SMOOTH",
"1501 -590 OFFCURVE",
"2164 -590 QCURVE",
"2164 -590 LINE"
);
}
);
width = 2914;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 -452 OFFCURVE",
"650 -452 QCURVE SMOOTH",
"388 -452 OFFCURVE",
"388 -270 QCURVE",
"200 -270 LINE",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1100 -590 OFFCURVE",
"1100 -270 QCURVE SMOOTH",
"1100 290 LINE SMOOTH",
"1100 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 290 QCURVE SMOOTH",
"200 170 LINE SMOOTH",
"200 -70 OFFCURVE",
"515 -70 QCURVE SMOOTH",
"650 -70 LINE",
"650 90 LINE",
"515 90 LINE SMOOTH",
"388 90 OFFCURVE",
"388 170 QCURVE SMOOTH",
"388 290 LINE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 290 QCURVE SMOOTH",
"912 -270 LINE",
"912 -270 LINE"
);
},
{
closed = 1;
nodes = (
"1600 2000 LINE",
"1412 2000 LINE",
"1328 1869 LINE SMOOTH",
"1243 1738 OFFCURVE",
"1066 1738 QCURVE SMOOTH",
"988 1738 OFFCURVE",
"988 1820 QCURVE SMOOTH",
"988 1862 OFFCURVE",
"1042 1862 QCURVE SMOOTH",
"1095 1862 LINE",
"1095 2000 LINE",
"1042 2000 LINE SMOOTH",
"800 2000 OFFCURVE",
"800 1820 QCURVE SMOOTH",
"800 1600 OFFCURVE",
"1066 1600 QCURVE SMOOTH",
"1303 1600 OFFCURVE",
"1412 1746 QCURVE",
"1412 860 LINE",
"1400 860 LINE",
"1400 710 LINE",
"1500 710 LINE",
"1500 -190 LINE SMOOTH",
"1500 -590 OFFCURVE",
"2069 -590 QCURVE SMOOTH",
"2638 -590 OFFCURVE",
"2638 -190 QCURVE SMOOTH",
"2638 610 LINE",
"2450 610 LINE",
"2240 436 LINE",
"2040 610 LINE",
"1842 610 LINE",
"1842 10 LINE",
"2090 10 LINE",
"2090 160 LINE",
"2040 160 LINE",
"2040 442 LINE",
"2240 268 LINE",
"2450 442 LINE",
"2450 -190 LINE SMOOTH",
"2450 -452 OFFCURVE",
"2069 -452 QCURVE SMOOTH",
"1688 -452 OFFCURVE",
"1688 -190 QCURVE SMOOTH",
"1688 710 LINE SMOOTH",
"1688 813 OFFCURVE",
"1600 845 QCURVE",
"1600 845 LINE"
);
}
);
width = 2838;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1488 934 LINE",
"1488 2134 LINE",
"1365 2134 LINE",
"1293 2011 OFFCURVE",
"1119 1841 OFFCURVE",
"1007 1841 QCURVE SMOOTH",
"933 1841 OFFCURVE",
"876 1913 OFFCURVE",
"876 1950 QCURVE SMOOTH",
"876 1980 OFFCURVE",
"931 2040 OFFCURVE",
"992 2040 QCURVE SMOOTH",
"1019 2040 LINE",
"1019 2134 LINE",
"992 2134 LINE SMOOTH",
"882 2134 OFFCURVE",
"757 2040 OFFCURVE",
"757 1946 QCURVE SMOOTH",
"757 1860 OFFCURVE",
"884 1745 OFFCURVE",
"1000 1745 QCURVE SMOOTH",
"1080 1745 OFFCURVE",
"1218 1808 OFFCURVE",
"1328 1905 OFFCURVE",
"1365 1958 QCURVE",
"1365 934 LINE",
"1365 934 LINE"
);
},
{
closed = 1;
nodes = (
"828 -590 OFFCURVE",
"1043 -428 OFFCURVE",
"1043 -270 QCURVE SMOOTH",
"1043 291 LINE SMOOTH",
"1043 610 OFFCURVE",
"626 610 QCURVE SMOOTH",
"423 610 OFFCURVE",
"212 451 OFFCURVE",
"212 291 QCURVE SMOOTH",
"212 156 LINE SMOOTH",
"212 47 OFFCURVE",
"347 -70 OFFCURVE",
"466 -70 QCURVE SMOOTH",
"626 -70 LINE",
"626 35 LINE",
"466 35 LINE SMOOTH",
"398 35 OFFCURVE",
"331 109 OFFCURVE",
"331 156 QCURVE SMOOTH",
"331 291 LINE SMOOTH",
"331 397 OFFCURVE",
"478 516 OFFCURVE",
"626 516 QCURVE SMOOTH",
"775 516 OFFCURVE",
"923 397 OFFCURVE",
"923 291 QCURVE SMOOTH",
"923 -270 LINE SMOOTH",
"923 -377 OFFCURVE",
"775 -496 OFFCURVE",
"626 -496 QCURVE SMOOTH",
"478 -496 OFFCURVE",
"331 -377 OFFCURVE",
"331 -270 QCURVE",
"212 -270 LINE",
"212 -426 OFFCURVE",
"425 -590 OFFCURVE",
"626 -590 QCURVE",
"626 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2268 -590 OFFCURVE",
"2534 -391 OFFCURVE",
"2534 -190 QCURVE SMOOTH",
"2534 610 LINE",
"2414 610 LINE",
"2172 401 LINE",
"1932 610 LINE",
"1811 610 LINE",
"1811 25 LINE",
"1986 25 LINE",
"1986 121 LINE",
"1932 121 LINE",
"1932 492 LINE",
"2172 283 LINE",
"2414 492 LINE",
"2414 -190 LINE SMOOTH",
"2414 -338 OFFCURVE",
"2217 -496 OFFCURVE",
"2018 -496 QCURVE SMOOTH",
"1824 -496 OFFCURVE",
"1629 -338 OFFCURVE",
"1629 -190 QCURVE SMOOTH",
"1629 799 LINE SMOOTH",
"1629 834 OFFCURVE",
"1598 866 OFFCURVE",
"1560 866 QCURVE SMOOTH",
"1408 866 LINE",
"1408 770 LINE",
"1508 770 LINE",
"1508 -190 LINE SMOOTH",
"1508 -389 OFFCURVE",
"1768 -590 OFFCURVE",
"2018 -590 QCURVE",
"2018 -590 LINE"
);
}
);
width = 2793;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1450 924 LINE",
"1450 2124 LINE",
"1396 2124 LINE",
"1358 2060 OFFCURVE",
"1243 1913 OFFCURVE",
"1095 1806 OFFCURVE",
"1011 1806 QCURVE SMOOTH",
"944 1806 OFFCURVE",
"870 1853 OFFCURVE",
"839 1921 OFFCURVE",
"839 1952 QCURVE SMOOTH",
"839 1989 OFFCURVE",
"911 2071 OFFCURVE",
"999 2071 QCURVE SMOOTH",
"1018 2071 LINE",
"1018 2124 LINE",
"1016 2124 LINE SMOOTH",
"901 2124 OFFCURVE",
"786 2030 OFFCURVE",
"786 1950 QCURVE SMOOTH",
"786 1853 OFFCURVE",
"915 1753 OFFCURVE",
"1009 1753 QCURVE SMOOTH",
"1095 1753 OFFCURVE",
"1243 1843 OFFCURVE",
"1358 1968 OFFCURVE",
"1396 2025 QCURVE",
"1396 924 LINE",
"1396 924 LINE"
);
},
{
closed = 1;
nodes = (
"786 -590 OFFCURVE",
"989 -426 OFFCURVE",
"989 -270 QCURVE SMOOTH",
"989 291 LINE SMOOTH",
"989 446 OFFCURVE",
"790 610 OFFCURVE",
"606 610 QCURVE SMOOTH",
"424 610 OFFCURVE",
"225 451 OFFCURVE",
"225 291 QCURVE SMOOTH",
"225 139 LINE SMOOTH",
"225 43 OFFCURVE",
"340 -70 OFFCURVE",
"422 -70 QCURVE SMOOTH",
"606 -70 LINE",
"606 -16 LINE",
"418 -16 LINE SMOOTH",
"346 -16 OFFCURVE",
"278 86 OFFCURVE",
"278 139 QCURVE SMOOTH",
"278 291 LINE SMOOTH",
"278 416 OFFCURVE",
"442 557 OFFCURVE",
"606 557 QCURVE SMOOTH",
"770 557 OFFCURVE",
"936 416 OFFCURVE",
"936 291 QCURVE SMOOTH",
"936 -270 LINE SMOOTH",
"936 -395 OFFCURVE",
"770 -537 OFFCURVE",
"606 -537 QCURVE SMOOTH",
"442 -537 OFFCURVE",
"278 -395 OFFCURVE",
"278 -270 QCURVE",
"225 -270 LINE",
"225 -426 OFFCURVE",
"430 -590 OFFCURVE",
"606 -590 QCURVE",
"606 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2187 -590 OFFCURVE",
"2433 -393 OFFCURVE",
"2433 -190 QCURVE SMOOTH",
"2433 610 LINE",
"2379 610 LINE",
"2101 369 LINE",
"1829 610 LINE",
"1775 610 LINE",
"1775 41 LINE",
"1884 41 LINE",
"1884 94 LINE",
"1829 94 LINE",
"1829 539 LINE",
"2101 297 LINE",
"2379 539 LINE",
"2379 -190 LINE SMOOTH",
"2379 -354 OFFCURVE",
"2177 -537 OFFCURVE",
"1974 -537 QCURVE SMOOTH",
"1773 -537 OFFCURVE",
"1573 -354 OFFCURVE",
"1573 -190 QCURVE SMOOTH",
"1573 823 LINE SMOOTH",
"1573 852 OFFCURVE",
"1556 872 OFFCURVE",
"1530 872 QCURVE SMOOTH",
"1421 872 LINE",
"1421 819 LINE",
"1519 819 LINE",
"1519 -190 LINE SMOOTH",
"1519 -389 OFFCURVE",
"1761 -590 OFFCURVE",
"1974 -590 QCURVE",
"1974 -590 LINE"
);
}
);
width = 2746;
}
);
note = uni19FC;
unicode = 19FC;
},
{
glyphname = uni19FD;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1694 801 LINE",
"1694 2001 LINE",
"1323 2001 LINE",
"1317 1911 OFFCURVE",
"1257 1759 OFFCURVE",
"1163 1665 OFFCURVE",
"1104 1665 QCURVE SMOOTH",
"1061 1665 OFFCURVE",
"1061 1700 QCURVE SMOOTH",
"1061 1735 OFFCURVE",
"1096 1735 QCURVE SMOOTH",
"1106 1735 LINE",
"1106 2001 LINE",
"1026 2001 LINE SMOOTH",
"911 2001 OFFCURVE",
"770 1925 OFFCURVE",
"709 1800 OFFCURVE",
"709 1722 QCURVE SMOOTH",
"709 1624 OFFCURVE",
"815 1485 OFFCURVE",
"965 1413 OFFCURVE",
"1034 1413 QCURVE SMOOTH",
"1114 1413 OFFCURVE",
"1216 1442 OFFCURVE",
"1288 1495 OFFCURVE",
"1323 1530 QCURVE",
"1323 801 LINE",
"1323 801 LINE"
);
},
{
closed = 1;
nodes = (
"1255 -590 OFFCURVE",
"1255 -270 QCURVE SMOOTH",
"1255 291 LINE SMOOTH",
"1255 610 OFFCURVE",
"713 610 QCURVE SMOOTH",
"172 610 OFFCURVE",
"172 291 QCURVE SMOOTH",
"172 170 LINE SMOOTH",
"172 66 OFFCURVE",
"254 -39 OFFCURVE",
"393 -74 OFFCURVE",
"479 -74 QCURVE SMOOTH",
"713 -74 LINE",
"713 193 LINE",
"623 193 LINE SMOOTH",
"563 193 OFFCURVE",
"543 246 OFFCURVE",
"543 272 QCURVE SMOOTH",
"543 291 LINE SMOOTH",
"543 381 OFFCURVE",
"713 381 QCURVE SMOOTH",
"887 381 OFFCURVE",
"887 291 QCURVE SMOOTH",
"887 -270 LINE SMOOTH",
"887 -360 OFFCURVE",
"713 -360 QCURVE SMOOTH",
"543 -360 OFFCURVE",
"543 -268 QCURVE",
"172 -268 LINE",
"172 -590 OFFCURVE",
"713 -590 QCURVE",
"713 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1921 -590 LINE",
"1921 -360 LINE",
"1841 -360 LINE",
"1841 276 LINE SMOOTH",
"1841 381 OFFCURVE",
"1950 381 QCURVE SMOOTH",
"2058 381 OFFCURVE",
"2058 276 QCURVE SMOOTH",
"2058 -590 LINE",
"2427 -590 LINE",
"2427 276 LINE SMOOTH",
"2427 381 OFFCURVE",
"2537 381 QCURVE SMOOTH",
"2646 381 OFFCURVE",
"2646 276 QCURVE SMOOTH",
"2646 -590 LINE",
"3015 -590 LINE",
"3015 250 LINE SMOOTH",
"3015 610 OFFCURVE",
"2537 610 QCURVE SMOOTH",
"2339 610 OFFCURVE",
"2243 520 QCURVE",
"2146 610 OFFCURVE",
"1950 610 QCURVE SMOOTH",
"1470 610 OFFCURVE",
"1470 260 QCURVE SMOOTH",
"1470 -590 LINE",
"1470 -590 LINE"
);
}
);
width = 3063;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1657 801 LINE",
"1657 2001 LINE",
"1358 2001 LINE",
"1317 1862 OFFCURVE",
"1188 1692 OFFCURVE",
"1093 1692 QCURVE SMOOTH",
"1032 1692 OFFCURVE",
"1032 1739 QCURVE SMOOTH",
"1032 1759 OFFCURVE",
"1059 1786 OFFCURVE",
"1083 1786 QCURVE SMOOTH",
"1102 1786 LINE",
"1102 2001 LINE",
"1032 2001 LINE SMOOTH",
"887 2001 OFFCURVE",
"745 1864 OFFCURVE",
"745 1753 QCURVE SMOOTH",
"745 1671 OFFCURVE",
"831 1550 OFFCURVE",
"968 1485 OFFCURVE",
"1046 1485 QCURVE SMOOTH",
"1165 1485 OFFCURVE",
"1304 1554 OFFCURVE",
"1358 1614 QCURVE",
"1358 801 LINE",
"1358 801 LINE"
);
},
{
closed = 1;
nodes = (
"1194 -590 OFFCURVE",
"1194 -270 QCURVE SMOOTH",
"1194 291 LINE SMOOTH",
"1194 610 OFFCURVE",
"688 610 QCURVE SMOOTH",
"182 610 OFFCURVE",
"182 291 QCURVE SMOOTH",
"182 170 LINE SMOOTH",
"182 29 OFFCURVE",
"354 -72 OFFCURVE",
"493 -72 QCURVE SMOOTH",
"688 -72 LINE",
"688 152 LINE",
"579 152 LINE SMOOTH",
"520 152 OFFCURVE",
"481 201 OFFCURVE",
"481 233 QCURVE SMOOTH",
"481 291 LINE SMOOTH",
"481 418 OFFCURVE",
"688 418 QCURVE SMOOTH",
"897 418 OFFCURVE",
"897 291 QCURVE SMOOTH",
"897 -270 LINE SMOOTH",
"897 -397 OFFCURVE",
"688 -397 QCURVE SMOOTH",
"481 -397 OFFCURVE",
"481 -268 QCURVE",
"182 -268 LINE",
"182 -590 OFFCURVE",
"688 -590 QCURVE",
"688 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1868 -590 LINE",
"1868 -397 LINE",
"1781 -397 LINE",
"1781 266 LINE SMOOTH",
"1781 418 OFFCURVE",
"1925 418 QCURVE SMOOTH",
"1997 418 OFFCURVE",
"2068 344 OFFCURVE",
"2068 279 QCURVE SMOOTH",
"2068 -590 LINE",
"2367 -590 LINE",
"2367 279 LINE SMOOTH",
"2367 344 OFFCURVE",
"2441 418 OFFCURVE",
"2513 418 QCURVE SMOOTH",
"2656 418 OFFCURVE",
"2656 266 QCURVE SMOOTH",
"2656 -590 LINE",
"2955 -590 LINE",
"2955 250 LINE SMOOTH",
"2955 610 OFFCURVE",
"2513 610 QCURVE SMOOTH",
"2314 610 OFFCURVE",
"2218 520 QCURVE",
"2121 610 OFFCURVE",
"1925 610 QCURVE SMOOTH",
"1480 610 OFFCURVE",
"1480 260 QCURVE SMOOTH",
"1480 -590 LINE",
"1480 -590 LINE"
);
}
);
width = 3063;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 -452 OFFCURVE",
"650 -452 QCURVE SMOOTH",
"388 -452 OFFCURVE",
"388 -270 QCURVE",
"200 -270 LINE",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1100 -590 OFFCURVE",
"1100 -270 QCURVE SMOOTH",
"1100 290 LINE SMOOTH",
"1100 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 290 QCURVE SMOOTH",
"200 170 LINE SMOOTH",
"200 -70 OFFCURVE",
"515 -70 QCURVE SMOOTH",
"650 -70 LINE",
"650 90 LINE",
"515 90 LINE SMOOTH",
"388 90 OFFCURVE",
"388 170 QCURVE SMOOTH",
"388 290 LINE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 290 QCURVE SMOOTH",
"912 -270 LINE",
"912 -270 LINE"
);
},
{
closed = 1;
nodes = (
"2276 250 LINE SMOOTH",
"2276 472 OFFCURVE",
"2476 472 QCURVE SMOOTH",
"2676 472 OFFCURVE",
"2676 250 QCURVE SMOOTH",
"2676 -590 LINE",
"2864 -590 LINE",
"2864 250 LINE SMOOTH",
"2864 610 OFFCURVE",
"2476 610 QCURVE SMOOTH",
"2275 610 OFFCURVE",
"2181 521 QCURVE",
"2087 610 OFFCURVE",
"1888 610 QCURVE SMOOTH",
"1500 610 OFFCURVE",
"1500 260 QCURVE SMOOTH",
"1500 -590 LINE",
"1788 -590 LINE",
"1788 -452 LINE",
"1688 -452 LINE",
"1688 250 LINE SMOOTH",
"1688 472 OFFCURVE",
"1888 472 QCURVE SMOOTH",
"2088 472 OFFCURVE",
"2088 250 QCURVE SMOOTH",
"2088 -590 LINE",
"2276 -590 LINE",
"2276 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1095 1862 LINE",
"1095 2000 LINE",
"1042 2000 LINE SMOOTH",
"800 2000 OFFCURVE",
"800 1820 QCURVE SMOOTH",
"800 1600 OFFCURVE",
"1066 1600 QCURVE SMOOTH",
"1303 1600 OFFCURVE",
"1412 1746 QCURVE",
"1412 800 LINE",
"1600 800 LINE",
"1600 2000 LINE",
"1412 2000 LINE",
"1328 1869 LINE SMOOTH",
"1243 1738 OFFCURVE",
"1066 1738 QCURVE SMOOTH",
"988 1738 OFFCURVE",
"988 1820 QCURVE SMOOTH",
"988 1862 OFFCURVE",
"1042 1862 QCURVE",
"1042 1862 LINE"
);
}
);
width = 3064;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1566 801 LINE",
"1566 2001 LINE",
"1443 2001 LINE",
"1371 1878 OFFCURVE",
"1197 1708 OFFCURVE",
"1084 1708 QCURVE SMOOTH",
"1011 1708 OFFCURVE",
"953 1780 OFFCURVE",
"953 1817 QCURVE SMOOTH",
"953 1847 OFFCURVE",
"1009 1907 OFFCURVE",
"1070 1907 QCURVE SMOOTH",
"1097 1907 LINE",
"1097 2001 LINE",
"1070 2001 LINE SMOOTH",
"960 2001 OFFCURVE",
"835 1907 OFFCURVE",
"835 1812 QCURVE SMOOTH",
"835 1726 OFFCURVE",
"962 1612 OFFCURVE",
"1078 1612 QCURVE SMOOTH",
"1158 1612 OFFCURVE",
"1295 1675 OFFCURVE",
"1406 1772 OFFCURVE",
"1443 1825 QCURVE",
"1443 801 LINE",
"1443 801 LINE"
);
},
{
closed = 1;
nodes = (
"828 -590 OFFCURVE",
"1043 -428 OFFCURVE",
"1043 -270 QCURVE SMOOTH",
"1043 291 LINE SMOOTH",
"1043 610 OFFCURVE",
"626 610 QCURVE SMOOTH",
"423 610 OFFCURVE",
"212 451 OFFCURVE",
"212 291 QCURVE SMOOTH",
"212 156 LINE SMOOTH",
"212 47 OFFCURVE",
"347 -70 OFFCURVE",
"466 -70 QCURVE SMOOTH",
"626 -70 LINE",
"626 35 LINE",
"466 35 LINE SMOOTH",
"398 35 OFFCURVE",
"331 109 OFFCURVE",
"331 156 QCURVE SMOOTH",
"331 291 LINE SMOOTH",
"331 397 OFFCURVE",
"478 516 OFFCURVE",
"626 516 QCURVE SMOOTH",
"775 516 OFFCURVE",
"923 397 OFFCURVE",
"923 291 QCURVE SMOOTH",
"923 -270 LINE SMOOTH",
"923 -377 OFFCURVE",
"775 -496 OFFCURVE",
"626 -496 QCURVE SMOOTH",
"478 -496 OFFCURVE",
"331 -377 OFFCURVE",
"331 -270 QCURVE",
"212 -270 LINE",
"212 -426 OFFCURVE",
"425 -590 OFFCURVE",
"626 -590 QCURVE",
"626 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1732 -590 LINE",
"1732 -496 LINE",
"1631 -496 LINE",
"1631 270 LINE SMOOTH",
"1631 516 OFFCURVE",
"1865 516 QCURVE SMOOTH",
"1979 516 OFFCURVE",
"2100 428 OFFCURVE",
"2100 358 QCURVE SMOOTH",
"2100 -590 LINE",
"2219 -590 LINE",
"2219 358 LINE SMOOTH",
"2219 428 OFFCURVE",
"2336 516 OFFCURVE",
"2453 516 QCURVE SMOOTH",
"2567 516 OFFCURVE",
"2686 393 OFFCURVE",
"2686 281 QCURVE SMOOTH",
"2686 -590 LINE",
"2809 -590 LINE",
"2809 281 LINE SMOOTH",
"2809 444 OFFCURVE",
"2616 610 OFFCURVE",
"2453 610 QCURVE SMOOTH",
"2254 610 OFFCURVE",
"2158 520 QCURVE",
"2061 610 OFFCURVE",
"1865 610 QCURVE SMOOTH",
"1701 610 OFFCURVE",
"1510 449 OFFCURVE",
"1510 281 QCURVE SMOOTH",
"1510 -590 LINE",
"1510 -590 LINE"
);
}
);
width = 3063;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1532 801 LINE",
"1532 2001 LINE",
"1478 2001 LINE",
"1439 1937 OFFCURVE",
"1325 1790 OFFCURVE",
"1177 1683 OFFCURVE",
"1093 1683 QCURVE SMOOTH",
"1026 1683 OFFCURVE",
"952 1731 OFFCURVE",
"921 1798 OFFCURVE",
"921 1829 QCURVE SMOOTH",
"921 1866 OFFCURVE",
"993 1948 OFFCURVE",
"1081 1948 QCURVE SMOOTH",
"1099 1948 LINE",
"1099 2001 LINE",
"1097 2001 LINE SMOOTH",
"983 2001 OFFCURVE",
"868 1907 OFFCURVE",
"868 1827 QCURVE SMOOTH",
"868 1731 OFFCURVE",
"997 1630 OFFCURVE",
"1091 1630 QCURVE SMOOTH",
"1177 1630 OFFCURVE",
"1325 1720 OFFCURVE",
"1439 1845 OFFCURVE",
"1478 1903 QCURVE",
"1478 801 LINE",
"1478 801 LINE"
);
},
{
closed = 1;
nodes = (
"786 -590 OFFCURVE",
"989 -426 OFFCURVE",
"989 -270 QCURVE SMOOTH",
"989 291 LINE SMOOTH",
"989 446 OFFCURVE",
"790 610 OFFCURVE",
"606 610 QCURVE SMOOTH",
"424 610 OFFCURVE",
"225 451 OFFCURVE",
"225 291 QCURVE SMOOTH",
"225 139 LINE SMOOTH",
"225 43 OFFCURVE",
"340 -70 OFFCURVE",
"422 -70 QCURVE SMOOTH",
"606 -70 LINE",
"606 -16 LINE",
"418 -16 LINE SMOOTH",
"346 -16 OFFCURVE",
"278 86 OFFCURVE",
"278 139 QCURVE SMOOTH",
"278 291 LINE SMOOTH",
"278 416 OFFCURVE",
"442 557 OFFCURVE",
"606 557 QCURVE SMOOTH",
"770 557 OFFCURVE",
"936 416 OFFCURVE",
"936 291 QCURVE SMOOTH",
"936 -270 LINE SMOOTH",
"936 -395 OFFCURVE",
"770 -537 OFFCURVE",
"606 -537 QCURVE SMOOTH",
"442 -537 OFFCURVE",
"278 -395 OFFCURVE",
"278 -270 QCURVE",
"225 -270 LINE",
"225 -426 OFFCURVE",
"430 -590 OFFCURVE",
"606 -590 QCURVE",
"606 -590 LINE"
);
},
{
closed = 1;
nodes = (
"1677 -590 LINE",
"1677 -537 LINE",
"1577 -537 LINE",
"1577 291 LINE SMOOTH",
"1577 418 OFFCURVE",
"1714 557 OFFCURVE",
"1845 557 QCURVE SMOOTH",
"1976 557 OFFCURVE",
"2113 485 OFFCURVE",
"2113 436 QCURVE SMOOTH",
"2113 -590 LINE",
"2167 -590 LINE",
"2167 436 LINE SMOOTH",
"2167 485 OFFCURVE",
"2300 557 OFFCURVE",
"2433 557 QCURVE SMOOTH",
"2564 557 OFFCURVE",
"2701 424 OFFCURVE",
"2701 311 QCURVE SMOOTH",
"2701 -590 LINE",
"2754 -590 LINE",
"2754 311 LINE SMOOTH",
"2754 461 OFFCURVE",
"2566 610 OFFCURVE",
"2433 610 QCURVE SMOOTH",
"2234 610 OFFCURVE",
"2138 520 QCURVE",
"2042 610 OFFCURVE",
"1845 610 QCURVE SMOOTH",
"1712 610 OFFCURVE",
"1523 461 OFFCURVE",
"1523 301 QCURVE SMOOTH",
"1523 -590 LINE",
"1523 -590 LINE"
);
}
);
width = 3063;
}
);
note = uni19FD;
unicode = 19FD;
},
{
glyphname = uni19FE;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1694 903 LINE",
"1694 2103 LINE",
"1323 2103 LINE",
"1317 2013 OFFCURVE",
"1257 1862 OFFCURVE",
"1163 1767 OFFCURVE",
"1104 1767 QCURVE SMOOTH",
"1061 1767 OFFCURVE",
"1061 1802 QCURVE SMOOTH",
"1061 1837 OFFCURVE",
"1096 1837 QCURVE SMOOTH",
"1106 1837 LINE",
"1106 2103 LINE",
"1026 2103 LINE SMOOTH",
"911 2103 OFFCURVE",
"770 2028 OFFCURVE",
"709 1903 OFFCURVE",
"709 1825 QCURVE SMOOTH",
"709 1726 OFFCURVE",
"815 1587 OFFCURVE",
"965 1516 OFFCURVE",
"1034 1516 QCURVE SMOOTH",
"1114 1516 OFFCURVE",
"1216 1544 OFFCURVE",
"1288 1597 OFFCURVE",
"1323 1632 QCURVE",
"1323 903 LINE",
"1323 903 LINE"
);
},
{
closed = 1;
nodes = (
"1255 -590 OFFCURVE",
"1255 -270 QCURVE SMOOTH",
"1255 291 LINE SMOOTH",
"1255 610 OFFCURVE",
"713 610 QCURVE SMOOTH",
"172 610 OFFCURVE",
"172 291 QCURVE SMOOTH",
"172 170 LINE SMOOTH",
"172 66 OFFCURVE",
"254 -39 OFFCURVE",
"393 -74 OFFCURVE",
"479 -74 QCURVE SMOOTH",
"713 -74 LINE",
"713 193 LINE",
"623 193 LINE SMOOTH",
"563 193 OFFCURVE",
"543 246 OFFCURVE",
"543 272 QCURVE SMOOTH",
"543 291 LINE SMOOTH",
"543 381 OFFCURVE",
"713 381 QCURVE SMOOTH",
"887 381 OFFCURVE",
"887 291 QCURVE SMOOTH",
"887 -270 LINE SMOOTH",
"887 -360 OFFCURVE",
"713 -360 QCURVE SMOOTH",
"543 -360 OFFCURVE",
"543 -268 QCURVE",
"172 -268 LINE",
"172 -590 OFFCURVE",
"713 -590 QCURVE",
"713 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2529 -590 LINE",
"2599 -408 LINE",
"2458 -92 LINE",
"2458 80 LINE",
"2582 80 LINE",
"2582 348 LINE",
"2470 348 LINE SMOOTH",
"2370 348 OFFCURVE",
"2195 334 OFFCURVE",
"2091 274 OFFCURVE",
"2091 211 QCURVE SMOOTH",
"2091 -141 LINE",
"2269 -360 LINE",
"2040 -360 LINE SMOOTH",
"1870 -360 OFFCURVE",
"1870 -190 QCURVE SMOOTH",
"1870 721 LINE SMOOTH",
"1870 797 OFFCURVE",
"1798 870 OFFCURVE",
"1716 870 QCURVE SMOOTH",
"1399 870 LINE",
"1399 641 LINE",
"1499 641 LINE",
"1499 -190 LINE SMOOTH",
"1499 -590 OFFCURVE",
"2040 -590 QCURVE",
"2040 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1657 903 LINE",
"1657 2103 LINE",
"1358 2103 LINE",
"1317 1964 OFFCURVE",
"1188 1794 OFFCURVE",
"1093 1794 QCURVE SMOOTH",
"1032 1794 OFFCURVE",
"1032 1841 QCURVE SMOOTH",
"1032 1862 OFFCURVE",
"1059 1888 OFFCURVE",
"1083 1888 QCURVE SMOOTH",
"1102 1888 LINE",
"1102 2103 LINE",
"1032 2103 LINE SMOOTH",
"887 2103 OFFCURVE",
"745 1966 OFFCURVE",
"745 1855 QCURVE SMOOTH",
"745 1774 OFFCURVE",
"831 1653 OFFCURVE",
"968 1587 OFFCURVE",
"1046 1587 QCURVE SMOOTH",
"1165 1587 OFFCURVE",
"1304 1657 OFFCURVE",
"1358 1716 QCURVE",
"1358 903 LINE",
"1358 903 LINE"
);
},
{
closed = 1;
nodes = (
"1194 -590 OFFCURVE",
"1194 -270 QCURVE SMOOTH",
"1194 291 LINE SMOOTH",
"1194 610 OFFCURVE",
"688 610 QCURVE SMOOTH",
"182 610 OFFCURVE",
"182 291 QCURVE SMOOTH",
"182 170 LINE SMOOTH",
"182 29 OFFCURVE",
"354 -72 OFFCURVE",
"493 -72 QCURVE SMOOTH",
"688 -72 LINE",
"688 152 LINE",
"579 152 LINE SMOOTH",
"520 152 OFFCURVE",
"481 201 OFFCURVE",
"481 233 QCURVE SMOOTH",
"481 291 LINE SMOOTH",
"481 418 OFFCURVE",
"688 418 QCURVE SMOOTH",
"897 418 OFFCURVE",
"897 291 QCURVE SMOOTH",
"897 -270 LINE SMOOTH",
"897 -397 OFFCURVE",
"688 -397 QCURVE SMOOTH",
"481 -397 OFFCURVE",
"481 -268 QCURVE",
"182 -268 LINE",
"182 -590 OFFCURVE",
"688 -590 QCURVE",
"688 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2459 -590 LINE",
"2521 -426 LINE",
"2353 -92 LINE",
"2353 131 LINE",
"2511 131 LINE",
"2511 348 LINE",
"2365 348 LINE SMOOTH",
"2277 348 OFFCURVE",
"2138 328 OFFCURVE",
"2056 270 OFFCURVE",
"2056 211 QCURVE SMOOTH",
"2056 -141 LINE",
"2269 -397 LINE",
"2005 -397 LINE SMOOTH",
"1798 -397 OFFCURVE",
"1798 -190 QCURVE SMOOTH",
"1798 721 LINE SMOOTH",
"1798 797 OFFCURVE",
"1738 870 OFFCURVE",
"1663 870 QCURVE SMOOTH",
"1399 870 LINE",
"1399 678 LINE",
"1499 678 LINE",
"1499 -190 LINE SMOOTH",
"1499 -590 OFFCURVE",
"2005 -590 QCURVE",
"2005 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 -452 OFFCURVE",
"650 -452 QCURVE SMOOTH",
"388 -452 OFFCURVE",
"388 -270 QCURVE",
"200 -270 LINE",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1100 -590 OFFCURVE",
"1100 -270 QCURVE SMOOTH",
"1100 290 LINE SMOOTH",
"1100 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 290 QCURVE SMOOTH",
"200 170 LINE SMOOTH",
"200 -70 OFFCURVE",
"515 -70 QCURVE SMOOTH",
"650 -70 LINE",
"650 90 LINE",
"515 90 LINE SMOOTH",
"388 90 OFFCURVE",
"388 170 QCURVE SMOOTH",
"388 290 LINE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 290 QCURVE SMOOTH",
"912 -270 LINE",
"912 -270 LINE"
);
},
{
closed = 1;
nodes = (
"1600 2000 LINE",
"1412 2000 LINE",
"1328 1869 LINE SMOOTH",
"1243 1738 OFFCURVE",
"1066 1738 QCURVE SMOOTH",
"988 1738 OFFCURVE",
"988 1820 QCURVE SMOOTH",
"988 1862 OFFCURVE",
"1042 1862 QCURVE SMOOTH",
"1095 1862 LINE",
"1095 2000 LINE",
"1042 2000 LINE SMOOTH",
"800 2000 OFFCURVE",
"800 1820 QCURVE SMOOTH",
"800 1600 OFFCURVE",
"1066 1600 QCURVE SMOOTH",
"1303 1600 OFFCURVE",
"1412 1746 QCURVE",
"1412 870 LINE",
"1400 870 LINE",
"1400 710 LINE",
"1500 710 LINE",
"1500 -190 LINE SMOOTH",
"1500 -590 OFFCURVE",
"1950 -590 QCURVE SMOOTH",
"2350 -590 LINE",
"2400 -452 LINE",
"2188 -92 LINE",
"2188 210 LINE",
"2400 210 LINE",
"2400 348 LINE",
"2200 348 LINE SMOOTH",
"2100 348 OFFCURVE",
"2000 285 OFFCURVE",
"2000 210 QCURVE SMOOTH",
"2000 -142 LINE",
"2270 -452 LINE",
"1950 -452 LINE SMOOTH",
"1688 -452 OFFCURVE",
"1688 -190 QCURVE SMOOTH",
"1688 720 LINE SMOOTH",
"1688 823 OFFCURVE",
"1600 855 QCURVE",
"1600 855 LINE"
);
}
);
width = 2600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1566 903 LINE",
"1566 2103 LINE",
"1443 2103 LINE",
"1371 1980 OFFCURVE",
"1197 1810 OFFCURVE",
"1084 1810 QCURVE SMOOTH",
"1011 1810 OFFCURVE",
"953 1882 OFFCURVE",
"953 1919 QCURVE SMOOTH",
"953 1950 OFFCURVE",
"1009 2009 OFFCURVE",
"1070 2009 QCURVE SMOOTH",
"1097 2009 LINE",
"1097 2103 LINE",
"1070 2103 LINE SMOOTH",
"960 2103 OFFCURVE",
"835 2009 OFFCURVE",
"835 1915 QCURVE SMOOTH",
"835 1829 OFFCURVE",
"962 1714 OFFCURVE",
"1078 1714 QCURVE SMOOTH",
"1158 1714 OFFCURVE",
"1295 1778 OFFCURVE",
"1406 1874 OFFCURVE",
"1443 1927 QCURVE",
"1443 903 LINE",
"1443 903 LINE"
);
},
{
closed = 1;
nodes = (
"828 -590 OFFCURVE",
"1043 -428 OFFCURVE",
"1043 -270 QCURVE SMOOTH",
"1043 291 LINE SMOOTH",
"1043 610 OFFCURVE",
"626 610 QCURVE SMOOTH",
"423 610 OFFCURVE",
"212 451 OFFCURVE",
"212 291 QCURVE SMOOTH",
"212 156 LINE SMOOTH",
"212 47 OFFCURVE",
"347 -70 OFFCURVE",
"466 -70 QCURVE SMOOTH",
"626 -70 LINE",
"626 35 LINE",
"466 35 LINE SMOOTH",
"398 35 OFFCURVE",
"331 109 OFFCURVE",
"331 156 QCURVE SMOOTH",
"331 291 LINE SMOOTH",
"331 397 OFFCURVE",
"478 516 OFFCURVE",
"626 516 QCURVE SMOOTH",
"775 516 OFFCURVE",
"923 397 OFFCURVE",
"923 291 QCURVE SMOOTH",
"923 -270 LINE SMOOTH",
"923 -377 OFFCURVE",
"775 -496 OFFCURVE",
"626 -496 QCURVE SMOOTH",
"478 -496 OFFCURVE",
"331 -377 OFFCURVE",
"331 -270 QCURVE",
"212 -270 LINE",
"212 -426 OFFCURVE",
"425 -590 OFFCURVE",
"626 -590 QCURVE",
"626 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2291 -590 LINE",
"2338 -489 LINE",
"2100 -109 LINE",
"2100 254 LINE",
"2344 254 LINE",
"2344 348 LINE",
"2131 348 LINE SMOOTH",
"2045 348 OFFCURVE",
"1979 299 OFFCURVE",
"1979 238 QCURVE SMOOTH",
"1979 -141 LINE",
"2246 -496 LINE",
"1926 -496 LINE SMOOTH",
"1779 -496 OFFCURVE",
"1631 -338 OFFCURVE",
"1631 -190 QCURVE SMOOTH",
"1631 770 LINE SMOOTH",
"1631 823 OFFCURVE",
"1596 870 OFFCURVE",
"1551 870 QCURVE SMOOTH",
"1410 870 LINE",
"1410 774 LINE",
"1512 774 LINE",
"1512 -190 LINE SMOOTH",
"1512 -389 OFFCURVE",
"1725 -590 OFFCURVE",
"1926 -590 QCURVE",
"1926 -590 LINE"
);
}
);
width = 2600;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1532 903 LINE",
"1532 2103 LINE",
"1478 2103 LINE",
"1439 2040 OFFCURVE",
"1325 1892 OFFCURVE",
"1177 1786 OFFCURVE",
"1093 1786 QCURVE SMOOTH",
"1026 1786 OFFCURVE",
"952 1833 OFFCURVE",
"921 1901 OFFCURVE",
"921 1931 QCURVE SMOOTH",
"921 1968 OFFCURVE",
"993 2050 OFFCURVE",
"1081 2050 QCURVE SMOOTH",
"1099 2050 LINE",
"1099 2103 LINE",
"1097 2103 LINE SMOOTH",
"983 2103 OFFCURVE",
"868 2009 OFFCURVE",
"868 1929 QCURVE SMOOTH",
"868 1833 OFFCURVE",
"997 1733 OFFCURVE",
"1091 1733 QCURVE SMOOTH",
"1177 1733 OFFCURVE",
"1325 1823 OFFCURVE",
"1439 1948 OFFCURVE",
"1478 2005 QCURVE",
"1478 903 LINE",
"1478 903 LINE"
);
},
{
closed = 1;
nodes = (
"786 -590 OFFCURVE",
"989 -426 OFFCURVE",
"989 -270 QCURVE SMOOTH",
"989 291 LINE SMOOTH",
"989 446 OFFCURVE",
"790 610 OFFCURVE",
"606 610 QCURVE SMOOTH",
"424 610 OFFCURVE",
"225 451 OFFCURVE",
"225 291 QCURVE SMOOTH",
"225 139 LINE SMOOTH",
"225 43 OFFCURVE",
"340 -70 OFFCURVE",
"422 -70 QCURVE SMOOTH",
"606 -70 LINE",
"606 -16 LINE",
"418 -16 LINE SMOOTH",
"346 -16 OFFCURVE",
"278 86 OFFCURVE",
"278 139 QCURVE SMOOTH",
"278 291 LINE SMOOTH",
"278 416 OFFCURVE",
"442 557 OFFCURVE",
"606 557 QCURVE SMOOTH",
"770 557 OFFCURVE",
"936 416 OFFCURVE",
"936 291 QCURVE SMOOTH",
"936 -270 LINE SMOOTH",
"936 -395 OFFCURVE",
"770 -537 OFFCURVE",
"606 -537 QCURVE SMOOTH",
"442 -537 OFFCURVE",
"278 -395 OFFCURVE",
"278 -270 QCURVE",
"225 -270 LINE",
"225 -426 OFFCURVE",
"430 -590 OFFCURVE",
"606 -590 QCURVE",
"606 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2232 -590 LINE",
"2277 -526 LINE",
"2013 -125 LINE",
"2013 295 LINE",
"2287 295 LINE",
"2287 348 LINE",
"2062 348 LINE SMOOTH",
"1988 348 OFFCURVE",
"1960 313 OFFCURVE",
"1960 266 QCURVE SMOOTH",
"1960 -141 LINE",
"2220 -537 LINE",
"1904 -537 LINE SMOOTH",
"1741 -537 OFFCURVE",
"1577 -354 OFFCURVE",
"1577 -190 QCURVE SMOOTH",
"1577 817 LINE SMOOTH",
"1577 850 OFFCURVE",
"1550 870 OFFCURVE",
"1523 870 QCURVE SMOOTH",
"1423 870 LINE",
"1423 817 LINE",
"1523 817 LINE",
"1523 -190 LINE SMOOTH",
"1523 -389 OFFCURVE",
"1728 -590 OFFCURVE",
"1904 -590 QCURVE",
"1904 -590 LINE"
);
}
);
width = 2600;
}
);
note = uni19FE;
unicode = 19FE;
},
{
glyphname = uni19FF;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"1632 903 LINE",
"1632 2103 LINE",
"1262 2103 LINE",
"1255 2013 OFFCURVE",
"1196 1862 OFFCURVE",
"1102 1767 OFFCURVE",
"1042 1767 QCURVE SMOOTH",
"999 1767 OFFCURVE",
"999 1802 QCURVE SMOOTH",
"999 1837 OFFCURVE",
"1034 1837 QCURVE SMOOTH",
"1044 1837 LINE",
"1044 2103 LINE",
"965 2103 LINE SMOOTH",
"850 2103 OFFCURVE",
"709 2028 OFFCURVE",
"647 1903 OFFCURVE",
"647 1825 QCURVE SMOOTH",
"647 1726 OFFCURVE",
"754 1587 OFFCURVE",
"903 1516 OFFCURVE",
"973 1516 QCURVE SMOOTH",
"1053 1516 OFFCURVE",
"1155 1544 OFFCURVE",
"1227 1597 OFFCURVE",
"1262 1632 QCURVE",
"1262 903 LINE",
"1262 903 LINE"
);
},
{
closed = 1;
nodes = (
"1255 -590 OFFCURVE",
"1255 -270 QCURVE SMOOTH",
"1255 291 LINE SMOOTH",
"1255 610 OFFCURVE",
"713 610 QCURVE SMOOTH",
"172 610 OFFCURVE",
"172 291 QCURVE SMOOTH",
"172 170 LINE SMOOTH",
"172 66 OFFCURVE",
"254 -39 OFFCURVE",
"393 -74 OFFCURVE",
"479 -74 QCURVE SMOOTH",
"713 -74 LINE",
"713 193 LINE",
"623 193 LINE SMOOTH",
"563 193 OFFCURVE",
"543 246 OFFCURVE",
"543 272 QCURVE SMOOTH",
"543 291 LINE SMOOTH",
"543 381 OFFCURVE",
"713 381 QCURVE SMOOTH",
"887 381 OFFCURVE",
"887 291 QCURVE SMOOTH",
"887 -270 LINE SMOOTH",
"887 -360 OFFCURVE",
"713 -360 QCURVE SMOOTH",
"543 -360 OFFCURVE",
"543 -268 QCURVE",
"172 -268 LINE",
"172 -590 OFFCURVE",
"713 -590 QCURVE",
"713 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2501 -590 LINE",
"2572 -408 LINE",
"2435 -193 LINE",
"2435 -57 LINE",
"2556 -57 LINE",
"2556 211 LINE",
"2253 211 LINE SMOOTH",
"2152 211 OFFCURVE",
"2064 125 OFFCURVE",
"2064 10 QCURVE SMOOTH",
"2064 -221 LINE",
"2222 -360 LINE",
"2013 -360 LINE SMOOTH",
"1843 -360 OFFCURVE",
"1843 -260 QCURVE SMOOTH",
"1843 168 LINE SMOOTH",
"1843 227 OFFCURVE",
"1870 317 OFFCURVE",
"1886 336 QCURVE",
"1941 309 OFFCURVE",
"2042 279 OFFCURVE",
"2120 279 QCURVE SMOOTH",
"2347 279 OFFCURVE",
"2558 463 OFFCURVE",
"2558 618 QCURVE SMOOTH",
"2558 872 LINE",
"2187 872 LINE",
"2187 575 LINE SMOOTH",
"2187 530 OFFCURVE",
"2144 492 OFFCURVE",
"2124 487 QCURVE SMOOTH",
"2115 485 OFFCURVE",
"2105 485 QCURVE SMOOTH",
"2093 485 OFFCURVE",
"2079 488 QCURVE SMOOTH",
"2052 492 OFFCURVE",
"2015 506 QCURVE",
"2032 532 OFFCURVE",
"2060 596 OFFCURVE",
"2060 655 QCURVE SMOOTH",
"2060 705 OFFCURVE",
"2001 799 OFFCURVE",
"1890 862 OFFCURVE",
"1814 862 QCURVE SMOOTH",
"1726 862 OFFCURVE",
"1610 791 OFFCURVE",
"1550 688 OFFCURVE",
"1550 639 QCURVE SMOOTH",
"1550 573 OFFCURVE",
"1585 508 OFFCURVE",
"1610 475 QCURVE",
"1520 416 OFFCURVE",
"1472 270 OFFCURVE",
"1472 168 QCURVE SMOOTH",
"1472 -260 LINE SMOOTH",
"1472 -590 OFFCURVE",
"2013 -590 QCURVE",
"2013 -590 LINE"
);
}
);
width = 2744;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"1579 903 LINE",
"1579 2103 LINE",
"1280 2103 LINE",
"1239 1964 OFFCURVE",
"1110 1794 OFFCURVE",
"1016 1794 QCURVE SMOOTH",
"954 1794 OFFCURVE",
"954 1841 QCURVE SMOOTH",
"954 1862 OFFCURVE",
"981 1888 OFFCURVE",
"1005 1888 QCURVE SMOOTH",
"1024 1888 LINE",
"1024 2103 LINE",
"954 2103 LINE SMOOTH",
"809 2103 OFFCURVE",
"667 1966 OFFCURVE",
"667 1855 QCURVE SMOOTH",
"667 1774 OFFCURVE",
"753 1653 OFFCURVE",
"891 1587 OFFCURVE",
"968 1587 QCURVE SMOOTH",
"1087 1587 OFFCURVE",
"1226 1657 OFFCURVE",
"1280 1716 QCURVE",
"1280 903 LINE",
"1280 903 LINE"
);
},
{
closed = 1;
nodes = (
"1194 -590 OFFCURVE",
"1194 -270 QCURVE SMOOTH",
"1194 291 LINE SMOOTH",
"1194 610 OFFCURVE",
"688 610 QCURVE SMOOTH",
"182 610 OFFCURVE",
"182 291 QCURVE SMOOTH",
"182 170 LINE SMOOTH",
"182 29 OFFCURVE",
"354 -72 OFFCURVE",
"493 -72 QCURVE SMOOTH",
"688 -72 LINE",
"688 152 LINE",
"579 152 LINE SMOOTH",
"520 152 OFFCURVE",
"481 201 OFFCURVE",
"481 233 QCURVE SMOOTH",
"481 291 LINE SMOOTH",
"481 418 OFFCURVE",
"688 418 QCURVE SMOOTH",
"897 418 OFFCURVE",
"897 291 QCURVE SMOOTH",
"897 -270 LINE SMOOTH",
"897 -397 OFFCURVE",
"688 -397 QCURVE SMOOTH",
"481 -397 OFFCURVE",
"481 -268 QCURVE",
"182 -268 LINE",
"182 -590 OFFCURVE",
"688 -590 QCURVE",
"688 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2425 -590 LINE",
"2488 -426 LINE",
"2322 -193 LINE",
"2322 -6 LINE",
"2478 -6 LINE",
"2478 211 LINE",
"2212 211 LINE SMOOTH",
"2023 211 OFFCURVE",
"2023 10 QCURVE SMOOTH",
"2023 -221 LINE",
"2216 -397 LINE",
"1972 -397 LINE SMOOTH",
"1765 -397 OFFCURVE",
"1765 -260 QCURVE SMOOTH",
"1765 207 LINE SMOOTH",
"1765 266 OFFCURVE",
"1802 348 OFFCURVE",
"1829 369 QCURVE",
"1892 340 OFFCURVE",
"2009 307 OFFCURVE",
"2087 307 QCURVE SMOOTH",
"2279 307 OFFCURVE",
"2480 475 OFFCURVE",
"2480 618 QCURVE SMOOTH",
"2480 872 LINE",
"2181 872 LINE",
"2181 592 LINE SMOOTH",
"2181 545 OFFCURVE",
"2126 492 OFFCURVE",
"2085 489 QCURVE SMOOTH",
"2077 488 OFFCURVE",
"2069 488 QCURVE SMOOTH",
"2051 488 OFFCURVE",
"2032 492 QCURVE SMOOTH",
"2003 496 OFFCURVE",
"1962 510 QCURVE",
"1982 537 OFFCURVE",
"2011 598 OFFCURVE",
"2011 651 QCURVE SMOOTH",
"2011 694 OFFCURVE",
"1960 780 OFFCURVE",
"1861 838 OFFCURVE",
"1790 838 QCURVE SMOOTH",
"1714 838 OFFCURVE",
"1609 776 OFFCURVE",
"1556 684 OFFCURVE",
"1556 637 QCURVE SMOOTH",
"1556 584 OFFCURVE",
"1587 520 OFFCURVE",
"1612 492 QCURVE",
"1523 438 OFFCURVE",
"1466 309 OFFCURVE",
"1466 207 QCURVE SMOOTH",
"1466 -260 LINE SMOOTH",
"1466 -590 OFFCURVE",
"1972 -590 QCURVE",
"1972 -590 LINE"
);
}
);
width = 2672;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"912 -452 OFFCURVE",
"650 -452 QCURVE SMOOTH",
"388 -452 OFFCURVE",
"388 -270 QCURVE",
"200 -270 LINE",
"200 -590 OFFCURVE",
"650 -590 QCURVE SMOOTH",
"1100 -590 OFFCURVE",
"1100 -270 QCURVE SMOOTH",
"1100 290 LINE SMOOTH",
"1100 610 OFFCURVE",
"650 610 QCURVE SMOOTH",
"200 610 OFFCURVE",
"200 290 QCURVE SMOOTH",
"200 170 LINE SMOOTH",
"200 -70 OFFCURVE",
"515 -70 QCURVE SMOOTH",
"650 -70 LINE",
"650 90 LINE",
"515 90 LINE SMOOTH",
"388 90 OFFCURVE",
"388 170 QCURVE SMOOTH",
"388 290 LINE SMOOTH",
"388 472 OFFCURVE",
"650 472 QCURVE SMOOTH",
"912 472 OFFCURVE",
"912 290 QCURVE SMOOTH",
"912 -270 LINE",
"912 -270 LINE"
);
},
{
closed = 1;
nodes = (
"1688 300 LINE SMOOTH",
"1688 349 OFFCURVE",
"1736 395 OFFCURVE",
"1772 414 QCURVE",
"1914 365 OFFCURVE",
"2070 365 QCURVE SMOOTH",
"2228 365 OFFCURVE",
"2311 435 QCURVE",
"2400 496 OFFCURVE",
"2400 619 QCURVE SMOOTH",
"2400 980 LINE",
"2212 980 LINE",
"2212 619 LINE SMOOTH",
"2212 569 OFFCURVE",
"2140 503 OFFCURVE",
"2070 503 QCURVE SMOOTH",
"1996 503 OFFCURVE",
"1895 533 QCURVE",
"1970 584 OFFCURVE",
"1970 636 QCURVE SMOOTH",
"1970 780 OFFCURVE",
"1780 780 QCURVE SMOOTH",
"1600 780 OFFCURVE",
"1600 636 QCURVE SMOOTH",
"1600 574 OFFCURVE",
"1668 517 QCURVE",
"1647 510 OFFCURVE",
"1625 500 QCURVE SMOOTH",
"1500 447 OFFCURVE",
"1500 300 QCURVE SMOOTH",
"1500 -260 LINE SMOOTH",
"1500 -590 OFFCURVE",
"1950 -590 QCURVE SMOOTH",
"2348 -590 LINE",
"2400 -452 LINE",
"2188 -192 LINE",
"2188 72 LINE",
"2400 72 LINE",
"2400 210 LINE",
"2188 210 LINE SMOOTH",
"2100 210 OFFCURVE",
"2000 85 OFFCURVE",
"2000 10 QCURVE SMOOTH",
"2000 -222 LINE",
"2250 -452 LINE",
"1950 -452 LINE SMOOTH",
"1688 -452 OFFCURVE",
"1688 -260 QCURVE",
"1688 -260 LINE"
);
},
{
closed = 1;
nodes = (
"1095 1862 LINE",
"1095 2000 LINE",
"1042 2000 LINE SMOOTH",
"800 2000 OFFCURVE",
"800 1820 QCURVE SMOOTH",
"800 1600 OFFCURVE",
"1066 1600 QCURVE SMOOTH",
"1303 1600 OFFCURVE",
"1412 1746 QCURVE",
"1412 800 LINE",
"1600 800 LINE",
"1600 2000 LINE",
"1412 2000 LINE",
"1328 1869 LINE SMOOTH",
"1243 1738 OFFCURVE",
"1066 1738 QCURVE SMOOTH",
"988 1738 OFFCURVE",
"988 1820 QCURVE SMOOTH",
"988 1862 OFFCURVE",
"1042 1862 QCURVE",
"1042 1862 LINE"
);
}
);
width = 2600;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"1484 852 LINE",
"1484 2052 LINE",
"1361 2052 LINE",
"1289 1929 OFFCURVE",
"1115 1759 OFFCURVE",
"1003 1759 QCURVE SMOOTH",
"929 1759 OFFCURVE",
"871 1831 OFFCURVE",
"871 1868 QCURVE SMOOTH",
"871 1898 OFFCURVE",
"927 1958 OFFCURVE",
"988 1958 QCURVE SMOOTH",
"1015 1958 LINE",
"1015 2052 LINE",
"988 2052 LINE SMOOTH",
"878 2052 OFFCURVE",
"753 1958 OFFCURVE",
"753 1864 QCURVE SMOOTH",
"753 1778 OFFCURVE",
"880 1663 OFFCURVE",
"996 1663 QCURVE SMOOTH",
"1076 1663 OFFCURVE",
"1213 1726 OFFCURVE",
"1324 1823 OFFCURVE",
"1361 1876 QCURVE",
"1361 852 LINE",
"1361 852 LINE"
);
},
{
closed = 1;
nodes = (
"828 -590 OFFCURVE",
"1043 -428 OFFCURVE",
"1043 -270 QCURVE SMOOTH",
"1043 291 LINE SMOOTH",
"1043 610 OFFCURVE",
"626 610 QCURVE SMOOTH",
"423 610 OFFCURVE",
"212 451 OFFCURVE",
"212 291 QCURVE SMOOTH",
"212 156 LINE SMOOTH",
"212 47 OFFCURVE",
"347 -70 OFFCURVE",
"466 -70 QCURVE SMOOTH",
"626 -70 LINE",
"626 35 LINE",
"466 35 LINE SMOOTH",
"398 35 OFFCURVE",
"331 109 OFFCURVE",
"331 156 QCURVE SMOOTH",
"331 291 LINE SMOOTH",
"331 397 OFFCURVE",
"478 516 OFFCURVE",
"626 516 QCURVE SMOOTH",
"775 516 OFFCURVE",
"923 397 OFFCURVE",
"923 291 QCURVE SMOOTH",
"923 -270 LINE SMOOTH",
"923 -377 OFFCURVE",
"775 -496 OFFCURVE",
"626 -496 QCURVE SMOOTH",
"478 -496 OFFCURVE",
"331 -377 OFFCURVE",
"331 -270 QCURVE",
"212 -270 LINE",
"212 -426 OFFCURVE",
"425 -590 OFFCURVE",
"626 -590 QCURVE",
"626 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2270 -590 LINE",
"2319 -489 LINE",
"2082 -160 LINE",
"2082 115 LINE",
"2323 115 LINE",
"2323 211 LINE",
"2090 211 LINE SMOOTH",
"2020 211 OFFCURVE",
"1959 131 OFFCURVE",
"1959 70 QCURVE SMOOTH",
"1959 -180 LINE",
"2215 -496 LINE",
"1906 -496 LINE SMOOTH",
"1758 -496 OFFCURVE",
"1611 -354 OFFCURVE",
"1611 -225 QCURVE SMOOTH",
"1611 266 LINE SMOOTH",
"1611 344 OFFCURVE",
"1687 430 OFFCURVE",
"1732 453 QCURVE",
"1869 379 OFFCURVE",
"2020 379 QCURVE SMOOTH",
"2098 379 OFFCURVE",
"2237 436 OFFCURVE",
"2323 545 OFFCURVE",
"2323 618 QCURVE SMOOTH",
"2323 872 LINE",
"2203 872 LINE",
"2203 618 LINE SMOOTH",
"2203 563 OFFCURVE",
"2094 475 OFFCURVE",
"2016 475 QCURVE SMOOTH",
"1967 475 OFFCURVE",
"1871 492 OFFCURVE",
"1828 512 QCURVE",
"1848 532 OFFCURVE",
"1873 578 OFFCURVE",
"1873 610 QCURVE SMOOTH",
"1873 653 OFFCURVE",
"1807 725 OFFCURVE",
"1742 725 QCURVE SMOOTH",
"1680 725 OFFCURVE",
"1611 655 OFFCURVE",
"1611 606 QCURVE SMOOTH",
"1611 557 OFFCURVE",
"1648 520 QCURVE",
"1560 479 OFFCURVE",
"1492 354 OFFCURVE",
"1492 272 QCURVE SMOOTH",
"1492 -225 LINE SMOOTH",
"1492 -406 OFFCURVE",
"1705 -590 OFFCURVE",
"1910 -590 QCURVE",
"1910 -590 LINE"
);
}
);
width = 2537;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"1470 801 LINE",
"1470 2001 LINE",
"1417 2001 LINE",
"1378 1937 OFFCURVE",
"1263 1790 OFFCURVE",
"1116 1683 OFFCURVE",
"1032 1683 QCURVE SMOOTH",
"964 1683 OFFCURVE",
"891 1731 OFFCURVE",
"860 1798 OFFCURVE",
"860 1829 QCURVE SMOOTH",
"860 1866 OFFCURVE",
"932 1948 OFFCURVE",
"1020 1948 QCURVE SMOOTH",
"1038 1948 LINE",
"1038 2001 LINE",
"1036 2001 LINE SMOOTH",
"921 2001 OFFCURVE",
"807 1907 OFFCURVE",
"807 1827 QCURVE SMOOTH",
"807 1731 OFFCURVE",
"936 1630 OFFCURVE",
"1030 1630 QCURVE SMOOTH",
"1116 1630 OFFCURVE",
"1263 1720 OFFCURVE",
"1378 1845 OFFCURVE",
"1417 1903 QCURVE",
"1417 801 LINE",
"1417 801 LINE"
);
},
{
closed = 1;
nodes = (
"786 -590 OFFCURVE",
"989 -426 OFFCURVE",
"989 -270 QCURVE SMOOTH",
"989 291 LINE SMOOTH",
"989 446 OFFCURVE",
"790 610 OFFCURVE",
"606 610 QCURVE SMOOTH",
"424 610 OFFCURVE",
"225 451 OFFCURVE",
"225 291 QCURVE SMOOTH",
"225 139 LINE SMOOTH",
"225 43 OFFCURVE",
"340 -70 OFFCURVE",
"422 -70 QCURVE SMOOTH",
"606 -70 LINE",
"606 -16 LINE",
"418 -16 LINE SMOOTH",
"346 -16 OFFCURVE",
"278 86 OFFCURVE",
"278 139 QCURVE SMOOTH",
"278 291 LINE SMOOTH",
"278 416 OFFCURVE",
"442 557 OFFCURVE",
"606 557 QCURVE SMOOTH",
"770 557 OFFCURVE",
"936 416 OFFCURVE",
"936 291 QCURVE SMOOTH",
"936 -270 LINE SMOOTH",
"936 -395 OFFCURVE",
"770 -537 OFFCURVE",
"606 -537 QCURVE SMOOTH",
"442 -537 OFFCURVE",
"278 -395 OFFCURVE",
"278 -270 QCURVE",
"225 -270 LINE",
"225 -426 OFFCURVE",
"430 -590 OFFCURVE",
"606 -590 QCURVE",
"606 -590 LINE"
);
},
{
closed = 1;
nodes = (
"2234 -590 LINE",
"2279 -526 LINE",
"2015 -125 LINE",
"2015 158 LINE",
"2289 158 LINE",
"2289 211 LINE",
"2031 211 LINE SMOOTH",
"1982 211 OFFCURVE",
"1962 176 OFFCURVE",
"1962 129 QCURVE SMOOTH",
"1962 -141 LINE",
"2222 -537 LINE",
"1906 -537 LINE SMOOTH",
"1743 -537 OFFCURVE",
"1579 -354 OFFCURVE",
"1579 -190 QCURVE SMOOTH",
"1579 264 LINE SMOOTH",
"1579 362 OFFCURVE",
"1673 467 OFFCURVE",
"1722 485 QCURVE",
"1784 446 OFFCURVE",
"1941 403 OFFCURVE",
"2007 403 QCURVE SMOOTH",
"2072 403 OFFCURVE",
"2203 459 OFFCURVE",
"2289 557 OFFCURVE",
"2289 618 QCURVE SMOOTH",
"2289 872 LINE",
"2236 872 LINE",
"2236 618 LINE SMOOTH",
"2236 578 OFFCURVE",
"2171 504 OFFCURVE",
"2066 457 OFFCURVE",
"2007 457 QCURVE SMOOTH",
"1945 457 OFFCURVE",
"1818 483 OFFCURVE",
"1779 510 QCURVE",
"1796 522 OFFCURVE",
"1814 553 OFFCURVE",
"1814 580 QCURVE SMOOTH",
"1814 606 OFFCURVE",
"1769 655 OFFCURVE",
"1732 655 QCURVE SMOOTH",
"1702 655 OFFCURVE",
"1657 612 OFFCURVE",
"1657 580 QCURVE SMOOTH",
"1657 561 OFFCURVE",
"1669 537 OFFCURVE",
"1681 522 QCURVE",
"1587 479 OFFCURVE",
"1525 340 OFFCURVE",
"1525 276 QCURVE SMOOTH",
"1525 -190 LINE SMOOTH",
"1525 -389 OFFCURVE",
"1728 -590 OFFCURVE",
"1913 -590 QCURVE",
"1913 -590 LINE"
);
}
);
width = 2514;
}
);
note = uni19FF;
unicode = 19FF;
},
{
glyphname = uni200C;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"-43 1286 LINE",
"-43 -272 LINE",
"43 -272 LINE",
"43 1286 LINE",
"43 1286 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */\0122 1 1 0 1 133 0 0 0 118 0 0 0 3 0 3 17 3 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"-43 1286 LINE",
"-43 -272 LINE",
"43 -272 LINE",
"43 1286 LINE",
"43 1286 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */\0122 1 1 0 1 133 0 0 0 118 0 0 0 3 0 3 17 3 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"-43 1286 LINE",
"-43 -272 LINE",
"43 -272 LINE",
"43 1286 LINE",
"43 1286 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */\0122 1 1 0 1 133 0 0 0 118 0 0 0 3 0 3 17 3 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"-43 1286 LINE",
"-43 -272 LINE",
"43 -272 LINE",
"43 1286 LINE",
"43 1286 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */\0122 1 1 0 1 133 0 0 0 118 0 0 0 3 0 3 17 3 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"-43 1286 LINE",
"-43 -272 LINE",
"43 -272 LINE",
"43 1286 LINE",
"43 1286 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */\0122 1 1 0 1 133 0 0 0 118 0 0 0 3 0 3 17 3 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni200C;
unicode = 200C;
},
{
glyphname = uni200D;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"43 1096 LINE",
"170 969 LINE",
"223 1024 LINE",
"55 1192 LINE",
"223 1358 LINE",
"170 1413 LINE",
"0 1243 LINE",
"-170 1413 LINE",
"-223 1358 LINE",
"-55 1192 LINE",
"-223 1024 LINE",
"-170 969 LINE",
"-43 1096 LINE",
"-43 -272 LINE",
"43 -272 LINE",
"43 -272 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */\01214 13 12 11 10 9 8 7 6 5 4 3 2 13 0 74 0 0 0 118 16 1 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"43 1096 LINE",
"170 969 LINE",
"223 1024 LINE",
"55 1192 LINE",
"223 1358 LINE",
"170 1413 LINE",
"0 1243 LINE",
"-170 1413 LINE",
"-223 1358 LINE",
"-55 1192 LINE",
"-223 1024 LINE",
"-170 969 LINE",
"-43 1096 LINE",
"-43 -272 LINE",
"43 -272 LINE",
"43 -272 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */\01214 13 12 11 10 9 8 7 6 5 4 3 2 13 0 74 0 0 0 118 16 1 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"43 1096 LINE",
"170 969 LINE",
"223 1024 LINE",
"55 1192 LINE",
"223 1358 LINE",
"170 1413 LINE",
"0 1243 LINE",
"-170 1413 LINE",
"-223 1358 LINE",
"-55 1192 LINE",
"-223 1024 LINE",
"-170 969 LINE",
"-43 1096 LINE",
"-43 -272 LINE",
"43 -272 LINE",
"43 -272 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */\01214 13 12 11 10 9 8 7 6 5 4 3 2 13 0 74 0 0 0 118 16 1 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"43 1096 LINE",
"170 969 LINE",
"223 1024 LINE",
"55 1192 LINE",
"223 1358 LINE",
"170 1413 LINE",
"0 1243 LINE",
"-170 1413 LINE",
"-223 1358 LINE",
"-55 1192 LINE",
"-223 1024 LINE",
"-170 969 LINE",
"-43 1096 LINE",
"-43 -272 LINE",
"43 -272 LINE",
"43 -272 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */\01214 13 12 11 10 9 8 7 6 5 4 3 2 13 0 74 0 0 0 118 16 1 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"43 1096 LINE",
"170 969 LINE",
"223 1024 LINE",
"55 1192 LINE",
"223 1358 LINE",
"170 1413 LINE",
"0 1243 LINE",
"-170 1413 LINE",
"-223 1358 LINE",
"-55 1192 LINE",
"-223 1024 LINE",
"-170 969 LINE",
"-43 1096 LINE",
"-43 -272 LINE",
"43 -272 LINE",
"43 -272 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */\01214 13 12 11 10 9 8 7 6 5 4 3 2 13 0 74 0 0 0 118 16 1 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni200D;
unicode = 200D;
},
{
glyphname = uni25CC;
lastChange = "2020-02-04 08:34:44 +0000";
layers = (
{
layerId = "372009DC-CA12-41C8-98C7-C44FC6D5F55D";
paths = (
{
closed = 1;
nodes = (
"983 973 OFFCURVE",
"932 973 QCURVE SMOOTH",
"877 973 OFFCURVE",
"877 918 QCURVE SMOOTH",
"877 864 OFFCURVE",
"932 864 QCURVE SMOOTH",
"983 864 OFFCURVE",
"983 918 QCURVE",
"983 918 LINE"
);
},
{
closed = 1;
nodes = (
"836 1071 OFFCURVE",
"784 1071 QCURVE SMOOTH",
"727 1071 OFFCURVE",
"727 1016 QCURVE SMOOTH",
"727 963 OFFCURVE",
"784 963 QCURVE SMOOTH",
"836 963 OFFCURVE",
"836 1016 QCURVE",
"836 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1083 823 OFFCURVE",
"1030 823 QCURVE SMOOTH",
"975 823 OFFCURVE",
"975 770 QCURVE SMOOTH",
"975 715 OFFCURVE",
"1028 715 QCURVE SMOOTH",
"1083 715 OFFCURVE",
"1083 770 QCURVE",
"1083 770 LINE"
);
},
{
closed = 1;
nodes = (
"1118 649 OFFCURVE",
"1067 649 QCURVE SMOOTH",
"1012 649 OFFCURVE",
"1012 596 QCURVE SMOOTH",
"1012 543 OFFCURVE",
"1067 543 QCURVE SMOOTH",
"1118 543 OFFCURVE",
"1118 596 QCURVE",
"1118 596 LINE"
);
},
{
closed = 1;
nodes = (
"662 1106 OFFCURVE",
"608 1106 QCURVE SMOOTH",
"555 1106 OFFCURVE",
"555 1053 QCURVE SMOOTH",
"555 997 OFFCURVE",
"608 997 QCURVE SMOOTH",
"662 997 OFFCURVE",
"662 1053 QCURVE",
"662 1053 LINE"
);
},
{
closed = 1;
nodes = (
"489 1071 OFFCURVE",
"434 1071 QCURVE SMOOTH",
"381 1071 OFFCURVE",
"381 1016 QCURVE SMOOTH",
"381 963 OFFCURVE",
"434 963 QCURVE SMOOTH",
"489 963 OFFCURVE",
"489 1016 QCURVE",
"489 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1083 477 OFFCURVE",
"1028 477 QCURVE SMOOTH",
"975 477 OFFCURVE",
"975 422 QCURVE SMOOTH",
"975 369 OFFCURVE",
"1028 369 QCURVE SMOOTH",
"1083 369 OFFCURVE",
"1083 422 QCURVE",
"1083 422 LINE"
);
},
{
closed = 1;
nodes = (
"342 973 OFFCURVE",
"287 973 QCURVE SMOOTH",
"233 973 OFFCURVE",
"233 915 QCURVE SMOOTH",
"233 864 OFFCURVE",
"287 864 QCURVE SMOOTH",
"342 864 OFFCURVE",
"342 918 QCURVE",
"342 918 LINE"
);
},
{
closed = 1;
nodes = (
"983 328 OFFCURVE",
"932 328 QCURVE SMOOTH",
"877 328 OFFCURVE",
"877 272 QCURVE SMOOTH",
"877 219 OFFCURVE",
"932 219 QCURVE SMOOTH",
"983 219 OFFCURVE",
"983 272 QCURVE",
"983 272 LINE"
);
},
{
closed = 1;
nodes = (
"836 229 OFFCURVE",
"784 229 QCURVE SMOOTH",
"727 229 OFFCURVE",
"727 174 QCURVE SMOOTH",
"727 123 OFFCURVE",
"784 123 QCURVE SMOOTH",
"836 123 OFFCURVE",
"836 174 QCURVE",
"836 174 LINE"
);
},
{
closed = 1;
nodes = (
"242 823 OFFCURVE",
"188 823 QCURVE SMOOTH",
"133 823 OFFCURVE",
"133 770 QCURVE SMOOTH",
"133 715 OFFCURVE",
"190 715 QCURVE SMOOTH",
"242 715 OFFCURVE",
"242 770 QCURVE",
"242 770 LINE"
);
},
{
closed = 1;
nodes = (
"207 649 OFFCURVE",
"154 649 QCURVE SMOOTH",
"98 649 OFFCURVE",
"98 596 QCURVE SMOOTH",
"98 543 OFFCURVE",
"154 543 QCURVE SMOOTH",
"207 543 OFFCURVE",
"207 596 QCURVE",
"207 596 LINE"
);
},
{
closed = 1;
nodes = (
"662 195 OFFCURVE",
"608 195 QCURVE SMOOTH",
"555 195 OFFCURVE",
"555 141 QCURVE SMOOTH",
"555 86 OFFCURVE",
"608 86 QCURVE SMOOTH",
"662 86 OFFCURVE",
"662 141 QCURVE",
"662 141 LINE"
);
},
{
closed = 1;
nodes = (
"242 477 OFFCURVE",
"188 477 QCURVE SMOOTH",
"133 477 OFFCURVE",
"133 422 QCURVE SMOOTH",
"133 369 OFFCURVE",
"188 369 QCURVE SMOOTH",
"242 369 OFFCURVE",
"242 422 QCURVE",
"242 422 LINE"
);
},
{
closed = 1;
nodes = (
"489 229 OFFCURVE",
"434 229 QCURVE SMOOTH",
"381 229 OFFCURVE",
"381 174 QCURVE SMOOTH",
"381 123 OFFCURVE",
"434 123 QCURVE SMOOTH",
"489 123 OFFCURVE",
"489 178 QCURVE",
"489 178 LINE"
);
},
{
closed = 1;
nodes = (
"342 328 OFFCURVE",
"287 328 QCURVE SMOOTH",
"233 328 OFFCURVE",
"233 272 QCURVE SMOOTH",
"233 219 OFFCURVE",
"287 219 QCURVE SMOOTH",
"342 219 OFFCURVE",
"342 272 QCURVE",
"342 272 LINE"
);
}
);
width = 1217;
},
{
layerId = "A36153DC-C9CC-437F-8D19-86D84E7E38EA";
paths = (
{
closed = 1;
nodes = (
"983 973 OFFCURVE",
"932 973 QCURVE SMOOTH",
"877 973 OFFCURVE",
"877 918 QCURVE SMOOTH",
"877 864 OFFCURVE",
"932 864 QCURVE SMOOTH",
"983 864 OFFCURVE",
"983 918 QCURVE",
"983 918 LINE"
);
},
{
closed = 1;
nodes = (
"836 1071 OFFCURVE",
"784 1071 QCURVE SMOOTH",
"727 1071 OFFCURVE",
"727 1016 QCURVE SMOOTH",
"727 963 OFFCURVE",
"784 963 QCURVE SMOOTH",
"836 963 OFFCURVE",
"836 1016 QCURVE",
"836 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1083 823 OFFCURVE",
"1030 823 QCURVE SMOOTH",
"975 823 OFFCURVE",
"975 770 QCURVE SMOOTH",
"975 715 OFFCURVE",
"1028 715 QCURVE SMOOTH",
"1083 715 OFFCURVE",
"1083 770 QCURVE",
"1083 770 LINE"
);
},
{
closed = 1;
nodes = (
"1118 649 OFFCURVE",
"1067 649 QCURVE SMOOTH",
"1012 649 OFFCURVE",
"1012 596 QCURVE SMOOTH",
"1012 543 OFFCURVE",
"1067 543 QCURVE SMOOTH",
"1118 543 OFFCURVE",
"1118 596 QCURVE",
"1118 596 LINE"
);
},
{
closed = 1;
nodes = (
"662 1106 OFFCURVE",
"608 1106 QCURVE SMOOTH",
"555 1106 OFFCURVE",
"555 1053 QCURVE SMOOTH",
"555 997 OFFCURVE",
"608 997 QCURVE SMOOTH",
"662 997 OFFCURVE",
"662 1053 QCURVE",
"662 1053 LINE"
);
},
{
closed = 1;
nodes = (
"489 1071 OFFCURVE",
"434 1071 QCURVE SMOOTH",
"381 1071 OFFCURVE",
"381 1016 QCURVE SMOOTH",
"381 963 OFFCURVE",
"434 963 QCURVE SMOOTH",
"489 963 OFFCURVE",
"489 1016 QCURVE",
"489 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1083 477 OFFCURVE",
"1028 477 QCURVE SMOOTH",
"975 477 OFFCURVE",
"975 422 QCURVE SMOOTH",
"975 369 OFFCURVE",
"1028 369 QCURVE SMOOTH",
"1083 369 OFFCURVE",
"1083 422 QCURVE",
"1083 422 LINE"
);
},
{
closed = 1;
nodes = (
"342 973 OFFCURVE",
"287 973 QCURVE SMOOTH",
"233 973 OFFCURVE",
"233 915 QCURVE SMOOTH",
"233 864 OFFCURVE",
"287 864 QCURVE SMOOTH",
"342 864 OFFCURVE",
"342 918 QCURVE",
"342 918 LINE"
);
},
{
closed = 1;
nodes = (
"983 328 OFFCURVE",
"932 328 QCURVE SMOOTH",
"877 328 OFFCURVE",
"877 272 QCURVE SMOOTH",
"877 219 OFFCURVE",
"932 219 QCURVE SMOOTH",
"983 219 OFFCURVE",
"983 272 QCURVE",
"983 272 LINE"
);
},
{
closed = 1;
nodes = (
"836 229 OFFCURVE",
"784 229 QCURVE SMOOTH",
"727 229 OFFCURVE",
"727 174 QCURVE SMOOTH",
"727 123 OFFCURVE",
"784 123 QCURVE SMOOTH",
"836 123 OFFCURVE",
"836 174 QCURVE",
"836 174 LINE"
);
},
{
closed = 1;
nodes = (
"242 823 OFFCURVE",
"188 823 QCURVE SMOOTH",
"133 823 OFFCURVE",
"133 770 QCURVE SMOOTH",
"133 715 OFFCURVE",
"190 715 QCURVE SMOOTH",
"242 715 OFFCURVE",
"242 770 QCURVE",
"242 770 LINE"
);
},
{
closed = 1;
nodes = (
"207 649 OFFCURVE",
"154 649 QCURVE SMOOTH",
"98 649 OFFCURVE",
"98 596 QCURVE SMOOTH",
"98 543 OFFCURVE",
"154 543 QCURVE SMOOTH",
"207 543 OFFCURVE",
"207 596 QCURVE",
"207 596 LINE"
);
},
{
closed = 1;
nodes = (
"662 195 OFFCURVE",
"608 195 QCURVE SMOOTH",
"555 195 OFFCURVE",
"555 141 QCURVE SMOOTH",
"555 86 OFFCURVE",
"608 86 QCURVE SMOOTH",
"662 86 OFFCURVE",
"662 141 QCURVE",
"662 141 LINE"
);
},
{
closed = 1;
nodes = (
"242 477 OFFCURVE",
"188 477 QCURVE SMOOTH",
"133 477 OFFCURVE",
"133 422 QCURVE SMOOTH",
"133 369 OFFCURVE",
"188 369 QCURVE SMOOTH",
"242 369 OFFCURVE",
"242 422 QCURVE",
"242 422 LINE"
);
},
{
closed = 1;
nodes = (
"489 229 OFFCURVE",
"434 229 QCURVE SMOOTH",
"381 229 OFFCURVE",
"381 174 QCURVE SMOOTH",
"381 123 OFFCURVE",
"434 123 QCURVE SMOOTH",
"489 123 OFFCURVE",
"489 178 QCURVE",
"489 178 LINE"
);
},
{
closed = 1;
nodes = (
"342 328 OFFCURVE",
"287 328 QCURVE SMOOTH",
"233 328 OFFCURVE",
"233 272 QCURVE SMOOTH",
"233 219 OFFCURVE",
"287 219 QCURVE SMOOTH",
"342 219 OFFCURVE",
"342 272 QCURVE",
"342 272 LINE"
);
}
);
width = 1217;
},
{
layerId = "607A0539-44D7-4182-901A-4BFA5CCC01F8";
paths = (
{
closed = 1;
nodes = (
"983 973 OFFCURVE",
"932 973 QCURVE SMOOTH",
"877 973 OFFCURVE",
"877 918 QCURVE SMOOTH",
"877 864 OFFCURVE",
"932 864 QCURVE SMOOTH",
"983 864 OFFCURVE",
"983 918 QCURVE",
"983 918 LINE"
);
},
{
closed = 1;
nodes = (
"836 1071 OFFCURVE",
"784 1071 QCURVE SMOOTH",
"727 1071 OFFCURVE",
"727 1016 QCURVE SMOOTH",
"727 963 OFFCURVE",
"784 963 QCURVE SMOOTH",
"836 963 OFFCURVE",
"836 1016 QCURVE",
"836 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1083 823 OFFCURVE",
"1030 823 QCURVE SMOOTH",
"975 823 OFFCURVE",
"975 770 QCURVE SMOOTH",
"975 715 OFFCURVE",
"1028 715 QCURVE SMOOTH",
"1083 715 OFFCURVE",
"1083 770 QCURVE",
"1083 770 LINE"
);
},
{
closed = 1;
nodes = (
"1118 649 OFFCURVE",
"1067 649 QCURVE SMOOTH",
"1012 649 OFFCURVE",
"1012 596 QCURVE SMOOTH",
"1012 543 OFFCURVE",
"1067 543 QCURVE SMOOTH",
"1118 543 OFFCURVE",
"1118 596 QCURVE",
"1118 596 LINE"
);
},
{
closed = 1;
nodes = (
"662 1106 OFFCURVE",
"608 1106 QCURVE SMOOTH",
"555 1106 OFFCURVE",
"555 1053 QCURVE SMOOTH",
"555 997 OFFCURVE",
"608 997 QCURVE SMOOTH",
"662 997 OFFCURVE",
"662 1053 QCURVE",
"662 1053 LINE"
);
},
{
closed = 1;
nodes = (
"489 1071 OFFCURVE",
"434 1071 QCURVE SMOOTH",
"381 1071 OFFCURVE",
"381 1016 QCURVE SMOOTH",
"381 963 OFFCURVE",
"434 963 QCURVE SMOOTH",
"489 963 OFFCURVE",
"489 1016 QCURVE",
"489 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1083 477 OFFCURVE",
"1028 477 QCURVE SMOOTH",
"975 477 OFFCURVE",
"975 422 QCURVE SMOOTH",
"975 369 OFFCURVE",
"1028 369 QCURVE SMOOTH",
"1083 369 OFFCURVE",
"1083 422 QCURVE",
"1083 422 LINE"
);
},
{
closed = 1;
nodes = (
"342 973 OFFCURVE",
"287 973 QCURVE SMOOTH",
"233 973 OFFCURVE",
"233 915 QCURVE SMOOTH",
"233 864 OFFCURVE",
"287 864 QCURVE SMOOTH",
"342 864 OFFCURVE",
"342 918 QCURVE",
"342 918 LINE"
);
},
{
closed = 1;
nodes = (
"983 328 OFFCURVE",
"932 328 QCURVE SMOOTH",
"877 328 OFFCURVE",
"877 272 QCURVE SMOOTH",
"877 219 OFFCURVE",
"932 219 QCURVE SMOOTH",
"983 219 OFFCURVE",
"983 272 QCURVE",
"983 272 LINE"
);
},
{
closed = 1;
nodes = (
"836 229 OFFCURVE",
"784 229 QCURVE SMOOTH",
"727 229 OFFCURVE",
"727 174 QCURVE SMOOTH",
"727 123 OFFCURVE",
"784 123 QCURVE SMOOTH",
"836 123 OFFCURVE",
"836 174 QCURVE",
"836 174 LINE"
);
},
{
closed = 1;
nodes = (
"242 823 OFFCURVE",
"188 823 QCURVE SMOOTH",
"133 823 OFFCURVE",
"133 770 QCURVE SMOOTH",
"133 715 OFFCURVE",
"190 715 QCURVE SMOOTH",
"242 715 OFFCURVE",
"242 770 QCURVE",
"242 770 LINE"
);
},
{
closed = 1;
nodes = (
"207 649 OFFCURVE",
"154 649 QCURVE SMOOTH",
"98 649 OFFCURVE",
"98 596 QCURVE SMOOTH",
"98 543 OFFCURVE",
"154 543 QCURVE SMOOTH",
"207 543 OFFCURVE",
"207 596 QCURVE",
"207 596 LINE"
);
},
{
closed = 1;
nodes = (
"662 195 OFFCURVE",
"608 195 QCURVE SMOOTH",
"555 195 OFFCURVE",
"555 141 QCURVE SMOOTH",
"555 86 OFFCURVE",
"608 86 QCURVE SMOOTH",
"662 86 OFFCURVE",
"662 141 QCURVE",
"662 141 LINE"
);
},
{
closed = 1;
nodes = (
"242 477 OFFCURVE",
"188 477 QCURVE SMOOTH",
"133 477 OFFCURVE",
"133 422 QCURVE SMOOTH",
"133 369 OFFCURVE",
"188 369 QCURVE SMOOTH",
"242 369 OFFCURVE",
"242 422 QCURVE",
"242 422 LINE"
);
},
{
closed = 1;
nodes = (
"489 229 OFFCURVE",
"434 229 QCURVE SMOOTH",
"381 229 OFFCURVE",
"381 174 QCURVE SMOOTH",
"381 123 OFFCURVE",
"434 123 QCURVE SMOOTH",
"489 123 OFFCURVE",
"489 178 QCURVE",
"489 178 LINE"
);
},
{
closed = 1;
nodes = (
"342 328 OFFCURVE",
"287 328 QCURVE SMOOTH",
"233 328 OFFCURVE",
"233 272 QCURVE SMOOTH",
"233 219 OFFCURVE",
"287 219 QCURVE SMOOTH",
"342 219 OFFCURVE",
"342 272 QCURVE",
"342 272 LINE"
);
}
);
width = 1217;
},
{
layerId = "DF847F4E-D23C-40FA-8597-1D02BA148938";
paths = (
{
closed = 1;
nodes = (
"983 973 OFFCURVE",
"932 973 QCURVE SMOOTH",
"877 973 OFFCURVE",
"877 918 QCURVE SMOOTH",
"877 864 OFFCURVE",
"932 864 QCURVE SMOOTH",
"983 864 OFFCURVE",
"983 918 QCURVE",
"983 918 LINE"
);
},
{
closed = 1;
nodes = (
"836 1071 OFFCURVE",
"784 1071 QCURVE SMOOTH",
"727 1071 OFFCURVE",
"727 1016 QCURVE SMOOTH",
"727 963 OFFCURVE",
"784 963 QCURVE SMOOTH",
"836 963 OFFCURVE",
"836 1016 QCURVE",
"836 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1083 823 OFFCURVE",
"1030 823 QCURVE SMOOTH",
"975 823 OFFCURVE",
"975 770 QCURVE SMOOTH",
"975 715 OFFCURVE",
"1028 715 QCURVE SMOOTH",
"1083 715 OFFCURVE",
"1083 770 QCURVE",
"1083 770 LINE"
);
},
{
closed = 1;
nodes = (
"1118 649 OFFCURVE",
"1067 649 QCURVE SMOOTH",
"1012 649 OFFCURVE",
"1012 596 QCURVE SMOOTH",
"1012 543 OFFCURVE",
"1067 543 QCURVE SMOOTH",
"1118 543 OFFCURVE",
"1118 596 QCURVE",
"1118 596 LINE"
);
},
{
closed = 1;
nodes = (
"662 1106 OFFCURVE",
"608 1106 QCURVE SMOOTH",
"555 1106 OFFCURVE",
"555 1053 QCURVE SMOOTH",
"555 997 OFFCURVE",
"608 997 QCURVE SMOOTH",
"662 997 OFFCURVE",
"662 1053 QCURVE",
"662 1053 LINE"
);
},
{
closed = 1;
nodes = (
"489 1071 OFFCURVE",
"434 1071 QCURVE SMOOTH",
"381 1071 OFFCURVE",
"381 1016 QCURVE SMOOTH",
"381 963 OFFCURVE",
"434 963 QCURVE SMOOTH",
"489 963 OFFCURVE",
"489 1016 QCURVE",
"489 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1083 477 OFFCURVE",
"1028 477 QCURVE SMOOTH",
"975 477 OFFCURVE",
"975 422 QCURVE SMOOTH",
"975 369 OFFCURVE",
"1028 369 QCURVE SMOOTH",
"1083 369 OFFCURVE",
"1083 422 QCURVE",
"1083 422 LINE"
);
},
{
closed = 1;
nodes = (
"342 973 OFFCURVE",
"287 973 QCURVE SMOOTH",
"233 973 OFFCURVE",
"233 915 QCURVE SMOOTH",
"233 864 OFFCURVE",
"287 864 QCURVE SMOOTH",
"342 864 OFFCURVE",
"342 918 QCURVE",
"342 918 LINE"
);
},
{
closed = 1;
nodes = (
"983 328 OFFCURVE",
"932 328 QCURVE SMOOTH",
"877 328 OFFCURVE",
"877 272 QCURVE SMOOTH",
"877 219 OFFCURVE",
"932 219 QCURVE SMOOTH",
"983 219 OFFCURVE",
"983 272 QCURVE",
"983 272 LINE"
);
},
{
closed = 1;
nodes = (
"836 229 OFFCURVE",
"784 229 QCURVE SMOOTH",
"727 229 OFFCURVE",
"727 174 QCURVE SMOOTH",
"727 123 OFFCURVE",
"784 123 QCURVE SMOOTH",
"836 123 OFFCURVE",
"836 174 QCURVE",
"836 174 LINE"
);
},
{
closed = 1;
nodes = (
"242 823 OFFCURVE",
"188 823 QCURVE SMOOTH",
"133 823 OFFCURVE",
"133 770 QCURVE SMOOTH",
"133 715 OFFCURVE",
"190 715 QCURVE SMOOTH",
"242 715 OFFCURVE",
"242 770 QCURVE",
"242 770 LINE"
);
},
{
closed = 1;
nodes = (
"207 649 OFFCURVE",
"154 649 QCURVE SMOOTH",
"98 649 OFFCURVE",
"98 596 QCURVE SMOOTH",
"98 543 OFFCURVE",
"154 543 QCURVE SMOOTH",
"207 543 OFFCURVE",
"207 596 QCURVE",
"207 596 LINE"
);
},
{
closed = 1;
nodes = (
"662 195 OFFCURVE",
"608 195 QCURVE SMOOTH",
"555 195 OFFCURVE",
"555 141 QCURVE SMOOTH",
"555 86 OFFCURVE",
"608 86 QCURVE SMOOTH",
"662 86 OFFCURVE",
"662 141 QCURVE",
"662 141 LINE"
);
},
{
closed = 1;
nodes = (
"242 477 OFFCURVE",
"188 477 QCURVE SMOOTH",
"133 477 OFFCURVE",
"133 422 QCURVE SMOOTH",
"133 369 OFFCURVE",
"188 369 QCURVE SMOOTH",
"242 369 OFFCURVE",
"242 422 QCURVE",
"242 422 LINE"
);
},
{
closed = 1;
nodes = (
"489 229 OFFCURVE",
"434 229 QCURVE SMOOTH",
"381 229 OFFCURVE",
"381 174 QCURVE SMOOTH",
"381 123 OFFCURVE",
"434 123 QCURVE SMOOTH",
"489 123 OFFCURVE",
"489 178 QCURVE",
"489 178 LINE"
);
},
{
closed = 1;
nodes = (
"342 328 OFFCURVE",
"287 328 QCURVE SMOOTH",
"233 328 OFFCURVE",
"233 272 QCURVE SMOOTH",
"233 219 OFFCURVE",
"287 219 QCURVE SMOOTH",
"342 219 OFFCURVE",
"342 272 QCURVE",
"342 272 LINE"
);
}
);
width = 1217;
},
{
layerId = "3BE6379C-89A1-45B5-97C8-F079248A4F49";
paths = (
{
closed = 1;
nodes = (
"983 973 OFFCURVE",
"932 973 QCURVE SMOOTH",
"877 973 OFFCURVE",
"877 918 QCURVE SMOOTH",
"877 864 OFFCURVE",
"932 864 QCURVE SMOOTH",
"983 864 OFFCURVE",
"983 918 QCURVE",
"983 918 LINE"
);
},
{
closed = 1;
nodes = (
"836 1071 OFFCURVE",
"784 1071 QCURVE SMOOTH",
"727 1071 OFFCURVE",
"727 1016 QCURVE SMOOTH",
"727 963 OFFCURVE",
"784 963 QCURVE SMOOTH",
"836 963 OFFCURVE",
"836 1016 QCURVE",
"836 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1083 823 OFFCURVE",
"1030 823 QCURVE SMOOTH",
"975 823 OFFCURVE",
"975 770 QCURVE SMOOTH",
"975 715 OFFCURVE",
"1028 715 QCURVE SMOOTH",
"1083 715 OFFCURVE",
"1083 770 QCURVE",
"1083 770 LINE"
);
},
{
closed = 1;
nodes = (
"1118 649 OFFCURVE",
"1067 649 QCURVE SMOOTH",
"1012 649 OFFCURVE",
"1012 596 QCURVE SMOOTH",
"1012 543 OFFCURVE",
"1067 543 QCURVE SMOOTH",
"1118 543 OFFCURVE",
"1118 596 QCURVE",
"1118 596 LINE"
);
},
{
closed = 1;
nodes = (
"662 1106 OFFCURVE",
"608 1106 QCURVE SMOOTH",
"555 1106 OFFCURVE",
"555 1053 QCURVE SMOOTH",
"555 997 OFFCURVE",
"608 997 QCURVE SMOOTH",
"662 997 OFFCURVE",
"662 1053 QCURVE",
"662 1053 LINE"
);
},
{
closed = 1;
nodes = (
"489 1071 OFFCURVE",
"434 1071 QCURVE SMOOTH",
"381 1071 OFFCURVE",
"381 1016 QCURVE SMOOTH",
"381 963 OFFCURVE",
"434 963 QCURVE SMOOTH",
"489 963 OFFCURVE",
"489 1016 QCURVE",
"489 1016 LINE"
);
},
{
closed = 1;
nodes = (
"1083 477 OFFCURVE",
"1028 477 QCURVE SMOOTH",
"975 477 OFFCURVE",
"975 422 QCURVE SMOOTH",
"975 369 OFFCURVE",
"1028 369 QCURVE SMOOTH",
"1083 369 OFFCURVE",
"1083 422 QCURVE",
"1083 422 LINE"
);
},
{
closed = 1;
nodes = (
"342 973 OFFCURVE",
"287 973 QCURVE SMOOTH",
"233 973 OFFCURVE",
"233 915 QCURVE SMOOTH",
"233 864 OFFCURVE",
"287 864 QCURVE SMOOTH",
"342 864 OFFCURVE",
"342 918 QCURVE",
"342 918 LINE"
);
},
{
closed = 1;
nodes = (
"983 328 OFFCURVE",
"932 328 QCURVE SMOOTH",
"877 328 OFFCURVE",
"877 272 QCURVE SMOOTH",
"877 219 OFFCURVE",
"932 219 QCURVE SMOOTH",
"983 219 OFFCURVE",
"983 272 QCURVE",
"983 272 LINE"
);
},
{
closed = 1;
nodes = (
"836 229 OFFCURVE",
"784 229 QCURVE SMOOTH",
"727 229 OFFCURVE",
"727 174 QCURVE SMOOTH",
"727 123 OFFCURVE",
"784 123 QCURVE SMOOTH",
"836 123 OFFCURVE",
"836 174 QCURVE",
"836 174 LINE"
);
},
{
closed = 1;
nodes = (
"242 823 OFFCURVE",
"188 823 QCURVE SMOOTH",
"133 823 OFFCURVE",
"133 770 QCURVE SMOOTH",
"133 715 OFFCURVE",
"190 715 QCURVE SMOOTH",
"242 715 OFFCURVE",
"242 770 QCURVE",
"242 770 LINE"
);
},
{
closed = 1;
nodes = (
"207 649 OFFCURVE",
"154 649 QCURVE SMOOTH",
"98 649 OFFCURVE",
"98 596 QCURVE SMOOTH",
"98 543 OFFCURVE",
"154 543 QCURVE SMOOTH",
"207 543 OFFCURVE",
"207 596 QCURVE",
"207 596 LINE"
);
},
{
closed = 1;
nodes = (
"662 195 OFFCURVE",
"608 195 QCURVE SMOOTH",
"555 195 OFFCURVE",
"555 141 QCURVE SMOOTH",
"555 86 OFFCURVE",
"608 86 QCURVE SMOOTH",
"662 86 OFFCURVE",
"662 141 QCURVE",
"662 141 LINE"
);
},
{
closed = 1;
nodes = (
"242 477 OFFCURVE",
"188 477 QCURVE SMOOTH",
"133 477 OFFCURVE",
"133 422 QCURVE SMOOTH",
"133 369 OFFCURVE",
"188 369 QCURVE SMOOTH",
"242 369 OFFCURVE",
"242 422 QCURVE",
"242 422 LINE"
);
},
{
closed = 1;
nodes = (
"489 229 OFFCURVE",
"434 229 QCURVE SMOOTH",
"381 229 OFFCURVE",
"381 174 QCURVE SMOOTH",
"381 123 OFFCURVE",
"434 123 QCURVE SMOOTH",
"489 123 OFFCURVE",
"489 178 QCURVE",
"489 178 LINE"
);
},
{
closed = 1;
nodes = (
"342 328 OFFCURVE",
"287 328 QCURVE SMOOTH",
"233 328 OFFCURVE",
"233 272 QCURVE SMOOTH",
"233 219 OFFCURVE",
"287 219 QCURVE SMOOTH",
"342 219 OFFCURVE",
"342 272 QCURVE",
"342 272 LINE"
);
}
);
width = 1217;
}
);
note = uni25CC;
unicode = 25CC;
}
);
instances = (
{
interpolationWeight = 900;
interpolationWidth = 5;
instanceInterpolations = {
"372009DC-CA12-41C8-98C7-C44FC6D5F55D" = 1;
};
name = Black;
},
{
interpolationWeight = 700;
interpolationWidth = 5;
instanceInterpolations = {
"A36153DC-C9CC-437F-8D19-86D84E7E38EA" = 1;
};
name = Bold;
},
{
interpolationWeight = 400;
interpolationWidth = 5;
instanceInterpolations = {
"607A0539-44D7-4182-901A-4BFA5CCC01F8" = 1;
};
name = Regular;
},
{
interpolationWeight = 300;
interpolationWidth = 5;
instanceInterpolations = {
"DF847F4E-D23C-40FA-8597-1D02BA148938" = 1;
};
name = Light;
},
{
interpolationWidth = 5;
instanceInterpolations = {
"3BE6379C-89A1-45B5-97C8-F079248A4F49" = 1;
};
name = Thin;
}
);
manufacturer = "Danh Hong";
manufacturerURL = "http://www.nextspell.com/";
unitsPerEm = 2048;
versionMajor = 3;
versionMinor = 0;
}
